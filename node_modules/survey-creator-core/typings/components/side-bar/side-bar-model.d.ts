import { Base, AdaptiveActionContainer, Action, AnimationBoolean } from "survey-core";
import { SurveyCreatorModel } from "../../creator-base";
import { SidebarPageModel } from "./side-bar-page-model";
export declare class SidebarModel extends Base {
    private creator;
    toolbar: AdaptiveActionContainer;
    private _expandAction;
    private _collapseAction;
    private _activePage;
    private onSidebarVisibilityChanged;
    private resizeManager;
    pages: Array<SidebarPageModel>;
    headerText: string;
    _visible: boolean;
    renderedIsVisible: boolean;
    collapsedManually: boolean;
    expandedManually: boolean;
    hasVisiblePages: boolean;
    flyoutMode: boolean;
    activePage: string;
    hideSideBarVisibilityControlActions: boolean;
    sideAreaComponentName: string;
    sideAreaComponentData: any;
    headerComponentName: string;
    headerComponentData: any;
    get activePageModel(): SidebarPageModel;
    private rootElement;
    private getAnimationOptions;
    private allowFlyoutMode;
    visibilityAnimation: AnimationBoolean;
    set visible(val: boolean);
    get visible(): boolean;
    get flyoutPanelMode(): boolean;
    get closeText(): string;
    getPageById(id: string): SidebarPageModel;
    private createActions;
    private getCurrentHandles;
    private sidebarLocationChangedHandler;
    constructor(creator: SurveyCreatorModel);
    getActivePage(): SidebarPageModel;
    setActivePage(newPage: SidebarPageModel): void;
    getExpandAction(): Action;
    collapseSidebar(): void;
    expandSidebar(): void;
    addPage(id: string, componentName?: string, model?: any, buildActions?: () => Array<Action>): SidebarPageModel;
    updateHasVisiblePages(): void;
    dispose(): void;
    initResizeManager(container: HTMLDivElement): void;
    resetResizeManager(): void;
}
