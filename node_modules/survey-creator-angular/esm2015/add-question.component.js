import { Component, Input } from "@angular/core";
import { AngularComponentFactory } from "survey-angular-ui";
import { CreatorModelComponent } from "./creator-model.component";
import * as i0 from "@angular/core";
import * as i1 from "survey-angular-ui";
import * as i2 from "@angular/common";
export class AddQuestionButtonComponent extends CreatorModelComponent {
    constructor() {
        super(...arguments);
        this.buttonClass = "svc-btn";
        this.renderPopup = true;
    }
    getPropertiesToTrack() {
        return [];
    }
    createModel() {
    }
    getModel() {
        return this.model.data;
    }
    get adorner() {
        return this.model.data;
    }
    addNewQuestion(event) {
        event.stopPropagation();
        this.adorner.addNewQuestion(this.adorner, event);
    }
}
AddQuestionButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: AddQuestionButtonComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
AddQuestionButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: AddQuestionButtonComponent, selector: "svc-add-new-question-btn", inputs: { model: "model", buttonClass: "buttonClass", renderPopup: "renderPopup" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <div *ngIf=\"adorner.showAddQuestionButton\" [class]=\"'svc-element__add-new-question ' + buttonClass\" [key2click]\n    (click)=\"addNewQuestion($event)\"\n    (mouseover)=\"adorner.hoverStopper && adorner.hoverStopper($event, $event.currentTarget)\"\n    data-bind=\"clickBubble: false\">\n    <svg class=\"svc-panel__add-new-question-icon\" [iconName]=\"('icon-add_24x24')\" [size]=\"24\" sv-ng-svg-icon></svg>\n    <span class=\"svc-text svc-text--normal svc-text--bold\">\n      {{ adorner.addNewQuestionText }}\n    </span>\n    <ng-template *ngIf=\"renderPopup\"\n      [component]=\"{ name: 'svc-add-question-type-selector', data: { questionTypeSelectorModel: adorner.questionTypeSelectorModel, renderPopup: renderPopup } }\">\n    </ng-template>\n  </div>\n  <ng-template *ngIf=\"!renderPopup\"\n    [component]=\"{ name: 'svc-add-question-type-selector', data: { questionTypeSelectorModel: adorner.questionTypeSelectorModel, renderPopup: renderPopup } }\">\n  </ng-template>\n</ng-template>", styles: [":host { display: none; }"], components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.Key2ClickDirective, selector: "[key2click]", inputs: ["key2click"] }, { type: i1.DynamicComponentDirective, selector: "[component]", inputs: ["component"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: AddQuestionButtonComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "svc-add-new-question-btn",
                    templateUrl: "./add-question.component.html",
                    styles: [":host { display: none; }"]
                }]
        }], propDecorators: { model: [{
                type: Input
            }], buttonClass: [{
                type: Input
            }], renderPopup: [{
                type: Input
            }] } });
AngularComponentFactory.Instance.registerComponent("svc-add-new-question-btn", AddQuestionButtonComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLXF1ZXN0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hZGQtcXVlc3Rpb24uY29tcG9uZW50LnRzIiwiLi4vLi4vc3JjL2FkZC1xdWVzdGlvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQTBCLHVCQUF1QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEYsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7Ozs7QUFVbEUsTUFBTSxPQUFPLDBCQUEyQixTQUFRLHFCQUEyQjtJQVAzRTs7UUFpQlcsZ0JBQVcsR0FBWSxTQUFTLENBQUM7UUFDakMsZ0JBQVcsR0FBYSxJQUFJLENBQUM7S0FRdkM7SUFsQm9CLG9CQUFvQjtRQUNyQyxPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7SUFDa0IsV0FBVztJQUM5QixDQUFDO0lBQ2tCLFFBQVE7UUFDekIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztJQUN6QixDQUFDO0lBSUQsSUFBVyxPQUFPO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7SUFDekIsQ0FBQztJQUNNLGNBQWMsQ0FBQyxLQUFVO1FBQzlCLEtBQUssQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ25ELENBQUM7O3dIQWxCVSwwQkFBMEI7NEdBQTFCLDBCQUEwQiwyS0NadkMscWdDQWdCYzs0RkRKRCwwQkFBMEI7a0JBUHRDLFNBQVM7bUJBQ1I7b0JBQ0UsUUFBUSxFQUFFLDBCQUEwQjtvQkFDcEMsV0FBVyxFQUFFLCtCQUErQjtvQkFDNUMsTUFBTSxFQUFFLENBQUMsMEJBQTBCLENBQUM7aUJBQ3JDOzhCQVdRLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxXQUFXO3NCQUFuQixLQUFLO2dCQUNHLFdBQVc7c0JBQW5CLEtBQUs7O0FBU1IsdUJBQXVCLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLDBCQUEwQixFQUFFLDBCQUEwQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEFjdGlvbkJhckl0ZW1Db21wb25lbnQsIEFuZ3VsYXJDb21wb25lbnRGYWN0b3J5IH0gZnJvbSBcInN1cnZleS1hbmd1bGFyLXVpXCI7XG5pbXBvcnQgeyBDcmVhdG9yTW9kZWxDb21wb25lbnQgfSBmcm9tIFwiLi9jcmVhdG9yLW1vZGVsLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgQmFzZSB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuXG5AQ29tcG9uZW50KFxuICB7XG4gICAgc2VsZWN0b3I6IFwic3ZjLWFkZC1uZXctcXVlc3Rpb24tYnRuXCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9hZGQtcXVlc3Rpb24uY29tcG9uZW50Lmh0bWxcIixcbiAgICBzdHlsZXM6IFtcIjpob3N0IHsgZGlzcGxheTogbm9uZTsgfVwiXVxuICB9XG4pXG5leHBvcnQgY2xhc3MgQWRkUXVlc3Rpb25CdXR0b25Db21wb25lbnQgZXh0ZW5kcyBDcmVhdG9yTW9kZWxDb21wb25lbnQ8QmFzZT4ge1xuICBwcm90ZWN0ZWQgb3ZlcnJpZGUgZ2V0UHJvcGVydGllc1RvVHJhY2soKTogc3RyaW5nW10ge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICBwcm90ZWN0ZWQgb3ZlcnJpZGUgY3JlYXRlTW9kZWwoKTogdm9pZCB7XG4gIH1cbiAgcHJvdGVjdGVkIG92ZXJyaWRlIGdldE1vZGVsKCk6IEJhc2Uge1xuICAgIHJldHVybiB0aGlzLm1vZGVsLmRhdGE7XG4gIH1cbiAgQElucHV0KCkgbW9kZWwhOiBhbnk7XG4gIEBJbnB1dCgpIGJ1dHRvbkNsYXNzPzogc3RyaW5nID0gXCJzdmMtYnRuXCI7XG4gIEBJbnB1dCgpIHJlbmRlclBvcHVwPzogYm9vbGVhbiA9IHRydWU7XG4gIHB1YmxpYyBnZXQgYWRvcm5lcigpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbC5kYXRhO1xuICB9XG4gIHB1YmxpYyBhZGROZXdRdWVzdGlvbihldmVudDogYW55KSB7XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgdGhpcy5hZG9ybmVyLmFkZE5ld1F1ZXN0aW9uKHRoaXMuYWRvcm5lciwgZXZlbnQpO1xuICB9XG59XG5Bbmd1bGFyQ29tcG9uZW50RmFjdG9yeS5JbnN0YW5jZS5yZWdpc3RlckNvbXBvbmVudChcInN2Yy1hZGQtbmV3LXF1ZXN0aW9uLWJ0blwiLCBBZGRRdWVzdGlvbkJ1dHRvbkNvbXBvbmVudCk7IiwiPG5nLXRlbXBsYXRlICN0ZW1wbGF0ZT5cbiAgPGRpdiAqbmdJZj1cImFkb3JuZXIuc2hvd0FkZFF1ZXN0aW9uQnV0dG9uXCIgW2NsYXNzXT1cIidzdmMtZWxlbWVudF9fYWRkLW5ldy1xdWVzdGlvbiAnICsgYnV0dG9uQ2xhc3NcIiBba2V5MmNsaWNrXVxuICAgIChjbGljayk9XCJhZGROZXdRdWVzdGlvbigkZXZlbnQpXCJcbiAgICAobW91c2VvdmVyKT1cImFkb3JuZXIuaG92ZXJTdG9wcGVyICYmIGFkb3JuZXIuaG92ZXJTdG9wcGVyKCRldmVudCwgJGV2ZW50LmN1cnJlbnRUYXJnZXQpXCJcbiAgICBkYXRhLWJpbmQ9XCJjbGlja0J1YmJsZTogZmFsc2VcIj5cbiAgICA8c3ZnIGNsYXNzPVwic3ZjLXBhbmVsX19hZGQtbmV3LXF1ZXN0aW9uLWljb25cIiBbaWNvbk5hbWVdPVwiKCdpY29uLWFkZF8yNHgyNCcpXCIgW3NpemVdPVwiMjRcIiBzdi1uZy1zdmctaWNvbj48L3N2Zz5cbiAgICA8c3BhbiBjbGFzcz1cInN2Yy10ZXh0IHN2Yy10ZXh0LS1ub3JtYWwgc3ZjLXRleHQtLWJvbGRcIj5cbiAgICAgIHt7IGFkb3JuZXIuYWRkTmV3UXVlc3Rpb25UZXh0IH19XG4gICAgPC9zcGFuPlxuICAgIDxuZy10ZW1wbGF0ZSAqbmdJZj1cInJlbmRlclBvcHVwXCJcbiAgICAgIFtjb21wb25lbnRdPVwieyBuYW1lOiAnc3ZjLWFkZC1xdWVzdGlvbi10eXBlLXNlbGVjdG9yJywgZGF0YTogeyBxdWVzdGlvblR5cGVTZWxlY3Rvck1vZGVsOiBhZG9ybmVyLnF1ZXN0aW9uVHlwZVNlbGVjdG9yTW9kZWwsIHJlbmRlclBvcHVwOiByZW5kZXJQb3B1cCB9IH1cIj5cbiAgICA8L25nLXRlbXBsYXRlPlxuICA8L2Rpdj5cbiAgPG5nLXRlbXBsYXRlICpuZ0lmPVwiIXJlbmRlclBvcHVwXCJcbiAgICBbY29tcG9uZW50XT1cInsgbmFtZTogJ3N2Yy1hZGQtcXVlc3Rpb24tdHlwZS1zZWxlY3RvcicsIGRhdGE6IHsgcXVlc3Rpb25UeXBlU2VsZWN0b3JNb2RlbDogYWRvcm5lci5xdWVzdGlvblR5cGVTZWxlY3Rvck1vZGVsLCByZW5kZXJQb3B1cDogcmVuZGVyUG9wdXAgfSB9XCI+XG4gIDwvbmctdGVtcGxhdGU+XG48L25nLXRlbXBsYXRlPiJdfQ==