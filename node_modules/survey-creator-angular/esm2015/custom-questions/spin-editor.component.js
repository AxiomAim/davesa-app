import { Component } from "@angular/core";
import { AngularComponentFactory, QuestionAngular } from "survey-angular-ui";
import * as i0 from "@angular/core";
import * as i1 from "survey-angular-ui";
export class QuestionSpinEditorComponent extends QuestionAngular {
}
QuestionSpinEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: QuestionSpinEditorComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
QuestionSpinEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: QuestionSpinEditorComponent, selector: "ng-component", usesInheritance: true, ngImport: i0, template: "<div [class]=\"model.cssClasses.root\" (keydown)=\"model.onKeyDown($event)\">\n  <input autocomplete=\"off\" [disabled]=\"model.isInputReadOnly\" [attr.id]=\"model.inputId\"\n    [attr.placeholder]=\"model.renderedPlaceholder\" [attr.aria-required]=\"model.ariaRequired\"\n    [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\"\n    [attr.aria-describedby]=\"model.ariaDescribedBy\" (change)=\"model.onChange($event)\"\n    (keydown)=\"model.onInputKeyDown($event)\" (keyup)=\"model.onKeyUp($event)\" (blur)=\"model.onBlur($event)\"\n    (focus)=\"model.onFocus($event)\" (beforeinput)=\"model.onBeforeInput($event)\" [value]=\"model.renderedValue\"\n    [class]=\"model.cssClasses.control\" />\n  <span [class]=\"model.cssClasses.buttonsContainer\">\n    <button [disabled]=\"model.isInputReadOnly\" [class]=\"model.cssClasses.arrowButton\"\n      (mousedown)=\"model.onDownButtonMouseDown()\" (mouseup)=\"model.onButtonMouseUp()\"\n      (mouseleave)=\"model.onButtonMouseLeave()\" (blur)=\"model.onBlur($event)\" (focus)=\"model.onFocus($event)\" tabindex=\"-1\">\n      <svg [iconName]=\"model.cssClasses.decreaseButtonIcon\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n    </button>\n    <button [disabled]=\"model.isInputReadOnly\" [class]=\"model.cssClasses.arrowButton\"\n      (mousedown)=\"model.onUpButtonMouseDown()\" (mouseup)=\"model.onButtonMouseUp()\"\n      (mouseleave)=\"model.onButtonMouseLeave()\" (blur)=\"model.onBlur($event)\" (focus)=\"model.onFocus($event)\" tabindex=\"-1\">\n      <svg [iconName]=\"model.cssClasses.increaseButtonIcon\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n    </button>\n  </span>\n</div>", components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: QuestionSpinEditorComponent, decorators: [{
            type: Component,
            args: [{
                    templateUrl: "./spin-editor.component.html"
                }]
        }] });
AngularComponentFactory.Instance.registerComponent("spinedit-question", QuestionSpinEditorComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Bpbi1lZGl0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2N1c3RvbS1xdWVzdGlvbnMvc3Bpbi1lZGl0b3IuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vc3JjL2N1c3RvbS1xdWVzdGlvbnMvc3Bpbi1lZGl0b3IuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7OztBQU03RSxNQUFNLE9BQU8sMkJBQTRCLFNBQVEsZUFBd0M7O3lIQUE1RSwyQkFBMkI7NkdBQTNCLDJCQUEyQiwyRUNQeEMsa29EQW9CTTs0RkRiTywyQkFBMkI7a0JBSHZDLFNBQVM7bUJBQUM7b0JBQ1QsV0FBVyxFQUFFLDhCQUE4QjtpQkFDNUM7O0FBR0QsdUJBQXVCLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLG1CQUFtQixFQUFFLDJCQUEyQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQW5ndWxhckNvbXBvbmVudEZhY3RvcnksIFF1ZXN0aW9uQW5ndWxhciB9IGZyb20gXCJzdXJ2ZXktYW5ndWxhci11aVwiO1xuaW1wb3J0IHsgUXVlc3Rpb25TcGluRWRpdG9yTW9kZWwgfSBmcm9tIFwic3VydmV5LWNyZWF0b3ItY29yZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgdGVtcGxhdGVVcmw6IFwiLi9zcGluLWVkaXRvci5jb21wb25lbnQuaHRtbFwiXG59KVxuZXhwb3J0IGNsYXNzIFF1ZXN0aW9uU3BpbkVkaXRvckNvbXBvbmVudCBleHRlbmRzIFF1ZXN0aW9uQW5ndWxhcjxRdWVzdGlvblNwaW5FZGl0b3JNb2RlbD4ge1xufVxuQW5ndWxhckNvbXBvbmVudEZhY3RvcnkuSW5zdGFuY2UucmVnaXN0ZXJDb21wb25lbnQoXCJzcGluZWRpdC1xdWVzdGlvblwiLCBRdWVzdGlvblNwaW5FZGl0b3JDb21wb25lbnQpOyIsIjxkaXYgW2NsYXNzXT1cIm1vZGVsLmNzc0NsYXNzZXMucm9vdFwiIChrZXlkb3duKT1cIm1vZGVsLm9uS2V5RG93bigkZXZlbnQpXCI+XG4gIDxpbnB1dCBhdXRvY29tcGxldGU9XCJvZmZcIiBbZGlzYWJsZWRdPVwibW9kZWwuaXNJbnB1dFJlYWRPbmx5XCIgW2F0dHIuaWRdPVwibW9kZWwuaW5wdXRJZFwiXG4gICAgW2F0dHIucGxhY2Vob2xkZXJdPVwibW9kZWwucmVuZGVyZWRQbGFjZWhvbGRlclwiIFthdHRyLmFyaWEtcmVxdWlyZWRdPVwibW9kZWwuYXJpYVJlcXVpcmVkXCJcbiAgICBbYXR0ci5hcmlhLWxhYmVsXT1cIm1vZGVsLmFyaWFMYWJlbFwiIFthdHRyLmFyaWEtaW52YWxpZF09XCJtb2RlbC5hcmlhSW52YWxpZFwiXG4gICAgW2F0dHIuYXJpYS1kZXNjcmliZWRieV09XCJtb2RlbC5hcmlhRGVzY3JpYmVkQnlcIiAoY2hhbmdlKT1cIm1vZGVsLm9uQ2hhbmdlKCRldmVudClcIlxuICAgIChrZXlkb3duKT1cIm1vZGVsLm9uSW5wdXRLZXlEb3duKCRldmVudClcIiAoa2V5dXApPVwibW9kZWwub25LZXlVcCgkZXZlbnQpXCIgKGJsdXIpPVwibW9kZWwub25CbHVyKCRldmVudClcIlxuICAgIChmb2N1cyk9XCJtb2RlbC5vbkZvY3VzKCRldmVudClcIiAoYmVmb3JlaW5wdXQpPVwibW9kZWwub25CZWZvcmVJbnB1dCgkZXZlbnQpXCIgW3ZhbHVlXT1cIm1vZGVsLnJlbmRlcmVkVmFsdWVcIlxuICAgIFtjbGFzc109XCJtb2RlbC5jc3NDbGFzc2VzLmNvbnRyb2xcIiAvPlxuICA8c3BhbiBbY2xhc3NdPVwibW9kZWwuY3NzQ2xhc3Nlcy5idXR0b25zQ29udGFpbmVyXCI+XG4gICAgPGJ1dHRvbiBbZGlzYWJsZWRdPVwibW9kZWwuaXNJbnB1dFJlYWRPbmx5XCIgW2NsYXNzXT1cIm1vZGVsLmNzc0NsYXNzZXMuYXJyb3dCdXR0b25cIlxuICAgICAgKG1vdXNlZG93bik9XCJtb2RlbC5vbkRvd25CdXR0b25Nb3VzZURvd24oKVwiIChtb3VzZXVwKT1cIm1vZGVsLm9uQnV0dG9uTW91c2VVcCgpXCJcbiAgICAgIChtb3VzZWxlYXZlKT1cIm1vZGVsLm9uQnV0dG9uTW91c2VMZWF2ZSgpXCIgKGJsdXIpPVwibW9kZWwub25CbHVyKCRldmVudClcIiAoZm9jdXMpPVwibW9kZWwub25Gb2N1cygkZXZlbnQpXCIgdGFiaW5kZXg9XCItMVwiPlxuICAgICAgPHN2ZyBbaWNvbk5hbWVdPVwibW9kZWwuY3NzQ2xhc3Nlcy5kZWNyZWFzZUJ1dHRvbkljb25cIiBbc2l6ZV09XCInYXV0bydcIiBzdi1uZy1zdmctaWNvbj48L3N2Zz5cbiAgICA8L2J1dHRvbj5cbiAgICA8YnV0dG9uIFtkaXNhYmxlZF09XCJtb2RlbC5pc0lucHV0UmVhZE9ubHlcIiBbY2xhc3NdPVwibW9kZWwuY3NzQ2xhc3Nlcy5hcnJvd0J1dHRvblwiXG4gICAgICAobW91c2Vkb3duKT1cIm1vZGVsLm9uVXBCdXR0b25Nb3VzZURvd24oKVwiIChtb3VzZXVwKT1cIm1vZGVsLm9uQnV0dG9uTW91c2VVcCgpXCJcbiAgICAgIChtb3VzZWxlYXZlKT1cIm1vZGVsLm9uQnV0dG9uTW91c2VMZWF2ZSgpXCIgKGJsdXIpPVwibW9kZWwub25CbHVyKCRldmVudClcIiAoZm9jdXMpPVwibW9kZWwub25Gb2N1cygkZXZlbnQpXCIgdGFiaW5kZXg9XCItMVwiPlxuICAgICAgPHN2ZyBbaWNvbk5hbWVdPVwibW9kZWwuY3NzQ2xhc3Nlcy5pbmNyZWFzZUJ1dHRvbkljb25cIiBbc2l6ZV09XCInYXV0bydcIiBzdi1uZy1zdmctaWNvbj48L3N2Zz5cbiAgICA8L2J1dHRvbj5cbiAgPC9zcGFuPlxuPC9kaXY+Il19