import { Component, ElementRef, Input, ViewChild } from "@angular/core";
import { AngularComponentFactory } from "survey-angular-ui";
import { ItemValueWrapperViewModel } from "survey-creator-core";
import { CreatorModelComponent } from "../creator-model.component";
import * as i0 from "@angular/core";
import * as i1 from "survey-angular-ui";
import * as i2 from "@angular/common";
export class ItemValueDesignerComponent extends CreatorModelComponent {
    get creator() {
        return this.componentData.data.creator;
    }
    get question() {
        return this.componentData.question;
    }
    get item() {
        return this.componentData.model;
    }
    onBlur(event) {
        this.adorner.onFocusOut(event);
    }
    setupContainer() {
        var _a;
        if (this.item && ((_a = this.container) === null || _a === void 0 ? void 0 : _a.nativeElement)) {
            this.item.setRootElement(this.container.nativeElement);
        }
    }
    cleanContainer(item) {
        if (!!item) {
            item.setRootElement(undefined);
        }
    }
    createModel() {
        if (this.componentData) {
            this.adorner = new ItemValueWrapperViewModel(this.creator, this.question, this.item);
            if (this.prevItem !== this.item) {
                this.setupContainer();
                this.cleanContainer(this.prevItem);
                this.prevItem = this.item;
            }
        }
    }
    getPropertiesToTrack() {
        return ["creator", "question", "item"];
    }
    getModel() {
        return this.adorner;
    }
    ngOnDestroy() {
        super.ngOnDestroy();
        this.adorner.dispose();
        this.cleanContainer(this.item);
    }
    ngAfterViewInit() {
        this.setupContainer();
    }
}
ItemValueDesignerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ItemValueDesignerComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ItemValueDesignerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ItemValueDesignerComponent, selector: "svc-item-value", inputs: { componentName: "componentName", componentData: "componentData" }, viewQueries: [{ propertyName: "container", first: true, predicate: ["container"], descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <div class=\"svc-item-value-wrapper\" (pointerdown)=\"adorner.onPointerDown($event)\"\n    [attr.data-sv-drop-target-item-value]=\"adorner.isDraggable ? item.value : null\"\n    [ngClass]=\"{'svc-item-value--new': adorner.isNew, 'svc-item-value--dragging': adorner.isDragging, 'svc-item-value--ghost': adorner.isDragDropGhost, 'svc-item-value--movedown': adorner.isDragDropMoveDown, 'svc-item-value--moveup': adorner.isDragDropMoveUp}\"\n    #container>\n    <div class=\"svc-item-value__ghost\"></div>\n    <div class=\"svc-item-value-controls\">\n      <span *ngIf=\"adorner.isDraggable\" class=\"svc-item-value-controls__button svc-item-value-controls__drag\">\n        <svg class=\"svc-item-value-controls__drag-icon\" [iconName]=\"'icon-drag-area-indicator'\" [size]=\"24\"\n          [attr.title]=\"adorner.dragTooltip\" sv-ng-svg-icon></svg>\n      </span>\n      <span *ngIf=\"adorner.allowAdd\" class=\"svc-item-value-controls__button svc-item-value-controls__add\" [key2click]\n        (click)=\"adorner.add(adorner)\" [attr.aria-label]=\"undefined\"><svg [iconName]=\"'icon-add_16x16'\" [size]=\"16\"\n          [attr.title]=\"undefined\" sv-ng-svg-icon></svg></span>\n      <span *ngIf=\"adorner.allowRemove\" class=\"svc-item-value-controls__button svc-item-value-controls__remove\"\n        [key2click] (click)=\"adorner.remove(adorner)\" (blur)=\"onBlur($event)\" [attr.aria-label]=\"undefined\"><svg\n          [iconName]=\"'icon-remove_16x16'\" [size]=\"16\" [attr.title]=\"undefined\" sv-ng-svg-icon></svg></span>\n    </div>\n\n    <div class=\"svc-item-value__item\" (click)=\"adorner.select(adorner, $event)\">\n      <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n    </div>\n  </div>\n</ng-template>", styles: [":host { display: none; }"], components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }], directives: [{ type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.Key2ClickDirective, selector: "[key2click]", inputs: ["key2click"] }, { type: i1.DynamicComponentDirective, selector: "[component]", inputs: ["component"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ItemValueDesignerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "svc-item-value",
                    templateUrl: "./item-value.component.html",
                    styles: [":host { display: none; }"]
                }]
        }], propDecorators: { componentName: [{
                type: Input
            }], componentData: [{
                type: Input
            }], container: [{
                type: ViewChild,
                args: ["container", { read: ElementRef }]
            }] } });
AngularComponentFactory.Instance.registerComponent("svc-item-value", ItemValueDesignerComponent);
//# sourceMappingURL=data:application/json;base64,