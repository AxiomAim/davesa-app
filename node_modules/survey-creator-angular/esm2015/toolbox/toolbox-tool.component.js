import { Component, Input } from "@angular/core";
import { CreatorModelComponent } from "../creator-model.component";
import { ToolboxToolViewModel } from "survey-creator-core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "survey-angular-ui";
export class ToolboxToolComponent extends CreatorModelComponent {
    constructor() {
        super(...arguments);
        this.isCompact = false;
    }
    createModel() {
        this.model = new ToolboxToolViewModel(this.item, this.creator, this.parentModel);
    }
    getPropertiesToTrack() {
        return ["creator", "item"];
    }
    getModel() {
        return this.item;
    }
    get itemCssClasses() {
        return this.item.css;
    }
    getPropertiesToUpdateSync() {
        return ["mode"];
    }
    ngOnDestroy() {
        super.ngOnDestroy();
        this.model.dispose();
    }
}
ToolboxToolComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ToolboxToolComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ToolboxToolComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ToolboxToolComponent, selector: "svc-toolbox-tool", inputs: { creator: "creator", item: "item", parentModel: "parentModel", isCompact: "isCompact" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n    <div [class]=\"itemCssClasses\">\n        <div class=\"svc-toolbox__category-separator\" *ngIf=\"item.needSeparator && !creator.toolbox.showCategoryTitles\">\n        </div>\n        <div class=\"sv-action__content\" (pointerdown)=\"model.onPointerDown($event)\"\n            (mouseover)=\"model.onMouseOver(item, $event)\"\n        (mouseleave)=\"model.onMouseLeave(item, $event)\">\n            <ng-template [component]=\"{ name: model.itemComponent, default: 'svc-toolbox-item', \n            data: { model: item, viewModel: model, creator: creator, isCompact: isCompact } }\"></ng-template>\n        </div>\n    </div>\n</ng-template>", styles: [":host { display: none; }"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.DynamicComponentDirective, selector: "[component]", inputs: ["component"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ToolboxToolComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "svc-toolbox-tool",
                    templateUrl: "./toolbox-tool.component.html",
                    styles: [":host { display: none; }"]
                }]
        }], propDecorators: { creator: [{
                type: Input
            }], item: [{
                type: Input
            }], parentModel: [{
                type: Input
            }], isCompact: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbGJveC10b29sLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90b29sYm94L3Rvb2xib3gtdG9vbC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi9zcmMvdG9vbGJveC90b29sYm94LXRvb2wuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDbkUsT0FBTyxFQUFzQixvQkFBb0IsRUFBdUIsTUFBTSxxQkFBcUIsQ0FBQzs7OztBQVFwRyxNQUFNLE9BQU8sb0JBQXFCLFNBQVEscUJBQTZCO0lBTHZFOztRQVNXLGNBQVMsR0FBWSxLQUFLLENBQUM7S0FxQnJDO0lBbkJDLFdBQVc7UUFDVCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksb0JBQW9CLENBQU0sSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN4RixDQUFDO0lBQ1Msb0JBQW9CO1FBQzVCLE9BQU8sQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUNTLFFBQVE7UUFDaEIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ25CLENBQUM7SUFDRCxJQUFXLGNBQWM7UUFDdkIsT0FBUSxJQUFJLENBQUMsSUFBNEIsQ0FBQyxHQUFHLENBQUM7SUFDaEQsQ0FBQztJQUNrQix5QkFBeUI7UUFDMUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2xCLENBQUM7SUFDUSxXQUFXO1FBQ2xCLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNwQixJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ3ZCLENBQUM7O2tIQXhCVSxvQkFBb0I7c0dBQXBCLG9CQUFvQixpTENWakMsNnBCQVdjOzRGRERELG9CQUFvQjtrQkFMaEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixXQUFXLEVBQUUsK0JBQStCO29CQUM1QyxNQUFNLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQztpQkFDckM7OEJBRVUsT0FBTztzQkFBZixLQUFLO2dCQUNHLElBQUk7c0JBQVosS0FBSztnQkFDRyxXQUFXO3NCQUFuQixLQUFLO2dCQUNHLFNBQVM7c0JBQWpCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IENyZWF0b3JNb2RlbENvbXBvbmVudCB9IGZyb20gXCIuLi9jcmVhdG9yLW1vZGVsLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgU3VydmV5Q3JlYXRvck1vZGVsLCBUb29sYm94VG9vbFZpZXdNb2RlbCwgUXVlc3Rpb25Ub29sYm94SXRlbSB9IGZyb20gXCJzdXJ2ZXktY3JlYXRvci1jb3JlXCI7XG5pbXBvcnQgeyBBY3Rpb24sIEFjdGlvbkNvbnRhaW5lciB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3ZjLXRvb2xib3gtdG9vbFwiLFxuICB0ZW1wbGF0ZVVybDogXCIuL3Rvb2xib3gtdG9vbC5jb21wb25lbnQuaHRtbFwiLFxuICBzdHlsZXM6IFtcIjpob3N0IHsgZGlzcGxheTogbm9uZTsgfVwiXVxufSlcbmV4cG9ydCBjbGFzcyBUb29sYm94VG9vbENvbXBvbmVudCBleHRlbmRzIENyZWF0b3JNb2RlbENvbXBvbmVudDxBY3Rpb24+IHtcbiAgQElucHV0KCkgY3JlYXRvciE6IFN1cnZleUNyZWF0b3JNb2RlbDtcbiAgQElucHV0KCkgaXRlbSE6IEFjdGlvbjtcbiAgQElucHV0KCkgcGFyZW50TW9kZWwhOiBBY3Rpb25Db250YWluZXI7XG4gIEBJbnB1dCgpIGlzQ29tcGFjdDogYm9vbGVhbiA9IGZhbHNlO1xuICBwdWJsaWMgbW9kZWwhOiBUb29sYm94VG9vbFZpZXdNb2RlbDtcbiAgY3JlYXRlTW9kZWwoKSB7XG4gICAgdGhpcy5tb2RlbCA9IG5ldyBUb29sYm94VG9vbFZpZXdNb2RlbCg8YW55PnRoaXMuaXRlbSwgdGhpcy5jcmVhdG9yLCB0aGlzLnBhcmVudE1vZGVsKTtcbiAgfVxuICBwcm90ZWN0ZWQgZ2V0UHJvcGVydGllc1RvVHJhY2soKTogc3RyaW5nW10ge1xuICAgIHJldHVybiBbXCJjcmVhdG9yXCIsIFwiaXRlbVwiXTtcbiAgfVxuICBwcm90ZWN0ZWQgZ2V0TW9kZWwoKTogQWN0aW9uIHtcbiAgICByZXR1cm4gdGhpcy5pdGVtO1xuICB9XG4gIHB1YmxpYyBnZXQgaXRlbUNzc0NsYXNzZXMoKSB7XG4gICAgcmV0dXJuICh0aGlzLml0ZW0gYXMgUXVlc3Rpb25Ub29sYm94SXRlbSkuY3NzO1xuICB9XG4gIHByb3RlY3RlZCBvdmVycmlkZSBnZXRQcm9wZXJ0aWVzVG9VcGRhdGVTeW5jKCk6IHN0cmluZ1tdIHtcbiAgICByZXR1cm4gW1wibW9kZVwiXTtcbiAgfVxuICBvdmVycmlkZSBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICBzdXBlci5uZ09uRGVzdHJveSgpO1xuICAgIHRoaXMubW9kZWwuZGlzcG9zZSgpO1xuICB9XG59XG4iLCI8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxuICAgIDxkaXYgW2NsYXNzXT1cIml0ZW1Dc3NDbGFzc2VzXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzdmMtdG9vbGJveF9fY2F0ZWdvcnktc2VwYXJhdG9yXCIgKm5nSWY9XCJpdGVtLm5lZWRTZXBhcmF0b3IgJiYgIWNyZWF0b3IudG9vbGJveC5zaG93Q2F0ZWdvcnlUaXRsZXNcIj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzdi1hY3Rpb25fX2NvbnRlbnRcIiAocG9pbnRlcmRvd24pPVwibW9kZWwub25Qb2ludGVyRG93bigkZXZlbnQpXCJcbiAgICAgICAgICAgIChtb3VzZW92ZXIpPVwibW9kZWwub25Nb3VzZU92ZXIoaXRlbSwgJGV2ZW50KVwiXG4gICAgICAgIChtb3VzZWxlYXZlKT1cIm1vZGVsLm9uTW91c2VMZWF2ZShpdGVtLCAkZXZlbnQpXCI+XG4gICAgICAgICAgICA8bmctdGVtcGxhdGUgW2NvbXBvbmVudF09XCJ7IG5hbWU6IG1vZGVsLml0ZW1Db21wb25lbnQsIGRlZmF1bHQ6ICdzdmMtdG9vbGJveC1pdGVtJywgXG4gICAgICAgICAgICBkYXRhOiB7IG1vZGVsOiBpdGVtLCB2aWV3TW9kZWw6IG1vZGVsLCBjcmVhdG9yOiBjcmVhdG9yLCBpc0NvbXBhY3Q6IGlzQ29tcGFjdCB9IH1cIj48L25nLXRlbXBsYXRlPlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbjwvbmctdGVtcGxhdGU+Il19