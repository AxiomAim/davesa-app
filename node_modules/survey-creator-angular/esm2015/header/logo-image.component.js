import { Component, ElementRef, Input, ViewChild } from "@angular/core";
import { CreatorModelComponent } from "../creator-model.component";
import { LogoImageViewModel } from "survey-creator-core";
import { AngularComponentFactory } from "survey-angular-ui";
import * as i0 from "@angular/core";
import * as i1 from "survey-angular-ui";
import * as i2 from "@angular/common";
export class CreatorLogoImageComponent extends CreatorModelComponent {
    createModel() {
        this.model = new LogoImageViewModel(this.creator, null);
    }
    getModel() {
        return this.model;
    }
    getPropertiesToTrack() {
        return ["data"];
    }
    get creator() {
        return this.data;
    }
    get survey() {
        return this.creator.survey;
    }
    ngAfterViewInit() {
        this.model.root = this.container.nativeElement;
    }
}
CreatorLogoImageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: CreatorLogoImageComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
CreatorLogoImageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: CreatorLogoImageComponent, selector: "svc-logo-image", inputs: { data: "data" }, viewQueries: [{ propertyName: "container", first: true, predicate: ["container"], descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <div class=\"svc-logo-image\" #container>\n    <input type=\"file\" aria-hidden=\"true\" tabindex=\"-1\" [accept]=\"model.acceptedTypes\" class=\"svc-choose-file-input\" />\n    <ng-container *ngIf=\"!survey.locLogo.renderedHtml\">\n      <ng-container *ngIf=\"model.allowEdit && !model.isUploading\">\n        <div class=\"svc-logo-image-placeholder\" (click)=\"model.chooseFile(model)\" [key2click]>\n          <svg>\n            <use xlink:href=\"#icon-logo\"></use>\n          </svg>\n        </div>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"survey.locLogo.renderedHtml && !model.isUploading\">\n      <div [class]=\"model.containerCss\">\n        <div class=\"svc-context-container svc-logo-image-controls\">\n          <span class=\"svc-context-button\" (click)=\"model.chooseFile(model)\" [key2click] [attr.title]=\"undefined\"\n            [attr.aria-label]=\"undefined\">\n            <svg [iconName]=\"'icon-file'\" [size]=\"24\" sv-ng-svg-icon></svg>\n          </span>\n          <span class=\"svc-context-button svc-context-button--danger\" (click)=\"model.remove(model)\" [key2click]\n            [attr.title]=\"undefined\" [attr.aria-label]=\"undefined\">\n            <svg [iconName]=\"'icon-clear'\" [size]=\"24\" sv-ng-svg-icon></svg>\n          </span>\n        </div>\n        <sv-logo-image [data]=\"survey\"></sv-logo-image>\n      </div>\n    </ng-container>\n    <div class=\"svc-logo-image__loading\" *ngIf=\"model.isUploading\">\n      <sv-ng-loading-indicator></sv-ng-loading-indicator>\n    </div>\n  </div>\n</ng-template>", styles: [":host { display: none; }"], components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }, { type: i1.LogoImageComponent, selector: "sv-logo-image", inputs: ["data"] }, { type: i1.LoadingIndicatorComponent, selector: "sv-ng-loading-indicator" }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.Key2ClickDirective, selector: "[key2click]", inputs: ["key2click"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: CreatorLogoImageComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "svc-logo-image",
                    templateUrl: "./logo-image.component.html",
                    styles: [":host { display: none; }"]
                }]
        }], propDecorators: { data: [{
                type: Input
            }], container: [{
                type: ViewChild,
                args: ["container", { read: ElementRef }]
            }] } });
AngularComponentFactory.Instance.registerComponent("svc-logo-image", CreatorLogoImageComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nby1pbWFnZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvaGVhZGVyL2xvZ28taW1hZ2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vc3JjL2hlYWRlci9sb2dvLWltYWdlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRW5FLE9BQU8sRUFBc0Isa0JBQWtCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM3RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7OztBQU81RCxNQUFNLE9BQU8seUJBQTBCLFNBQVEscUJBQXlDO0lBSTVFLFdBQVc7UUFDbkIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLGtCQUFrQixDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBVyxDQUFDLENBQUM7SUFDakUsQ0FBQztJQUNTLFFBQVE7UUFDaEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFDUyxvQkFBb0I7UUFDNUIsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2xCLENBQUM7SUFDRCxJQUFXLE9BQU87UUFDaEIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ25CLENBQUM7SUFDRCxJQUFXLE1BQU07UUFDZixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO0lBQzdCLENBQUM7SUFDRCxlQUFlO1FBQ2IsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUM7SUFDakQsQ0FBQzs7dUhBckJVLHlCQUF5QjsyR0FBekIseUJBQXlCLG1LQUVKLFVBQVUsb0RDYjVDLHlrREErQmM7NEZEcEJELHlCQUF5QjtrQkFMckMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixXQUFXLEVBQUUsNkJBQTZCO29CQUMxQyxNQUFNLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQztpQkFDckM7OEJBRVUsSUFBSTtzQkFBWixLQUFLO2dCQUN3QyxTQUFTO3NCQUF0RCxTQUFTO3VCQUFDLFdBQVcsRUFBRSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUU7O0FBcUI5Qyx1QkFBdUIsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsZ0JBQWdCLEVBQUUseUJBQXlCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIFZpZXdDaGlsZCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBDcmVhdG9yTW9kZWxDb21wb25lbnQgfSBmcm9tIFwiLi4vY3JlYXRvci1tb2RlbC5jb21wb25lbnRcIjtcbmltcG9ydCB7IFN1cnZleU1vZGVsIH0gZnJvbSBcInN1cnZleS1jb3JlXCI7XG5pbXBvcnQgeyBTdXJ2ZXlDcmVhdG9yTW9kZWwsIExvZ29JbWFnZVZpZXdNb2RlbCB9IGZyb20gXCJzdXJ2ZXktY3JlYXRvci1jb3JlXCI7XG5pbXBvcnQgeyBBbmd1bGFyQ29tcG9uZW50RmFjdG9yeSB9IGZyb20gXCJzdXJ2ZXktYW5ndWxhci11aVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3ZjLWxvZ28taW1hZ2VcIixcbiAgdGVtcGxhdGVVcmw6IFwiLi9sb2dvLWltYWdlLmNvbXBvbmVudC5odG1sXCIsXG4gIHN0eWxlczogW1wiOmhvc3QgeyBkaXNwbGF5OiBub25lOyB9XCJdXG59KVxuZXhwb3J0IGNsYXNzIENyZWF0b3JMb2dvSW1hZ2VDb21wb25lbnQgZXh0ZW5kcyBDcmVhdG9yTW9kZWxDb21wb25lbnQ8TG9nb0ltYWdlVmlld01vZGVsPiBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICBASW5wdXQoKSBkYXRhITogU3VydmV5Q3JlYXRvck1vZGVsO1xuICBAVmlld0NoaWxkKFwiY29udGFpbmVyXCIsIHsgcmVhZDogRWxlbWVudFJlZiB9KSBjb250YWluZXIhOiBFbGVtZW50UmVmPEhUTUxEaXZFbGVtZW50PjtcbiAgcHVibGljIG1vZGVsITogTG9nb0ltYWdlVmlld01vZGVsO1xuICBwcm90ZWN0ZWQgY3JlYXRlTW9kZWwoKTogdm9pZCB7XG4gICAgdGhpcy5tb2RlbCA9IG5ldyBMb2dvSW1hZ2VWaWV3TW9kZWwodGhpcy5jcmVhdG9yLCBudWxsIGFzIGFueSk7XG4gIH1cbiAgcHJvdGVjdGVkIGdldE1vZGVsKCk6IExvZ29JbWFnZVZpZXdNb2RlbCB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWw7XG4gIH1cbiAgcHJvdGVjdGVkIGdldFByb3BlcnRpZXNUb1RyYWNrKCk6IHN0cmluZ1tdIHtcbiAgICByZXR1cm4gW1wiZGF0YVwiXTtcbiAgfVxuICBwdWJsaWMgZ2V0IGNyZWF0b3IoKTogU3VydmV5Q3JlYXRvck1vZGVsIHtcbiAgICByZXR1cm4gdGhpcy5kYXRhO1xuICB9XG4gIHB1YmxpYyBnZXQgc3VydmV5KCk6IFN1cnZleU1vZGVsIHtcbiAgICByZXR1cm4gdGhpcy5jcmVhdG9yLnN1cnZleTtcbiAgfVxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgdGhpcy5tb2RlbC5yb290ID0gdGhpcy5jb250YWluZXIubmF0aXZlRWxlbWVudDtcbiAgfVxufVxuQW5ndWxhckNvbXBvbmVudEZhY3RvcnkuSW5zdGFuY2UucmVnaXN0ZXJDb21wb25lbnQoXCJzdmMtbG9nby1pbWFnZVwiLCBDcmVhdG9yTG9nb0ltYWdlQ29tcG9uZW50KTsiLCI8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwic3ZjLWxvZ28taW1hZ2VcIiAjY29udGFpbmVyPlxuICAgIDxpbnB1dCB0eXBlPVwiZmlsZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHRhYmluZGV4PVwiLTFcIiBbYWNjZXB0XT1cIm1vZGVsLmFjY2VwdGVkVHlwZXNcIiBjbGFzcz1cInN2Yy1jaG9vc2UtZmlsZS1pbnB1dFwiIC8+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiFzdXJ2ZXkubG9jTG9nby5yZW5kZXJlZEh0bWxcIj5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJtb2RlbC5hbGxvd0VkaXQgJiYgIW1vZGVsLmlzVXBsb2FkaW5nXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzdmMtbG9nby1pbWFnZS1wbGFjZWhvbGRlclwiIChjbGljayk9XCJtb2RlbC5jaG9vc2VGaWxlKG1vZGVsKVwiIFtrZXkyY2xpY2tdPlxuICAgICAgICAgIDxzdmc+XG4gICAgICAgICAgICA8dXNlIHhsaW5rOmhyZWY9XCIjaWNvbi1sb2dvXCI+PC91c2U+XG4gICAgICAgICAgPC9zdmc+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC9uZy1jb250YWluZXI+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInN1cnZleS5sb2NMb2dvLnJlbmRlcmVkSHRtbCAmJiAhbW9kZWwuaXNVcGxvYWRpbmdcIj5cbiAgICAgIDxkaXYgW2NsYXNzXT1cIm1vZGVsLmNvbnRhaW5lckNzc1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwic3ZjLWNvbnRleHQtY29udGFpbmVyIHN2Yy1sb2dvLWltYWdlLWNvbnRyb2xzXCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJzdmMtY29udGV4dC1idXR0b25cIiAoY2xpY2spPVwibW9kZWwuY2hvb3NlRmlsZShtb2RlbClcIiBba2V5MmNsaWNrXSBbYXR0ci50aXRsZV09XCJ1bmRlZmluZWRcIlxuICAgICAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCJ1bmRlZmluZWRcIj5cbiAgICAgICAgICAgIDxzdmcgW2ljb25OYW1lXT1cIidpY29uLWZpbGUnXCIgW3NpemVdPVwiMjRcIiBzdi1uZy1zdmctaWNvbj48L3N2Zz5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJzdmMtY29udGV4dC1idXR0b24gc3ZjLWNvbnRleHQtYnV0dG9uLS1kYW5nZXJcIiAoY2xpY2spPVwibW9kZWwucmVtb3ZlKG1vZGVsKVwiIFtrZXkyY2xpY2tdXG4gICAgICAgICAgICBbYXR0ci50aXRsZV09XCJ1bmRlZmluZWRcIiBbYXR0ci5hcmlhLWxhYmVsXT1cInVuZGVmaW5lZFwiPlxuICAgICAgICAgICAgPHN2ZyBbaWNvbk5hbWVdPVwiJ2ljb24tY2xlYXInXCIgW3NpemVdPVwiMjRcIiBzdi1uZy1zdmctaWNvbj48L3N2Zz5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8c3YtbG9nby1pbWFnZSBbZGF0YV09XCJzdXJ2ZXlcIj48L3N2LWxvZ28taW1hZ2U+XG4gICAgICA8L2Rpdj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8ZGl2IGNsYXNzPVwic3ZjLWxvZ28taW1hZ2VfX2xvYWRpbmdcIiAqbmdJZj1cIm1vZGVsLmlzVXBsb2FkaW5nXCI+XG4gICAgICA8c3YtbmctbG9hZGluZy1pbmRpY2F0b3I+PC9zdi1uZy1sb2FkaW5nLWluZGljYXRvcj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPiJdfQ==