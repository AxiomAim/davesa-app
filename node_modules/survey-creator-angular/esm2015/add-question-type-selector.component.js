import { Component, Input } from "@angular/core";
import { AngularComponentFactory } from "survey-angular-ui";
import { CreatorModelComponent } from "./creator-model.component";
import * as i0 from "@angular/core";
import * as i1 from "survey-angular-ui";
import * as i2 from "@angular/common";
export class AddQuestionTypeSelectorComponent extends CreatorModelComponent {
    constructor() {
        super(...arguments);
        this.renderPopup = true;
    }
    getPropertiesToTrack() {
        return [];
    }
    createModel() {
    }
    getModel() {
        return this.questionTypeSelectorModel;
    }
    selectQuestionType(event) {
        event.stopPropagation();
        this.questionTypeSelectorModel.action();
    }
}
AddQuestionTypeSelectorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: AddQuestionTypeSelectorComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
AddQuestionTypeSelectorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: AddQuestionTypeSelectorComponent, selector: "svc-add-question-type-selector", inputs: { questionTypeSelectorModel: "questionTypeSelectorModel", renderPopup: "renderPopup" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <button type=\"button\" [key2click] (click)=\"selectQuestionType($event)\" [attr.title]=\"questionTypeSelectorModel.title\"\n    [attr.aria-label]=\"questionTypeSelectorModel.title\" class=\"svc-element__question-type-selector\">\n    <svg class=\"svc-element__question-type-selector-icon\" [iconName]=\"questionTypeSelectorModel.iconName\" [size]=\"24\"\n      sv-ng-svg-icon></svg>\n    <sv-ng-popup *ngIf=\"renderPopup\" [popupModel]=\"questionTypeSelectorModel.popupModel\"></sv-ng-popup>\n  </button>\n</ng-template>", styles: [":host { display: none; }"], components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }, { type: i1.PopupComponent, selector: "sv-ng-popup, '[sv-ng-popup]'", inputs: ["popupModel", "getTarget", "getArea"] }], directives: [{ type: i1.Key2ClickDirective, selector: "[key2click]", inputs: ["key2click"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: AddQuestionTypeSelectorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "svc-add-question-type-selector",
                    templateUrl: "./add-question-type-selector.component.html",
                    styles: [":host { display: none; }"]
                }]
        }], propDecorators: { questionTypeSelectorModel: [{
                type: Input
            }], renderPopup: [{
                type: Input
            }] } });
AngularComponentFactory.Instance.registerComponent("svc-add-question-type-selector", AddQuestionTypeSelectorComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLXF1ZXN0aW9uLXR5cGUtc2VsZWN0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2FkZC1xdWVzdGlvbi10eXBlLXNlbGVjdG9yLmNvbXBvbmVudC50cyIsIi4uLy4uL3NyYy9hZGQtcXVlc3Rpb24tdHlwZS1zZWxlY3Rvci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQTBCLHVCQUF1QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEYsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7Ozs7QUFVbEUsTUFBTSxPQUFPLGdDQUFpQyxTQUFRLHFCQUEyQjtJQVBqRjs7UUFpQlcsZ0JBQVcsR0FBYSxJQUFJLENBQUM7S0FLdkM7SUFkb0Isb0JBQW9CO1FBQ3JDLE9BQU8sRUFBRSxDQUFDO0lBQ1osQ0FBQztJQUNrQixXQUFXO0lBQzlCLENBQUM7SUFDa0IsUUFBUTtRQUN6QixPQUFPLElBQUksQ0FBQyx5QkFBeUIsQ0FBQztJQUN4QyxDQUFDO0lBR00sa0JBQWtCLENBQUMsS0FBVTtRQUNsQyxLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLHlCQUF5QixDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQzFDLENBQUM7OzhIQWRVLGdDQUFnQztrSEFBaEMsZ0NBQWdDLDZMQ1o3QyxzaUJBT2M7NEZES0QsZ0NBQWdDO2tCQVA1QyxTQUFTO21CQUNSO29CQUNFLFFBQVEsRUFBRSxnQ0FBZ0M7b0JBQzFDLFdBQVcsRUFBRSw2Q0FBNkM7b0JBQzFELE1BQU0sRUFBRSxDQUFDLDBCQUEwQixDQUFDO2lCQUNyQzs4QkFXUSx5QkFBeUI7c0JBQWpDLEtBQUs7Z0JBQ0csV0FBVztzQkFBbkIsS0FBSzs7QUFNUix1QkFBdUIsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsZ0NBQWdDLEVBQUUsZ0NBQWdDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQWN0aW9uQmFySXRlbUNvbXBvbmVudCwgQW5ndWxhckNvbXBvbmVudEZhY3RvcnkgfSBmcm9tIFwic3VydmV5LWFuZ3VsYXItdWlcIjtcbmltcG9ydCB7IENyZWF0b3JNb2RlbENvbXBvbmVudCB9IGZyb20gXCIuL2NyZWF0b3ItbW9kZWwuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBCYXNlIH0gZnJvbSBcInN1cnZleS1jb3JlXCI7XG5cbkBDb21wb25lbnQoXG4gIHtcbiAgICBzZWxlY3RvcjogXCJzdmMtYWRkLXF1ZXN0aW9uLXR5cGUtc2VsZWN0b3JcIixcbiAgICB0ZW1wbGF0ZVVybDogXCIuL2FkZC1xdWVzdGlvbi10eXBlLXNlbGVjdG9yLmNvbXBvbmVudC5odG1sXCIsXG4gICAgc3R5bGVzOiBbXCI6aG9zdCB7IGRpc3BsYXk6IG5vbmU7IH1cIl1cbiAgfVxuKVxuZXhwb3J0IGNsYXNzIEFkZFF1ZXN0aW9uVHlwZVNlbGVjdG9yQ29tcG9uZW50IGV4dGVuZHMgQ3JlYXRvck1vZGVsQ29tcG9uZW50PEJhc2U+IHtcbiAgcHJvdGVjdGVkIG92ZXJyaWRlIGdldFByb3BlcnRpZXNUb1RyYWNrKCk6IHN0cmluZ1tdIHtcbiAgICByZXR1cm4gW107XG4gIH1cbiAgcHJvdGVjdGVkIG92ZXJyaWRlIGNyZWF0ZU1vZGVsKCk6IHZvaWQge1xuICB9XG4gIHByb3RlY3RlZCBvdmVycmlkZSBnZXRNb2RlbCgpOiBCYXNlIHtcbiAgICByZXR1cm4gdGhpcy5xdWVzdGlvblR5cGVTZWxlY3Rvck1vZGVsO1xuICB9XG4gIEBJbnB1dCgpIHF1ZXN0aW9uVHlwZVNlbGVjdG9yTW9kZWwhOiBhbnk7XG4gIEBJbnB1dCgpIHJlbmRlclBvcHVwPzogYm9vbGVhbiA9IHRydWU7XG4gIHB1YmxpYyBzZWxlY3RRdWVzdGlvblR5cGUoZXZlbnQ6IGFueSkge1xuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIHRoaXMucXVlc3Rpb25UeXBlU2VsZWN0b3JNb2RlbC5hY3Rpb24oKTtcbiAgfVxufVxuQW5ndWxhckNvbXBvbmVudEZhY3RvcnkuSW5zdGFuY2UucmVnaXN0ZXJDb21wb25lbnQoXCJzdmMtYWRkLXF1ZXN0aW9uLXR5cGUtc2VsZWN0b3JcIiwgQWRkUXVlc3Rpb25UeXBlU2VsZWN0b3JDb21wb25lbnQpOyIsIjxuZy10ZW1wbGF0ZSAjdGVtcGxhdGU+XG4gIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIFtrZXkyY2xpY2tdIChjbGljayk9XCJzZWxlY3RRdWVzdGlvblR5cGUoJGV2ZW50KVwiIFthdHRyLnRpdGxlXT1cInF1ZXN0aW9uVHlwZVNlbGVjdG9yTW9kZWwudGl0bGVcIlxuICAgIFthdHRyLmFyaWEtbGFiZWxdPVwicXVlc3Rpb25UeXBlU2VsZWN0b3JNb2RlbC50aXRsZVwiIGNsYXNzPVwic3ZjLWVsZW1lbnRfX3F1ZXN0aW9uLXR5cGUtc2VsZWN0b3JcIj5cbiAgICA8c3ZnIGNsYXNzPVwic3ZjLWVsZW1lbnRfX3F1ZXN0aW9uLXR5cGUtc2VsZWN0b3ItaWNvblwiIFtpY29uTmFtZV09XCJxdWVzdGlvblR5cGVTZWxlY3Rvck1vZGVsLmljb25OYW1lXCIgW3NpemVdPVwiMjRcIlxuICAgICAgc3Ytbmctc3ZnLWljb24+PC9zdmc+XG4gICAgPHN2LW5nLXBvcHVwICpuZ0lmPVwicmVuZGVyUG9wdXBcIiBbcG9wdXBNb2RlbF09XCJxdWVzdGlvblR5cGVTZWxlY3Rvck1vZGVsLnBvcHVwTW9kZWxcIj48L3N2LW5nLXBvcHVwPlxuICA8L2J1dHRvbj5cbjwvbmctdGVtcGxhdGU+Il19