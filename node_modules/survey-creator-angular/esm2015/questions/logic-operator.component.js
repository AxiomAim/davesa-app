import { Component } from "@angular/core";
import { AngularComponentFactory, QuestionAngular } from "survey-angular-ui";
import { DropdownListModel, RendererFactory } from "survey-core";
import { initLogicOperator } from "survey-creator-core";
import * as i0 from "@angular/core";
import * as i1 from "survey-angular-ui";
import * as i2 from "@angular/common";
export class LogicOperatorComponent extends QuestionAngular {
    get dropdownModel() {
        return this.dropdownListModel;
    }
    click(event) {
        var _a;
        (_a = this.dropdownListModel) === null || _a === void 0 ? void 0 : _a.onClick(event);
    }
    clear(event) {
        var _a;
        (_a = this.dropdownListModel) === null || _a === void 0 ? void 0 : _a.onClear(event);
    }
    keyup(event) {
        var _a;
        (_a = this.dropdownListModel) === null || _a === void 0 ? void 0 : _a.keyHandler(event);
    }
    ngOnInit() {
        super.ngOnInit();
        this.dropdownListModel = this.model.dropdownListModel || new DropdownListModel(this.model);
        initLogicOperator(this.model);
    }
}
LogicOperatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: LogicOperatorComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
LogicOperatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: LogicOperatorComponent, selector: "svc-logic-operator", usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <div [class]=\"model.cssClasses.selectWrapper\">\n    <ng-container *ngIf=\"!model.isReadOnly\">\n      <div [class]=\"model.getControlClass()\"  (click)=\"click($event)\" (keyup)=\"keyup($event)\"\n        [attr.id]=\"model.inputId\" \n        [attr.required]=\"model.isRequired\" \n        [attr.tabindex]= \"model.isInputReadOnly ? undefined : 0\"\n        [attr.disabled]=\"model.isInputReadOnly\"\n        [attr.role]=\"model.ariaRole\"\n        [attr.aria-required]=\"model.ariaRequired\" \n        [attr.aria-label]=\"model.ariaLabel\" \n        [attr.aria-invalid]=\"model.ariaInvalid\" \n        [attr.aria-describedby]= \"model.ariaDescribedBy\" \n      >\n        <div [class]=\"model.cssClasses.controlValue\">\n          <sv-ng-string *ngIf=\"model.selectedItemLocText\" [model]=\"model.selectedItemLocText\"></sv-ng-string>\n          <div>{{model.readOnlyText}}</div>\n        </div>\n        <div *ngIf=\"model.allowClear && model.cssClasses.cleanButtonIconId\" [class]=\"model.cssClasses.cleanButton\" (click)=\"clear\" [visible]=\"!model.isEmpty()\">\n          <svg [class]=\"model.cssClasses.cleanButtonSvg\" [iconName]=\"model.cssClasses.cleanButtonIconId\" [size]=\"'auto'\" [title]=\"model.clearCaption\" [size]=\"24\" sv-ng-svg-icon></svg>\n        </div>\n      </div>\n        <sv-ng-popup [popupModel]=\"model.popupModel\"></sv-ng-popup>\n    </ng-container>\n    <div disabled *ngIf=\"model.isReadOnly\" [class]=\"model.getControlClass()\" [attr.id]=\"model.inputId\">\n      <sv-ng-string *ngIf=\"model.selectedItemLocText\" [model]=\"model.selectedItemLocText\"></sv-ng-string>\n      <div>{{model.readOnlyText}}</div>\n    </div>\n  </div>\n</ng-template>\n", styles: [":host { display: none; }"], components: [{ type: i1.SurveyStringComponent, selector: "sv-ng-string, '[sv-ng-string]'", inputs: ["model"] }, { type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }, { type: i1.PopupComponent, selector: "sv-ng-popup, '[sv-ng-popup]'", inputs: ["popupModel", "getTarget", "getArea"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.VisibleDirective, selector: "[visible]", inputs: ["visible"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: LogicOperatorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "svc-logic-operator",
                    templateUrl: "./logic-operator.component.html",
                    styles: [":host { display: none; }"]
                }]
        }] });
AngularComponentFactory.Instance.registerComponent("sv-logic-operator", LogicOperatorComponent);
RendererFactory.Instance.registerRenderer("dropdown", "logicoperator", "sv-logic-operator");
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naWMtb3BlcmF0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3F1ZXN0aW9ucy9sb2dpYy1vcGVyYXRvci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi9zcmMvcXVlc3Rpb25zL2xvZ2ljLW9wZXJhdG9yLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLHVCQUF1QixFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzdFLE9BQU8sRUFBRSxpQkFBaUIsRUFBeUIsZUFBZSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3hGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7O0FBT3hELE1BQU0sT0FBTyxzQkFBdUIsU0FBUSxlQUFzQztJQUVoRixJQUFJLGFBQWE7UUFDZixPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztJQUNoQyxDQUFDO0lBQ0QsS0FBSyxDQUFDLEtBQVU7O1FBQ2QsTUFBQSxJQUFJLENBQUMsaUJBQWlCLDBDQUFFLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBQ0QsS0FBSyxDQUFDLEtBQVU7O1FBQ2QsTUFBQSxJQUFJLENBQUMsaUJBQWlCLDBDQUFFLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBQ0QsS0FBSyxDQUFDLEtBQVU7O1FBQ2QsTUFBQSxJQUFJLENBQUMsaUJBQWlCLDBDQUFFLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBQ1EsUUFBUTtRQUNmLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsSUFBSSxJQUFJLGlCQUFpQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMzRixpQkFBaUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7b0hBbEJVLHNCQUFzQjt3R0FBdEIsc0JBQXNCLGlGQ1ZuQyxxckRBOEJBOzRGRHBCYSxzQkFBc0I7a0JBTGxDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsV0FBVyxFQUFFLGlDQUFpQztvQkFDOUMsTUFBTSxFQUFFLENBQUMsMEJBQTBCLENBQUM7aUJBQ3JDOztBQXFCRCx1QkFBdUIsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsbUJBQW1CLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztBQUVoRyxlQUFlLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsRUFBRSxlQUFlLEVBQUUsbUJBQW1CLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBBbmd1bGFyQ29tcG9uZW50RmFjdG9yeSwgUXVlc3Rpb25Bbmd1bGFyIH0gZnJvbSBcInN1cnZleS1hbmd1bGFyLXVpXCI7XG5pbXBvcnQgeyBEcm9wZG93bkxpc3RNb2RlbCwgUXVlc3Rpb25Ecm9wZG93bk1vZGVsLCBSZW5kZXJlckZhY3RvcnkgfSBmcm9tIFwic3VydmV5LWNvcmVcIjtcbmltcG9ydCB7IGluaXRMb2dpY09wZXJhdG9yIH0gZnJvbSBcInN1cnZleS1jcmVhdG9yLWNvcmVcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcInN2Yy1sb2dpYy1vcGVyYXRvclwiLFxuICB0ZW1wbGF0ZVVybDogXCIuL2xvZ2ljLW9wZXJhdG9yLmNvbXBvbmVudC5odG1sXCIsXG4gIHN0eWxlczogW1wiOmhvc3QgeyBkaXNwbGF5OiBub25lOyB9XCJdXG59KVxuZXhwb3J0IGNsYXNzIExvZ2ljT3BlcmF0b3JDb21wb25lbnQgZXh0ZW5kcyBRdWVzdGlvbkFuZ3VsYXI8UXVlc3Rpb25Ecm9wZG93bk1vZGVsPiB7XG4gIHByaXZhdGUgZHJvcGRvd25MaXN0TW9kZWw/OiBEcm9wZG93bkxpc3RNb2RlbDtcbiAgZ2V0IGRyb3Bkb3duTW9kZWwoKTogRHJvcGRvd25MaXN0TW9kZWwgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB0aGlzLmRyb3Bkb3duTGlzdE1vZGVsO1xuICB9XG4gIGNsaWNrKGV2ZW50OiBhbnkpIHtcbiAgICB0aGlzLmRyb3Bkb3duTGlzdE1vZGVsPy5vbkNsaWNrKGV2ZW50KTtcbiAgfVxuICBjbGVhcihldmVudDogYW55KSB7XG4gICAgdGhpcy5kcm9wZG93bkxpc3RNb2RlbD8ub25DbGVhcihldmVudCk7XG4gIH1cbiAga2V5dXAoZXZlbnQ6IGFueSkge1xuICAgIHRoaXMuZHJvcGRvd25MaXN0TW9kZWw/LmtleUhhbmRsZXIoZXZlbnQpO1xuICB9XG4gIG92ZXJyaWRlIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHN1cGVyLm5nT25Jbml0KCk7XG4gICAgdGhpcy5kcm9wZG93bkxpc3RNb2RlbCA9IHRoaXMubW9kZWwuZHJvcGRvd25MaXN0TW9kZWwgfHwgbmV3IERyb3Bkb3duTGlzdE1vZGVsKHRoaXMubW9kZWwpO1xuICAgIGluaXRMb2dpY09wZXJhdG9yKHRoaXMubW9kZWwpO1xuICB9XG59XG5Bbmd1bGFyQ29tcG9uZW50RmFjdG9yeS5JbnN0YW5jZS5yZWdpc3RlckNvbXBvbmVudChcInN2LWxvZ2ljLW9wZXJhdG9yXCIsIExvZ2ljT3BlcmF0b3JDb21wb25lbnQpO1xuXG5SZW5kZXJlckZhY3RvcnkuSW5zdGFuY2UucmVnaXN0ZXJSZW5kZXJlcihcImRyb3Bkb3duXCIsIFwibG9naWNvcGVyYXRvclwiLCBcInN2LWxvZ2ljLW9wZXJhdG9yXCIpOyIsIjxuZy10ZW1wbGF0ZSAjdGVtcGxhdGU+XG4gIDxkaXYgW2NsYXNzXT1cIm1vZGVsLmNzc0NsYXNzZXMuc2VsZWN0V3JhcHBlclwiPlxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCIhbW9kZWwuaXNSZWFkT25seVwiPlxuICAgICAgPGRpdiBbY2xhc3NdPVwibW9kZWwuZ2V0Q29udHJvbENsYXNzKClcIiAgKGNsaWNrKT1cImNsaWNrKCRldmVudClcIiAoa2V5dXApPVwia2V5dXAoJGV2ZW50KVwiXG4gICAgICAgIFthdHRyLmlkXT1cIm1vZGVsLmlucHV0SWRcIiBcbiAgICAgICAgW2F0dHIucmVxdWlyZWRdPVwibW9kZWwuaXNSZXF1aXJlZFwiIFxuICAgICAgICBbYXR0ci50YWJpbmRleF09IFwibW9kZWwuaXNJbnB1dFJlYWRPbmx5ID8gdW5kZWZpbmVkIDogMFwiXG4gICAgICAgIFthdHRyLmRpc2FibGVkXT1cIm1vZGVsLmlzSW5wdXRSZWFkT25seVwiXG4gICAgICAgIFthdHRyLnJvbGVdPVwibW9kZWwuYXJpYVJvbGVcIlxuICAgICAgICBbYXR0ci5hcmlhLXJlcXVpcmVkXT1cIm1vZGVsLmFyaWFSZXF1aXJlZFwiIFxuICAgICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cIm1vZGVsLmFyaWFMYWJlbFwiIFxuICAgICAgICBbYXR0ci5hcmlhLWludmFsaWRdPVwibW9kZWwuYXJpYUludmFsaWRcIiBcbiAgICAgICAgW2F0dHIuYXJpYS1kZXNjcmliZWRieV09IFwibW9kZWwuYXJpYURlc2NyaWJlZEJ5XCIgXG4gICAgICA+XG4gICAgICAgIDxkaXYgW2NsYXNzXT1cIm1vZGVsLmNzc0NsYXNzZXMuY29udHJvbFZhbHVlXCI+XG4gICAgICAgICAgPHN2LW5nLXN0cmluZyAqbmdJZj1cIm1vZGVsLnNlbGVjdGVkSXRlbUxvY1RleHRcIiBbbW9kZWxdPVwibW9kZWwuc2VsZWN0ZWRJdGVtTG9jVGV4dFwiPjwvc3Ytbmctc3RyaW5nPlxuICAgICAgICAgIDxkaXY+e3ttb2RlbC5yZWFkT25seVRleHR9fTwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiAqbmdJZj1cIm1vZGVsLmFsbG93Q2xlYXIgJiYgbW9kZWwuY3NzQ2xhc3Nlcy5jbGVhbkJ1dHRvbkljb25JZFwiIFtjbGFzc109XCJtb2RlbC5jc3NDbGFzc2VzLmNsZWFuQnV0dG9uXCIgKGNsaWNrKT1cImNsZWFyXCIgW3Zpc2libGVdPVwiIW1vZGVsLmlzRW1wdHkoKVwiPlxuICAgICAgICAgIDxzdmcgW2NsYXNzXT1cIm1vZGVsLmNzc0NsYXNzZXMuY2xlYW5CdXR0b25TdmdcIiBbaWNvbk5hbWVdPVwibW9kZWwuY3NzQ2xhc3Nlcy5jbGVhbkJ1dHRvbkljb25JZFwiIFtzaXplXT1cIidhdXRvJ1wiIFt0aXRsZV09XCJtb2RlbC5jbGVhckNhcHRpb25cIiBbc2l6ZV09XCIyNFwiIHN2LW5nLXN2Zy1pY29uPjwvc3ZnPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgICA8c3YtbmctcG9wdXAgW3BvcHVwTW9kZWxdPVwibW9kZWwucG9wdXBNb2RlbFwiPjwvc3YtbmctcG9wdXA+XG4gICAgPC9uZy1jb250YWluZXI+XG4gICAgPGRpdiBkaXNhYmxlZCAqbmdJZj1cIm1vZGVsLmlzUmVhZE9ubHlcIiBbY2xhc3NdPVwibW9kZWwuZ2V0Q29udHJvbENsYXNzKClcIiBbYXR0ci5pZF09XCJtb2RlbC5pbnB1dElkXCI+XG4gICAgICA8c3Ytbmctc3RyaW5nICpuZ0lmPVwibW9kZWwuc2VsZWN0ZWRJdGVtTG9jVGV4dFwiIFttb2RlbF09XCJtb2RlbC5zZWxlY3RlZEl0ZW1Mb2NUZXh0XCI+PC9zdi1uZy1zdHJpbmc+XG4gICAgICA8ZGl2Pnt7bW9kZWwucmVhZE9ubHlUZXh0fX08L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuIl19