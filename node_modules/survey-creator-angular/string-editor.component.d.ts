import { AfterViewInit, ChangeDetectorRef, ElementRef, NgZone, ViewContainerRef } from "@angular/core";
import { LocalizableString, CharacterCounter } from "survey-core";
import { StringEditorViewModelBase, SurveyCreatorModel } from "survey-creator-core";
import { CreatorModelComponent } from "./creator-model.component";
import * as i0 from "@angular/core";
export declare class StringEditorComponent extends CreatorModelComponent<StringEditorViewModelBase> implements AfterViewInit {
    private ngZone;
    baseModel: StringEditorViewModelBase;
    private justFocused;
    model: any;
    container: ElementRef<HTMLElement>;
    constructor(cdr: ChangeDetectorRef, vcr: ViewContainerRef, ngZone: NgZone);
    createModel(): void;
    get locString(): LocalizableString;
    get creator(): SurveyCreatorModel;
    protected getModel(): StringEditorViewModelBase;
    protected getPropertiesToTrack(): string[];
    get placeholder(): string;
    get contentEditable(): boolean;
    get characterCounter(): CharacterCounter;
    get showCharacterCounter(): boolean;
    get getCharacterCounterClass(): string;
    get className(): string;
    get errorText(): string;
    onChangeHandler: () => void;
    onBlur(event: any): string;
    onFocus(event: any): void;
    onPaste(event: any): void;
    done(event: any): void;
    edit(event: any): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<StringEditorComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<StringEditorComponent, "svc-string-edtior", never, { "model": "model"; }, {}, never, never>;
}
