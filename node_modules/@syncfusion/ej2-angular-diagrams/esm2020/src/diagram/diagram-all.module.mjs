import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DiagramModule } from './diagram.module';
import { HierarchicalTree, MindMap, RadialTree, ComplexHierarchicalTree, DataBinding, Snapping, PrintAndExport, BpmnDiagrams, SymmetricLayout, ConnectorBridging, UndoRedo, LayoutAnimation, DiagramContextMenu, LineRouting, ConnectorEditing, BlazorTooltip, LineDistribution, Ej1Serialization } from '@syncfusion/ej2-diagrams';
import * as i0 from "@angular/core";
export const HierarchicalTreeService = { provide: 'DiagramsHierarchicalTree', useValue: HierarchicalTree };
export const MindMapService = { provide: 'DiagramsMindMap', useValue: MindMap };
export const RadialTreeService = { provide: 'DiagramsRadialTree', useValue: RadialTree };
export const ComplexHierarchicalTreeService = { provide: 'DiagramsComplexHierarchicalTree', useValue: ComplexHierarchicalTree };
export const DataBindingService = { provide: 'DiagramsDataBinding', useValue: DataBinding };
export const SnappingService = { provide: 'DiagramsSnapping', useValue: Snapping };
export const PrintAndExportService = { provide: 'DiagramsPrintAndExport', useValue: PrintAndExport };
export const BpmnDiagramsService = { provide: 'DiagramsBpmnDiagrams', useValue: BpmnDiagrams };
export const SymmetricLayoutService = { provide: 'DiagramsSymmetricLayout', useValue: SymmetricLayout };
export const ConnectorBridgingService = { provide: 'DiagramsConnectorBridging', useValue: ConnectorBridging };
export const UndoRedoService = { provide: 'DiagramsUndoRedo', useValue: UndoRedo };
export const LayoutAnimationService = { provide: 'DiagramsLayoutAnimation', useValue: LayoutAnimation };
export const DiagramContextMenuService = { provide: 'DiagramsDiagramContextMenu', useValue: DiagramContextMenu };
export const LineRoutingService = { provide: 'DiagramsLineRouting', useValue: LineRouting };
export const ConnectorEditingService = { provide: 'DiagramsConnectorEditing', useValue: ConnectorEditing };
export const BlazorTooltipService = { provide: 'DiagramsBlazorTooltip', useValue: BlazorTooltip };
export const LineDistributionService = { provide: 'DiagramsLineDistribution', useValue: LineDistribution };
export const Ej1SerializationService = { provide: 'DiagramsEj1Serialization', useValue: Ej1Serialization };
/**
 * NgModule definition for the Diagram component with providers.
 */
export class DiagramAllModule {
}
DiagramAllModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: DiagramAllModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DiagramAllModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: DiagramAllModule, imports: [CommonModule, DiagramModule], exports: [DiagramModule] });
DiagramAllModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: DiagramAllModule, providers: [
        HierarchicalTreeService,
        MindMapService,
        RadialTreeService,
        ComplexHierarchicalTreeService,
        DataBindingService,
        SnappingService,
        PrintAndExportService,
        BpmnDiagramsService,
        SymmetricLayoutService,
        ConnectorBridgingService,
        UndoRedoService,
        LayoutAnimationService,
        DiagramContextMenuService,
        LineRoutingService,
        ConnectorEditingService,
        BlazorTooltipService,
        LineDistributionService,
        Ej1SerializationService
    ], imports: [[CommonModule, DiagramModule], DiagramModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: DiagramAllModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, DiagramModule],
                    exports: [
                        DiagramModule
                    ],
                    providers: [
                        HierarchicalTreeService,
                        MindMapService,
                        RadialTreeService,
                        ComplexHierarchicalTreeService,
                        DataBindingService,
                        SnappingService,
                        PrintAndExportService,
                        BpmnDiagramsService,
                        SymmetricLayoutService,
                        ConnectorBridgingService,
                        UndoRedoService,
                        LayoutAnimationService,
                        DiagramContextMenuService,
                        LineRoutingService,
                        ConnectorEditingService,
                        BlazorTooltipService,
                        LineDistributionService,
                        Ej1SerializationService
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,