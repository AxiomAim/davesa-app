{"version":3,"file":"ej2-circulargauge.min.js","sources":["../../src/circular-gauge/utils/helper-common.js","../../src/circular-gauge/utils/helper-circular-gauge.js","../../src/circular-gauge/model/theme.js","../../src/circular-gauge/utils/helper-tooltip.js","../../src/circular-gauge/utils/helper-legend.js","../../src/circular-gauge/utils/helper-axis-panel.js","../../src/circular-gauge/utils/helper-axis-renderer.js","../../src/circular-gauge/utils/helper-pointer-renderer.js","../../src/circular-gauge/model/base.js","../../src/circular-gauge/axes/axis.js","../../src/circular-gauge/annotations/annotations.js","../../src/circular-gauge/model/constants.js","../../src/circular-gauge/user-interaction/tooltip.js","../../src/circular-gauge/axes/axis-renderer.js","../../src/circular-gauge/axes/pointer-renderer.js","../../src/circular-gauge/axes/axis-panel.js","../../src/circular-gauge/legend/legend.js","../../src/circular-gauge/model/pdf-export.js","../../src/circular-gauge/model/image-export.js","../../src/circular-gauge/model/print.js","../../src/circular-gauge/axes/gradient.js","../../src/circular-gauge/circular-gauge.js","../../src/global.js"],"sourcesContent":["/* eslint-disable max-len */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { compile as templateComplier, isNullOrUndefined, remove, createElement, merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @returns {Size} - Returns the size of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerText = text;\n    htmlObject.style.cssText = style;\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n *\n * @param {string} value - Specifies the value.\n * @param {number} maxDimension - Specifies the  maximum dimension.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n *\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to create the text element.\n *\n * @param {TextOption} options - Specifies the options.\n * @param {FontModel} font - Specifies the font.\n * @param {string} color - Specifies the color.\n * @param {HTMLElement | Element} parent - Specifies the html element.\n * @param {string} styles - Specifies the style.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n *\n * @param {PathOption} options - Specifies the options.\n * @param {Element} element - Specifies the element.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {string} functionName - Specifies the function name.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.style.cssText = options.style;\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {boolean} Returns the boolean value.\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get the degree for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the angle from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get angle from location for circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {GaugeLocation} point - Specifies the point.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n *\n * @param {number} degree - Specifies the degree.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} center - Specifies the center.\n * @returns {GaugeLocation} - Returns the gauge location.\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {number} start - Specifies the start.\n * @param {number} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} startWidth - Specifies the startWidth.\n * @param {number} endWidth - Specifies the endWidth.\n * @param {Range} range - Specifies the range.\n * @param {Axis} axis - Specifies the axis.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    if (isNullOrUndefined(range) || (range.start !== range.end)) {\n        end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    }\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside'\n        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4)\n            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x\n        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo\n        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {\n    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;\n    if (isNullOrUndefined(arcStartTwo) && isNullOrUndefined(arcEndTwo)) {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '\n            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n    else {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '\n            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '\n            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n}\n/**\n * Function to get the range path direction for different start and end width of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the options.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {number} radius - Specifies the radius.\n * @param {number} startRadius - Specifies the startRadius.\n * @param {number} endRadius - Specifies the endRadius.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the range path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start values.\n * @param {GaugeLocation} end - Specifies the end values.\n * @param {GaugeLocation} innerStart - Specifies the innerStart values.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the string value.\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n    var widthDifference = Math.abs(startWidth - endWidth);\n    var endArc;\n    var startArc;\n    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n    }\n    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {\n        if (range.roundedCornerRadius <= 0 && range.startWidth === range.endWidth) {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n        else {\n            return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);\n        }\n    }\n    else {\n        if (range.position === 'Cross' || range.position === 'Outside') {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n        }\n        else {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n    }\n}\n/**\n * Function to get start and end width range path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the svg path.\n * @private\n */\nexport function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {\n    if (!isNullOrUndefined(range)) {\n        var arcStartOne = void 0;\n        var arcEndOne = void 0;\n        var widthDifference = Math.abs(startWidth - endWidth);\n        var arcStartTwo = void 0;\n        var arcEndTwo = void 0;\n        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var pointPosition = (startWidth < ((endWidth))) ?\n            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);\n        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));\n        var endRadii = endDistance / 2;\n        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));\n        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));\n        if (range.roundedCornerRadius <= 0) {\n            widthDifference = widthDifference === 0 ? 1 : widthDifference;\n            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?\n                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;\n            var degreeValue = range.position === 'Cross' ? 330 : 325;\n            if (((degreeValue <= degree && degree <= 360))) {\n                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)\n                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))\n                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))\n                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));\n                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)\n                    : range.position === 'Cross' ?\n                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :\n                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?\n                            (startRadius - (widthDifference) - (endWidth / 4))\n                            : (startRadius - (widthDifference / 2))\n                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));\n                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);\n            }\n            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {\n                var arcStart = (arcRadius - (widthDifference / 2));\n                var arcEnd = (arcRadius - (widthDifference / 2));\n                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;\n                if (degree < 310) {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);\n                }\n                else if (degree >= 310 || angleValueDirection) {\n                    arcStart = (arcRadius - (widthDifference));\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n            else {\n                if (range.position === 'Cross') {\n                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?\n                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius\n                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?\n                        endRadius + (widthDifference / 4) - (startWidth / 4) :\n                        endRadius + (widthDifference / 4) - (startWidth / 2);\n                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)\n                        - (widthDifference / 4) : startRadius - (widthDifference / 4)\n                        : startRadius : startRadius - (widthDifference / 4);\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);\n                }\n                else if (range.position === 'Outside') {\n                    if (degree < 325 && degree > 285) {\n                        var arcTwo = void 0;\n                        var startGreater = startWidth / 2;\n                        var endGreater = endWidth / 2;\n                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;\n                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?\n                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);\n                    }\n                    else {\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n                    }\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n        }\n        else {\n            var degreeAngle = axis.endAngle < 4 ? 356 : 360;\n            clockWise = degree > degreeAngle ? 0 : clockWise;\n            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;\n            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;\n            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {\n                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :\n                    endRadii - (widthDifference / 4) : endRadii;\n                arcStartTwo = (centerDistance / 2);\n                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :\n                    (centerStartDistance / 2);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);\n            }\n            else if (degree > 270 && degree < degreeValueTwo) {\n                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);\n                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);\n                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));\n                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);\n            }\n            else {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n        }\n    }\n    else {\n        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n    }\n}\n/**\n * Function to get start and end width range rounded path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} actualStart - Specifies the actualStart value.\n * @param {number} actualEnd - Specifies the actualEnd value.\n * @param {number} oldStart - Specifies the oldStart value.\n * @param {number} oldEnd - Specifies the oldEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to compile the template function for circular gauge.\n *\n * @param {string} template - Specifies the template.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {Function} - Returns the template function.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    try {\n        if (typeof template === 'function') {\n            templateFn = templateComplier(template);\n        }\n        else if (isNaN(parseFloat(template)) && document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        else if (gauge.isVue || gauge.isVue3) {\n            templateFn = templateComplier(template);\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n *\n * @param {string} id Specifies the id\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get element from id.\n *\n * @param {string} id - Specifies the id.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to convert the number from string.\n *\n * @param {string} value - Specifies the value.\n * @param {number} containerSize - Specifies the container size.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisiblePointer} - Returns the pointer and axis index.\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    var tempStringArray = tempString.indexOf('_Range_') > -1 ? tempString.split('_Range_') : tempString.indexOf('_Pointer_NeedleCap_') > -1 ? tempString.split('_Pointer_NeedleCap_') :\n        tempString.indexOf('_Pointer_NeedleTail_') > -1 ? tempString.split('_Pointer_NeedleTail_') : tempString.indexOf('_Pointer_NeedleRect_') > -1 ? tempString.split('_Pointer_NeedleRect_') :\n            tempString.indexOf('_Pointer_Needle_') > -1 ? tempString.split('_Pointer_Needle_') : tempString.indexOf('_Pointer_RangeBar_') > -1 ? tempString.split('_Pointer_RangeBar_') : tempString.indexOf('_Pointer_Marker_') > -1 ?\n                tempString.split('_Pointer_Marker_') : tempString.indexOf('_Pointer_') > -1 ? tempString.split('_Pointer_') : tempString.split('_Annotation_');\n    return {\n        axisIndex: +tempStringArray[0],\n        pointerIndex: +tempStringArray[tempStringArray.length - 1]\n    };\n}\n/**\n * Function to convert the label using format for cirular gauge.\n *\n * @param {string} format - Specifies the format.\n * @returns {string} - Returns th string.\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n *\n * @param {GaugeLocation} location - Specifies the location.\n * @param {string} shape - Specifies the shape.\n * @param {Size} size - Specifies the size.\n * @param {string} url - Specifies the url.\n * @param {PathOption} options - Specifies the path option.\n * @returns {PathOption} - Returns the path.\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = typeof size.width === 'string' ? parseFloat(size.width) : size.width;\n    var height = typeof size.height === 'string' ? parseFloat(size.height) : size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    var space;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        _this['stroke-dasharray'] = border.dashArray;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Specifies the size information of an element.\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Specifies the location of the element in the circular gauge.\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { setStyleAttribute } from '@syncfusion/ej2-base';\nimport { isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)));\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString.split('Range_')[1]\n    };\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: null,\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: null,\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n})(Theme || (Theme = {}));\n/**\n * @param {string} theme theme\n * @returns {string[]} palette\n * @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    switch (theme.toLowerCase()) {\n        case 'tailwind':\n            palette = ['#0369A1', '#14B8A6', '#15803D', '#334155', '#5A61F6',\n                '#65A30D', '#8B5CF6', '#9333EA', '#F59E0B', '#F97316'];\n            break;\n        case 'tailwinddark':\n            palette = ['#10B981', '#22D3EE', '#2DD4BF', '#4ADE80', '#8B5CF6',\n                '#E879F9', '#F472B6', '#F87171', '#F97316', '#FCD34D'];\n            break;\n        case 'bootstrap5':\n            palette = ['#262E0B', '#668E1F', '#AF6E10', '#862C0B', '#1F2D50',\n                '#64680B', '#311508', '#4C4C81', '#0C7DA0', '#862C0B'];\n            break;\n        case 'bootstrap5dark':\n            palette = ['#5ECB9B', '#A860F1', '#EBA844', '#557EF7', '#E9599B',\n                '#BFC529', '#3BC6CF', '#7A68EC', '#74B706', '#EA6266'];\n            break;\n        case 'fluent':\n            palette = ['#614570', '#4C6FB1', '#CC6952', '#3F579A', '#4EA09B',\n                '#6E7A89', '#D4515C', '#E6AF5D', '#639751', '#9D4D69'];\n            break;\n        case 'fluentdark':\n            palette = ['#8AB113', '#2A72D5', '#43B786', '#584EC6', '#E85F9C',\n                '#6E7A89', '#EA6266', '#EBA844', '#26BC7A', '#BC4870'];\n            break;\n        case 'material3':\n            palette = ['#6200EE', '#E77A16', '#82C100', '#7107DC', '#05BB3D',\n                '#D21020', '#FAD200', '#0085FF', '#9204EA', '#08EE9B'];\n            break;\n        case 'material3dark':\n            palette = ['#4EAAFF', '#FA4EAB', '#FFF500', '#17EA58', '#38FFE7',\n                '#FF9E45', '#B3F32F', '#B93CE4', '#FC5664', '#9B55FF'];\n            break;\n    }\n    return palette;\n}\n/**\n * Function to get ThemeStyle\n *\n * @param {GaugeTheme} theme theme\n * @returns {IThemeStyle} style\n * @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                tooltipFontSize: '13px',\n                tooltipTextOpacity: 1,\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                tooltipFontSize: '13px',\n                tooltipTextOpacity: 1,\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '13px',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '13px',\n                labelColor: '#6B7280',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                tooltipFontSize: '13px',\n                labelColor: '#9CA3AF',\n                lineColor: '#374151',\n                majorTickColor: '#6B7280',\n                minorTickColor: '#6B7280',\n                pointerColor: '#9CA3AF',\n                capColor: '#9CA3AF',\n                needleColor: '#9CA3AF',\n                needleTailColor: '#9CA3AF',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#343A40',\n                tooltipFillColor: '#212529',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '13px',\n                labelColor: '#495057',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#E9ECEF',\n                tooltipFillColor: '#E9ECEF',\n                tooltipFontColor: '#212529',\n                tooltipFontSize: '13px',\n                labelColor: '#CED4DA',\n                lineColor: '#343A40',\n                majorTickColor: '#6C757D',\n                minorTickColor: '#6C757D',\n                pointerColor: '#ADB5BD',\n                capColor: '#ADB5BD',\n                needleColor: '#ADB5BD',\n                needleTailColor: '#ADB5BD',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'fluent':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#201F1E',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#323130',\n                tooltipFontSize: '13px',\n                labelColor: '#3B3A39',\n                lineColor: '#EDEBE9',\n                majorTickColor: '#C8C6C4',\n                minorTickColor: '#C8C6C4',\n                pointerColor: '#A19F9D',\n                capColor: '#A19F9D',\n                needleColor: '#A19F9D',\n                needleTailColor: '#A19F9D',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '600'\n            };\n            break;\n        case 'fluentdark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#F3F2F1',\n                tooltipFillColor: '#252423',\n                tooltipFontColor: '#F3F2F1',\n                tooltipFontSize: '13px',\n                labelColor: '#C8C6C4',\n                lineColor: '#292827',\n                majorTickColor: '#484644',\n                minorTickColor: '#484644',\n                pointerColor: '#797775',\n                capColor: '#797775',\n                needleColor: '#797775',\n                needleTailColor: '#797775',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '600'\n            };\n            break;\n        case 'material3':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#1C1B1F',\n                tooltipFillColor: '#313033',\n                tooltipFontColor: '#F4EFF4',\n                tooltipFontSize: '14px',\n                labelColor: ' #1E192B',\n                lineColor: '#E7E0EC',\n                majorTickColor: '#C4C7C5',\n                minorTickColor: '#C4C7C5',\n                pointerColor: '#49454E',\n                capColor: '#49454E',\n                needleColor: '#49454E',\n                needleTailColor: '#49454E',\n                fontFamily: 'Roboto',\n                fontSize: '16px',\n                labelFontFamily: 'Roboto',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: '400',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'material3dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#E6E1E5',\n                tooltipFillColor: '#E6E1E5',\n                tooltipFontColor: '#313033',\n                tooltipFontSize: '14px',\n                labelColor: '#E6E1E5',\n                lineColor: '#49454F',\n                majorTickColor: '#444746',\n                minorTickColor: '#444746',\n                pointerColor: '#CAC4D0',\n                capColor: '#CAC4D0',\n                needleColor: '#CAC4D0',\n                needleTailColor: '#CAC4D0',\n                fontFamily: 'Roboto',\n                fontSize: '16px',\n                labelFontFamily: 'Roboto',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: '400',\n                titleFontWeight: '500'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipFontSize: '13px',\n                tooltipTextOpacity: 1,\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * Specifies Circular-Gauge Tooltip Helper methods\n */\nimport { GaugeLocation, getTemplateFunction, Size } from './helper-common';\nimport { remove } from '@syncfusion/ej2-base';\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n *\n * @private\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * function to get the size of the element.\n *\n * @param {string} template - Specifies the template element.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @param {HTMLElement} parent - specifies the element.\n * @returns {Size} - Return the size of the element\n *\n * @private\n */\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = getTemplateFunction(template, gauge);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var tooltipData = templateFn ? (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n        : templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateElement = (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n            : templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n","/**\n * Specifies Circular-Gauge Common Helper methods\n */\nimport { measureText, getElement, Rect } from '../utils/helper-common';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @returns {void}\n * @private */\nexport function showTooltip(text, x, y, gauge, type) {\n    var tooltipRect = new Rect(gauge.margin.left, gauge.margin.top + 10, gauge.availableSize.width - (gauge.margin.left + gauge.margin.right), gauge.availableSize.height - (gauge.margin.top - gauge.margin.bottom));\n    var id;\n    var tooltip;\n    if (type === 'Title') {\n        id = gauge.element.id + '_EJ2_Title_Tooltip';\n        tooltip = document.getElementById(id);\n        var width = measureText(text, {\n            fontFamily: 'Segoe UI', size: '12px',\n            fontStyle: 'Normal', fontWeight: 'Regular'\n        }).width + 5;\n        tooltipRect.width = width < tooltipRect.width ? width : tooltipRect.width - 10;\n        if (!tooltip) {\n            removeTooltip();\n        }\n    }\n    else if (type === 'LegendText') {\n        id = gauge.element.id + '_EJ2_Legend_Tooltip';\n        tooltip = document.getElementById(id);\n        if (!tooltip) {\n            removeTooltip();\n        }\n        var width = measureText(text, {\n            fontFamily: 'Segoe UI', size: '12px',\n            fontStyle: 'Normal', fontWeight: 'Regular'\n        }).width + 5;\n        x = (x + width > tooltipRect.width) ? x - width : x;\n        tooltipRect.x = x < 0 ? 5 : x;\n        tooltipRect.y = y;\n        tooltipRect.width = width;\n    }\n    if (!tooltip) {\n        tooltip = createElement('div', { id: id, className: 'EJ2-CircularGauge-Tooltip' });\n        tooltip.innerText = text;\n        tooltip.style.cssText = 'top:' + (tooltipRect.y + 15).toString() + 'px;left:' + (tooltipRect.x).toString() +\n            'px; background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n            'position:absolute; border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n            'padding-bottom: 2px; padding-top : 2px; font-size:12px; text-align: center; font-family: \"Segoe UI\"; width:' + (tooltipRect.width) + 'px;';\n        getElement(gauge.element.id + '_Secondary_Element').appendChild(tooltip);\n    }\n    else {\n        tooltip.innerText = text;\n        tooltip.style.top = (tooltipRect.y + 15).toString() + 'px';\n        tooltip.style.left = (tooltipRect.x).toString() + 'px';\n    }\n}\n/** @private */\nexport function titleTooltip(event, x, y, gauge, isTitleTouch) {\n    var targetId = event.target.id;\n    var elementArray = document.getElementsByClassName('EJ2-CircularGauge-Tooltip');\n    if ((targetId === (gauge.element.id + '_CircularGaugeTitle')) && (event.target.textContent.indexOf('...') > -1)) {\n        showTooltip(gauge.title, x, y, gauge, \"Title\");\n    }\n    else if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1 &&\n        gauge.legendSettings.visible) {\n        var axisIndex = parseInt(targetId.split(gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n        var rangeIndex = parseInt(targetId.split(gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n        var text = '';\n        for (var _i = 0, _a = gauge.legendModule.legendCollection; _i < _a.length; _i++) {\n            var legends = _a[_i];\n            if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                text = legends.originalText;\n            }\n        }\n        showTooltip(text, x, y, gauge, \"LegendText\");\n    }\n    else if (elementArray.length > 0 && (elementArray[0].id.indexOf(\"Title_Tooltip\") > -1 ||\n        elementArray[0].id.indexOf(\"Legend_Tooltip\") > -1)) {\n        removeTooltip();\n    }\n    if (isTitleTouch) {\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(removeTooltip.bind(this), 2000);\n    }\n}\n/** @private */\nexport function removeTooltip() {\n    if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n        document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0].remove();\n    }\n}\n","/**\n * Specifies Circular-Gauge axis-panel Helper methods\n */\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n","/**\n * Specifies Circular-Gauge axis-render Helper methods\n */\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n","/**\n * Specifies Circular-Gauge pointer-render Helper methods\n */\nimport { getLocationFromAngle, isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the options to customize the styles of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Border.prototype, \"dashArray\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: null, fontFamily: null, opacity: null, fontWeight: null }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px', fontFamily: null, opacity: null }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: null, fontFamily: null, opacity: null, fontWeight: null }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the options to customize the axis line in circular gauge.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the options to customize the axis label in circular gauge.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isLinearCircularGradient = false;\n        return _this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radialGradient\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the options to customize the major and minor tick lines of an axis in circular gauge.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"radialGradient\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the options to customize the pointer needle in the circular gauge.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"radialGradient\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation elements for an axis in circular gauge.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the options to customize the pointers of an axis in circular gauge.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        /**\n         * Sets and gets the value of the pointer in circular gauge.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isPointerAnimation = true;\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radialGradient\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { getTemplateFunction, getElement, stringToNumber, getFontStyle, getLocationFromAngle, removeElement } from '../utils/helper-common';\nimport { annotationRender } from '../model/constants';\nimport { createElement, isNullOrUndefined, Animation } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n *\n * @hidden\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line\n    function Annotations(gauge) {\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     *\n     * @private\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index, gauge) {\n        var _this = this;\n        var width = gauge.availableSize.width;\n        var element = createElement('div', {\n            id: gauge.element.id + '_Annotations_' + index, styles: gauge.allowLoadingAnimation ? 'opacity: 0' : 'opacity: 1'\n        });\n        var parentElement = getElement(gauge.element.id + '_Secondary_Element');\n        if (!isNullOrUndefined(document.getElementById(gauge.element.id + '_Secondary_Element'))) {\n            document.getElementById(gauge.element.id + '_Secondary_Element').style.width = width + 'px';\n        }\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index, gauge);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        gauge.renderReactTemplates();\n    };\n    /**\n     * Method to annotation animation for circular gauge.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of gauge.\n     * @returns {void}\n     * @private\n     */\n    Annotations.prototype.annotationAnimation = function (gauge) {\n        for (var i = 0; i < gauge.axes.length; i++) {\n            var element = document.getElementById(gauge.element.id + '_Annotations_' + i);\n            if (!isNullOrUndefined(element)) {\n                if (element['style']['opacity'] === '0') {\n                    this.annotationAnimate(element, gauge, i);\n                }\n            }\n        }\n    };\n    /**\n     * Method to annotation animation for circular gauge.\n     *\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of gauge.\n     * @returns {void}\n     */\n    Annotations.prototype.annotationAnimate = function (element, gauge, axisIndex) {\n        var tempOpacity = 0;\n        var opacity = 1;\n        new Animation({}).animate(element, {\n            duration: gauge.loadingAnimationDuration[axisIndex],\n            progress: function (args) {\n                if (args.timeStamp > args.delay) {\n                    tempOpacity = ((args.timeStamp - args.delay) / args.duration);\n                    element['style']['opacity'] = (opacity * tempOpacity);\n                }\n            },\n            end: function () {\n                element['style']['opacity'] = opacity;\n                gauge.isOverAllAnimationComplete = true;\n            }\n        });\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     *\n     * @private\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex, gauge) {\n        var _this = this;\n        var axis = gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: gauge.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex\n        });\n        childElement.style.cssText = 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n            (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';';\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, gauge);\n                if (templateFn && templateFn(axis, gauge, argsData.content, gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length) {\n                    templateElement = Array.prototype.slice.call(templateFn(axis, gauge, argsData.content, gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    var annotationElement = createElement('div', {\n                        innerHTML: !isNullOrUndefined(argsData.content) ? argsData.content.toString() : null,\n                        id: 'StringTemplate'\n                    });\n                    annotationElement.style.cssText = getFontStyle(argsData.textStyle);\n                    childElement.appendChild(annotationElement);\n                }\n                _this.updateLocation(childElement, axis, annotation, gauge);\n                element.appendChild(childElement);\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Annotation} annotation - Specifies the annotation.\n     * @returns {void}\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation, gauge) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), gauge.midPoint);\n        var elementRect = this.measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n        element.setAttribute('role', 'region');\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Annotations.prototype.destroy = function () { };\n    /**\n     * Function to measure the element rect.\n     *\n     * @param {HTMLElement} element - Specifies the html element.\n     * @returns {ClientRect} - Returns the client rect.\n     * @private\n     */\n    Annotations.prototype.measureElementRect = function (element) {\n        document.body.appendChild(element);\n        var bounds = element.getBoundingClientRect();\n        removeElement(element.id);\n        return bounds;\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge.\n *\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge.\n *\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge.\n *\n * @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge.\n *\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge.\n *\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge.\n *\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge.\n *\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge.\n *\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge.\n *\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge.\n *\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge.\n *\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge.\n *\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge.\n *\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge.\n *\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge.\n *\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge.\n *\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge.\n *\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge.\n *\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge.\n *\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getAngleFromValue, getLocationFromAngle, getPointer, getLabelFormat, Rect } from '../utils/helper-common';\nimport { getMousePosition, getElementSize } from '../utils/helper-tooltip';\nimport { Browser, createElement, isNullOrUndefined, remove, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\nimport { titleTooltip } from '../utils/helper-legend';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n *\n * @hidden\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     *\n     * @param {PointerEvent} e - specifies the event argument.\n     * @returns {void}\n     *\n     * @private\n     */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        var isTooltipRender = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            isTooltipRender = true;\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1 && typeof template !== 'function') {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, tooltipArgs.location, true) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, tooltipArgs.location, false);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    var pointerTextStyle = {\n                        color: tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor,\n                        opacity: tooltipArgs.tooltip.textStyle.opacity || _this.gauge.themeStyle.tooltipTextOpacity,\n                        fontFamily: tooltipArgs.tooltip.textStyle.fontFamily || _this.gauge.themeStyle.fontFamily,\n                        fontWeight: tooltipArgs.tooltip.textStyle.fontWeight || _this.gauge.themeStyle.fontWeight,\n                        fontStyle: tooltipArgs.tooltip.textStyle.fontStyle,\n                        size: tooltipArgs.tooltip.textStyle.size || _this.gauge.themeStyle.tooltipFontSize\n                    };\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, pointerTextStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) : this.gauge.enableRtl ? 'Start:' + rangeFormat(roundStartValue) + ' <br>End:' + rangeFormat(roundEndValue) + ' ' :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            var rangeTooltipTextStyle_1 = { color: this.gauge.tooltip.rangeSettings.textStyle.color, opacity: this.gauge.tooltip.rangeSettings.textStyle.opacity,\n                fontFamily: this.gauge.tooltip.rangeSettings.textStyle.fontFamily, fontStyle: this.gauge.tooltip.rangeSettings.textStyle.fontStyle,\n                fontWeight: this.gauge.tooltip.rangeSettings.textStyle.fontWeight, size: this.gauge.tooltip.rangeSettings.textStyle.size\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1 && typeof rangeTemplate !== 'function') {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (typeof rangeTemplate !== 'function' && rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeTooltipArgs.location, true) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeTooltipArgs.location, false);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipTextStyle_1.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipTextStyle_1.fontFamily = rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily\n                        || _this.gauge.themeStyle.fontFamily;\n                    rangeTooltipTextStyle_1.fontWeight = rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontWeight\n                        || _this.gauge.themeStyle.fontWeight;\n                    rangeTooltipTextStyle_1.opacity = rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity ||\n                        _this.gauge.themeStyle.tooltipTextOpacity;\n                    rangeTooltipTextStyle_1.size = rangeTooltipArgs.tooltip.rangeSettings.textStyle.size\n                        || _this.gauge.themeStyle.tooltipFontSize;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipTextStyle_1, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1 && typeof annotationTemplate !== 'function') {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    var annotationTextStyle = {\n                        color: annotationTooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor,\n                        fontFamily: annotationTooltipArgs.tooltip.textStyle.fontFamily || _this.gauge.themeStyle.fontFamily,\n                        fontWeight: annotationTooltipArgs.tooltip.textStyle.fontWeight || _this.gauge.themeStyle.fontWeight,\n                        opacity: annotationTooltipArgs.tooltip.textStyle.opacity || _this.gauge.themeStyle.tooltipTextOpacity,\n                        fontStyle: annotationTooltipArgs.tooltip.textStyle.fontStyle,\n                        size: annotationTooltipArgs.tooltip.textStyle.size || _this.gauge.themeStyle.fontSize\n                    };\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTextStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((target.id === (this.gauge.element.id + '_CircularGaugeTitle') || target.id.indexOf('_gauge_legend_') > -1) &&\n            (e.target.textContent.indexOf('...') > -1)) {\n            titleTooltip(e, pageX, pageY, this.gauge, false);\n        }\n        else {\n            var isTooltipRemoved = this.removeTooltip();\n            if (isTooltipRemoved) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if ((this.gauge.isVue || this.gauge.isVue3)) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.gauge.clearTemplate([this.tooltipEle.children[0].id], [0]);\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                else if (!this.gauge.isAngular) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.gauge.clearTemplate();\n                }\n            }\n        }\n        var gaugeElement = document.getElementById(this.gaugeId);\n        var gaugeRect = gaugeElement.getBoundingClientRect();\n        var tooltipRect = isTooltipRender ? this.tooltipEle.getBoundingClientRect() : null;\n        if (isTooltipRender && this.tooltipEle.offsetLeft < 0 && (tooltipRect.left - gaugeRect.left) < 0) {\n            var tooltipLeft = this.tooltipEle.style.left.split('px')[0];\n            this.tooltipEle.style.left = parseInt(tooltipLeft, 10) + (gaugeRect.left - tooltipRect.left) + 'px';\n        }\n        if (isTooltipRender && tooltipRect.top < 0) {\n            this.tooltipEle.style.top = 0 + 'px';\n        }\n    };\n    /**\n     * Method to create tooltip svg element.\n     *\n     * @param {Tooltip} svgTooltip - Specifies the tooltip element.\n     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.\n     * @param {string} template - Specifies the tooltip template.\n     * @param {boolean} arrowInverted - Specifies the boolean value.\n     * @param {Rect} tooltipRect - Specifies the rect element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @param {string} fill - Spcifies the fill color of the tooltip.\n     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.\n     * @param {BorderModel} border - Specifies the border of the tooltip.\n     * @returns {Tooltip} - Returns the tooltip.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            template: template,\n            enableRTL: gauge.enableRtl,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [SanitizeHtmlHelper.sanitize(tooltipArg.content)],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border,\n            enableShadow: true\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((gauge.isVue || gauge.isVue3)) {\n            svgTooltip.controlInstance = gauge;\n        }\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     *\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip'\n            });\n            this.tooltipEle.style.cssText = 'position: absolute;pointer-events:none;';\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    /**\n     * Method to get parent annotation element.\n     *\n     * @param {Element} child - Specifies the annotation element.\n     * @returns {boolean} - Returns the boolean value.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     *\n     * @param {number} currentValue - Specifies the current value.\n     * @returns {number} - Returns the round number.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     *\n     * @param {Rect} rect - Specifies the rect element.\n     * @param {number} angle - Specifies the angle.\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {boolean} isTemplate - whether it is template or not .\n     * @returns {Rect} - Returns the rect element.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, location, isTemplate) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        var padding = 10;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = isTemplate ? true : isTemplate;\n                addTop = (angle >= 150 && angle <= 160 && isTemplate) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - location.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x + padding, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x - padding : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        var isTooltipRemoved = false;\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n                isTooltipRemoved = true;\n            }\n            this.pointerEle = null;\n        }\n        return isTooltipRemoved;\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.removeTooltip();\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     *\n     * @private\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     *\n     * @private\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge) {\n            if (this.gauge.isDestroyed) {\n                return;\n            }\n            this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n            this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n            this.gauge.element.removeEventListener('contextmenu', this.removeTooltip);\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function () {\n        this.tooltipEle = null;\n        this.currentAxis = null;\n        this.tooltip = null;\n        this.currentPointer = null;\n        this.currentRange = null;\n        this.currentAnnotation = null;\n        this.borderStyle = null;\n        if (!isNullOrUndefined(this.svgTooltip)) {\n            this.svgTooltip.destroy();\n        }\n        this.svgTooltip = null;\n        this.tooltipRect = null;\n        this.pointerEle = null;\n        this.annotationTargetElement = null;\n        this.gauge = null;\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { stringToNumber, toPixel, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getPathArc, getRoundedPathArc, getDegree, isCompleteAngle, PathOption, TextOption } from '../utils/helper-common';\nimport { getRangeColor } from '../utils/helper-axis-renderer';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to check the angles.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.checkAngles = function (axis) {\n        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;\n        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0 && this.gauge.allowComponentRender) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', gauge.allowLoadingAnimation ? 'visibility: hidden; pointer-events:none;' : 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index, style: gauge.allowLoadingAnimation ? 'visibility: hidden;' : 'pointer-events:none;'\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, lastLabelAnchor);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, anchor);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, anchor);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            var textFont = {\n                size: style.font.size,\n                color: style.font.color,\n                fontFamily: style.font.fontFamily || this.gauge.themeStyle.labelFontFamily,\n                fontWeight: style.font.fontWeight || this.gauge.themeStyle.fontWeight,\n                fontStyle: style.font.fontStyle,\n                opacity: style.font.opacity\n            };\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                var labelTextElement = textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), textFont, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                labelTextElement.setAttribute('aria-label', label.text);\n                labelTextElement.setAttribute('role', 'region');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     *\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} angle - Specifies the angle.\n     * @param {VisibleLabels} label - Specifies the labels.\n     * @returns {string} - Returns the anchor.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     *\n     * @param {GaugeLocation} previousLocation - Specifies the previous location.\n     * @param {number} previousWidth - Specifies the previous width.\n     * @param {number} previousHeight - Specifies the previous height.\n     * @param {GaugeLocation} currentLocation - Specifies the current location.\n     * @param {number} currentWidth - Specifies the current width.\n     * @param {number} currentHeight - Specifies the current height.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     *\n     * @param {GaugeLocation} actualLocation - Specifies the actual location.\n     * @param {number} textWidth - Specifies the text width.\n     * @param {string} anchorPosition - Specifies the anchor position.\n     * @returns {GaugeLocation} - Returns the gauge location.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, anchorPosition) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     *\n     * @param {number} angle - Specifies the angle.\n     * @param {number} size - Specifies the size.\n     * @returns {number} - Returns the fineal size.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            var j = 0;\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    var tickElement = appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + j++, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', gauge.allowLoadingAnimation ? 'visibility: hidden;pointer-events: none;' : 'pointer-events:none;'), minorTickElements, gauge);\n                    tickElement.setAttribute('data-interval', i.toString());\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            var j = 0;\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                var tickElement = appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + j, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', gauge.allowLoadingAnimation ? 'visibility: hidden;pointer-events:none;' : 'pointer-events:none;'), majorTickElements, gauge);\n                tickElement.setAttribute('data-interval', i.toString());\n                j++;\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     *\n     * @param {number} value - Specifies the value.\n     * @param {Tick} options - Specifies the options.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the range path of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Range} range - Specifies the range.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {\n        var startValue;\n        var direction;\n        var endValue;\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var gradientRangeColor;\n        if (range.isLinearCircularGradient) {\n            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);\n            var rangeStart = range.linearGradient.colorStop.length > 1 ?\n                (range.start + (rangeSplitValue * (colorIndex))) : range.start;\n            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;\n            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);\n            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);\n        }\n        else {\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n        }\n        startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        var isAngleCross360 = (startAngle > endAngle);\n        if (axis.rangeGap != null && axis.rangeGap > 0 && range.start !== range.end\n            || (!isNullOrUndefined(range.linearGradient) && !range.isLinearCircularGradient\n                && (colorIndex === range.linearGradient.colorStop.length - 1))) {\n            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :\n                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?\n                    startAngle - (axis.rangeGap / Math.PI) :\n                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient\n                    ? (axis.direction === 'AntiClockWise' ? startAngle - (axis.rangeGap / Math.PI) : startAngle + (axis.rangeGap / Math.PI)) : startAngle;\n            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :\n                !isNullOrUndefined(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1\n                    && range.isLinearCircularGradient ?\n                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :\n                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?\n                    (axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) : endAngle - (axis.rangeGap / Math.PI)) : endAngle;\n        }\n        if (this.gauge.allowComponentRender) {\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle)) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = typeof range.roundedCornerRadius === 'string' ? parseFloat(range.roundedCornerRadius) : range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                var degreeValue = getDegree(startAngle, endAngle);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                if (roundedStartAngle > roundedEndAngle && (roundedStartAngle - roundedEndAngle) <= radius) {\n                    roundedStartAngle = startAngle;\n                    roundedEndAngle = endAngle;\n                }\n                if (this.gauge.gradientModule && ((!isNullOrUndefined(range.linearGradient)\n                    && !isNullOrUndefined(range.linearGradient.colorStop)) || (!isNullOrUndefined(range.radialGradient)\n                    && !isNullOrUndefined(range.radialGradient.colorStop)))) {\n                    if (range.isLinearCircularGradient) {\n                        endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                        var degree = getDegree(startAngle, endAngle);\n                        var rangeColorLength = range.linearGradient.colorStop.length;\n                        var degreeRange = ((axis.startAngle === axis.endAngle ?\n                            (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :\n                            (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));\n                        var degreeRangeValue = void 0;\n                        if (degreeRange <= 360 && degreeRange >= 270) {\n                            degreeRangeValue = 270;\n                        }\n                        else if (degreeRange <= 270 && degreeRange >= 180) {\n                            degreeRangeValue = 180;\n                        }\n                        else if (degreeRange <= 180 && degreeRange >= 90) {\n                            degreeRangeValue = 90;\n                        }\n                        else if (degreeRange <= 90 && degreeRange >= 0) {\n                            degreeRangeValue = 0;\n                        }\n                        var gradientDegree = axis.direction === 'AntiClockWise' ?\n                            (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)\n                            : axis.startAngle + degree * (colorIndex);\n                        var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'\n                            ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle\n                                + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :\n                                axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle\n                            + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle\n                            ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?\n                                (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +\n                                    degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))\n                                : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :\n                            gradientDegree < 360 ? gradientDegree : gradientDegree - 360;\n                        range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap\n                            : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap\n                            : axis.ranges[rangeIndex - 1]['gradientAngle'];\n                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                            range.gradientAntiAngle = gradientAngle;\n                        }\n                        if (rangeIndex !== 0) {\n                            gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :\n                                range.gradientAngle + gradientAngle - axis.startAngle;\n                            range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?\n                                gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;\n                            if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                                ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                                range.gradientAntiAngle = gradientAngle;\n                            }\n                        }\n                        if (gradientAngle > 45 && gradientAngle <= 115\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';\n                        }\n                        else if (gradientAngle > 115 && gradientAngle < 170) {\n                            direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';\n                        }\n                        else if (gradientAngle >= 170 && gradientAngle <= 280) {\n                            direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';\n                        }\n                        else if (gradientAngle > 280 && gradientAngle <= 360\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';\n                        }\n                    }\n                    gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);\n                }\n                range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;\n                if (range.roundedCornerRadius) {\n                    if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {\n                        if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {\n                            if (axis.direction === 'ClockWise') {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);\n                            }\n                            else {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);\n                            }\n                        }\n                        else {\n                            this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                        }\n                    }\n                    else {\n                        this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);\n                    }\n                }\n                else {\n                    this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                }\n            }\n            else if ((range.start === range.end) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n            }\n        }\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.\n     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.\n     * @param {number} oldStart - Specifies the rounded path of the old start value.\n     * @param {number} oldEnd - Specifies the rounded path of the old end value..\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex\n            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} startAngle - Specifies the rounded path of the start angle.\n     * @param {number} endAngle - Specifies the rounded path of the end angle.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption(!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {\n        var _this = this;\n        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));\n        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :\n            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index,\n                style: this.gauge.allowLoadingAnimation ? 'opacity: 0;' : '' });\n        var startWidth;\n        var startEndDifference;\n        var endWidth;\n        var previousEndWidth;\n        var previousStartWidth;\n        axis.ranges.map(function (range, rangeIndex) {\n            range.isLinearCircularGradient = !isNullOrUndefined(_this.gauge.gradientModule)\n                && !isNullOrUndefined(range.linearGradient) && isNullOrUndefined(range.linearGradient.startValue)\n                && isNullOrUndefined(range.linearGradient.endValue) && !isNullOrUndefined(range.linearGradient.colorStop);\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            if (range.isLinearCircularGradient) {\n                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {\n                    if (i <= (range.linearGradient.colorStop.length - 1)) {\n                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;\n                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;\n                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));\n                        if (i > 0) {\n                            startWidth = endWidth;\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                        else {\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                    }\n                    else {\n                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                            : startWidth + startEndDifference;\n                        endWidth = (previousEndWidth);\n                    }\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);\n                }\n            }\n            else {\n                if (!(range.start === range.end && axis.direction === 'AntiClockWise' && axis.startAngle === axis.endAngle)) {\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     *\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.destroy = function () {\n        this.gauge = null;\n        this.majorValues = [];\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getRoundedPathArc, calculateShapes, PathOption, Size, TextOption } from '../utils/helper-common';\nimport { linear, getCompleteArc } from '../utils/helper-pointer-renderer';\nimport { Animation, isNullOrUndefined, animationMode } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {boolean} animate - Specifies the boolean value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        if (this.gauge.allowComponentRender) {\n            axis.pointers.map(function (pointer, pointerIndex) {\n                if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                    pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n                }\n                else {\n                    pointer.currentDistanceFromScale = pointer.offset;\n                }\n                pointer.pathElement = [];\n                _this.calculatePointerRadius(axis, pointer);\n                childElement = gauge.renderer.createGroup({\n                    id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n                });\n                if (pointer.value != null) {\n                    childElement.setAttribute('aria-label', pointer.description || 'Pointer:' + pointer.value.toString());\n                    childElement.setAttribute('role', 'region');\n                }\n                _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n                if (_this.gauge.allowLoadingAnimation) {\n                    childElement.style.visibility = 'hidden';\n                }\n                else {\n                    _this.setPointerValue(axis, pointer, pointer.currentValue);\n                }\n                pointerElement.appendChild(childElement);\n                if (!_this.gauge.allowLoadingAnimation && ((animate || pointer.animation.enable) || animationMode === 'Enable') && (!_this.gauge.isPropertyChange || pointer.isPointerAnimation)) {\n                    pointer.previousValue = !_this.gauge.isPropertyChange ? axis.minimum : pointer.previousValue;\n                    _this.doPointerAnimation(childElement, pointer, axis, axisIndex);\n                }\n            });\n            element.appendChild(pointerElement);\n        }\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     *\n     * @returns {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     *\n     * @returns {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +\n                        pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var needle = pointer.needleTail;\n        var cap = pointer.cap;\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        var gradientColor;\n        var gradientTailColor;\n        var gradientCapColor;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        if (gauge.gradientModule) {\n            gradientColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :\n            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, direction), parentElement, gauge));\n        // eslint-disable-next-line prefer-const\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (gauge.gradientModule) {\n            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);\n        }\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, pointer.needleTail.border.dashArray, direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (gauge.gradientModule) {\n            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);\n        }\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, pointer.cap.border.dashArray, '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var _this = this;\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (radius > 0 && radius <= 5) {\n            radius = 6;\n            minRadius = (radius * 0.25);\n        }\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            if (startAngle > endAngle) {\n                endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                    Math.round(endAngle) - (pointer.roundedCornerRadius > 0 ? 1.5 : 0.5) : Math.round(endAngle);\n            }\n            else {\n                endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n            }\n        }\n        else {\n            endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                [startAngle, startAngle = (endAngle > startAngle ? endAngle + (pointer.roundedCornerRadius > 0 ? 1.5 : 0.5) : endAngle - 1)][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        if (value <= (axis.visibleRange.min + axis.visibleRange.interval) && pointer.roundedCornerRadius) {\n            radius = value === axis.visibleRange.min || (axis.visibleRange.min + 1) ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var angleValue = value === axis.maximum && (axis.startAngle === axis.endAngle ||\n            Math.abs(axis.startAngle - axis.endAngle) === 360) && pointer.type === 'RangeBar' ? 45 : 180;\n        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / angleValue) +\n            radius) / (pointer.currentRadius)) * angleValue) / Math.PI;\n        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / angleValue) -\n            radius) / (pointer.currentRadius)) * angleValue) / Math.PI;\n        if (roundStartAngle > roundEndAngle && (roundStartAngle - roundEndAngle) <= 36 && pointer.type === 'RangeBar') {\n            roundStartAngle = startAngle;\n            roundEndAngle = endAngle;\n        }\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (radius && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                    _this.calculateTextElement(axis, pointer, value, element);\n                }\n                else {\n                    element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n                }\n            }\n        });\n    };\n    /**\n     * Method to set the text value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @param {Element} element - Specifies the text element.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.calculateTextElement = function (axis, pointer, value, element) {\n        var textangle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var textlocation = getLocationFromAngle(textangle, pointer.currentRadius, this.gauge.midPoint);\n        element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n        element.setAttribute('x', String(textlocation.x));\n        element.setAttribute('y', String(textlocation.y));\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var gradientMarkerColor;\n        var angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (gauge.gradientModule) {\n            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var style = {\n                size: pointer.textStyle.size,\n                color: pointer.textStyle.color || this.gauge.themeStyle.pointerColor,\n                fontFamily: pointer.textStyle.fontFamily,\n                fontStyle: pointer.textStyle.fontStyle,\n                fontWeight: pointer.textStyle.fontWeight || this.gauge.themeStyle.fontWeight,\n                opacity: pointer.textStyle.opacity\n            };\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            var textObject = textElement(textOption, style, style.color, parentElement, 'pointer-events : auto; ');\n            textObject.style.visibility = ((pointer.animation.enable || animationMode === 'Enable') && (!this.gauge.isPropertyChange || pointer.isPointerAnimation) && this.gauge.animatePointer) ? 'hidden' : 'visible';\n            pointer.pathElement.push(textObject);\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var gradientBarColor;\n        if (gauge.gradientModule) {\n            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :\n            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, pointer.border.dashArray, ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     *\n     * @param {Element} pointerElement - specifies the pointer element.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointerElement, pointer, axis, axisIndex) {\n        var _this = this;\n        var startValue = !isNullOrUndefined(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (((pointer.animation.enable || animationMode === 'Enable') && startValue !== endValue && this.gauge.animatePointer) ||\n            (!isNullOrUndefined(this.gauge.loadingAnimationDuration) && this.gauge.loadingAnimationDuration[axisIndex] > 0)) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, axisIndex);\n                }\n                else {\n                    if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                        _this.performTextAnimation(pointerElement, startValue, endValue, axis, pointer, axisIndex);\n                    }\n                    else {\n                        _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, axisIndex);\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {HTMLElement} element - specifies the element.\n     * @param {number} start - specifies the start.\n     * @param {number} end - specifies the end.\n     * @param {Axis} axis - specifies the axis.\n     * @param {Pointer} pointer - specfies the pointer.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performTextAnimation = function (element, start, end, axis, pointer, axisIndex) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var textangle;\n        var textlocation;\n        var pointerValue = 0;\n        var timeStamp;\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        element = !isNullOrUndefined(element.children[0]) ? element.children[0] : element;\n        var val = Math.abs(start - end);\n        new Animation({}).animate(element, {\n            duration: this.gauge.isAnimationProgress ? (isNullOrUndefined(pointer.value) || pointer.value === axis.minimum ? 0 :\n                (animationMode === 'Enable' && (((!pointer.animation.enable || pointer.animation.duration === 0)\n                    && !this.gauge.allowLoadingAnimation) || (this.gauge.allowLoadingAnimation && (this.gauge.animationDuration === 0\n                    && pointer.animation.enable && pointer.animation.duration === 0)))) ? 1000 :\n                    (this.gauge.allowLoadingAnimation ? (pointer.animation.enable && pointer.animation.duration > 0 ? pointer.animation.duration\n                        : this.gauge.loadingAnimationDuration[axisIndex]) : pointer.animation.duration)) : 0,\n            progress: function (args) {\n                if (_this.gauge.isAnimationProgress) {\n                    if (args.timeStamp > args.delay) {\n                        timeStamp = (args.timeStamp / pointer.animation.duration);\n                        pointerValue = end > start ? start + (timeStamp * val) : start - (timeStamp * val);\n                        textangle = getAngleFromValue(pointerValue, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n                        textlocation = getLocationFromAngle(textangle, pointer.currentRadius, _this.gauge.midPoint);\n                        element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n                        element.setAttribute('x', String(textlocation.x));\n                        element.setAttribute('y', String(textlocation.y));\n                        element.style.visibility = 'visible';\n                    }\n                }\n            },\n            end: function () {\n                if (_this.gauge.isAnimationProgress) {\n                    _this.setPointerValue(axis, pointer, end);\n                    pointer.isPointerAnimation = false;\n                }\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                if (!isNullOrUndefined(_this.gauge.loadingAnimationDuration) && (_this.gauge.loadingAnimationDuration[axisIndex] > 0 && !isNullOrUndefined(_this.gauge.annotationsModule))) {\n                    _this.gauge.annotationsModule.annotationAnimation(_this.gauge);\n                }\n                else {\n                    _this.gauge.isOverAllAnimationComplete = true;\n                }\n            }\n        });\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element\n     * @param {number} start - Specifies the start\n     * @param {number} end - Specifies the end\n     * @param {Axis} axis - Specifies the axis\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, axisIndex) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: this.gauge.isAnimationProgress ? (isNullOrUndefined(pointer.value) || pointer.value === axis.minimum ? 0 :\n                (animationMode === 'Enable' && (((!pointer.animation.enable || pointer.animation.duration === 0)\n                    && !this.gauge.allowLoadingAnimation) || (this.gauge.allowLoadingAnimation && (this.gauge.animationDuration === 0\n                    && pointer.animation.enable && pointer.animation.duration === 0)))) ? 1000 :\n                    (this.gauge.allowLoadingAnimation ? (pointer.animation.enable && pointer.animation.duration > 0 ? pointer.animation.duration\n                        : this.gauge.loadingAnimationDuration[axisIndex]) : pointer.animation.duration)) : 0,\n            progress: function (args) {\n                if (_this.gauge.isAnimationProgress) {\n                    sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                        isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                        isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                    element.style.animation = 'None';\n                    if (start !== end) {\n                        element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                            _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n                        element.style.visibility = 'visible';\n                    }\n                }\n            },\n            end: function () {\n                if (_this.gauge.isAnimationProgress) {\n                    _this.setPointerValue(axis, pointer, end);\n                    if (_this.gauge.animationDuration > 0) {\n                        element.style.visibility = 'visible';\n                    }\n                    pointer.isPointerAnimation = false;\n                }\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n                if (!isNullOrUndefined(_this.gauge.loadingAnimationDuration) && _this.gauge.loadingAnimationDuration[axisIndex] > 0 && !isNullOrUndefined(_this.gauge.annotationsModule)) {\n                    _this.gauge.annotationsModule.annotationAnimation(_this.gauge);\n                }\n                else {\n                    _this.gauge.isOverAllAnimationComplete = true;\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {number} start - Specifies the start.\n     * @param {number} end - Specifies the end.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, axisIndex) {\n        var _this = this;\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        var pointerValue;\n        var timeStamp;\n        element.style.visibility = 'visible';\n        var val = Math.abs(start - end);\n        new Animation({}).animate(element, {\n            duration: this.gauge.isAnimationProgress ? (isNullOrUndefined(pointer.value) || pointer.value === axis.minimum ? 0 :\n                (animationMode === 'Enable' && (((!pointer.animation.enable || pointer.animation.duration === 0)\n                    && !this.gauge.allowLoadingAnimation) || (this.gauge.allowLoadingAnimation && (this.gauge.animationDuration === 0\n                    && pointer.animation.enable && pointer.animation.duration === 0)))) ? 1000 :\n                    (this.gauge.allowLoadingAnimation ? (pointer.animation.enable && pointer.animation.duration > 0 ? pointer.animation.duration\n                        : this.gauge.loadingAnimationDuration[axisIndex]) : pointer.animation.duration)) : 0,\n            progress: function (arg) {\n                if (_this.gauge.isAnimationProgress) {\n                    arg.duration = !_this.gauge.isAnimationProgress ? 0 : arg.duration;\n                    timeStamp = (arg.timeStamp / arg.duration);\n                    pointerValue = end > start ? start + (timeStamp * val) : start - (timeStamp * val);\n                    _this.setPointerValue(axis, pointer, pointerValue);\n                }\n            },\n            end: function () {\n                if (_this.gauge.isAnimationProgress) {\n                    _this.setPointerValue(axis, pointer, end);\n                    pointer.isPointerAnimation = false;\n                }\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                if (!isNullOrUndefined(_this.gauge.loadingAnimationDuration) && _this.gauge.loadingAnimationDuration[axisIndex] > 0 && !isNullOrUndefined(_this.gauge.annotationsModule)) {\n                    _this.gauge.annotationsModule.annotationAnimation(_this.gauge);\n                }\n                else {\n                    _this.gauge.isOverAllAnimationComplete = true;\n                }\n            }\n        });\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.destroy = function () {\n        this.gauge = null;\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined, Animation, animationMode } from '@syncfusion/ej2-base';\nimport { stringToNumber, measureText, getLocationFromAngle, getLabelFormat, VisibleLabels, isCompleteAngle, Size, Rect, getPathArc, getAngleFromValue } from '../utils/helper-common';\nimport { calculateSum } from '../utils/helper-axis-panel';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\nimport { getCompleteArc } from '../utils/helper-pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout.\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.axisOption = [];\n        this.prevAnimatedMajorTickValue = [];\n        this.prevAnimatedMajorTickIndex = [];\n        this.prevAnimatedMinorTickValue = [];\n        this.prevAnimatedMinorTickIndex = [];\n        this.allowAxisCount = [];\n        this.rangeAnimationCount = 0;\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            // eslint-disable-next-line prefer-spread\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerXpoint) && isNullOrUndefined(this_1.gauge.centerYpoint)) {\n                var endAngle = void 0;\n                var startAngle = axis.startAngle;\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(0, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            startPoint : ((270 - startAngle) < (endAngle - 90)) ? endPoint : startPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                _this.calculateVisibleLabels(axis);\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Rect} rect - Specifies the rect.\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum !== null ? axis.maximum : 100);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        var allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum)\n            && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n        if (!allowComponentRender) {\n            return 0;\n        }\n        else if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        if ((isNullOrUndefined(axis.minimum) && isNullOrUndefined(axis.maximum)) || axis.minimum !== axis.maximum) {\n            var _loop_2 = function (i) {\n                roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n                argsData = {\n                    cancel: false, name: axisLabelRender, axis: axis,\n                    text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                        format(roundValue),\n                    value: roundValue\n                };\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var axisLabelRenderSuccess = function (argsData) {\n                    if (!argsData.cancel) {\n                        axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                    }\n                };\n                axisLabelRenderSuccess.bind(this_2);\n                this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n            };\n            var this_2 = this;\n            for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n                _loop_2(i);\n            }\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        var annotationElement = createElement('div', {\n            id: gauge.element.id + '_Secondary_Element'\n        });\n        annotationElement.style.position = 'relative';\n        gauge.element.appendChild(annotationElement);\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            _this.gauge.allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum)\n                && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n            renderer.checkAngles(axis);\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            if (gauge.allowRangePreRender) {\n                renderer.drawAxisRange(axis, index, element);\n            }\n            renderer.drawAxisLine(axis, index, element, gauge);\n            if (!gauge.allowRangePreRender) {\n                renderer.drawAxisRange(axis, index, element);\n            }\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index, gauge);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n        if (gauge.allowLoadingAnimation) {\n            this.durationSplitUp((gauge.animationDuration === 0 && animationMode === 'Enable') ? 3000 : gauge.animationDuration, axesElements);\n        }\n    };\n    AxisLayoutPanel.prototype.labelElementAnimation = function (element, axisIndex) {\n        var _this = this;\n        if (element) {\n            new Animation({}).animate(element, {\n                duration: this.gauge.loadingAnimationDuration[axisIndex],\n                progress: function () {\n                    element.style.visibility = 'visible';\n                },\n                // eslint-disable-next-line\n                end: function () {\n                    element.style.visibility = 'visible';\n                    var axisElement = document.getElementById(_this.gauge.element.id + '_Axis_Labels_' + axisIndex);\n                    if (_this.gauge.axes[axisIndex].showLastLabel && parseInt(element.id.split('Label_')[1]) === (axisElement.childElementCount - 2)) {\n                        axisElement.style.visibility = 'visible';\n                        element = document.getElementById(_this.gauge.element.id + '_Axis_' + axisIndex + '_Label_' + (axisElement.childElementCount - 1));\n                        if (element) {\n                            element.style.visibility = 'visible';\n                        }\n                    }\n                }\n            });\n        }\n    };\n    AxisLayoutPanel.prototype.elementLabelAnimation = function (element, axisIndex, tickIndex, gauge) {\n        var _this = this;\n        if (element) {\n            new Animation({}).animate(element, {\n                duration: gauge.axes[axisIndex].labelStyle.font.size != null &&\n                    (gauge.axes[axisIndex].labelStyle.font.size === '0px' || gauge.axes[axisIndex].labelStyle.font.size === '0') ? 0 :\n                    ((gauge.loadingAnimationDuration[axisIndex] / this.axisOption[axisIndex].axisLabelCount)),\n                progress: function () {\n                    element.style.visibility = 'visible';\n                },\n                end: function () {\n                    tickIndex += 1;\n                    _this.elementLabelAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex), axisIndex, tickIndex, gauge);\n                    var axisElement = document.getElementById(_this.gauge.element.id + '_Axis_Labels_' + axisIndex);\n                    if (_this.gauge.axes[axisIndex].showLastLabel && parseInt(element.id.split('Label_')[1]) === (axisElement.childElementCount - 2)) {\n                        element = document.getElementById(_this.gauge.element.id + '_Axis_' + axisIndex + '_Label_' + (axisElement.childElementCount - 1));\n                        if (element) {\n                            element.style.visibility = 'visible';\n                        }\n                        axisElement.style.visibility = 'visible';\n                    }\n                    if (_this.rangeAnimationCount === 0 && (_this.axisOption[axisIndex].axisLabelCount - 1) === tickIndex) {\n                        axisElement.style.visibility = 'visible';\n                        _this.rangeAnimationCount++;\n                        _this.rangeAnimation(gauge);\n                    }\n                }\n            });\n        }\n    };\n    AxisLayoutPanel.prototype.axisLineCalculation = function (axisElement, axis, value, gauge) {\n        var checkMinValue = value === axis.visibleRange.min;\n        var location = gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var axisWidth = axis.lineStyle.width / 2;\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            if (startAngle > endAngle) {\n                endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                    Math.round(endAngle) - 0.5 : Math.round(endAngle);\n            }\n            else {\n                endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n            }\n        }\n        else {\n            endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                [startAngle, startAngle = (endAngle > startAngle ? endAngle + 0.5 : endAngle - 1)][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        axisElement.setAttribute('d', getCompleteArc(location, startAngle, endAngle, (axis.currentRadius + axisWidth), (axis.currentRadius - axisWidth), checkMinValue));\n    };\n    AxisLayoutPanel.prototype.axisLineAnimation = function (axisIndex, duration, gauge) {\n        var _this = this;\n        // eslint-disable-next-line\n        var axis = gauge.axes[axisIndex];\n        this.prevAnimatedMajorTickValue.push(axis.minimum);\n        this.prevAnimatedMinorTickValue.push(axis.minimum);\n        this.prevAnimatedMinorTickIndex.push(0);\n        this.prevAnimatedMajorTickIndex.push(0);\n        this.prevAnimatedTickType = 'major';\n        if (this.axisOption[axisIndex].isAxisLine) {\n            var axisElement_1 = document.getElementById(gauge.element.id + '_AxisLine_' + axisIndex);\n            var start_1 = axis.visibleRange.min;\n            var end_1 = axis.visibleRange.max;\n            var pointerValue_1;\n            var timeStamp_1;\n            var val_1 = Math.abs(start_1 - end_1);\n            new Animation({}).animate(axisElement_1, {\n                duration: duration,\n                progress: function (arg) {\n                    axisElement_1.style.visibility = 'visible';\n                    axisElement_1.setAttribute('fill', axis.lineStyle.color);\n                    axisElement_1.setAttribute('stroke-width', '0');\n                    timeStamp_1 = (arg.timeStamp / arg.duration);\n                    pointerValue_1 = end_1 > start_1 ? start_1 + (timeStamp_1 * val_1) : start_1 - (timeStamp_1 * val_1);\n                    _this.axisLineCalculation(axisElement_1, axis, pointerValue_1, gauge);\n                },\n                end: function () {\n                    axisElement_1.setAttribute('fill', 'transparent');\n                    axisElement_1.setAttribute('stroke-width', axis.lineStyle.width.toString());\n                    axisElement_1.setAttribute('d', getPathArc(gauge.midPoint, axis.startAngle - 90, axis.endAngle - 90, axis.currentRadius));\n                    axisElement_1.style.visibility = 'visible';\n                    _this.axisAnimation(axisIndex, duration, gauge);\n                }\n            });\n        }\n        else if (this.axisOption[axisIndex].isMajorTick || this.axisOption[axisIndex].isMinorTick) {\n            if (this.axisOption[axisIndex].isMajorTick || (this.axisOption[axisIndex].isMajorTick &&\n                this.axisOption[axisIndex].isMinorTick)) {\n                this.tickElementAnimation(document.getElementById(gauge.element.id + '_Axis_Major_TickLine_' + axisIndex + '_' + 0), document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 0), duration, axisIndex, this.axisOption[axisIndex].isMajorTick && this.axisOption[axisIndex].isMinorTick\n                    ? 0 : -1, 'major', this.axisOption[axisIndex], gauge);\n            }\n            else if (this.axisOption[axisIndex].isMinorTick) {\n                this.tickElementAnimation(document.getElementById(gauge.element.id + '_Axis_Minor_TickLine_' + axisIndex + '_' + 0), document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 0), duration, axisIndex, -1, 'minor', this.axisOption[axisIndex], gauge);\n            }\n        }\n        else if (!this.axisOption[axisIndex].isAxisLine) {\n            this.labelRangeAnimation(gauge, axisIndex);\n        }\n    };\n    AxisLayoutPanel.prototype.axisAnimation = function (axisIndex, duration, gauge) {\n        var _this = this;\n        var axisElement = document.getElementById(gauge.element.id + '_AxisLine_' + axisIndex);\n        var axisOption = this.axisOption[axisIndex];\n        new Animation({}).animate(axisElement, {\n            duration: (this.axisOption[axisIndex].majorTickCount === 0 ? 0 : duration / this.axisOption[axisIndex].majorTickCount),\n            progress: function () {\n                axisElement.style.visibility = 'visible';\n            },\n            end: function () {\n                if (axisOption.isMajorTick) {\n                    _this.tickElementAnimation(document.getElementById(gauge.element.id + '_Axis_Major_TickLine_' + axisIndex + '_' + 0), document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 0), duration, axisIndex, axisOption.isMajorTick && axisOption.isMinorTick ? 0 : -1, 'major', axisOption, gauge);\n                }\n                else if (axisOption.isMinorTick) {\n                    _this.tickElementAnimation(document.getElementById(gauge.element.id + '_Axis_Minor_TickLine_' + axisIndex + '_' + 0), document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 0), duration, axisIndex, -1, 'minor', axisOption, gauge);\n                }\n                _this.labelRangeAnimation(gauge, axisIndex);\n            }\n        });\n    };\n    AxisLayoutPanel.prototype.tickElementAnimation = function (tickElement, labelElement, duration, axisIndex, \n    // eslint-disable-next-line\n    tickIndex, type, axis, gauge) {\n        var _this = this;\n        if (tickElement && this.gauge.isAnimationProgress) {\n            new Animation({}).animate(tickElement, {\n                duration: (axis.isMinorTick ? axis.minorTickCount === 0 ? 0 : (duration / axis.minorTickCount) / this.allowAxisCount[axisIndex] :\n                    axis.majorTickCount === 0 ? 0 : (duration / axis.majorTickCount) / this.allowAxisCount[axisIndex]),\n                progress: function () {\n                    tickElement.style.visibility = 'visible';\n                },\n                end: function () {\n                    if (axis.isMajorTick && axis.isMinorTick && gauge.allowLoadingAnimation && _this.gauge.isAnimationProgress) {\n                        tickElement.style.visibility = 'visible';\n                        var currentTickValue = parseFloat(tickElement.getAttribute('data-interval'));\n                        _this.prevAnimatedTickType = type;\n                        if (type === 'major') {\n                            _this.prevAnimatedMajorTickValue[axisIndex] = currentTickValue;\n                            _this.prevAnimatedMajorTickIndex[axisIndex] = tickIndex;\n                        }\n                        else {\n                            _this.prevAnimatedMinorTickValue[axisIndex] = currentTickValue;\n                            _this.prevAnimatedMinorTickIndex[axisIndex] = tickIndex;\n                        }\n                        var minorTickInterval = (gauge.axes[axisIndex].minorTicks.interval != null ? gauge.axes[axisIndex].minorTicks.interval :\n                            (gauge.axes[axisIndex].visibleRange.interval / 2));\n                        var minorTickValue = minorTickInterval < gauge.axes[axisIndex].visibleRange.interval ? currentTickValue +\n                            minorTickInterval : _this.prevAnimatedMinorTickValue[axisIndex] + minorTickInterval;\n                        var majorTickValue = _this.prevAnimatedMajorTickValue[axisIndex] + gauge.axes[axisIndex].visibleRange.interval;\n                        type = minorTickValue < majorTickValue ? 'minor' : 'major';\n                        if (type === 'major' && axis.majorTickCount !== axis.minorTickCount && tickIndex !== 0 && _this.prevAnimatedTickType === 'minor') {\n                            tickIndex = _this.prevAnimatedMajorTickIndex[axisIndex];\n                        }\n                        if (type === 'minor' && axis.majorTickCount !== axis.minorTickCount && tickIndex !== 0 && _this.prevAnimatedTickType === 'major') {\n                            tickIndex = _this.prevAnimatedMinorTickIndex[axisIndex];\n                        }\n                        tickIndex = type === 'minor' ? axis.majorTickCount === axis.minorTickCount ? tickIndex : (currentTickValue ===\n                            _this.prevAnimatedMajorTickValue[axisIndex] ? tickIndex : tickIndex + 1) : tickIndex + 1;\n                        tickElement = type === 'minor' ? document.getElementById(gauge.element.id + '_Axis_Minor_TickLine_' + axisIndex + '_' + tickIndex) :\n                            document.getElementById(gauge.element.id + '_Axis_Major_TickLine_' + axisIndex + '_' + tickIndex);\n                        labelElement = type === 'minor' ? null : document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex);\n                        if (type === 'major' || tickIndex === 0) {\n                            _this.labelElementAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex), axisIndex);\n                        }\n                        _this.tickElementAnimation(tickElement, labelElement, duration, axisIndex, tickIndex, type, axis, gauge);\n                        if (_this.rangeAnimationCount === 0 && type === 'minor' && (tickIndex === axis.minorTickCount - 1 || tickIndex === axis.minorTickCount) && (gauge.axes.length - 1) === axisIndex) {\n                            _this.rangeAnimationCount++;\n                            _this.rangeAnimation(gauge);\n                        }\n                    }\n                    else if (gauge.allowLoadingAnimation && axis.isMajorTick && _this.gauge.isAnimationProgress) {\n                        tickElement.style.visibility = 'visible';\n                        type = 'major';\n                        tickIndex = tickIndex + 1;\n                        tickElement = document.getElementById(gauge.element.id + '_Axis_Major_TickLine_' + axisIndex + '_' + tickIndex);\n                        labelElement = document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex);\n                        _this.tickElementAnimation(tickElement, labelElement, duration, axisIndex, tickIndex, type, axis, gauge);\n                        if (type === 'major' || tickIndex === 0) {\n                            _this.labelElementAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex), axisIndex);\n                        }\n                        if (_this.rangeAnimationCount === 0 && type === 'major' && tickIndex === axis.majorTickCount - 1 && (gauge.axes.length - 1) === axisIndex) {\n                            _this.rangeAnimationCount++;\n                            _this.rangeAnimation(gauge);\n                        }\n                    }\n                    else if (gauge.allowLoadingAnimation && _this.gauge.isAnimationProgress && axis.isMinorTick) {\n                        tickElement.style.visibility = 'visible';\n                        type = 'minor';\n                        tickIndex = tickIndex + 1;\n                        tickElement = document.getElementById(gauge.element.id + '_Axis_Minor_TickLine_' + axisIndex + '_' + tickIndex);\n                        labelElement = document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex);\n                        _this.tickElementAnimation(tickElement, labelElement, duration, axisIndex, tickIndex, type, axis, gauge);\n                        if (type === 'minor') {\n                            _this.labelElementAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex), axisIndex);\n                        }\n                        if (_this.rangeAnimationCount === 0 && type === 'minor' && tickIndex === axis.minorTickCount - 1 && (gauge.axes.length - 1) === axisIndex) {\n                            _this.rangeAnimationCount++;\n                            _this.rangeAnimation(gauge);\n                        }\n                    }\n                }\n            });\n        }\n        this.labelRangeAnimation(gauge, axisIndex);\n    };\n    AxisLayoutPanel.prototype.labelRangeAnimation = function (gauge, axisIndex) {\n        var options = this.axisOption[axisIndex];\n        if (!isNullOrUndefined(options)) {\n            if (!options.isMajorTick && !options.isMinorTick && options.isAxisLabel) {\n                if (options.axisLabelCount > 0) {\n                    if (gauge.axes[axisIndex].labelStyle.hiddenLabel === 'First') {\n                        this.elementLabelAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 1), axisIndex, 0, gauge);\n                    }\n                    else {\n                        this.elementLabelAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 0), axisIndex, 0, gauge);\n                    }\n                }\n            }\n            else if ((this.rangeAnimationCount == 0 && !options.isMajorTick && !options.isMinorTick && !options.isAxisLabel && options.isRange)\n                || this.rangeAnimationCount == 0 && this.gauge.isAnimationProgress && !options.isMajorTick && !options.isMinorTick && !options.isAxisLabel && options.isRange) {\n                this.rangeAnimationCount++;\n                this.rangeAnimation(gauge);\n            }\n        }\n    };\n    AxisLayoutPanel.prototype.rangeAnimation = function (gauge) {\n        for (var j = 0; j < gauge.axes.length; j++) {\n            var rangesElement = document.getElementById(gauge.element.id + '_Axis_Ranges_' + j);\n            if (!isNullOrUndefined(rangesElement) && gauge.allowLoadingAnimation) {\n                this.rangeElementAnimation(rangesElement, j, gauge);\n            }\n        }\n    };\n    AxisLayoutPanel.prototype.rangeElementAnimation = function (rangeElement, axisIndex, gauge) {\n        var _this = this;\n        var height = 0;\n        var opacity = 1;\n        var isRangeAbsent = rangeElement.childElementCount > 0 && gauge.axes[axisIndex].ranges[0].start !== gauge.axes[axisIndex].ranges[0].end;\n        new Animation({}).animate(rangeElement, {\n            duration: isRangeAbsent ? gauge.loadingAnimationDuration[axisIndex] : 0,\n            progress: function (args) {\n                if (args.timeStamp > args.delay) {\n                    height = ((args.timeStamp - args.delay) / args.duration);\n                    rangeElement['style']['opacity'] = (opacity * height);\n                }\n            },\n            end: function () {\n                rangeElement['style']['opacity'] = opacity;\n                var axisElement = document.getElementById(_this.gauge.element.id + '_Axis_Labels_' + axisIndex);\n                if (!isNullOrUndefined(axisElement)) {\n                    axisElement.style.visibility = 'visible';\n                }\n                if (gauge.allowLoadingAnimation && axisIndex === 0) {\n                    _this.axisOption = [];\n                    gauge.axes.map(function (axis, axisindex) {\n                        axis.pointers.map(function (pointer, pointerIndex) {\n                            var pointerElement = document.getElementById(gauge.element.id + '_Axis_' + axisindex + '_Pointer_' + pointerIndex);\n                            if (!isNullOrUndefined(pointerElement) && _this.gauge.isAnimationProgress) {\n                                pointer.previousValue = !_this.gauge.isPropertyChange ? axis.minimum : pointer.previousValue;\n                                gauge.gaugeAxisLayoutPanel.pointerRenderer.doPointerAnimation(pointerElement, pointer, axis, axisIndex);\n                            }\n                        });\n                        if (axis.pointers.length === 0 && _this.gauge.isAnimationProgress) {\n                            if (_this.gauge.loadingAnimationDuration[axisIndex] > 0 && !isNullOrUndefined(_this.gauge.annotationsModule)) {\n                                _this.gauge.annotationsModule.annotationAnimation(_this.gauge);\n                            }\n                        }\n                        else {\n                            _this.gauge.isOverAllAnimationComplete = true;\n                        }\n                    });\n                }\n            }\n        });\n    };\n    AxisLayoutPanel.prototype.durationSplitUp = function (duration, axesElements) {\n        var splitUpCount = 0;\n        this.gauge.loadingAnimationDuration = [];\n        for (var i = 0; i < axesElements.childElementCount; i++) {\n            splitUpCount = 0;\n            var axisCount = 0;\n            var element = axesElements.children[i];\n            var isAxisLine = false;\n            var isMajorTick = false;\n            var majorTickCount = 0;\n            var labelCount = 0;\n            var isMinorTick = false;\n            var minorTickCount = 0;\n            var isLabel = false;\n            var isrange = false;\n            var isPointer = false;\n            for (var j = 0; j < element.childElementCount; j++) {\n                var elementId = element.children[j]['id'];\n                if (elementId.indexOf('_AxisLine_') > 0) {\n                    isAxisLine = true;\n                    splitUpCount++;\n                }\n                else if (elementId.indexOf('MajorTickLines') > 0) {\n                    isMajorTick = true;\n                    axisCount++;\n                    majorTickCount = element.children[j].childElementCount;\n                    splitUpCount++;\n                }\n                else if (elementId.indexOf('MinorTickLines') > 0) {\n                    isMinorTick = true;\n                    axisCount++;\n                    minorTickCount = element.children[j].childElementCount;\n                    if (!isMajorTick) {\n                        splitUpCount++;\n                    }\n                }\n                else if (elementId.indexOf('_Axis_Labels_') > 0) {\n                    isLabel = true;\n                    axisCount++;\n                    labelCount = element.children[j].childElementCount;\n                    if (!isMajorTick && !isMinorTick && this.gauge.axes[i].labelStyle.font.size != null &&\n                        (this.gauge.axes[i].labelStyle.font.size !== '0px' && this.gauge.axes[i].labelStyle.font.size !== '0')) {\n                        splitUpCount++;\n                    }\n                }\n                else if (elementId.indexOf('_Axis_Ranges_') > 0) {\n                    isrange = true;\n                    if (this.gauge.axes[i].ranges.length === 1 && (!isNullOrUndefined(this.gauge.axes[i].ranges) && this.gauge.axes[i].ranges[0].start === 0 && this.gauge.axes[i].ranges[0].end === 0)) {\n                        splitUpCount++;\n                    }\n                }\n                else if (elementId.indexOf('_Axis_Pointers_') > 0) {\n                    isPointer = true;\n                    if (this.gauge.axes[i].pointers.length > 0 && this.gauge.axes[i].pointers.length !== 1 &&\n                        this.gauge.axes[i].pointers[0].value !== this.gauge.axes[i].minimum) {\n                        splitUpCount++;\n                    }\n                }\n            }\n            this.allowAxisCount.push(axisCount === 0 ? 1 : axisCount);\n            this.axisOption.push({\n                isAxisLine: isAxisLine, isMajorTick: isMajorTick, isMinorTick: isMinorTick,\n                isAxisLabel: isLabel, isPointer: isPointer, isRange: isrange,\n                axisLabelCount: labelCount, majorTickCount: majorTickCount, minorTickCount: minorTickCount\n            });\n            isAxisLine = false;\n            isMajorTick = false;\n            majorTickCount = 0;\n            isMinorTick = false;\n            labelCount = 0;\n            minorTickCount = 0;\n            isLabel = false;\n            isrange = false;\n            isPointer = false;\n            if (this.gauge.axes[i].annotations != null && this.gauge.axes[i].annotations.length > 0 && !isNullOrUndefined(this.gauge.annotationsModule)) {\n                splitUpCount++;\n            }\n            this.gauge.loadingAnimationDuration.push(splitUpCount === 0 ? duration : duration / splitUpCount);\n        }\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    AxisLayoutPanel.prototype.destroy = function () {\n        this.gauge = null;\n        this.farSizes = [];\n        if (!isNullOrUndefined(this.axisRenderer)) {\n            this.axisRenderer.destroy();\n        }\n        this.axisRenderer = null;\n        if (!isNullOrUndefined(this.pointerRenderer)) {\n            this.pointerRenderer.destroy();\n        }\n        this.pointerRenderer = null;\n        this.axisOption = null;\n        this.prevAnimatedMajorTickValue = null;\n        this.prevAnimatedMajorTickIndex = null;\n        this.prevAnimatedMinorTickIndex = null;\n        this.prevAnimatedMinorTickValue = null;\n        this.allowAxisCount = null;\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","import { getElement, stringToNumber, measureText, textElement, appendPath, calculateShapes, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption } from '../utils/helper-common';\nimport { textTrim } from '../utils/helper-legend';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**\n         * @private\n         */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Axis[]} axes - Specifies the axes.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param {number} start - Specifies the start.\n     * @param {number} size - Specifies the size.\n     * @param {number} legendSize - Specifies the  legendSize.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @returns {number} - Returns the start value.\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param {LegendPosition} position - Specifies the position.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @returns {void}\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new GaugeLocation(\n            // eslint-disable-next-line max-len\n            (!this.gauge.enableRtl) ? legendBounds.x + padding + (legend.shapeWidth / 2) : (!this.isVertical) ? legendBounds.width + legendBounds.x - (padding) - (legend.shapeWidth) : legendBounds.x + this.maxWidth - padding - legend.shapeWidth / 2, legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.style.cursor = (!legend.toggleVisibility) ? 'auto' : 'pointer';\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param {Rect} bounds - Specifies the bounds.\n     * @param {TextOption} textOption - Specifies the textOption.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @returns {void}\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = this.gauge.themeStyle.labelColor;\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.style.cursor = 'pointer';\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(!this.gauge.enableRtl ?\n            // eslint-disable-next-line max-len\n            x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5 : x, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = !this.gauge.enableRtl ? '1/' + this.totalPages : this.totalPages + '/1';\n        var pageTextElement = textElement(textOption, legend.textStyle, grayColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(!this.gauge.enableRtl ?\n            // eslint-disable-next-line max-len\n            x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5) : x, y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        // eslint-disable-next-line max-len\n        var translateX = (this.gauge.enableRtl) ? legend.border.width + (iconSize / 2) : bounds.width - (2 * (iconSize + padding) + padding + size.width);\n        paginggroup.setAttribute('transform', 'translate(' + translateX + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param {Element} pagingText - Specifies the pagingText.\n     * @param {number} page - Specifies the page.\n     * @param {number} pageNumber - Specifies the pageNumber.\n     * @returns {number} - Returns the size.\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageX = this.pageXCollections[page * this.maxColumns];\n            size = (!this.gauge.enableRtl) ? pageX - this.legendBounds.x : (this.legendBounds.x + this.maxWidth) - pageX;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = ((!this.gauge.enableRtl) ? 'translate(-' : 'translate(') + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = !this.gauge.enableRtl ? (pageNumber) + '/' + this.totalPages : this.totalPages + '/' + pageNumber;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {TextOption} textOptions - Specifies the textOptions.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        legend.textStyle.fontFamily = legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily;\n        legend.textStyle.fontWeight = legend.textStyle.fontWeight || this.gauge.themeStyle.fontWeight;\n        textOptions.text = legendOption.text;\n        textOptions.x = this.gauge.enableRtl ? (legendOption.location.x - (measureText(legendOption.text, legend.textStyle).width +\n            legend.shapeWidth / 2 + legend.shapePadding)) : (legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding);\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var legendTextElement = textElement(textOptions, legend.textStyle, fontcolor, group, '');\n        legendTextElement.setAttribute('aria-label', textOptions.text);\n        legendTextElement.setAttribute('role', 'region');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill :\n            this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, legendOption.shapeBorder.dashArray, '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {GaugeLocation} start - Specifies the start.\n     * @param {number} textPadding - Specifies the textPadding.\n     * @param {LegendOptions} prevLegend - Specifies the prevLegend.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} count - Specifies the count.\n     * @param {number} firstLegend - Specifies the firstLegend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : (!this.gauge.enableRtl) ?\n                    this.maxColumnWidth : -this.maxColumnWidth - (4 * this.legend.shapePadding) / 3);\n                legendOption.location.y = start.y;\n                var textStartLoc = (this.legend.shapeWidth / 2) + padding;\n                this.pageXCollections.push(legendOption.location.x + ((!this.gauge.enableRtl) ? -textStartLoc : textStartLoc));\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            // eslint-disable-next-line max-len\n            var previousBound = (prevLegend.location.x + ((!this.gauge.enableRtl) ? prevLegend.textSize.width + textPadding : -prevLegend.textSize.width - textPadding));\n            // eslint-disable-next-line max-len\n            if (this.isWithinBounds(previousBound, (legendOption.textSize.width + textPadding) - padding, rect, this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    Legend.prototype.isWithinBounds = function (previousBound, textWidth, legendBounds, shapeWidth) {\n        if (!this.gauge.enableRtl) {\n            return (previousBound + textWidth) > (legendBounds.x + legendBounds.width + shapeWidth);\n        }\n        else {\n            return (previousBound - textWidth) < (legendBounds.x - shapeWidth);\n        }\n    };\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @param {Event} event - Specifies the event argument.\n     * @returns {void}\n     *\n     * @private\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled =\n                                    !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, !this.gauge.enableRtl ? true : false);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, !this.gauge.enableRtl ? false : true);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     *\n     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.\n     * @returns {void}\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var count = 0;\n            for (var j = 0; j < toggledIndexes[i].rangeIndex; j++) {\n                var rangeStart = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].start;\n                var rangeEnd = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].end;\n                if (rangeStart === rangeEnd) {\n                    count++;\n                }\n            }\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'visible';\n                    shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex - count].fill);\n                    textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n                }\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'hidden';\n                    shapeElement.setAttribute('fill', hiddenColor);\n                    textElement_1.setAttribute('fill', hiddenColor);\n                }\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     *\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.\n     * @returns {LegendOptions} - Specifies the LegendOptions.\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param {Event} event - Specifies the event.\n     * @param {boolean} pageUp - Specifies the pageUp.\n     * @returns {void}\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[!this.gauge.enableRtl ? 0 : 1], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @param {number} tx - Specifies the tx value.\n     * @param {number} width - Specifies the width.\n     * @returns {number} - Returns the number.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {string} id - Specifies the id.\n     * @returns {Element} - Returns the element.\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath);\n        legendItemsGroup.style.cssText = 'clip-path:url(#' + clippath.id + ')';\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     *\n     * @param {Element} parent - Specifies the element.\n     * @param {Element} childElement - Specifies the child element.\n     * @returns {void}\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement) {\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.\n     * @returns {number} - Returns the count.\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} left - Specifies the left.\n     * @param {number} right - Specifies the right.\n     * @param {number} top - Specifies the top.\n     * @param {number} bottom - Specifies the bottom.\n     * @returns {Rect} - Returns the rect.\n     * @private\n     */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param {number} computedWidth - Specifies compute width.\n     * @param {number} computedHeight - Specifies compute height.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legend bounds.\n     * @returns {void}\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n        if (this.rowCount === 1 && (legend.position === 'Bottom' || legend.position === 'Top') && (!isNullOrUndefined(legend.width) && legend.width.indexOf('%') > -1)) {\n            legendBounds.width = computedWidth;\n        }\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @param {number[]} columns - Specifies the columns\n     * @param {number} width - Specifies the width\n     * @param {number} padding - Specifies the padding\n     * @param {number} rowWidth - Specifies the row width\n     * @returns {number} - Returns the number\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var i = 0; i < columns.length; i++) {\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function () {\n        this.legendCollection = [];\n        this.legendRenderingCollections = [];\n        this.legendRegions = [];\n        this.titleRect = null;\n        this.pageXCollections = [];\n        this.clipRect = null;\n        this.legendTranslateGroup = null;\n        this.legend = null;\n        this.pagingRegions = [];\n        this.toggledIndexes = [];\n        this.legendBounds = null;\n        this.removeEventListener();\n        this.gauge = null;\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge.\n     */\n    // eslint-disable-next-line\n    function PdfExport(control) {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName Specfies the file name of the document.\n     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the gauge.\n     * @param {boolean} allowDownload - Specfies whether to download the document or not.\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (gauge, type, fileName, orientation, allowDownload) {\n        // eslint-disable-next-line\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': gauge.availableSize.width.toString(),\n                    'height': gauge.availableSize.height.toString()\n                }\n            });\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = gauge.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((gauge.theme === 'Tailwind' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Fluent' || gauge.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            else if ((gauge.theme === 'TailwindDark' || gauge.theme === 'Bootstrap5Dark' || gauge.theme === 'FluentDark' || gauge.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, gauge.availableSize.width, gauge.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    PdfExport.prototype.destroy = function () { };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Represent the Image Export for gauge\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     *  @param {CircularGauge} control - Specfies the instance of the gauge\n     */\n    // eslint-disable-next-line\n    function ImageExport(control) {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the image file or not.\n     * @returns {Promise<string>} - Returns promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (gauge, type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': gauge.availableSize.width.toString(),\n                    'height': gauge.availableSize.height.toString()\n                }\n            });\n            var exportElement = gauge.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((gauge.theme === 'Tailwind' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Fluent' || gauge.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            else if ((gauge.theme === 'TailwindDark' || gauge.theme === 'Bootstrap5Dark' || gauge.theme === 'FluentDark' || gauge.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n            }\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                exportElement.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    _this.triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    ImageExport.prototype.destroy = function () { };\n    /**\n     * To trigger the download element\n     *\n     * @param {string} fileName - Specifies the file name.\n     * @param {ExportType} type - Specifies the export type.\n     * @param {string} url - Specifies the url.\n     * @param {boolean} isDownload - Specifies the boolean value.\n     * @returns {void}\n     */\n    ImageExport.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printFunction, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper-common';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specifies the instance of the gauge.\n     */\n    // eslint-disable-next-line\n    function Print(control) {\n    }\n    /**\n     * To print the gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (gauge, elements) {\n        var printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        printWindow.moveTo(0, 0);\n        printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(gauge, elements), name: beforePrint\n        };\n        // eslint-disable-next-line\n        gauge.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printFunction(argsData.htmlContent, printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {Element} - Returns the div element.\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (gauge, elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            var exportElement = gauge.element.cloneNode(true);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var backgroundElement = exportElement.getElementsByTagName('svg')[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                backgroundElement = backgroundElement.childNodes[0];\n                if (!isNullOrUndefined(backgroundElement)) {\n                    var backgroundColor = backgroundElement.getAttribute('fill');\n                    if ((gauge.theme === 'Tailwind' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Fluent' || gauge.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(255,255,255, 1)');\n                    }\n                    else if ((gauge.theme === 'TailwindDark' || gauge.theme === 'Bootstrap5Dark' || gauge.theme === 'FluentDark' || gauge.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(0, 0, 0, 1)');\n                    }\n                }\n            }\n            div.appendChild(exportElement);\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Print.prototype.destroy = function () { };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the color information for the gradient in the circular gauge.\n */\nvar ColorStop = /** @class */ (function (_super) {\n    __extends(ColorStop, _super);\n    function ColorStop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#000000')\n    ], ColorStop.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ColorStop.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('0%')\n    ], ColorStop.prototype, \"offset\", void 0);\n    __decorate([\n        Property('')\n    ], ColorStop.prototype, \"style\", void 0);\n    return ColorStop;\n}(ChildProperty));\nexport { ColorStop };\n/**\n * Specifies the position in percentage from which the radial gradient must be applied.\n */\nvar GradientPosition = /** @class */ (function (_super) {\n    __extends(GradientPosition, _super);\n    function GradientPosition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"x\", void 0);\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"y\", void 0);\n    return GradientPosition;\n}(ChildProperty));\nexport { GradientPosition };\n/**\n * This specifies the properties of the linear gradient colors for the circular gauge.\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"endValue\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], LinearGradient.prototype, \"colorStop\", void 0);\n    return LinearGradient;\n}(ChildProperty));\nexport { LinearGradient };\n/**\n * This specifies the properties of the radial gradient colors for the circular gauge.\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], RadialGradient.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"outerPosition\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"innerPosition\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], RadialGradient.prototype, \"colorStop\", void 0);\n    return RadialGradient;\n}(ChildProperty));\nexport { RadialGradient };\n/**\n * Sets and gets the module that enables the gradient option for pointers and ranges.\n *\n * @hidden\n */\nvar Gradient = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     */\n    function Gradient(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {name} name - Specifies the name of the gradient.\n     * @param {name} direction - Specifies the gradient position.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {\n        var linearPosition = {\n            id: name,\n            x1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'right' ? '100%' : '0%')\n                : (!isNullOrUndefined(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?\n                    element.linearGradient.startValue :\n                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),\n            x2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?\n                (direction === 'left' ? '100%' : '0%') :\n                (!isNullOrUndefined(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?\n                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),\n            y1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),\n            y2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1\n                ? (direction === 'top' ? '100%' : '0%') : '0%')\n        };\n        return linearPosition;\n    };\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - Specifies the index of the axis.\n     * @param { string } direction - Specifies the gradient position.\n     * @param { number } rangeIndex - Specifies the index of the range.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {\n        var render = new SvgRenderer('');\n        var colors = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            this.getCircularGradientColor(element.linearGradient.colorStop, index) :\n            this.getGradientColor(element.linearGradient.colorStop);\n        var name = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            '_' + this.gauge.svgObject.id + '_range_' +\n                rangeIndex + '_color_' + index + '_' + 'linearGradient'\n            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';\n        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);\n        gradientPosition = {\n            id: gradientPosition.id,\n            x1: gradientPosition.x1,\n            x2: gradientPosition.x2,\n            y1: gradientPosition.y1,\n            y2: gradientPosition.y2\n        };\n        var def = render.drawGradient('linearGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style for circular gradient path.\n     *\n     * @param {ColorStopModel[]} colorStop - Specifies the colorStop.\n     * @param {number} index - Specifies the index.\n     * @returns {GradientColor[]} - return the gradient color value.\n     * @private\n     */\n    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {\n        var colors = [];\n        var colorIndex = index;\n        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n            colorIndex++;\n        }\n        return colors;\n    };\n    /**\n     * To get the radial gradient string.\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    Gradient.prototype.getRadialGradientColor = function (element) {\n        var render = new SvgRenderer('');\n        var colors = this.getGradientColor(element.radialGradient.colorStop);\n        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';\n        var gradientPosition = {\n            id: name,\n            r: (element.radialGradient.radius.indexOf('%') === -1 ?\n                element.radialGradient.radius :\n                parseFloat(element.radialGradient.radius).toString()) + '%',\n            cx: (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.x :\n                parseFloat(element.radialGradient.outerPosition.x).toString()) + '%',\n            cy: (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.y :\n                parseFloat(element.radialGradient.outerPosition.y).toString()) + '%',\n            fx: (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.x :\n                parseFloat(element.radialGradient.innerPosition.x).toString()) + '%',\n            fy: (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.y :\n                parseFloat(element.radialGradient.innerPosition.y).toString()) + '%'\n        };\n        var def = render.drawGradient('radialGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style.\n     *\n     * @param { ColorStopModel[]} colorStop - Specifies the color stop.\n     * @returns {GradientColor[]} - Returns the gradientColor.\n     * @private\n     */\n    Gradient.prototype.getGradientColor = function (colorStop) {\n        var colors = [];\n        for (var j = 0; j < colorStop.length; j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n        }\n        return colors;\n    };\n    /**\n     * To get a gradient color string\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - specifies the index.\n     * @param {string} direction - specifies the direction.\n     * @param {number} rangeIndex - specifies the index of range.\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {\n        var gradientColor;\n        if ((element.linearGradient && !isNullOrUndefined(element.linearGradient.colorStop)) ||\n            (element.radialGradient && !isNullOrUndefined(element.radialGradient.colorStop))) {\n            if (element.linearGradient) {\n                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);\n            }\n            else {\n                gradientColor = this.getRadialGradientColor(element);\n            }\n            this.gauge.gradientCount = this.gauge.gradientCount + 1;\n        }\n        else {\n            return null;\n        }\n        return gradientColor;\n    };\n    Gradient.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Gradient';\n    };\n    /**\n     * To destroy the Gradient.\n     *\n     * @returns {void}\n     * @private\n     */\n    Gradient.prototype.destroy = function () {\n        this.gauge = null;\n    };\n    return Gradient;\n}());\nexport { Gradient };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable max-len */\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component, animationMode } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement, getElement, stringToNumber, measureText, toPixel, textElement, getAngleFromValue, getAngleFromLocation, getPathArc, getPointer, RectOption, Size, GaugeLocation, Rect, TextOption } from './utils/helper-common';\nimport { setStyles, getValueFromAngle, getRange } from './utils/helper-circular-gauge';\nimport { Border, Margin, Font, TooltipSettings, LegendSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { textTrim, titleTooltip } from './utils/helper-legend';\nimport { Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\nimport { Gradient } from './axes/gradient';\n/**\n * Represents the circular gauge control. This is used to customize the properties of the circular gauge to visualize the data in circular scale.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {CircularGaugeModel} options - Specifies the options\n     * @param {string} element - Specifies the element\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.allowLoadingAnimation = false;\n        /** @private */\n        _this.isRangeUpdate = false;\n        /** @private */\n        _this.isAnimationProgress = true;\n        /** @private */\n        _this.isResize = false;\n        /** @private */\n        _this.isOverAllAnimationComplete = false;\n        /** @private */\n        _this.isDrag = false;\n        /**\n         * @private\n         */\n        _this.gradientCount = 0;\n        return _this;\n    }\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.isPropertyChange = false;\n        this.allowLoadingAnimation = ((this.animationDuration === 0 && animationMode === 'Enable') || this.animationDuration > 0)\n            && !this.isOverAllAnimationComplete;\n        this.renderElements(true);\n        this.renderAnimation();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n    };\n    /**\n     * Method to bind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        this.resizeEvent = this.gaugeResize.bind(this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                var svgElement = getElement(_this.element.id + '_svg');\n                var extraWidth = _this.element.getBoundingClientRect().left - svgElement.getBoundingClientRect().left;\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    e.preventDefault();\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    e.preventDefault();\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, dragArgs);\n                }\n            }\n        });\n        this.notify(Browser.touchMoveEvent, e);\n        titleTooltip(e, e.clientX, e.clientY, this, false);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     *\n     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the location of the gauge\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} pointerIndex - Specifies the pointer index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the gauge location\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} rangeIndex - Specifies the range index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                var previousValue1 = this.activeRange.currentValue;\n                this.activeRange.currentValue = value;\n                var add = (this.activeRange.end - this.activeRange.start);\n                var div = add / 2;\n                var avg = parseFloat(this.activeRange.start.toString()) + div;\n                var start = typeof this.activeRange.start === 'string' ? parseFloat(this.activeRange.start) : this.activeRange.start;\n                var end = typeof this.activeRange.end === 'string' ? parseFloat(this.activeRange.end) : this.activeRange.end;\n                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : ((start < end) ? this.activeRange.start : this.activeRange.end));\n                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : ((start < end) ? this.activeRange.end : this.activeRange.start)) : value;\n                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n                if (this.isTouch) {\n                    this.setRangeValue(axisIndex, rangeIndex, this.startValue, this.endValue);\n                }\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                if (_this.activePointer.type === 'Marker' && _this.activePointer.markerShape === 'Text' && _this.activePointer.pathElement.length === 0) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        if (!isNullOrUndefined(this.activePointer)) {\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        if (e.type.indexOf('touch') > -1 && (args.target.id === (this.element.id + '_CircularGaugeTitle') || args.target.id.indexOf('_gauge_legend_') > -1)) {\n            var touchArg = e;\n            titleTooltip(e, touchArg.changedTouches[0].pageX, touchArg.changedTouches[0].pageY, this, true);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @param {string} type - Specifies the type\n     * @param {string} name - Specifies the name\n     * @returns {IMouseEventArgs} - Returns the mouse event args\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     *\n     * @param {Event} e - Specifies the event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        if (!this.isDestroyed) {\n            // eslint-disable-next-line prefer-const\n            var args = {\n                gauge: this,\n                previousSize: this.availableSize,\n                name: resized,\n                cancel: false,\n                currentSize: this.calculateSvgSize()\n            };\n            this.trigger(resized, args);\n            if (!args.cancel) {\n                if (this.resizeTo) {\n                    clearTimeout(this.resizeTo);\n                }\n                if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-circulargauge')) {\n                    this.animatePointer = false;\n                    this.resizeTo = window.setTimeout(function () {\n                        _this.isResize = true;\n                        _this.isPropertyChange = true;\n                        _this.createSvg();\n                        _this.calculateBounds();\n                        _this.allowLoadingAnimation = false;\n                        if (_this.isOverAllAnimationComplete) {\n                            _this.loadingAnimationDuration = [];\n                        }\n                        _this.renderElements();\n                        _this.isResize = false;\n                    }, 500);\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     *\n     * @param {HTMLElement} element - Specifies the html element\n     * @returns {void}\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = 'element';\n        element.style.msTouchAction = 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        if (isNullOrUndefined(this.renderer)) {\n            this.renderer = new SvgRenderer(this.element.id);\n        }\n        if (isNullOrUndefined(this.gaugeAxisLayoutPanel)) {\n            this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        }\n        this.availableSize = this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                while (this.svgObject.childNodes.length > 0) {\n                    this.svgObject.removeChild(this.svgObject.firstChild);\n                }\n                if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                    remove(this.svgObject);\n                }\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement(this.element.id + '_svg');\n        this.clearTemplate();\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        return new Size(width, height);\n    };\n    /**\n     * To calculate the spacing of the circular gauge element.\n     *\n     * @param {number} top - Specifies the top value\n     * @param {number} left - Specifies the left value\n     * @param {number} width - Specifies the width\n     * @param {number} height - Specifies the height\n     * @param {number} radius - Specifies the radius\n     * @param {number} titleHeight - Specifies the titleHeight\n     * @param {number} isUpperAngle - Specifies the isUpperAngle\n     * @param {number} isLowerAngle - Specifies the isLowerAngle\n     * @param {number} isFullPercent - Specifies the boolean value\n     * @param {number} isUpper - Specifies the boolean value\n     * @param {number} isLower - Specifies the boolean value\n     * @returns {void}\n     */\n    /* eslint-disable max-len */\n    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {\n        var rect;\n        var bottom = this.margin.bottom + this.border.width;\n        var minRadius;\n        var widthRadius;\n        var centerX;\n        var centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            if (!this.allowMargin) {\n                if (!isNullOrUndefined(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                    minRadius = Math.min(width, height) / 2;\n                    rect = new Rect((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);\n                }\n                else {\n                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {\n                        widthRadius = ((width) / 2);\n                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));\n                        if (widthRadius > heightValue) {\n                            widthRadius = heightValue;\n                        }\n                        rect = new Rect((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);\n                    }\n                    else {\n                        if (height > width) {\n                            var heightRadius = height / 2;\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);\n                        }\n                        else {\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n                        }\n                    }\n                }\n            }\n            else {\n                rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            }\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        if (!this.allowMargin) {\n            if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                var difference = height - this.gaugeRect.height;\n                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);\n                this.gaugeRect.y = this.gaugeRect.y - difference;\n                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);\n            }\n            else if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {\n                var difference = this.gaugeRect.height - this.gaugeRect.width;\n                this.gaugeRect.x = this.legendSettings.position === 'Right'\n                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;\n                this.gaugeRect.width = this.legendSettings.position === 'Left' ?\n                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))\n                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);\n            }\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            if ((isUpperAngle || isLowerAngle) && !isNullOrUndefined(this.legendModule)) {\n                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')\n                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :\n                    centerX;\n            }\n            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?\n                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))\n                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));\n            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;\n            if (!isNullOrUndefined(this.axes) && this.axes.length > 1 && !isNullOrUndefined(this.midPoint)) {\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                if (isUpper && isLower) {\n                    centerY = (this.availableSize.height / 2) - bottom;\n                }\n            }\n        }\n        else {\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            centerY = this.centerYpoint !== null ?\n                stringToNumber(this.centerYpoint, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        }\n        this.midPoint = new GaugeLocation(centerX, centerY);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var isUpper = false;\n        var isLower = false;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        this.centerXpoint = (this.centerX === '') ? null : this.centerX;\n        this.centerYpoint = (this.centerY === '') ? null : this.centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        if (!this.allowMargin) {\n            for (var j = 0; j < this.axes.length; j++) {\n                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&\n                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;\n                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&\n                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&\n                    360 !== this.axes[j].endAngle;\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;\n                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;\n                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);\n            }\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);\n        }\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     *\n     * @param {boolean} animate - Specifies whether animation is true or false\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n        removeElement('gauge-measuretext');\n    };\n    CircularGauge.prototype.renderAnimation = function () {\n        if (this.allowLoadingAnimation) {\n            for (var i = 0; i < this.axes.length; i++) {\n                this.gaugeAxisLayoutPanel.axisLineAnimation(i, this.loadingAnimationDuration[i], this);\n            }\n        }\n    };\n    /**\n     * Method to render legend for accumulation chart\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            // eslint-disable-next-line prefer-const\n            var style = {\n                color: this.titleStyle.color,\n                size: this.titleStyle.size || this.themeStyle.fontSize,\n                fontFamily: this.titleStyle.fontFamily || this.themeStyle.fontFamily,\n                fontStyle: this.titleStyle.fontStyle,\n                fontWeight: this.titleStyle.fontWeight || this.themeStyle.titleFontWeight,\n                opacity: this.titleStyle.opacity\n            };\n            var titleSize = style.size;\n            if (!isNaN(Number(titleSize))) {\n                style.size = titleSize + 'px';\n            }\n            var width = Math.abs((this.margin.left + this.margin.right) - this.availableSize.width);\n            var trimmedTitle = textTrim(width, this.title, style);\n            var size = measureText(trimmedTitle, style);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', trimmedTitle);\n            var element = textElement(options, style, style.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('role', 'region');\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param {number} value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        this.allowLoadingAnimation = false;\n        if (!this.isDestroyed && pointer.currentValue !== value) {\n            var enableAnimation_1 = pointer.animation.enable || animationMode === 'Enable';\n            value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n            value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n            pointer['isPointerAnimation'] = true;\n            document.getElementById(this.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex).style.visibility = 'visible';\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    setStyles(element, pointer.color, pointer.border);\n                    if (enableAnimation_1) {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, axisIndex);\n                    }\n                    else {\n                        _this.isAnimationProgress = false;\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                    }\n                }\n                else {\n                    if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                        setStyles(element, pointer.cap.color, pointer.cap.border);\n                    }\n                    else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                        setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                    }\n                    else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                        setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                    }\n                    else if (pointer.type === 'Marker' && pointer.markerShape !== 'Text') {\n                        setStyles(element, pointer.color, pointer.border);\n                    }\n                    if (enableAnimation_1) {\n                        if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                            _this.gaugeAxisLayoutPanel.pointerRenderer.performTextAnimation(element, pointer.currentValue, value, axis, pointer, axisIndex);\n                        }\n                        else {\n                            _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, axisIndex);\n                        }\n                    }\n                    else {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                    }\n                }\n            });\n            if (this.allowLoadingAnimation && !pointer.animation.enable) {\n                this.allowLoadingAnimation = false;\n                pointer.value = value;\n            }\n        }\n        this.isProtectedOnChange = true;\n        pointer.previousValue = pointer.currentValue;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param {string | Function} content - Specifies the content for the annotation in circular gauge.\n     * @returns {void}\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        if (!this.isDestroyed) {\n            this.allowLoadingAnimation = false;\n            var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n            var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n                createElement('div', {\n                    id: this.element.id + '_Annotations_' + axisIndex, styles: this.animationDuration > 0 ? 'opacity: 0' : 'opacity: 1'\n                });\n            var annotation = this.axes[axisIndex].annotations[annotationIndex];\n            if (content !== null) {\n                removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n                annotation.content = content;\n                this.annotationsModule.createTemplate(element, annotationIndex, axisIndex, this);\n                var secondaryElement = getElement(this.element.id + '_Secondary_Element');\n                if (!isElementExist && !isNullOrUndefined(secondaryElement)) {\n                    secondaryElement.appendChild(element);\n                }\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     *\n     * @param {string[] | string | Element} id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(this, id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     *\n     * @param {ExportType} type - Specifies the type of the export.\n     * @param {string} fileName - Specifies the file name for the exported file.\n     * @param {PdfPageOrientation}  orientation - Specifies the orientation for the exported PDF document.\n     * @param {boolean} allowDownload - Specifies whether to download as a file.\n     * @returns {Promise<string>} - Specifies the base64 string of the exported image which is returned when the allowDownload is set to false.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(_this, type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(_this, type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {void}\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param {number} start - Specifies the start value for the current range in circular gauge.\n     * @param {number} end - Specifies the end value for the current range in circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        this.allowLoadingAnimation = false;\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var oldRangeStart = range.start;\n        var oldRangeEnd = range.end;\n        range.start = start;\n        range.end = end;\n        if (range.start !== range.end && oldRangeStart === oldRangeEnd && this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            var height = this.legendModule.legendBounds.height + this.legendSettings.margin.top + this.legendSettings.margin.bottom + this.legendSettings.border.width;\n            var width = this.legendModule.legendBounds.width + this.legendSettings.margin.left + this.legendSettings.margin.right + this.legendSettings.border.width;\n            // eslint-disable-next-line prefer-const\n            var rect = this.gaugeRect;\n            var position = this.legendModule.position;\n            if (position === 'Bottom') {\n                rect.height = rect.height + height;\n            }\n            if (position === 'Top') {\n                rect.height = rect.height + height;\n                rect.y = rect.y - height;\n            }\n            if (position === 'Left') {\n                rect.width = rect.width + width;\n                rect.x = rect.x - width;\n            }\n            if (position === 'Right') {\n                rect.width = rect.width + width;\n            }\n            this.legendModule.calculateLegendBounds(rect, this.availableSize);\n            if (this.legendModule.legendCollection.length) {\n                this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds);\n            }\n        }\n        this.isRangeUpdate = true;\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * This method destroys the circular gauge. This method removes the events associated with the circular gauge and disposes the objects created for rendering and updating the circular gauge.\n     *\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        if (!isNullOrUndefined(this.tooltipModule)) {\n            this.tooltipModule.removeEventListener();\n        }\n        _super.prototype.destroy.call(this);\n        if (!isNullOrUndefined(this.gaugeAxisLayoutPanel)) {\n            this.gaugeAxisLayoutPanel.destroy();\n        }\n        this.availableSize = null;\n        this.midPoint = null;\n        this.activePointer = null;\n        this.activeAxis = null;\n        this.activeRange = null;\n        this.gaugeRect = null;\n        this.gaugeAxisLayoutPanel = null;\n        this.themeStyle = null;\n        this.loadingAnimationDuration = null;\n        this.intl = null;\n        this.removeSvg();\n        this.resizeEvent = null;\n        this.svgObject = null;\n        this.renderer = null;\n    };\n    CircularGauge.prototype.isGradientVisible = function () {\n        var isVisible = false;\n        for (var _i = 0, _a = this.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            for (var _b = 0, _c = axis.pointers; _b < _c.length; _b++) {\n                var pointer = _c[_b];\n                if (!isNullOrUndefined(pointer.linearGradient) || !isNullOrUndefined(pointer.radialGradient) ||\n                    (!isNullOrUndefined(pointer.cap) && (!isNullOrUndefined(pointer.cap.linearGradient) || !isNullOrUndefined(pointer.cap.linearGradient))) ||\n                    (!isNullOrUndefined(pointer.needleTail) && (!isNullOrUndefined(pointer.needleTail.linearGradient) || !isNullOrUndefined(pointer.needleTail.radialGradient)))) {\n                    isVisible = true;\n                    break;\n                }\n            }\n            for (var _d = 0, _e = axis.ranges; _d < _e.length; _d++) {\n                var range = _e[_d];\n                if (!isNullOrUndefined(range.linearGradient) || !isNullOrUndefined(range.radialGradient)) {\n                    isVisible = true;\n                    break;\n                }\n            }\n        }\n        return isVisible;\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                if (!annotationEnable) {\n                    annotationEnable = !isNullOrUndefined(annotation.content) && annotation.content.length !== 0;\n                }\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations],\n                name: 'Annotations'\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip],\n                name: 'Tooltip'\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print],\n                name: 'Print'\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport],\n                name: 'ImageExport'\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport],\n                name: 'PdfExport'\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend],\n                name: 'Legend'\n            });\n        }\n        if (this.isGradientVisible()) {\n            modules.push({\n                member: 'Gradient',\n                args: [this, Gradient],\n                name: 'Gradient'\n            });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {CircularGaugeModel} newProp - Specifies the new property\n     * @param {CircularGaugeModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        if (!this.isDestroyed) {\n            this.isPropertyChange = true;\n            var renderer = false;\n            this.allowLoadingAnimation = this.animationDuration > 0 && !this.isOverAllAnimationComplete ? true : false;\n            var refreshBounds = false;\n            var refreshWithoutAnimation = false;\n            var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n                !isNullOrUndefined(this.activePointer));\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'height':\n                    case 'width':\n                    case 'centerX':\n                    case 'centerY':\n                    case 'margin':\n                        this.createSvg();\n                        refreshBounds = true;\n                        break;\n                    case 'animationDuration':\n                        this.allowLoadingAnimation = true;\n                        break;\n                    case 'title':\n                        refreshBounds = (newProp.title === '' || oldProp.title === '');\n                        renderer = !(newProp.title === '' || oldProp.title === '');\n                        break;\n                    case 'titleStyle':\n                        if (newProp.titleStyle && newProp.titleStyle.size) {\n                            refreshBounds = true;\n                        }\n                        else {\n                            renderer = true;\n                        }\n                        break;\n                    case 'border':\n                        renderer = true;\n                        break;\n                    case 'background':\n                        renderer = true;\n                        break;\n                    case 'legendSettings':\n                        refreshWithoutAnimation = true;\n                        break;\n                    case 'axes':\n                        // eslint-disable-next-line no-case-declarations\n                        var axesPropertyLength = this.axes.length;\n                        for (var x = 0; x < axesPropertyLength; x++) {\n                            if (!isNullOrUndefined(newProp.axes[x])) {\n                                var collection = Object.keys(newProp.axes[x]);\n                                for (var _b = 0, collection_1 = collection; _b < collection_1.length; _b++) {\n                                    var collectionProp = collection_1[_b];\n                                    if (collectionProp === 'pointers') {\n                                        var pointerPropertyLength = Object.keys(newProp.axes[x].pointers).length;\n                                        for (var y = 0; y < pointerPropertyLength; y++) {\n                                            var index = parseInt(Object.keys(newProp.axes[x].pointers)[y], 10);\n                                            if (!isNullOrUndefined(Object.keys(newProp.axes[x].pointers[index]))) {\n                                                this.allowLoadingAnimation = false;\n                                                this.loadingAnimationDuration = [];\n                                                this.isAnimationProgress = this.axes[x].pointers[index].animation.enable;\n                                                this.axes[x].pointers[index]['previousValue'] = this.axes[x].pointers[index]['currentValue'];\n                                                this.axes[x].pointers[index]['isPointerAnimation'] = Object.keys(newProp.axes[x].pointers[index]).indexOf('value') > -1;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        refreshWithoutAnimation = true;\n                        break;\n                }\n            }\n            if (!isPointerValueSame && !this.isRangeUpdate) {\n                if (!refreshBounds && renderer) {\n                    this.removeSvg();\n                    this.renderElements();\n                }\n                if (refreshBounds || this.allowLoadingAnimation) {\n                    this.removeSvg();\n                    this.calculateBounds();\n                    this.renderElements();\n                    if (this.allowLoadingAnimation) {\n                        this.allowLoadingAnimation = this.animationDuration > 0 && !this.isOverAllAnimationComplete ? true : false;\n                        this.renderAnimation();\n                    }\n                }\n                if (refreshWithoutAnimation && !renderer && !refreshBounds && !this.allowLoadingAnimation) {\n                    this.removeSvg();\n                    this.calculateBounds();\n                    this.renderElements(false);\n                }\n            }\n            this.isRangeUpdate = false;\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     *\n     * @returns {string} - Returns the module name\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Property(0)\n    ], CircularGauge.prototype, \"animationDuration\", void 0);\n    __decorate([\n        Complex({ size: null, color: null, fontWeight: null, fontFamily: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowRangePreRender\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(0)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowMargin\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n","import * as index from './index';\nindex.CircularGauge.Inject(index.GaugeTooltip, index.Annotations, index.Legend, index.Print, index.PdfExport, index.ImageExport, index.Gradient);\nexport * from './index';\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerText","cssText","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","fill","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","element","gauge","functionName","setAttribute","isCompleteAngle","startAngle","endAngle","totalAngle","Math","floor","getDegree","degree","getAngleFromValue","maximumValue","minimumValue","isClockWise","angle","round","getAngleFromLocation","center","point","atan2","PI","getLocationFromAngle","radius","radian","GaugeLocation","cos","sin","getPathArc","start","end","startWidth","endWidth","range","axis","isNullOrUndefined","startRadius","position","isLinearCircularGradient","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","arcPath","arcStartOne","arcEndOne","arcStartTwo","arcEndTwo","clockWise","innerStart","innerEnd","pointPosition","arcRoundedPath","outerOldEnd","innerOldEnd","innerOldStart","outerOldStart","roundedPath","arcWidthPath","endArc","startArc","widthDifference","abs","roundedCornerRadius","arcWidthPathCalculation","roundedArcWidthPathCalculation","startValueToAngle","maximum","minimum","endRadii","sqrt","pow","centerStartDistance","centerDistance","arcStart","arcEnd","angleValueDirection","endRadiusValue","arcTwo","startGreater","arcOne","degreeAngle","degreeValueOne","degreeValueTwo","startAddArc","startSubArc","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getTemplateFunction","template","templateFn","templateComplier","isNaN","parseFloat","querySelectorAll","length","charAt","querySelector","innerHTML","trim","isVue","isVue3","e","removeElement","getElement","remove","stringToNumber","containerSize","getPointer","targetId","tempString","replace","split","tempStringArray","axisIndex","pointerIndex","getLabelFormat","format","match","calculateShapes","location","shape","url","path","space","width","height","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","stroke","setStyles","border","setStyleAttribute","stroke-width","getValueFromAngle","getRange","rangeIndex","getRangePalette","theme","palette","toLowerCase","getThemeStyle","backgroundColor","titleFontColor","tooltipFillColor","tooltipFontColor","tooltipFontSize","tooltipTextOpacity","labelColor","lineColor","majorTickColor","minorTickColor","pointerColor","capColor","needleColor","needleTailColor","fontSize","labelFontFamily","titleFontWeight","tooltipFillOpacity","getMousePosition","pageX","pageY","elementRect","getBoundingClientRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getElementSize","elementSize","tooltipData","templateElement","templateLength","textTrim","maxWidth","label","i","substring","showTooltip","type","tooltip","tooltipRect","Rect","margin","availableSize","right","bottom","removeTooltip","toString","className","titleTooltip","event","isTitleTouch","target","elementArray","getElementsByClassName","textContent","title","legendSettings","visible","_i","_a","legendModule","legendCollection","legends","originalText","clearTimeout","this","setTimeout","bind","calculateSum","from","to","values","sum","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","linear","currentTime","startValue","endValue","duration","getCompleteArc","innerRadius","checkMinValue","getCompletePath","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","TextOption","VisibleLabels","axisLabelFont","legendLabelFont","__decorate","decorators","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","Location","LegendSettings","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","isPointerAnimation","Axis","visibleLabels","Collection","Annotations","renderAnnotation","index","allowLoadingAnimation","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","renderReactTemplates","annotationAnimation","axes","annotationAnimate","tempOpacity","animate","loadingAnimationDuration","progress","args","timeStamp","delay","isOverAllAnimationComplete","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","observedArgs","length_1","slice","annotationElement","updateLocation","currentRadius","midPoint","measureElementRect","description","getModuleName","destroy","bounds","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","isTooltipRender","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent","RegExp","tooltipArgs","pointer","appendInBodyTag","pointerTooltip","findPosition","pointerTextStyle","themeStyle","svgTooltip","svgTooltipCreate","arrowInverted","appendTo","tooltipPosition","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent","enableRtl","rangeTooltipArgs","rangeTooltipTextStyle_1","rangeTooltip","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","annotationTooltip","annotationTemplate","elementSizeAn","annotationTextStyle","clearTemplate","children","isAngular","gaugeRect","offsetLeft","tooltipLeft","tooltipArg","Tooltip","enable","data","enableRTL","enableAnimation","SanitizeHtmlHelper","sanitize","inverted","areaBounds","enableShadow","controlInstance","child","roundingPlaces","toFixed","isTemplate","addLeft","addTop","addHeight","addWidth","isTooltipRemoved","mouseUpHandler","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","checkAngles","drawAxisLine","lineStyle","allowComponentRender","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","textFont","lastlabel","FindAxisLabelCollision","labelTextElement","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","j","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","push","axisLineWidth","drawRangePath","rangeElement","colorIndex","roundedStartAngle","roundedEndAngle","gradientRangeColor","rangeSplitValue","linearGradient","colorStop","rangeStart","rangeEnd","isAngleCross360","rangeGap","startAndEndRangeGap","process","degreeValue","gradientModule","radialGradient","rangeColorLength","degreeRange","degreeRangeValue","gradientDegree","gradientAngle","gradientAntiAngle","getGradientColorString","roundedRangeAppendPathCalculation","ceil","rangeAppendPathCalculation","pathElement","drawAxisRange","startEndDifference","previousEndWidth","previousStartWidth","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","rangeColors","PointerRenderer","drawPointers","pointerElement","pointers","calculatePointerRadius","visibility","setPointerValue","animation","animationMode","isPropertyChange","previousValue","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","gradientColor","gradientTailColor","gradientCapColor","needle","needleTail","cap","needleStartWidth","needleEndWidth","mid","minRadius","oldStartValue","oldEndValue","angleValue","roundStartAngle","roundEndAngle","calculateTextElement","textangle","textlocation","String","drawMarkerPointer","gradientMarkerColor","shapeBasedOnPosition","textObject","animatePointer","markerHeight","imageUrl","drawRangeBarPointer","gradientBarColor","performRangeBarAnimation","performTextAnimation","performNeedleAnimation","pointerValue","val","isAnimationProgress","animationDuration","annotationsModule","sweepAngle","pointAngle","arg","AxisLayoutPanel","axisOption","prevAnimatedMajorTickValue","prevAnimatedMajorTickIndex","prevAnimatedMinorTickValue","prevAnimatedMinorTickIndex","allowAxisCount","rangeAnimationCount","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","yMarginDiff","this_1","moveToCenter","centerXpoint","centerYpoint","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","calculateNumericInterval","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","log","currentInterval","this_2","axisLabelRenderSuccess","lastLabel","maxVal","getMaxLabelWidth","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","allowRangePreRender","drawClipPath","durationSplitUp","labelElementAnimation","axisElement","elementLabelAnimation","tickIndex","axisLabelCount","rangeAnimation","axisLineCalculation","axisWidth","axisLineAnimation","prevAnimatedTickType","isAxisLine","pointerValue_1","timeStamp_1","axisElement_1","start_1","end_1","val_1","axisAnimation","isMajorTick","isMinorTick","tickElementAnimation","labelRangeAnimation","majorTickCount","tickElement","minorTickCount","currentTickValue","minorTickInterval","minorTickValue","majorTickValue","isAxisLabel","isRange","rangesElement","rangeElementAnimation","isRangeAbsent","axisindex","gaugeAxisLayoutPanel","splitUpCount","axisCount","labelCount","isLabel","isrange","isPointer","elementId","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendID","click","getLegendOptions","legendText","LegendOptions","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","cursor","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","grayColor","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translateX","translatePage","pagingText","page","pageNumber","translate","group","fontcolor","legendTextElement","prevLegend","maxColumnWidth","textStartLoc","previousBound","isWithinBounds","totalRowCount","availablewidth","getAvailWidth","legendItemsId","toggledIndex","legendItemsId_1","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","legendCollections","legendCollections_1","pageUp","pageText","tx","drawRectangle","legendItemsGroup","clippath","createClipPath","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","legendRenderingCollections","titleRect","PdfExport","control","export","fileName","orientation","allowDownload","Promise","resolve","reject","attrs","PdfPageOrientation","Landscape","exportElement","cloneNode","childNodes","window","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","isDownload","userAgent","svgData","outerHTML","triggerDownload","image_1","context_1","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","printFunction","div","forEach","Element","backgroundElement","getElementsByTagName","ColorStop","GradientPosition","LinearGradient","RadialGradient","Gradient","calculateLinearGradientPosition","x1","x2","y1","y2","getLinearGradientColor","colors","getCircularGradientColor","getGradientColor","gradientCount","gradientPosition","def","drawGradient","getRadialGradientColor","outerPosition","fx","innerPosition","fy","CircularGauge","isRangeUpdate","isResize","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderAnimation","renderComplete","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","mouseLeave","isTouch","resizeEvent","gaugeResize","setGaugeStyle","setMouseXY","getMouseArgs","dragArgs","enableRangeDrag","svgElement","activePointer","preventDefault","dragPointInd","dragAxisInd","activeAxis","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","clientX","clientY","buttons","pointerType","stopPropagation","previousValue1","avg","setRangeValue","pointInd","axisInd","rangeInd","pointerInd","previousSize","currentSize","calculateSvgSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","offsetWidth","containerHeight","offsetHeight","borderWidth","join","radiusAndCenterCalculation","titleHeight","isUpperAngle","isLowerAngle","isFullPercent","radiusPercent","isUpper","isLower","widthRadius","centerX","centerY","allowMargin","heightValue","heightRadius","difference","titleStyle","renderBorder","renderTitle","titleSize","Number","trimmedTitle","tabIndex","enableAnimation_1","isProtectedOnChange","setAnnotationValue","isElementExist","secondaryElement","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","svgRect","mouseY","mouseX","axisRange","oldRangeStart","oldRangeEnd","tooltipModule","isGradientVisible","isVisible","_b","_c","_d","_e","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","axesPropertyLength","collection_1","pointerPropertyLength","Event","NotifyPropertyChanges","Component","index.CircularGauge","Inject","index.GaugeTooltip","index.Annotations","index.Legend","index.Print","index.PdfExport","index.ImageExport","index.Gradient"],"mappings":"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"}