{"version":3,"file":"ej2-circulargauge.umd.min.js","sources":["../src/circular-gauge/utils/helper-common.js","../src/circular-gauge/utils/helper-circular-gauge.js","../src/circular-gauge/utils/helper-tooltip.js","../src/circular-gauge/utils/helper-legend.js","../src/circular-gauge/utils/helper-axis-panel.js","../src/circular-gauge/utils/helper-axis-renderer.js","../src/circular-gauge/utils/helper-pointer-renderer.js","../src/circular-gauge/model/theme.js","../src/circular-gauge/model/base.js","../src/circular-gauge/axes/axis.js","../src/circular-gauge/model/constants.js","../src/circular-gauge/annotations/annotations.js","../src/circular-gauge/user-interaction/tooltip.js","../src/circular-gauge/axes/axis-renderer.js","../src/circular-gauge/axes/pointer-renderer.js","../src/circular-gauge/axes/axis-panel.js","../src/circular-gauge/legend/legend.js","../src/circular-gauge/model/pdf-export.js","../src/circular-gauge/model/image-export.js","../src/circular-gauge/model/print.js","../src/circular-gauge/axes/gradient.js","../src/circular-gauge/circular-gauge.js"],"sourcesContent":["/* eslint-disable max-len */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { compile as templateComplier, isNullOrUndefined, remove, createElement, merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @returns {Size} - Returns the size of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerText = text;\n    htmlObject.style.cssText = style;\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n *\n * @param {string} value - Specifies the value.\n * @param {number} maxDimension - Specifies the  maximum dimension.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n *\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to create the text element.\n *\n * @param {TextOption} options - Specifies the options.\n * @param {FontModel} font - Specifies the font.\n * @param {string} color - Specifies the color.\n * @param {HTMLElement | Element} parent - Specifies the html element.\n * @param {string} styles - Specifies the style.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n *\n * @param {PathOption} options - Specifies the options.\n * @param {Element} element - Specifies the element.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {string} functionName - Specifies the function name.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.style.cssText = options.style;\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {boolean} Returns the boolean value.\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get the degree for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the angle from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get angle from location for circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {GaugeLocation} point - Specifies the point.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n *\n * @param {number} degree - Specifies the degree.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} center - Specifies the center.\n * @returns {GaugeLocation} - Returns the gauge location.\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {number} start - Specifies the start.\n * @param {number} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} startWidth - Specifies the startWidth.\n * @param {number} endWidth - Specifies the endWidth.\n * @param {Range} range - Specifies the range.\n * @param {Axis} axis - Specifies the axis.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    if (isNullOrUndefined(range) || (range.start !== range.end)) {\n        end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    }\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside'\n        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4)\n            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x\n        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo\n        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {\n    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;\n    if (isNullOrUndefined(arcStartTwo) && isNullOrUndefined(arcEndTwo)) {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '\n            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n    else {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '\n            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '\n            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n}\n/**\n * Function to get the range path direction for different start and end width of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the options.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {number} radius - Specifies the radius.\n * @param {number} startRadius - Specifies the startRadius.\n * @param {number} endRadius - Specifies the endRadius.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the range path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start values.\n * @param {GaugeLocation} end - Specifies the end values.\n * @param {GaugeLocation} innerStart - Specifies the innerStart values.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the string value.\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n    var widthDifference = Math.abs(startWidth - endWidth);\n    var endArc;\n    var startArc;\n    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n    }\n    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {\n        if (range.roundedCornerRadius <= 0 && range.startWidth === range.endWidth) {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n        else {\n            return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);\n        }\n    }\n    else {\n        if (range.position === 'Cross' || range.position === 'Outside') {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n        }\n        else {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n    }\n}\n/**\n * Function to get start and end width range path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the svg path.\n * @private\n */\nexport function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {\n    if (!isNullOrUndefined(range)) {\n        var arcStartOne = void 0;\n        var arcEndOne = void 0;\n        var widthDifference = Math.abs(startWidth - endWidth);\n        var arcStartTwo = void 0;\n        var arcEndTwo = void 0;\n        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var pointPosition = (startWidth < ((endWidth))) ?\n            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);\n        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));\n        var endRadii = endDistance / 2;\n        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));\n        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));\n        if (range.roundedCornerRadius <= 0) {\n            widthDifference = widthDifference === 0 ? 1 : widthDifference;\n            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?\n                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;\n            var degreeValue = range.position === 'Cross' ? 330 : 325;\n            if (((degreeValue <= degree && degree <= 360))) {\n                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)\n                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))\n                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))\n                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));\n                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)\n                    : range.position === 'Cross' ?\n                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :\n                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?\n                            (startRadius - (widthDifference) - (endWidth / 4))\n                            : (startRadius - (widthDifference / 2))\n                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));\n                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);\n            }\n            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {\n                var arcStart = (arcRadius - (widthDifference / 2));\n                var arcEnd = (arcRadius - (widthDifference / 2));\n                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;\n                if (degree < 310) {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);\n                }\n                else if (degree >= 310 || angleValueDirection) {\n                    arcStart = (arcRadius - (widthDifference));\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n            else {\n                if (range.position === 'Cross') {\n                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?\n                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius\n                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?\n                        endRadius + (widthDifference / 4) - (startWidth / 4) :\n                        endRadius + (widthDifference / 4) - (startWidth / 2);\n                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)\n                        - (widthDifference / 4) : startRadius - (widthDifference / 4)\n                        : startRadius : startRadius - (widthDifference / 4);\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);\n                }\n                else if (range.position === 'Outside') {\n                    if (degree < 325 && degree > 285) {\n                        var arcTwo = void 0;\n                        var startGreater = startWidth / 2;\n                        var endGreater = endWidth / 2;\n                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;\n                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?\n                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);\n                    }\n                    else {\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n                    }\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n        }\n        else {\n            var degreeAngle = axis.endAngle < 4 ? 356 : 360;\n            clockWise = degree > degreeAngle ? 0 : clockWise;\n            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;\n            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;\n            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {\n                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :\n                    endRadii - (widthDifference / 4) : endRadii;\n                arcStartTwo = (centerDistance / 2);\n                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :\n                    (centerStartDistance / 2);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);\n            }\n            else if (degree > 270 && degree < degreeValueTwo) {\n                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);\n                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);\n                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));\n                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);\n            }\n            else {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n        }\n    }\n    else {\n        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n    }\n}\n/**\n * Function to get start and end width range rounded path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} actualStart - Specifies the actualStart value.\n * @param {number} actualEnd - Specifies the actualEnd value.\n * @param {number} oldStart - Specifies the oldStart value.\n * @param {number} oldEnd - Specifies the oldEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to compile the template function for circular gauge.\n *\n * @param {string} template - Specifies the template.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {Function} - Returns the template function.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    try {\n        if (typeof template === 'function') {\n            templateFn = templateComplier(template);\n        }\n        else if (isNaN(parseFloat(template)) && document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        else if (gauge.isVue || gauge.isVue3) {\n            templateFn = templateComplier(template);\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n *\n * @param {string} id Specifies the id\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get element from id.\n *\n * @param {string} id - Specifies the id.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to convert the number from string.\n *\n * @param {string} value - Specifies the value.\n * @param {number} containerSize - Specifies the container size.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisiblePointer} - Returns the pointer and axis index.\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    var tempStringArray = tempString.indexOf('_Range_') > -1 ? tempString.split('_Range_') : tempString.indexOf('_Pointer_NeedleCap_') > -1 ? tempString.split('_Pointer_NeedleCap_') :\n        tempString.indexOf('_Pointer_NeedleTail_') > -1 ? tempString.split('_Pointer_NeedleTail_') : tempString.indexOf('_Pointer_NeedleRect_') > -1 ? tempString.split('_Pointer_NeedleRect_') :\n            tempString.indexOf('_Pointer_Needle_') > -1 ? tempString.split('_Pointer_Needle_') : tempString.indexOf('_Pointer_RangeBar_') > -1 ? tempString.split('_Pointer_RangeBar_') : tempString.indexOf('_Pointer_Marker_') > -1 ?\n                tempString.split('_Pointer_Marker_') : tempString.indexOf('_Pointer_') > -1 ? tempString.split('_Pointer_') : tempString.split('_Annotation_');\n    return {\n        axisIndex: +tempStringArray[0],\n        pointerIndex: +tempStringArray[tempStringArray.length - 1]\n    };\n}\n/**\n * Function to convert the label using format for cirular gauge.\n *\n * @param {string} format - Specifies the format.\n * @returns {string} - Returns th string.\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n *\n * @param {GaugeLocation} location - Specifies the location.\n * @param {string} shape - Specifies the shape.\n * @param {Size} size - Specifies the size.\n * @param {string} url - Specifies the url.\n * @param {PathOption} options - Specifies the path option.\n * @returns {PathOption} - Returns the path.\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = typeof size.width === 'string' ? parseFloat(size.width) : size.width;\n    var height = typeof size.height === 'string' ? parseFloat(size.height) : size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    var space;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        _this['stroke-dasharray'] = border.dashArray;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Specifies the size information of an element.\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Specifies the location of the element in the circular gauge.\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { setStyleAttribute } from '@syncfusion/ej2-base';\nimport { isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)));\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString.split('Range_')[1]\n    };\n}\n","/**\n * Specifies Circular-Gauge Tooltip Helper methods\n */\nimport { GaugeLocation, getTemplateFunction, Size } from './helper-common';\nimport { remove } from '@syncfusion/ej2-base';\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n *\n * @private\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * function to get the size of the element.\n *\n * @param {string} template - Specifies the template element.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @param {HTMLElement} parent - specifies the element.\n * @returns {Size} - Return the size of the element\n *\n * @private\n */\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = getTemplateFunction(template, gauge);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var tooltipData = templateFn ? (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n        : templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateElement = (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n            : templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n","/**\n * Specifies Circular-Gauge Common Helper methods\n */\nimport { measureText, getElement, Rect } from '../utils/helper-common';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @returns {void}\n * @private */\nexport function showTooltip(text, x, y, gauge, type) {\n    var tooltipRect = new Rect(gauge.margin.left, gauge.margin.top + 10, gauge.availableSize.width - (gauge.margin.left + gauge.margin.right), gauge.availableSize.height - (gauge.margin.top - gauge.margin.bottom));\n    var id;\n    var tooltip;\n    if (type === 'Title') {\n        id = gauge.element.id + '_EJ2_Title_Tooltip';\n        tooltip = document.getElementById(id);\n        var width = measureText(text, {\n            fontFamily: 'Segoe UI', size: '12px',\n            fontStyle: 'Normal', fontWeight: 'Regular'\n        }).width + 5;\n        tooltipRect.width = width < tooltipRect.width ? width : tooltipRect.width - 10;\n        if (!tooltip) {\n            removeTooltip();\n        }\n    }\n    else if (type === 'LegendText') {\n        id = gauge.element.id + '_EJ2_Legend_Tooltip';\n        tooltip = document.getElementById(id);\n        if (!tooltip) {\n            removeTooltip();\n        }\n        var width = measureText(text, {\n            fontFamily: 'Segoe UI', size: '12px',\n            fontStyle: 'Normal', fontWeight: 'Regular'\n        }).width + 5;\n        x = (x + width > tooltipRect.width) ? x - width : x;\n        tooltipRect.x = x < 0 ? 5 : x;\n        tooltipRect.y = y;\n        tooltipRect.width = width;\n    }\n    if (!tooltip) {\n        tooltip = createElement('div', { id: id, className: 'EJ2-CircularGauge-Tooltip' });\n        tooltip.innerText = text;\n        tooltip.style.cssText = 'top:' + (tooltipRect.y + 15).toString() + 'px;left:' + (tooltipRect.x).toString() +\n            'px; background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n            'position:absolute; border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n            'padding-bottom: 2px; padding-top : 2px; font-size:12px; text-align: center; font-family: \"Segoe UI\"; width:' + (tooltipRect.width) + 'px;';\n        getElement(gauge.element.id + '_Secondary_Element').appendChild(tooltip);\n    }\n    else {\n        tooltip.innerText = text;\n        tooltip.style.top = (tooltipRect.y + 15).toString() + 'px';\n        tooltip.style.left = (tooltipRect.x).toString() + 'px';\n    }\n}\n/** @private */\nexport function titleTooltip(event, x, y, gauge, isTitleTouch) {\n    var targetId = event.target.id;\n    var elementArray = document.getElementsByClassName('EJ2-CircularGauge-Tooltip');\n    if ((targetId === (gauge.element.id + '_CircularGaugeTitle')) && (event.target.textContent.indexOf('...') > -1)) {\n        showTooltip(gauge.title, x, y, gauge, \"Title\");\n    }\n    else if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1 &&\n        gauge.legendSettings.visible) {\n        var axisIndex = parseInt(targetId.split(gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n        var rangeIndex = parseInt(targetId.split(gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n        var text = '';\n        for (var _i = 0, _a = gauge.legendModule.legendCollection; _i < _a.length; _i++) {\n            var legends = _a[_i];\n            if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                text = legends.originalText;\n            }\n        }\n        showTooltip(text, x, y, gauge, \"LegendText\");\n    }\n    else if (elementArray.length > 0 && (elementArray[0].id.indexOf(\"Title_Tooltip\") > -1 ||\n        elementArray[0].id.indexOf(\"Legend_Tooltip\") > -1)) {\n        removeTooltip();\n    }\n    if (isTitleTouch) {\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(removeTooltip.bind(this), 2000);\n    }\n}\n/** @private */\nexport function removeTooltip() {\n    if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n        document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0].remove();\n    }\n}\n","/**\n * Specifies Circular-Gauge axis-panel Helper methods\n */\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n","/**\n * Specifies Circular-Gauge axis-render Helper methods\n */\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n","/**\n * Specifies Circular-Gauge pointer-render Helper methods\n */\nimport { getLocationFromAngle, isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: null,\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: null,\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n})(Theme || (Theme = {}));\n/**\n * @param {string} theme theme\n * @returns {string[]} palette\n * @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    switch (theme.toLowerCase()) {\n        case 'tailwind':\n            palette = ['#0369A1', '#14B8A6', '#15803D', '#334155', '#5A61F6',\n                '#65A30D', '#8B5CF6', '#9333EA', '#F59E0B', '#F97316'];\n            break;\n        case 'tailwinddark':\n            palette = ['#10B981', '#22D3EE', '#2DD4BF', '#4ADE80', '#8B5CF6',\n                '#E879F9', '#F472B6', '#F87171', '#F97316', '#FCD34D'];\n            break;\n        case 'bootstrap5':\n            palette = ['#262E0B', '#668E1F', '#AF6E10', '#862C0B', '#1F2D50',\n                '#64680B', '#311508', '#4C4C81', '#0C7DA0', '#862C0B'];\n            break;\n        case 'bootstrap5dark':\n            palette = ['#5ECB9B', '#A860F1', '#EBA844', '#557EF7', '#E9599B',\n                '#BFC529', '#3BC6CF', '#7A68EC', '#74B706', '#EA6266'];\n            break;\n        case 'fluent':\n            palette = ['#614570', '#4C6FB1', '#CC6952', '#3F579A', '#4EA09B',\n                '#6E7A89', '#D4515C', '#E6AF5D', '#639751', '#9D4D69'];\n            break;\n        case 'fluentdark':\n            palette = ['#8AB113', '#2A72D5', '#43B786', '#584EC6', '#E85F9C',\n                '#6E7A89', '#EA6266', '#EBA844', '#26BC7A', '#BC4870'];\n            break;\n        case 'material3':\n            palette = ['#6200EE', '#E77A16', '#82C100', '#7107DC', '#05BB3D',\n                '#D21020', '#FAD200', '#0085FF', '#9204EA', '#08EE9B'];\n            break;\n        case 'material3dark':\n            palette = ['#4EAAFF', '#FA4EAB', '#FFF500', '#17EA58', '#38FFE7',\n                '#FF9E45', '#B3F32F', '#B93CE4', '#FC5664', '#9B55FF'];\n            break;\n    }\n    return palette;\n}\n/**\n * Function to get ThemeStyle\n *\n * @param {GaugeTheme} theme theme\n * @returns {IThemeStyle} style\n * @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                tooltipFontSize: '13px',\n                tooltipTextOpacity: 1,\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                tooltipFontSize: '13px',\n                tooltipTextOpacity: 1,\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '13px',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '13px',\n                labelColor: '#6B7280',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                tooltipFontSize: '13px',\n                labelColor: '#9CA3AF',\n                lineColor: '#374151',\n                majorTickColor: '#6B7280',\n                minorTickColor: '#6B7280',\n                pointerColor: '#9CA3AF',\n                capColor: '#9CA3AF',\n                needleColor: '#9CA3AF',\n                needleTailColor: '#9CA3AF',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#343A40',\n                tooltipFillColor: '#212529',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '13px',\n                labelColor: '#495057',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#E9ECEF',\n                tooltipFillColor: '#E9ECEF',\n                tooltipFontColor: '#212529',\n                tooltipFontSize: '13px',\n                labelColor: '#CED4DA',\n                lineColor: '#343A40',\n                majorTickColor: '#6C757D',\n                minorTickColor: '#6C757D',\n                pointerColor: '#ADB5BD',\n                capColor: '#ADB5BD',\n                needleColor: '#ADB5BD',\n                needleTailColor: '#ADB5BD',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'fluent':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#201F1E',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#323130',\n                tooltipFontSize: '13px',\n                labelColor: '#3B3A39',\n                lineColor: '#EDEBE9',\n                majorTickColor: '#C8C6C4',\n                minorTickColor: '#C8C6C4',\n                pointerColor: '#A19F9D',\n                capColor: '#A19F9D',\n                needleColor: '#A19F9D',\n                needleTailColor: '#A19F9D',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '600'\n            };\n            break;\n        case 'fluentdark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#F3F2F1',\n                tooltipFillColor: '#252423',\n                tooltipFontColor: '#F3F2F1',\n                tooltipFontSize: '13px',\n                labelColor: '#C8C6C4',\n                lineColor: '#292827',\n                majorTickColor: '#484644',\n                minorTickColor: '#484644',\n                pointerColor: '#797775',\n                capColor: '#797775',\n                needleColor: '#797775',\n                needleTailColor: '#797775',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '600'\n            };\n            break;\n        case 'material3':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#1C1B1F',\n                tooltipFillColor: '#313033',\n                tooltipFontColor: '#F4EFF4',\n                tooltipFontSize: '14px',\n                labelColor: ' #1E192B',\n                lineColor: '#E7E0EC',\n                majorTickColor: '#C4C7C5',\n                minorTickColor: '#C4C7C5',\n                pointerColor: '#49454E',\n                capColor: '#49454E',\n                needleColor: '#49454E',\n                needleTailColor: '#49454E',\n                fontFamily: 'Roboto',\n                fontSize: '16px',\n                labelFontFamily: 'Roboto',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: '400',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'material3dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#E6E1E5',\n                tooltipFillColor: '#E6E1E5',\n                tooltipFontColor: '#313033',\n                tooltipFontSize: '14px',\n                labelColor: '#E6E1E5',\n                lineColor: '#49454F',\n                majorTickColor: '#444746',\n                minorTickColor: '#444746',\n                pointerColor: '#CAC4D0',\n                capColor: '#CAC4D0',\n                needleColor: '#CAC4D0',\n                needleTailColor: '#CAC4D0',\n                fontFamily: 'Roboto',\n                fontSize: '16px',\n                labelFontFamily: 'Roboto',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: '400',\n                titleFontWeight: '500'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipFontSize: '13px',\n                tooltipTextOpacity: 1,\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the options to customize the styles of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Border.prototype, \"dashArray\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: null, fontFamily: null, opacity: null, fontWeight: null }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px', fontFamily: null, opacity: null }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: null, fontFamily: null, opacity: null, fontWeight: null }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the options to customize the axis line in circular gauge.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the options to customize the axis label in circular gauge.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isLinearCircularGradient = false;\n        return _this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radialGradient\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the options to customize the major and minor tick lines of an axis in circular gauge.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"radialGradient\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the options to customize the pointer needle in the circular gauge.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"radialGradient\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation elements for an axis in circular gauge.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the options to customize the pointers of an axis in circular gauge.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        /**\n         * Sets and gets the value of the pointer in circular gauge.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isPointerAnimation = true;\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radialGradient\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge.\n *\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge.\n *\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge.\n *\n * @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge.\n *\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge.\n *\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge.\n *\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge.\n *\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge.\n *\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge.\n *\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge.\n *\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge.\n *\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge.\n *\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge.\n *\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge.\n *\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge.\n *\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge.\n *\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge.\n *\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge.\n *\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge.\n *\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { getTemplateFunction, getElement, stringToNumber, getFontStyle, getLocationFromAngle, removeElement } from '../utils/helper-common';\nimport { annotationRender } from '../model/constants';\nimport { createElement, isNullOrUndefined, Animation } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n *\n * @hidden\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line\n    function Annotations(gauge) {\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     *\n     * @private\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index, gauge) {\n        var _this = this;\n        var width = gauge.availableSize.width;\n        var element = createElement('div', {\n            id: gauge.element.id + '_Annotations_' + index, styles: gauge.allowLoadingAnimation ? 'opacity: 0' : 'opacity: 1'\n        });\n        var parentElement = getElement(gauge.element.id + '_Secondary_Element');\n        if (!isNullOrUndefined(document.getElementById(gauge.element.id + '_Secondary_Element'))) {\n            document.getElementById(gauge.element.id + '_Secondary_Element').style.width = width + 'px';\n        }\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index, gauge);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        gauge.renderReactTemplates();\n    };\n    /**\n     * Method to annotation animation for circular gauge.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of gauge.\n     * @returns {void}\n     * @private\n     */\n    Annotations.prototype.annotationAnimation = function (gauge) {\n        for (var i = 0; i < gauge.axes.length; i++) {\n            var element = document.getElementById(gauge.element.id + '_Annotations_' + i);\n            if (!isNullOrUndefined(element)) {\n                if (element['style']['opacity'] === '0') {\n                    this.annotationAnimate(element, gauge, i);\n                }\n            }\n        }\n    };\n    /**\n     * Method to annotation animation for circular gauge.\n     *\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of gauge.\n     * @returns {void}\n     */\n    Annotations.prototype.annotationAnimate = function (element, gauge, axisIndex) {\n        var tempOpacity = 0;\n        var opacity = 1;\n        new Animation({}).animate(element, {\n            duration: gauge.loadingAnimationDuration[axisIndex],\n            progress: function (args) {\n                if (args.timeStamp > args.delay) {\n                    tempOpacity = ((args.timeStamp - args.delay) / args.duration);\n                    element['style']['opacity'] = (opacity * tempOpacity);\n                }\n            },\n            end: function () {\n                element['style']['opacity'] = opacity;\n                gauge.isOverAllAnimationComplete = true;\n            }\n        });\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     *\n     * @private\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex, gauge) {\n        var _this = this;\n        var axis = gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: gauge.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex\n        });\n        childElement.style.cssText = 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n            (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';';\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, gauge);\n                if (templateFn && templateFn(axis, gauge, argsData.content, gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length) {\n                    templateElement = Array.prototype.slice.call(templateFn(axis, gauge, argsData.content, gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    var annotationElement = createElement('div', {\n                        innerHTML: !isNullOrUndefined(argsData.content) ? argsData.content.toString() : null,\n                        id: 'StringTemplate'\n                    });\n                    annotationElement.style.cssText = getFontStyle(argsData.textStyle);\n                    childElement.appendChild(annotationElement);\n                }\n                _this.updateLocation(childElement, axis, annotation, gauge);\n                element.appendChild(childElement);\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Annotation} annotation - Specifies the annotation.\n     * @returns {void}\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation, gauge) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), gauge.midPoint);\n        var elementRect = this.measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n        element.setAttribute('role', 'region');\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Annotations.prototype.destroy = function () { };\n    /**\n     * Function to measure the element rect.\n     *\n     * @param {HTMLElement} element - Specifies the html element.\n     * @returns {ClientRect} - Returns the client rect.\n     * @private\n     */\n    Annotations.prototype.measureElementRect = function (element) {\n        document.body.appendChild(element);\n        var bounds = element.getBoundingClientRect();\n        removeElement(element.id);\n        return bounds;\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getAngleFromValue, getLocationFromAngle, getPointer, getLabelFormat, Rect } from '../utils/helper-common';\nimport { getMousePosition, getElementSize } from '../utils/helper-tooltip';\nimport { Browser, createElement, isNullOrUndefined, remove, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\nimport { titleTooltip } from '../utils/helper-legend';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n *\n * @hidden\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     *\n     * @param {PointerEvent} e - specifies the event argument.\n     * @returns {void}\n     *\n     * @private\n     */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        var isTooltipRender = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            isTooltipRender = true;\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1 && typeof template !== 'function') {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, tooltipArgs.location, true) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, tooltipArgs.location, false);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    var pointerTextStyle = {\n                        color: tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor,\n                        opacity: tooltipArgs.tooltip.textStyle.opacity || _this.gauge.themeStyle.tooltipTextOpacity,\n                        fontFamily: tooltipArgs.tooltip.textStyle.fontFamily || _this.gauge.themeStyle.fontFamily,\n                        fontWeight: tooltipArgs.tooltip.textStyle.fontWeight || _this.gauge.themeStyle.fontWeight,\n                        fontStyle: tooltipArgs.tooltip.textStyle.fontStyle,\n                        size: tooltipArgs.tooltip.textStyle.size || _this.gauge.themeStyle.tooltipFontSize\n                    };\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, pointerTextStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) : this.gauge.enableRtl ? 'Start:' + rangeFormat(roundStartValue) + ' <br>End:' + rangeFormat(roundEndValue) + ' ' :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            var rangeTooltipTextStyle_1 = { color: this.gauge.tooltip.rangeSettings.textStyle.color, opacity: this.gauge.tooltip.rangeSettings.textStyle.opacity,\n                fontFamily: this.gauge.tooltip.rangeSettings.textStyle.fontFamily, fontStyle: this.gauge.tooltip.rangeSettings.textStyle.fontStyle,\n                fontWeight: this.gauge.tooltip.rangeSettings.textStyle.fontWeight, size: this.gauge.tooltip.rangeSettings.textStyle.size\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1 && typeof rangeTemplate !== 'function') {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (typeof rangeTemplate !== 'function' && rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeTooltipArgs.location, true) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeTooltipArgs.location, false);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipTextStyle_1.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipTextStyle_1.fontFamily = rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily\n                        || _this.gauge.themeStyle.fontFamily;\n                    rangeTooltipTextStyle_1.fontWeight = rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontWeight\n                        || _this.gauge.themeStyle.fontWeight;\n                    rangeTooltipTextStyle_1.opacity = rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity ||\n                        _this.gauge.themeStyle.tooltipTextOpacity;\n                    rangeTooltipTextStyle_1.size = rangeTooltipArgs.tooltip.rangeSettings.textStyle.size\n                        || _this.gauge.themeStyle.tooltipFontSize;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipTextStyle_1, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1 && typeof annotationTemplate !== 'function') {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    var annotationTextStyle = {\n                        color: annotationTooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor,\n                        fontFamily: annotationTooltipArgs.tooltip.textStyle.fontFamily || _this.gauge.themeStyle.fontFamily,\n                        fontWeight: annotationTooltipArgs.tooltip.textStyle.fontWeight || _this.gauge.themeStyle.fontWeight,\n                        opacity: annotationTooltipArgs.tooltip.textStyle.opacity || _this.gauge.themeStyle.tooltipTextOpacity,\n                        fontStyle: annotationTooltipArgs.tooltip.textStyle.fontStyle,\n                        size: annotationTooltipArgs.tooltip.textStyle.size || _this.gauge.themeStyle.fontSize\n                    };\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTextStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((target.id === (this.gauge.element.id + '_CircularGaugeTitle') || target.id.indexOf('_gauge_legend_') > -1) &&\n            (e.target.textContent.indexOf('...') > -1)) {\n            titleTooltip(e, pageX, pageY, this.gauge, false);\n        }\n        else {\n            var isTooltipRemoved = this.removeTooltip();\n            if (isTooltipRemoved) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if ((this.gauge.isVue || this.gauge.isVue3)) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.gauge.clearTemplate([this.tooltipEle.children[0].id], [0]);\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                else if (!this.gauge.isAngular) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.gauge.clearTemplate();\n                }\n            }\n        }\n        var gaugeElement = document.getElementById(this.gaugeId);\n        var gaugeRect = gaugeElement.getBoundingClientRect();\n        var tooltipRect = isTooltipRender ? this.tooltipEle.getBoundingClientRect() : null;\n        if (isTooltipRender && this.tooltipEle.offsetLeft < 0 && (tooltipRect.left - gaugeRect.left) < 0) {\n            var tooltipLeft = this.tooltipEle.style.left.split('px')[0];\n            this.tooltipEle.style.left = parseInt(tooltipLeft, 10) + (gaugeRect.left - tooltipRect.left) + 'px';\n        }\n        if (isTooltipRender && tooltipRect.top < 0) {\n            this.tooltipEle.style.top = 0 + 'px';\n        }\n    };\n    /**\n     * Method to create tooltip svg element.\n     *\n     * @param {Tooltip} svgTooltip - Specifies the tooltip element.\n     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.\n     * @param {string} template - Specifies the tooltip template.\n     * @param {boolean} arrowInverted - Specifies the boolean value.\n     * @param {Rect} tooltipRect - Specifies the rect element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @param {string} fill - Spcifies the fill color of the tooltip.\n     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.\n     * @param {BorderModel} border - Specifies the border of the tooltip.\n     * @returns {Tooltip} - Returns the tooltip.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            template: template,\n            enableRTL: gauge.enableRtl,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [SanitizeHtmlHelper.sanitize(tooltipArg.content)],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border,\n            enableShadow: true\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((gauge.isVue || gauge.isVue3)) {\n            svgTooltip.controlInstance = gauge;\n        }\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     *\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip'\n            });\n            this.tooltipEle.style.cssText = 'position: absolute;pointer-events:none;';\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    /**\n     * Method to get parent annotation element.\n     *\n     * @param {Element} child - Specifies the annotation element.\n     * @returns {boolean} - Returns the boolean value.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     *\n     * @param {number} currentValue - Specifies the current value.\n     * @returns {number} - Returns the round number.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     *\n     * @param {Rect} rect - Specifies the rect element.\n     * @param {number} angle - Specifies the angle.\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {boolean} isTemplate - whether it is template or not .\n     * @returns {Rect} - Returns the rect element.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, location, isTemplate) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        var padding = 10;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = isTemplate ? true : isTemplate;\n                addTop = (angle >= 150 && angle <= 160 && isTemplate) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - location.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x + padding, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x - padding : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        var isTooltipRemoved = false;\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n                isTooltipRemoved = true;\n            }\n            this.pointerEle = null;\n        }\n        return isTooltipRemoved;\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.removeTooltip();\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     *\n     * @private\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     *\n     * @private\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge) {\n            if (this.gauge.isDestroyed) {\n                return;\n            }\n            this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n            this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n            this.gauge.element.removeEventListener('contextmenu', this.removeTooltip);\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function () {\n        this.tooltipEle = null;\n        this.currentAxis = null;\n        this.tooltip = null;\n        this.currentPointer = null;\n        this.currentRange = null;\n        this.currentAnnotation = null;\n        this.borderStyle = null;\n        if (!isNullOrUndefined(this.svgTooltip)) {\n            this.svgTooltip.destroy();\n        }\n        this.svgTooltip = null;\n        this.tooltipRect = null;\n        this.pointerEle = null;\n        this.annotationTargetElement = null;\n        this.gauge = null;\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { stringToNumber, toPixel, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getPathArc, getRoundedPathArc, getDegree, isCompleteAngle, PathOption, TextOption } from '../utils/helper-common';\nimport { getRangeColor } from '../utils/helper-axis-renderer';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to check the angles.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.checkAngles = function (axis) {\n        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;\n        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0 && this.gauge.allowComponentRender) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', gauge.allowLoadingAnimation ? 'visibility: hidden; pointer-events:none;' : 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index, style: gauge.allowLoadingAnimation ? 'visibility: hidden;' : 'pointer-events:none;'\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, lastLabelAnchor);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, anchor);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, anchor);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            var textFont = {\n                size: style.font.size,\n                color: style.font.color,\n                fontFamily: style.font.fontFamily || this.gauge.themeStyle.labelFontFamily,\n                fontWeight: style.font.fontWeight || this.gauge.themeStyle.fontWeight,\n                fontStyle: style.font.fontStyle,\n                opacity: style.font.opacity\n            };\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                var labelTextElement = textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), textFont, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                labelTextElement.setAttribute('aria-label', label.text);\n                labelTextElement.setAttribute('role', 'region');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     *\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} angle - Specifies the angle.\n     * @param {VisibleLabels} label - Specifies the labels.\n     * @returns {string} - Returns the anchor.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     *\n     * @param {GaugeLocation} previousLocation - Specifies the previous location.\n     * @param {number} previousWidth - Specifies the previous width.\n     * @param {number} previousHeight - Specifies the previous height.\n     * @param {GaugeLocation} currentLocation - Specifies the current location.\n     * @param {number} currentWidth - Specifies the current width.\n     * @param {number} currentHeight - Specifies the current height.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     *\n     * @param {GaugeLocation} actualLocation - Specifies the actual location.\n     * @param {number} textWidth - Specifies the text width.\n     * @param {string} anchorPosition - Specifies the anchor position.\n     * @returns {GaugeLocation} - Returns the gauge location.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, anchorPosition) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     *\n     * @param {number} angle - Specifies the angle.\n     * @param {number} size - Specifies the size.\n     * @returns {number} - Returns the fineal size.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            var j = 0;\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    var tickElement = appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + j++, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', gauge.allowLoadingAnimation ? 'visibility: hidden;pointer-events: none;' : 'pointer-events:none;'), minorTickElements, gauge);\n                    tickElement.setAttribute('data-interval', i.toString());\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            var j = 0;\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                var tickElement = appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + j, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', gauge.allowLoadingAnimation ? 'visibility: hidden;pointer-events:none;' : 'pointer-events:none;'), majorTickElements, gauge);\n                tickElement.setAttribute('data-interval', i.toString());\n                j++;\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     *\n     * @param {number} value - Specifies the value.\n     * @param {Tick} options - Specifies the options.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the range path of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Range} range - Specifies the range.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {\n        var startValue;\n        var direction;\n        var endValue;\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var gradientRangeColor;\n        if (range.isLinearCircularGradient) {\n            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);\n            var rangeStart = range.linearGradient.colorStop.length > 1 ?\n                (range.start + (rangeSplitValue * (colorIndex))) : range.start;\n            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;\n            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);\n            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);\n        }\n        else {\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n        }\n        startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        var isAngleCross360 = (startAngle > endAngle);\n        if (axis.rangeGap != null && axis.rangeGap > 0 && range.start !== range.end\n            || (!isNullOrUndefined(range.linearGradient) && !range.isLinearCircularGradient\n                && (colorIndex === range.linearGradient.colorStop.length - 1))) {\n            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :\n                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?\n                    startAngle - (axis.rangeGap / Math.PI) :\n                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient\n                    ? (axis.direction === 'AntiClockWise' ? startAngle - (axis.rangeGap / Math.PI) : startAngle + (axis.rangeGap / Math.PI)) : startAngle;\n            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :\n                !isNullOrUndefined(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1\n                    && range.isLinearCircularGradient ?\n                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :\n                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?\n                    (axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) : endAngle - (axis.rangeGap / Math.PI)) : endAngle;\n        }\n        if (this.gauge.allowComponentRender) {\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle)) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = typeof range.roundedCornerRadius === 'string' ? parseFloat(range.roundedCornerRadius) : range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                var degreeValue = getDegree(startAngle, endAngle);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                if (roundedStartAngle > roundedEndAngle && (roundedStartAngle - roundedEndAngle) <= radius) {\n                    roundedStartAngle = startAngle;\n                    roundedEndAngle = endAngle;\n                }\n                if (this.gauge.gradientModule && ((!isNullOrUndefined(range.linearGradient)\n                    && !isNullOrUndefined(range.linearGradient.colorStop)) || (!isNullOrUndefined(range.radialGradient)\n                    && !isNullOrUndefined(range.radialGradient.colorStop)))) {\n                    if (range.isLinearCircularGradient) {\n                        endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                        var degree = getDegree(startAngle, endAngle);\n                        var rangeColorLength = range.linearGradient.colorStop.length;\n                        var degreeRange = ((axis.startAngle === axis.endAngle ?\n                            (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :\n                            (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));\n                        var degreeRangeValue = void 0;\n                        if (degreeRange <= 360 && degreeRange >= 270) {\n                            degreeRangeValue = 270;\n                        }\n                        else if (degreeRange <= 270 && degreeRange >= 180) {\n                            degreeRangeValue = 180;\n                        }\n                        else if (degreeRange <= 180 && degreeRange >= 90) {\n                            degreeRangeValue = 90;\n                        }\n                        else if (degreeRange <= 90 && degreeRange >= 0) {\n                            degreeRangeValue = 0;\n                        }\n                        var gradientDegree = axis.direction === 'AntiClockWise' ?\n                            (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)\n                            : axis.startAngle + degree * (colorIndex);\n                        var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'\n                            ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle\n                                + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :\n                                axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle\n                            + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle\n                            ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?\n                                (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +\n                                    degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))\n                                : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :\n                            gradientDegree < 360 ? gradientDegree : gradientDegree - 360;\n                        range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap\n                            : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap\n                            : axis.ranges[rangeIndex - 1]['gradientAngle'];\n                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                            range.gradientAntiAngle = gradientAngle;\n                        }\n                        if (rangeIndex !== 0) {\n                            gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :\n                                range.gradientAngle + gradientAngle - axis.startAngle;\n                            range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?\n                                gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;\n                            if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                                ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                                range.gradientAntiAngle = gradientAngle;\n                            }\n                        }\n                        if (gradientAngle > 45 && gradientAngle <= 115\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';\n                        }\n                        else if (gradientAngle > 115 && gradientAngle < 170) {\n                            direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';\n                        }\n                        else if (gradientAngle >= 170 && gradientAngle <= 280) {\n                            direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';\n                        }\n                        else if (gradientAngle > 280 && gradientAngle <= 360\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';\n                        }\n                    }\n                    gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);\n                }\n                range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;\n                if (range.roundedCornerRadius) {\n                    if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {\n                        if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {\n                            if (axis.direction === 'ClockWise') {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);\n                            }\n                            else {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);\n                            }\n                        }\n                        else {\n                            this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                        }\n                    }\n                    else {\n                        this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);\n                    }\n                }\n                else {\n                    this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                }\n            }\n            else if ((range.start === range.end) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n            }\n        }\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.\n     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.\n     * @param {number} oldStart - Specifies the rounded path of the old start value.\n     * @param {number} oldEnd - Specifies the rounded path of the old end value..\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex\n            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} startAngle - Specifies the rounded path of the start angle.\n     * @param {number} endAngle - Specifies the rounded path of the end angle.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption(!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {\n        var _this = this;\n        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));\n        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :\n            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index,\n                style: this.gauge.allowLoadingAnimation ? 'opacity: 0;' : '' });\n        var startWidth;\n        var startEndDifference;\n        var endWidth;\n        var previousEndWidth;\n        var previousStartWidth;\n        axis.ranges.map(function (range, rangeIndex) {\n            range.isLinearCircularGradient = !isNullOrUndefined(_this.gauge.gradientModule)\n                && !isNullOrUndefined(range.linearGradient) && isNullOrUndefined(range.linearGradient.startValue)\n                && isNullOrUndefined(range.linearGradient.endValue) && !isNullOrUndefined(range.linearGradient.colorStop);\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            if (range.isLinearCircularGradient) {\n                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {\n                    if (i <= (range.linearGradient.colorStop.length - 1)) {\n                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;\n                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;\n                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));\n                        if (i > 0) {\n                            startWidth = endWidth;\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                        else {\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                    }\n                    else {\n                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                            : startWidth + startEndDifference;\n                        endWidth = (previousEndWidth);\n                    }\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);\n                }\n            }\n            else {\n                if (!(range.start === range.end && axis.direction === 'AntiClockWise' && axis.startAngle === axis.endAngle)) {\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     *\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.destroy = function () {\n        this.gauge = null;\n        this.majorValues = [];\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getRoundedPathArc, calculateShapes, PathOption, Size, TextOption } from '../utils/helper-common';\nimport { linear, getCompleteArc } from '../utils/helper-pointer-renderer';\nimport { Animation, isNullOrUndefined, animationMode } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {boolean} animate - Specifies the boolean value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        if (this.gauge.allowComponentRender) {\n            axis.pointers.map(function (pointer, pointerIndex) {\n                if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                    pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n                }\n                else {\n                    pointer.currentDistanceFromScale = pointer.offset;\n                }\n                pointer.pathElement = [];\n                _this.calculatePointerRadius(axis, pointer);\n                childElement = gauge.renderer.createGroup({\n                    id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n                });\n                if (pointer.value != null) {\n                    childElement.setAttribute('aria-label', pointer.description || 'Pointer:' + pointer.value.toString());\n                    childElement.setAttribute('role', 'region');\n                }\n                _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n                if (_this.gauge.allowLoadingAnimation) {\n                    childElement.style.visibility = 'hidden';\n                }\n                else {\n                    _this.setPointerValue(axis, pointer, pointer.currentValue);\n                }\n                pointerElement.appendChild(childElement);\n                if (!_this.gauge.allowLoadingAnimation && ((animate || pointer.animation.enable) || animationMode === 'Enable') && (!_this.gauge.isPropertyChange || pointer.isPointerAnimation)) {\n                    pointer.previousValue = !_this.gauge.isPropertyChange ? axis.minimum : pointer.previousValue;\n                    _this.doPointerAnimation(childElement, pointer, axis, axisIndex);\n                }\n            });\n            element.appendChild(pointerElement);\n        }\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     *\n     * @returns {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     *\n     * @returns {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +\n                        pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var needle = pointer.needleTail;\n        var cap = pointer.cap;\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        var gradientColor;\n        var gradientTailColor;\n        var gradientCapColor;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        if (gauge.gradientModule) {\n            gradientColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :\n            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, direction), parentElement, gauge));\n        // eslint-disable-next-line prefer-const\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (gauge.gradientModule) {\n            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);\n        }\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, pointer.needleTail.border.dashArray, direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (gauge.gradientModule) {\n            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);\n        }\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, pointer.cap.border.dashArray, '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var _this = this;\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (radius > 0 && radius <= 5) {\n            radius = 6;\n            minRadius = (radius * 0.25);\n        }\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            if (startAngle > endAngle) {\n                endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                    Math.round(endAngle) - (pointer.roundedCornerRadius > 0 ? 1.5 : 0.5) : Math.round(endAngle);\n            }\n            else {\n                endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n            }\n        }\n        else {\n            endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                [startAngle, startAngle = (endAngle > startAngle ? endAngle + (pointer.roundedCornerRadius > 0 ? 1.5 : 0.5) : endAngle - 1)][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        if (value <= (axis.visibleRange.min + axis.visibleRange.interval) && pointer.roundedCornerRadius) {\n            radius = value === axis.visibleRange.min || (axis.visibleRange.min + 1) ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var angleValue = value === axis.maximum && (axis.startAngle === axis.endAngle ||\n            Math.abs(axis.startAngle - axis.endAngle) === 360) && pointer.type === 'RangeBar' ? 45 : 180;\n        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / angleValue) +\n            radius) / (pointer.currentRadius)) * angleValue) / Math.PI;\n        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / angleValue) -\n            radius) / (pointer.currentRadius)) * angleValue) / Math.PI;\n        if (roundStartAngle > roundEndAngle && (roundStartAngle - roundEndAngle) <= 36 && pointer.type === 'RangeBar') {\n            roundStartAngle = startAngle;\n            roundEndAngle = endAngle;\n        }\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (radius && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                    _this.calculateTextElement(axis, pointer, value, element);\n                }\n                else {\n                    element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n                }\n            }\n        });\n    };\n    /**\n     * Method to set the text value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @param {Element} element - Specifies the text element.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.calculateTextElement = function (axis, pointer, value, element) {\n        var textangle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var textlocation = getLocationFromAngle(textangle, pointer.currentRadius, this.gauge.midPoint);\n        element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n        element.setAttribute('x', String(textlocation.x));\n        element.setAttribute('y', String(textlocation.y));\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var gradientMarkerColor;\n        var angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (gauge.gradientModule) {\n            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var style = {\n                size: pointer.textStyle.size,\n                color: pointer.textStyle.color || this.gauge.themeStyle.pointerColor,\n                fontFamily: pointer.textStyle.fontFamily,\n                fontStyle: pointer.textStyle.fontStyle,\n                fontWeight: pointer.textStyle.fontWeight || this.gauge.themeStyle.fontWeight,\n                opacity: pointer.textStyle.opacity\n            };\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            var textObject = textElement(textOption, style, style.color, parentElement, 'pointer-events : auto; ');\n            textObject.style.visibility = ((pointer.animation.enable || animationMode === 'Enable') && (!this.gauge.isPropertyChange || pointer.isPointerAnimation) && this.gauge.animatePointer) ? 'hidden' : 'visible';\n            pointer.pathElement.push(textObject);\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var gradientBarColor;\n        if (gauge.gradientModule) {\n            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :\n            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, pointer.border.dashArray, ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     *\n     * @param {Element} pointerElement - specifies the pointer element.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointerElement, pointer, axis, axisIndex) {\n        var _this = this;\n        var startValue = !isNullOrUndefined(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (((pointer.animation.enable || animationMode === 'Enable') && startValue !== endValue && this.gauge.animatePointer) ||\n            (!isNullOrUndefined(this.gauge.loadingAnimationDuration) && this.gauge.loadingAnimationDuration[axisIndex] > 0)) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, axisIndex);\n                }\n                else {\n                    if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                        _this.performTextAnimation(pointerElement, startValue, endValue, axis, pointer, axisIndex);\n                    }\n                    else {\n                        _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, axisIndex);\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {HTMLElement} element - specifies the element.\n     * @param {number} start - specifies the start.\n     * @param {number} end - specifies the end.\n     * @param {Axis} axis - specifies the axis.\n     * @param {Pointer} pointer - specfies the pointer.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performTextAnimation = function (element, start, end, axis, pointer, axisIndex) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var textangle;\n        var textlocation;\n        var pointerValue = 0;\n        var timeStamp;\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        element = !isNullOrUndefined(element.children[0]) ? element.children[0] : element;\n        var val = Math.abs(start - end);\n        new Animation({}).animate(element, {\n            duration: this.gauge.isAnimationProgress ? (isNullOrUndefined(pointer.value) || pointer.value === axis.minimum ? 0 :\n                (animationMode === 'Enable' && (((!pointer.animation.enable || pointer.animation.duration === 0)\n                    && !this.gauge.allowLoadingAnimation) || (this.gauge.allowLoadingAnimation && (this.gauge.animationDuration === 0\n                    && pointer.animation.enable && pointer.animation.duration === 0)))) ? 1000 :\n                    (this.gauge.allowLoadingAnimation ? (pointer.animation.enable && pointer.animation.duration > 0 ? pointer.animation.duration\n                        : this.gauge.loadingAnimationDuration[axisIndex]) : pointer.animation.duration)) : 0,\n            progress: function (args) {\n                if (_this.gauge.isAnimationProgress) {\n                    if (args.timeStamp > args.delay) {\n                        timeStamp = (args.timeStamp / pointer.animation.duration);\n                        pointerValue = end > start ? start + (timeStamp * val) : start - (timeStamp * val);\n                        textangle = getAngleFromValue(pointerValue, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n                        textlocation = getLocationFromAngle(textangle, pointer.currentRadius, _this.gauge.midPoint);\n                        element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n                        element.setAttribute('x', String(textlocation.x));\n                        element.setAttribute('y', String(textlocation.y));\n                        element.style.visibility = 'visible';\n                    }\n                }\n            },\n            end: function () {\n                if (_this.gauge.isAnimationProgress) {\n                    _this.setPointerValue(axis, pointer, end);\n                    pointer.isPointerAnimation = false;\n                }\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                if (!isNullOrUndefined(_this.gauge.loadingAnimationDuration) && (_this.gauge.loadingAnimationDuration[axisIndex] > 0 && !isNullOrUndefined(_this.gauge.annotationsModule))) {\n                    _this.gauge.annotationsModule.annotationAnimation(_this.gauge);\n                }\n                else {\n                    _this.gauge.isOverAllAnimationComplete = true;\n                }\n            }\n        });\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element\n     * @param {number} start - Specifies the start\n     * @param {number} end - Specifies the end\n     * @param {Axis} axis - Specifies the axis\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, axisIndex) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: this.gauge.isAnimationProgress ? (isNullOrUndefined(pointer.value) || pointer.value === axis.minimum ? 0 :\n                (animationMode === 'Enable' && (((!pointer.animation.enable || pointer.animation.duration === 0)\n                    && !this.gauge.allowLoadingAnimation) || (this.gauge.allowLoadingAnimation && (this.gauge.animationDuration === 0\n                    && pointer.animation.enable && pointer.animation.duration === 0)))) ? 1000 :\n                    (this.gauge.allowLoadingAnimation ? (pointer.animation.enable && pointer.animation.duration > 0 ? pointer.animation.duration\n                        : this.gauge.loadingAnimationDuration[axisIndex]) : pointer.animation.duration)) : 0,\n            progress: function (args) {\n                if (_this.gauge.isAnimationProgress) {\n                    sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                        isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                        isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                    element.style.animation = 'None';\n                    if (start !== end) {\n                        element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                            _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n                        element.style.visibility = 'visible';\n                    }\n                }\n            },\n            end: function () {\n                if (_this.gauge.isAnimationProgress) {\n                    _this.setPointerValue(axis, pointer, end);\n                    if (_this.gauge.animationDuration > 0) {\n                        element.style.visibility = 'visible';\n                    }\n                    pointer.isPointerAnimation = false;\n                }\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n                if (!isNullOrUndefined(_this.gauge.loadingAnimationDuration) && _this.gauge.loadingAnimationDuration[axisIndex] > 0 && !isNullOrUndefined(_this.gauge.annotationsModule)) {\n                    _this.gauge.annotationsModule.annotationAnimation(_this.gauge);\n                }\n                else {\n                    _this.gauge.isOverAllAnimationComplete = true;\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {number} start - Specifies the start.\n     * @param {number} end - Specifies the end.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, axisIndex) {\n        var _this = this;\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        var pointerValue;\n        var timeStamp;\n        element.style.visibility = 'visible';\n        var val = Math.abs(start - end);\n        new Animation({}).animate(element, {\n            duration: this.gauge.isAnimationProgress ? (isNullOrUndefined(pointer.value) || pointer.value === axis.minimum ? 0 :\n                (animationMode === 'Enable' && (((!pointer.animation.enable || pointer.animation.duration === 0)\n                    && !this.gauge.allowLoadingAnimation) || (this.gauge.allowLoadingAnimation && (this.gauge.animationDuration === 0\n                    && pointer.animation.enable && pointer.animation.duration === 0)))) ? 1000 :\n                    (this.gauge.allowLoadingAnimation ? (pointer.animation.enable && pointer.animation.duration > 0 ? pointer.animation.duration\n                        : this.gauge.loadingAnimationDuration[axisIndex]) : pointer.animation.duration)) : 0,\n            progress: function (arg) {\n                if (_this.gauge.isAnimationProgress) {\n                    arg.duration = !_this.gauge.isAnimationProgress ? 0 : arg.duration;\n                    timeStamp = (arg.timeStamp / arg.duration);\n                    pointerValue = end > start ? start + (timeStamp * val) : start - (timeStamp * val);\n                    _this.setPointerValue(axis, pointer, pointerValue);\n                }\n            },\n            end: function () {\n                if (_this.gauge.isAnimationProgress) {\n                    _this.setPointerValue(axis, pointer, end);\n                    pointer.isPointerAnimation = false;\n                }\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                if (!isNullOrUndefined(_this.gauge.loadingAnimationDuration) && _this.gauge.loadingAnimationDuration[axisIndex] > 0 && !isNullOrUndefined(_this.gauge.annotationsModule)) {\n                    _this.gauge.annotationsModule.annotationAnimation(_this.gauge);\n                }\n                else {\n                    _this.gauge.isOverAllAnimationComplete = true;\n                }\n            }\n        });\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.destroy = function () {\n        this.gauge = null;\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined, Animation, animationMode } from '@syncfusion/ej2-base';\nimport { stringToNumber, measureText, getLocationFromAngle, getLabelFormat, VisibleLabels, isCompleteAngle, Size, Rect, getPathArc, getAngleFromValue } from '../utils/helper-common';\nimport { calculateSum } from '../utils/helper-axis-panel';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\nimport { getCompleteArc } from '../utils/helper-pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout.\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.axisOption = [];\n        this.prevAnimatedMajorTickValue = [];\n        this.prevAnimatedMajorTickIndex = [];\n        this.prevAnimatedMinorTickValue = [];\n        this.prevAnimatedMinorTickIndex = [];\n        this.allowAxisCount = [];\n        this.rangeAnimationCount = 0;\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            // eslint-disable-next-line prefer-spread\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerXpoint) && isNullOrUndefined(this_1.gauge.centerYpoint)) {\n                var endAngle = void 0;\n                var startAngle = axis.startAngle;\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(0, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            startPoint : ((270 - startAngle) < (endAngle - 90)) ? endPoint : startPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                _this.calculateVisibleLabels(axis);\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Rect} rect - Specifies the rect.\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum !== null ? axis.maximum : 100);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        var allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum)\n            && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n        if (!allowComponentRender) {\n            return 0;\n        }\n        else if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        if ((isNullOrUndefined(axis.minimum) && isNullOrUndefined(axis.maximum)) || axis.minimum !== axis.maximum) {\n            var _loop_2 = function (i) {\n                roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n                argsData = {\n                    cancel: false, name: axisLabelRender, axis: axis,\n                    text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                        format(roundValue),\n                    value: roundValue\n                };\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var axisLabelRenderSuccess = function (argsData) {\n                    if (!argsData.cancel) {\n                        axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                    }\n                };\n                axisLabelRenderSuccess.bind(this_2);\n                this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n            };\n            var this_2 = this;\n            for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n                _loop_2(i);\n            }\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        var annotationElement = createElement('div', {\n            id: gauge.element.id + '_Secondary_Element'\n        });\n        annotationElement.style.position = 'relative';\n        gauge.element.appendChild(annotationElement);\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            _this.gauge.allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum)\n                && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n            renderer.checkAngles(axis);\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            if (gauge.allowRangePreRender) {\n                renderer.drawAxisRange(axis, index, element);\n            }\n            renderer.drawAxisLine(axis, index, element, gauge);\n            if (!gauge.allowRangePreRender) {\n                renderer.drawAxisRange(axis, index, element);\n            }\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index, gauge);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n        if (gauge.allowLoadingAnimation) {\n            this.durationSplitUp((gauge.animationDuration === 0 && animationMode === 'Enable') ? 3000 : gauge.animationDuration, axesElements);\n        }\n    };\n    AxisLayoutPanel.prototype.labelElementAnimation = function (element, axisIndex) {\n        var _this = this;\n        if (element) {\n            new Animation({}).animate(element, {\n                duration: this.gauge.loadingAnimationDuration[axisIndex],\n                progress: function () {\n                    element.style.visibility = 'visible';\n                },\n                // eslint-disable-next-line\n                end: function () {\n                    element.style.visibility = 'visible';\n                    var axisElement = document.getElementById(_this.gauge.element.id + '_Axis_Labels_' + axisIndex);\n                    if (_this.gauge.axes[axisIndex].showLastLabel && parseInt(element.id.split('Label_')[1]) === (axisElement.childElementCount - 2)) {\n                        axisElement.style.visibility = 'visible';\n                        element = document.getElementById(_this.gauge.element.id + '_Axis_' + axisIndex + '_Label_' + (axisElement.childElementCount - 1));\n                        if (element) {\n                            element.style.visibility = 'visible';\n                        }\n                    }\n                }\n            });\n        }\n    };\n    AxisLayoutPanel.prototype.elementLabelAnimation = function (element, axisIndex, tickIndex, gauge) {\n        var _this = this;\n        if (element) {\n            new Animation({}).animate(element, {\n                duration: gauge.axes[axisIndex].labelStyle.font.size != null &&\n                    (gauge.axes[axisIndex].labelStyle.font.size === '0px' || gauge.axes[axisIndex].labelStyle.font.size === '0') ? 0 :\n                    ((gauge.loadingAnimationDuration[axisIndex] / this.axisOption[axisIndex].axisLabelCount)),\n                progress: function () {\n                    element.style.visibility = 'visible';\n                },\n                end: function () {\n                    tickIndex += 1;\n                    _this.elementLabelAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex), axisIndex, tickIndex, gauge);\n                    var axisElement = document.getElementById(_this.gauge.element.id + '_Axis_Labels_' + axisIndex);\n                    if (_this.gauge.axes[axisIndex].showLastLabel && parseInt(element.id.split('Label_')[1]) === (axisElement.childElementCount - 2)) {\n                        element = document.getElementById(_this.gauge.element.id + '_Axis_' + axisIndex + '_Label_' + (axisElement.childElementCount - 1));\n                        if (element) {\n                            element.style.visibility = 'visible';\n                        }\n                        axisElement.style.visibility = 'visible';\n                    }\n                    if (_this.rangeAnimationCount === 0 && (_this.axisOption[axisIndex].axisLabelCount - 1) === tickIndex) {\n                        axisElement.style.visibility = 'visible';\n                        _this.rangeAnimationCount++;\n                        _this.rangeAnimation(gauge);\n                    }\n                }\n            });\n        }\n    };\n    AxisLayoutPanel.prototype.axisLineCalculation = function (axisElement, axis, value, gauge) {\n        var checkMinValue = value === axis.visibleRange.min;\n        var location = gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var axisWidth = axis.lineStyle.width / 2;\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            if (startAngle > endAngle) {\n                endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                    Math.round(endAngle) - 0.5 : Math.round(endAngle);\n            }\n            else {\n                endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n            }\n        }\n        else {\n            endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                [startAngle, startAngle = (endAngle > startAngle ? endAngle + 0.5 : endAngle - 1)][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        axisElement.setAttribute('d', getCompleteArc(location, startAngle, endAngle, (axis.currentRadius + axisWidth), (axis.currentRadius - axisWidth), checkMinValue));\n    };\n    AxisLayoutPanel.prototype.axisLineAnimation = function (axisIndex, duration, gauge) {\n        var _this = this;\n        // eslint-disable-next-line\n        var axis = gauge.axes[axisIndex];\n        this.prevAnimatedMajorTickValue.push(axis.minimum);\n        this.prevAnimatedMinorTickValue.push(axis.minimum);\n        this.prevAnimatedMinorTickIndex.push(0);\n        this.prevAnimatedMajorTickIndex.push(0);\n        this.prevAnimatedTickType = 'major';\n        if (this.axisOption[axisIndex].isAxisLine) {\n            var axisElement_1 = document.getElementById(gauge.element.id + '_AxisLine_' + axisIndex);\n            var start_1 = axis.visibleRange.min;\n            var end_1 = axis.visibleRange.max;\n            var pointerValue_1;\n            var timeStamp_1;\n            var val_1 = Math.abs(start_1 - end_1);\n            new Animation({}).animate(axisElement_1, {\n                duration: duration,\n                progress: function (arg) {\n                    axisElement_1.style.visibility = 'visible';\n                    axisElement_1.setAttribute('fill', axis.lineStyle.color);\n                    axisElement_1.setAttribute('stroke-width', '0');\n                    timeStamp_1 = (arg.timeStamp / arg.duration);\n                    pointerValue_1 = end_1 > start_1 ? start_1 + (timeStamp_1 * val_1) : start_1 - (timeStamp_1 * val_1);\n                    _this.axisLineCalculation(axisElement_1, axis, pointerValue_1, gauge);\n                },\n                end: function () {\n                    axisElement_1.setAttribute('fill', 'transparent');\n                    axisElement_1.setAttribute('stroke-width', axis.lineStyle.width.toString());\n                    axisElement_1.setAttribute('d', getPathArc(gauge.midPoint, axis.startAngle - 90, axis.endAngle - 90, axis.currentRadius));\n                    axisElement_1.style.visibility = 'visible';\n                    _this.axisAnimation(axisIndex, duration, gauge);\n                }\n            });\n        }\n        else if (this.axisOption[axisIndex].isMajorTick || this.axisOption[axisIndex].isMinorTick) {\n            if (this.axisOption[axisIndex].isMajorTick || (this.axisOption[axisIndex].isMajorTick &&\n                this.axisOption[axisIndex].isMinorTick)) {\n                this.tickElementAnimation(document.getElementById(gauge.element.id + '_Axis_Major_TickLine_' + axisIndex + '_' + 0), document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 0), duration, axisIndex, this.axisOption[axisIndex].isMajorTick && this.axisOption[axisIndex].isMinorTick\n                    ? 0 : -1, 'major', this.axisOption[axisIndex], gauge);\n            }\n            else if (this.axisOption[axisIndex].isMinorTick) {\n                this.tickElementAnimation(document.getElementById(gauge.element.id + '_Axis_Minor_TickLine_' + axisIndex + '_' + 0), document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 0), duration, axisIndex, -1, 'minor', this.axisOption[axisIndex], gauge);\n            }\n        }\n        else if (!this.axisOption[axisIndex].isAxisLine) {\n            this.labelRangeAnimation(gauge, axisIndex);\n        }\n    };\n    AxisLayoutPanel.prototype.axisAnimation = function (axisIndex, duration, gauge) {\n        var _this = this;\n        var axisElement = document.getElementById(gauge.element.id + '_AxisLine_' + axisIndex);\n        var axisOption = this.axisOption[axisIndex];\n        new Animation({}).animate(axisElement, {\n            duration: (this.axisOption[axisIndex].majorTickCount === 0 ? 0 : duration / this.axisOption[axisIndex].majorTickCount),\n            progress: function () {\n                axisElement.style.visibility = 'visible';\n            },\n            end: function () {\n                if (axisOption.isMajorTick) {\n                    _this.tickElementAnimation(document.getElementById(gauge.element.id + '_Axis_Major_TickLine_' + axisIndex + '_' + 0), document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 0), duration, axisIndex, axisOption.isMajorTick && axisOption.isMinorTick ? 0 : -1, 'major', axisOption, gauge);\n                }\n                else if (axisOption.isMinorTick) {\n                    _this.tickElementAnimation(document.getElementById(gauge.element.id + '_Axis_Minor_TickLine_' + axisIndex + '_' + 0), document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 0), duration, axisIndex, -1, 'minor', axisOption, gauge);\n                }\n                _this.labelRangeAnimation(gauge, axisIndex);\n            }\n        });\n    };\n    AxisLayoutPanel.prototype.tickElementAnimation = function (tickElement, labelElement, duration, axisIndex, \n    // eslint-disable-next-line\n    tickIndex, type, axis, gauge) {\n        var _this = this;\n        if (tickElement && this.gauge.isAnimationProgress) {\n            new Animation({}).animate(tickElement, {\n                duration: (axis.isMinorTick ? axis.minorTickCount === 0 ? 0 : (duration / axis.minorTickCount) / this.allowAxisCount[axisIndex] :\n                    axis.majorTickCount === 0 ? 0 : (duration / axis.majorTickCount) / this.allowAxisCount[axisIndex]),\n                progress: function () {\n                    tickElement.style.visibility = 'visible';\n                },\n                end: function () {\n                    if (axis.isMajorTick && axis.isMinorTick && gauge.allowLoadingAnimation && _this.gauge.isAnimationProgress) {\n                        tickElement.style.visibility = 'visible';\n                        var currentTickValue = parseFloat(tickElement.getAttribute('data-interval'));\n                        _this.prevAnimatedTickType = type;\n                        if (type === 'major') {\n                            _this.prevAnimatedMajorTickValue[axisIndex] = currentTickValue;\n                            _this.prevAnimatedMajorTickIndex[axisIndex] = tickIndex;\n                        }\n                        else {\n                            _this.prevAnimatedMinorTickValue[axisIndex] = currentTickValue;\n                            _this.prevAnimatedMinorTickIndex[axisIndex] = tickIndex;\n                        }\n                        var minorTickInterval = (gauge.axes[axisIndex].minorTicks.interval != null ? gauge.axes[axisIndex].minorTicks.interval :\n                            (gauge.axes[axisIndex].visibleRange.interval / 2));\n                        var minorTickValue = minorTickInterval < gauge.axes[axisIndex].visibleRange.interval ? currentTickValue +\n                            minorTickInterval : _this.prevAnimatedMinorTickValue[axisIndex] + minorTickInterval;\n                        var majorTickValue = _this.prevAnimatedMajorTickValue[axisIndex] + gauge.axes[axisIndex].visibleRange.interval;\n                        type = minorTickValue < majorTickValue ? 'minor' : 'major';\n                        if (type === 'major' && axis.majorTickCount !== axis.minorTickCount && tickIndex !== 0 && _this.prevAnimatedTickType === 'minor') {\n                            tickIndex = _this.prevAnimatedMajorTickIndex[axisIndex];\n                        }\n                        if (type === 'minor' && axis.majorTickCount !== axis.minorTickCount && tickIndex !== 0 && _this.prevAnimatedTickType === 'major') {\n                            tickIndex = _this.prevAnimatedMinorTickIndex[axisIndex];\n                        }\n                        tickIndex = type === 'minor' ? axis.majorTickCount === axis.minorTickCount ? tickIndex : (currentTickValue ===\n                            _this.prevAnimatedMajorTickValue[axisIndex] ? tickIndex : tickIndex + 1) : tickIndex + 1;\n                        tickElement = type === 'minor' ? document.getElementById(gauge.element.id + '_Axis_Minor_TickLine_' + axisIndex + '_' + tickIndex) :\n                            document.getElementById(gauge.element.id + '_Axis_Major_TickLine_' + axisIndex + '_' + tickIndex);\n                        labelElement = type === 'minor' ? null : document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex);\n                        if (type === 'major' || tickIndex === 0) {\n                            _this.labelElementAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex), axisIndex);\n                        }\n                        _this.tickElementAnimation(tickElement, labelElement, duration, axisIndex, tickIndex, type, axis, gauge);\n                        if (_this.rangeAnimationCount === 0 && type === 'minor' && (tickIndex === axis.minorTickCount - 1 || tickIndex === axis.minorTickCount) && (gauge.axes.length - 1) === axisIndex) {\n                            _this.rangeAnimationCount++;\n                            _this.rangeAnimation(gauge);\n                        }\n                    }\n                    else if (gauge.allowLoadingAnimation && axis.isMajorTick && _this.gauge.isAnimationProgress) {\n                        tickElement.style.visibility = 'visible';\n                        type = 'major';\n                        tickIndex = tickIndex + 1;\n                        tickElement = document.getElementById(gauge.element.id + '_Axis_Major_TickLine_' + axisIndex + '_' + tickIndex);\n                        labelElement = document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex);\n                        _this.tickElementAnimation(tickElement, labelElement, duration, axisIndex, tickIndex, type, axis, gauge);\n                        if (type === 'major' || tickIndex === 0) {\n                            _this.labelElementAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex), axisIndex);\n                        }\n                        if (_this.rangeAnimationCount === 0 && type === 'major' && tickIndex === axis.majorTickCount - 1 && (gauge.axes.length - 1) === axisIndex) {\n                            _this.rangeAnimationCount++;\n                            _this.rangeAnimation(gauge);\n                        }\n                    }\n                    else if (gauge.allowLoadingAnimation && _this.gauge.isAnimationProgress && axis.isMinorTick) {\n                        tickElement.style.visibility = 'visible';\n                        type = 'minor';\n                        tickIndex = tickIndex + 1;\n                        tickElement = document.getElementById(gauge.element.id + '_Axis_Minor_TickLine_' + axisIndex + '_' + tickIndex);\n                        labelElement = document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex);\n                        _this.tickElementAnimation(tickElement, labelElement, duration, axisIndex, tickIndex, type, axis, gauge);\n                        if (type === 'minor') {\n                            _this.labelElementAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + tickIndex), axisIndex);\n                        }\n                        if (_this.rangeAnimationCount === 0 && type === 'minor' && tickIndex === axis.minorTickCount - 1 && (gauge.axes.length - 1) === axisIndex) {\n                            _this.rangeAnimationCount++;\n                            _this.rangeAnimation(gauge);\n                        }\n                    }\n                }\n            });\n        }\n        this.labelRangeAnimation(gauge, axisIndex);\n    };\n    AxisLayoutPanel.prototype.labelRangeAnimation = function (gauge, axisIndex) {\n        var options = this.axisOption[axisIndex];\n        if (!isNullOrUndefined(options)) {\n            if (!options.isMajorTick && !options.isMinorTick && options.isAxisLabel) {\n                if (options.axisLabelCount > 0) {\n                    if (gauge.axes[axisIndex].labelStyle.hiddenLabel === 'First') {\n                        this.elementLabelAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 1), axisIndex, 0, gauge);\n                    }\n                    else {\n                        this.elementLabelAnimation(document.getElementById(gauge.element.id + '_Axis_' + axisIndex + '_Label_' + 0), axisIndex, 0, gauge);\n                    }\n                }\n            }\n            else if ((this.rangeAnimationCount == 0 && !options.isMajorTick && !options.isMinorTick && !options.isAxisLabel && options.isRange)\n                || this.rangeAnimationCount == 0 && this.gauge.isAnimationProgress && !options.isMajorTick && !options.isMinorTick && !options.isAxisLabel && options.isRange) {\n                this.rangeAnimationCount++;\n                this.rangeAnimation(gauge);\n            }\n        }\n    };\n    AxisLayoutPanel.prototype.rangeAnimation = function (gauge) {\n        for (var j = 0; j < gauge.axes.length; j++) {\n            var rangesElement = document.getElementById(gauge.element.id + '_Axis_Ranges_' + j);\n            if (!isNullOrUndefined(rangesElement) && gauge.allowLoadingAnimation) {\n                this.rangeElementAnimation(rangesElement, j, gauge);\n            }\n        }\n    };\n    AxisLayoutPanel.prototype.rangeElementAnimation = function (rangeElement, axisIndex, gauge) {\n        var _this = this;\n        var height = 0;\n        var opacity = 1;\n        var isRangeAbsent = rangeElement.childElementCount > 0 && gauge.axes[axisIndex].ranges[0].start !== gauge.axes[axisIndex].ranges[0].end;\n        new Animation({}).animate(rangeElement, {\n            duration: isRangeAbsent ? gauge.loadingAnimationDuration[axisIndex] : 0,\n            progress: function (args) {\n                if (args.timeStamp > args.delay) {\n                    height = ((args.timeStamp - args.delay) / args.duration);\n                    rangeElement['style']['opacity'] = (opacity * height);\n                }\n            },\n            end: function () {\n                rangeElement['style']['opacity'] = opacity;\n                var axisElement = document.getElementById(_this.gauge.element.id + '_Axis_Labels_' + axisIndex);\n                if (!isNullOrUndefined(axisElement)) {\n                    axisElement.style.visibility = 'visible';\n                }\n                if (gauge.allowLoadingAnimation && axisIndex === 0) {\n                    _this.axisOption = [];\n                    gauge.axes.map(function (axis, axisindex) {\n                        axis.pointers.map(function (pointer, pointerIndex) {\n                            var pointerElement = document.getElementById(gauge.element.id + '_Axis_' + axisindex + '_Pointer_' + pointerIndex);\n                            if (!isNullOrUndefined(pointerElement) && _this.gauge.isAnimationProgress) {\n                                pointer.previousValue = !_this.gauge.isPropertyChange ? axis.minimum : pointer.previousValue;\n                                gauge.gaugeAxisLayoutPanel.pointerRenderer.doPointerAnimation(pointerElement, pointer, axis, axisIndex);\n                            }\n                        });\n                        if (axis.pointers.length === 0 && _this.gauge.isAnimationProgress) {\n                            if (_this.gauge.loadingAnimationDuration[axisIndex] > 0 && !isNullOrUndefined(_this.gauge.annotationsModule)) {\n                                _this.gauge.annotationsModule.annotationAnimation(_this.gauge);\n                            }\n                        }\n                        else {\n                            _this.gauge.isOverAllAnimationComplete = true;\n                        }\n                    });\n                }\n            }\n        });\n    };\n    AxisLayoutPanel.prototype.durationSplitUp = function (duration, axesElements) {\n        var splitUpCount = 0;\n        this.gauge.loadingAnimationDuration = [];\n        for (var i = 0; i < axesElements.childElementCount; i++) {\n            splitUpCount = 0;\n            var axisCount = 0;\n            var element = axesElements.children[i];\n            var isAxisLine = false;\n            var isMajorTick = false;\n            var majorTickCount = 0;\n            var labelCount = 0;\n            var isMinorTick = false;\n            var minorTickCount = 0;\n            var isLabel = false;\n            var isrange = false;\n            var isPointer = false;\n            for (var j = 0; j < element.childElementCount; j++) {\n                var elementId = element.children[j]['id'];\n                if (elementId.indexOf('_AxisLine_') > 0) {\n                    isAxisLine = true;\n                    splitUpCount++;\n                }\n                else if (elementId.indexOf('MajorTickLines') > 0) {\n                    isMajorTick = true;\n                    axisCount++;\n                    majorTickCount = element.children[j].childElementCount;\n                    splitUpCount++;\n                }\n                else if (elementId.indexOf('MinorTickLines') > 0) {\n                    isMinorTick = true;\n                    axisCount++;\n                    minorTickCount = element.children[j].childElementCount;\n                    if (!isMajorTick) {\n                        splitUpCount++;\n                    }\n                }\n                else if (elementId.indexOf('_Axis_Labels_') > 0) {\n                    isLabel = true;\n                    axisCount++;\n                    labelCount = element.children[j].childElementCount;\n                    if (!isMajorTick && !isMinorTick && this.gauge.axes[i].labelStyle.font.size != null &&\n                        (this.gauge.axes[i].labelStyle.font.size !== '0px' && this.gauge.axes[i].labelStyle.font.size !== '0')) {\n                        splitUpCount++;\n                    }\n                }\n                else if (elementId.indexOf('_Axis_Ranges_') > 0) {\n                    isrange = true;\n                    if (this.gauge.axes[i].ranges.length === 1 && (!isNullOrUndefined(this.gauge.axes[i].ranges) && this.gauge.axes[i].ranges[0].start === 0 && this.gauge.axes[i].ranges[0].end === 0)) {\n                        splitUpCount++;\n                    }\n                }\n                else if (elementId.indexOf('_Axis_Pointers_') > 0) {\n                    isPointer = true;\n                    if (this.gauge.axes[i].pointers.length > 0 && this.gauge.axes[i].pointers.length !== 1 &&\n                        this.gauge.axes[i].pointers[0].value !== this.gauge.axes[i].minimum) {\n                        splitUpCount++;\n                    }\n                }\n            }\n            this.allowAxisCount.push(axisCount === 0 ? 1 : axisCount);\n            this.axisOption.push({\n                isAxisLine: isAxisLine, isMajorTick: isMajorTick, isMinorTick: isMinorTick,\n                isAxisLabel: isLabel, isPointer: isPointer, isRange: isrange,\n                axisLabelCount: labelCount, majorTickCount: majorTickCount, minorTickCount: minorTickCount\n            });\n            isAxisLine = false;\n            isMajorTick = false;\n            majorTickCount = 0;\n            isMinorTick = false;\n            labelCount = 0;\n            minorTickCount = 0;\n            isLabel = false;\n            isrange = false;\n            isPointer = false;\n            if (this.gauge.axes[i].annotations != null && this.gauge.axes[i].annotations.length > 0 && !isNullOrUndefined(this.gauge.annotationsModule)) {\n                splitUpCount++;\n            }\n            this.gauge.loadingAnimationDuration.push(splitUpCount === 0 ? duration : duration / splitUpCount);\n        }\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    AxisLayoutPanel.prototype.destroy = function () {\n        this.gauge = null;\n        this.farSizes = [];\n        if (!isNullOrUndefined(this.axisRenderer)) {\n            this.axisRenderer.destroy();\n        }\n        this.axisRenderer = null;\n        if (!isNullOrUndefined(this.pointerRenderer)) {\n            this.pointerRenderer.destroy();\n        }\n        this.pointerRenderer = null;\n        this.axisOption = null;\n        this.prevAnimatedMajorTickValue = null;\n        this.prevAnimatedMajorTickIndex = null;\n        this.prevAnimatedMinorTickIndex = null;\n        this.prevAnimatedMinorTickValue = null;\n        this.allowAxisCount = null;\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","import { getElement, stringToNumber, measureText, textElement, appendPath, calculateShapes, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption } from '../utils/helper-common';\nimport { textTrim } from '../utils/helper-legend';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**\n         * @private\n         */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Axis[]} axes - Specifies the axes.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param {number} start - Specifies the start.\n     * @param {number} size - Specifies the size.\n     * @param {number} legendSize - Specifies the  legendSize.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @returns {number} - Returns the start value.\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param {LegendPosition} position - Specifies the position.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @returns {void}\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new GaugeLocation(\n            // eslint-disable-next-line max-len\n            (!this.gauge.enableRtl) ? legendBounds.x + padding + (legend.shapeWidth / 2) : (!this.isVertical) ? legendBounds.width + legendBounds.x - (padding) - (legend.shapeWidth) : legendBounds.x + this.maxWidth - padding - legend.shapeWidth / 2, legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.style.cursor = (!legend.toggleVisibility) ? 'auto' : 'pointer';\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param {Rect} bounds - Specifies the bounds.\n     * @param {TextOption} textOption - Specifies the textOption.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @returns {void}\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = this.gauge.themeStyle.labelColor;\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.style.cursor = 'pointer';\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(!this.gauge.enableRtl ?\n            // eslint-disable-next-line max-len\n            x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5 : x, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = !this.gauge.enableRtl ? '1/' + this.totalPages : this.totalPages + '/1';\n        var pageTextElement = textElement(textOption, legend.textStyle, grayColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(!this.gauge.enableRtl ?\n            // eslint-disable-next-line max-len\n            x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5) : x, y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        // eslint-disable-next-line max-len\n        var translateX = (this.gauge.enableRtl) ? legend.border.width + (iconSize / 2) : bounds.width - (2 * (iconSize + padding) + padding + size.width);\n        paginggroup.setAttribute('transform', 'translate(' + translateX + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param {Element} pagingText - Specifies the pagingText.\n     * @param {number} page - Specifies the page.\n     * @param {number} pageNumber - Specifies the pageNumber.\n     * @returns {number} - Returns the size.\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageX = this.pageXCollections[page * this.maxColumns];\n            size = (!this.gauge.enableRtl) ? pageX - this.legendBounds.x : (this.legendBounds.x + this.maxWidth) - pageX;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = ((!this.gauge.enableRtl) ? 'translate(-' : 'translate(') + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = !this.gauge.enableRtl ? (pageNumber) + '/' + this.totalPages : this.totalPages + '/' + pageNumber;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {TextOption} textOptions - Specifies the textOptions.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        legend.textStyle.fontFamily = legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily;\n        legend.textStyle.fontWeight = legend.textStyle.fontWeight || this.gauge.themeStyle.fontWeight;\n        textOptions.text = legendOption.text;\n        textOptions.x = this.gauge.enableRtl ? (legendOption.location.x - (measureText(legendOption.text, legend.textStyle).width +\n            legend.shapeWidth / 2 + legend.shapePadding)) : (legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding);\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var legendTextElement = textElement(textOptions, legend.textStyle, fontcolor, group, '');\n        legendTextElement.setAttribute('aria-label', textOptions.text);\n        legendTextElement.setAttribute('role', 'region');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill :\n            this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, legendOption.shapeBorder.dashArray, '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {GaugeLocation} start - Specifies the start.\n     * @param {number} textPadding - Specifies the textPadding.\n     * @param {LegendOptions} prevLegend - Specifies the prevLegend.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} count - Specifies the count.\n     * @param {number} firstLegend - Specifies the firstLegend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : (!this.gauge.enableRtl) ?\n                    this.maxColumnWidth : -this.maxColumnWidth - (4 * this.legend.shapePadding) / 3);\n                legendOption.location.y = start.y;\n                var textStartLoc = (this.legend.shapeWidth / 2) + padding;\n                this.pageXCollections.push(legendOption.location.x + ((!this.gauge.enableRtl) ? -textStartLoc : textStartLoc));\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            // eslint-disable-next-line max-len\n            var previousBound = (prevLegend.location.x + ((!this.gauge.enableRtl) ? prevLegend.textSize.width + textPadding : -prevLegend.textSize.width - textPadding));\n            // eslint-disable-next-line max-len\n            if (this.isWithinBounds(previousBound, (legendOption.textSize.width + textPadding) - padding, rect, this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    Legend.prototype.isWithinBounds = function (previousBound, textWidth, legendBounds, shapeWidth) {\n        if (!this.gauge.enableRtl) {\n            return (previousBound + textWidth) > (legendBounds.x + legendBounds.width + shapeWidth);\n        }\n        else {\n            return (previousBound - textWidth) < (legendBounds.x - shapeWidth);\n        }\n    };\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @param {Event} event - Specifies the event argument.\n     * @returns {void}\n     *\n     * @private\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled =\n                                    !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, !this.gauge.enableRtl ? true : false);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, !this.gauge.enableRtl ? false : true);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     *\n     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.\n     * @returns {void}\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var count = 0;\n            for (var j = 0; j < toggledIndexes[i].rangeIndex; j++) {\n                var rangeStart = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].start;\n                var rangeEnd = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].end;\n                if (rangeStart === rangeEnd) {\n                    count++;\n                }\n            }\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'visible';\n                    shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex - count].fill);\n                    textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n                }\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'hidden';\n                    shapeElement.setAttribute('fill', hiddenColor);\n                    textElement_1.setAttribute('fill', hiddenColor);\n                }\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     *\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.\n     * @returns {LegendOptions} - Specifies the LegendOptions.\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param {Event} event - Specifies the event.\n     * @param {boolean} pageUp - Specifies the pageUp.\n     * @returns {void}\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[!this.gauge.enableRtl ? 0 : 1], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @param {number} tx - Specifies the tx value.\n     * @param {number} width - Specifies the width.\n     * @returns {number} - Returns the number.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {string} id - Specifies the id.\n     * @returns {Element} - Returns the element.\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath);\n        legendItemsGroup.style.cssText = 'clip-path:url(#' + clippath.id + ')';\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     *\n     * @param {Element} parent - Specifies the element.\n     * @param {Element} childElement - Specifies the child element.\n     * @returns {void}\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement) {\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.\n     * @returns {number} - Returns the count.\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} left - Specifies the left.\n     * @param {number} right - Specifies the right.\n     * @param {number} top - Specifies the top.\n     * @param {number} bottom - Specifies the bottom.\n     * @returns {Rect} - Returns the rect.\n     * @private\n     */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param {number} computedWidth - Specifies compute width.\n     * @param {number} computedHeight - Specifies compute height.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legend bounds.\n     * @returns {void}\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n        if (this.rowCount === 1 && (legend.position === 'Bottom' || legend.position === 'Top') && (!isNullOrUndefined(legend.width) && legend.width.indexOf('%') > -1)) {\n            legendBounds.width = computedWidth;\n        }\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @param {number[]} columns - Specifies the columns\n     * @param {number} width - Specifies the width\n     * @param {number} padding - Specifies the padding\n     * @param {number} rowWidth - Specifies the row width\n     * @returns {number} - Returns the number\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var i = 0; i < columns.length; i++) {\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function () {\n        this.legendCollection = [];\n        this.legendRenderingCollections = [];\n        this.legendRegions = [];\n        this.titleRect = null;\n        this.pageXCollections = [];\n        this.clipRect = null;\n        this.legendTranslateGroup = null;\n        this.legend = null;\n        this.pagingRegions = [];\n        this.toggledIndexes = [];\n        this.legendBounds = null;\n        this.removeEventListener();\n        this.gauge = null;\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge.\n     */\n    // eslint-disable-next-line\n    function PdfExport(control) {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName Specfies the file name of the document.\n     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the gauge.\n     * @param {boolean} allowDownload - Specfies whether to download the document or not.\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (gauge, type, fileName, orientation, allowDownload) {\n        // eslint-disable-next-line\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': gauge.availableSize.width.toString(),\n                    'height': gauge.availableSize.height.toString()\n                }\n            });\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = gauge.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((gauge.theme === 'Tailwind' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Fluent' || gauge.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            else if ((gauge.theme === 'TailwindDark' || gauge.theme === 'Bootstrap5Dark' || gauge.theme === 'FluentDark' || gauge.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, gauge.availableSize.width, gauge.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    PdfExport.prototype.destroy = function () { };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Represent the Image Export for gauge\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     *  @param {CircularGauge} control - Specfies the instance of the gauge\n     */\n    // eslint-disable-next-line\n    function ImageExport(control) {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the image file or not.\n     * @returns {Promise<string>} - Returns promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (gauge, type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': gauge.availableSize.width.toString(),\n                    'height': gauge.availableSize.height.toString()\n                }\n            });\n            var exportElement = gauge.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((gauge.theme === 'Tailwind' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Fluent' || gauge.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            else if ((gauge.theme === 'TailwindDark' || gauge.theme === 'Bootstrap5Dark' || gauge.theme === 'FluentDark' || gauge.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n            }\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                exportElement.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    _this.triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    ImageExport.prototype.destroy = function () { };\n    /**\n     * To trigger the download element\n     *\n     * @param {string} fileName - Specifies the file name.\n     * @param {ExportType} type - Specifies the export type.\n     * @param {string} url - Specifies the url.\n     * @param {boolean} isDownload - Specifies the boolean value.\n     * @returns {void}\n     */\n    ImageExport.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printFunction, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper-common';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specifies the instance of the gauge.\n     */\n    // eslint-disable-next-line\n    function Print(control) {\n    }\n    /**\n     * To print the gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (gauge, elements) {\n        var printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        printWindow.moveTo(0, 0);\n        printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(gauge, elements), name: beforePrint\n        };\n        // eslint-disable-next-line\n        gauge.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printFunction(argsData.htmlContent, printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {Element} - Returns the div element.\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (gauge, elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            var exportElement = gauge.element.cloneNode(true);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var backgroundElement = exportElement.getElementsByTagName('svg')[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                backgroundElement = backgroundElement.childNodes[0];\n                if (!isNullOrUndefined(backgroundElement)) {\n                    var backgroundColor = backgroundElement.getAttribute('fill');\n                    if ((gauge.theme === 'Tailwind' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Fluent' || gauge.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(255,255,255, 1)');\n                    }\n                    else if ((gauge.theme === 'TailwindDark' || gauge.theme === 'Bootstrap5Dark' || gauge.theme === 'FluentDark' || gauge.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(0, 0, 0, 1)');\n                    }\n                }\n            }\n            div.appendChild(exportElement);\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Print.prototype.destroy = function () { };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the color information for the gradient in the circular gauge.\n */\nvar ColorStop = /** @class */ (function (_super) {\n    __extends(ColorStop, _super);\n    function ColorStop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#000000')\n    ], ColorStop.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ColorStop.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('0%')\n    ], ColorStop.prototype, \"offset\", void 0);\n    __decorate([\n        Property('')\n    ], ColorStop.prototype, \"style\", void 0);\n    return ColorStop;\n}(ChildProperty));\nexport { ColorStop };\n/**\n * Specifies the position in percentage from which the radial gradient must be applied.\n */\nvar GradientPosition = /** @class */ (function (_super) {\n    __extends(GradientPosition, _super);\n    function GradientPosition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"x\", void 0);\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"y\", void 0);\n    return GradientPosition;\n}(ChildProperty));\nexport { GradientPosition };\n/**\n * This specifies the properties of the linear gradient colors for the circular gauge.\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"endValue\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], LinearGradient.prototype, \"colorStop\", void 0);\n    return LinearGradient;\n}(ChildProperty));\nexport { LinearGradient };\n/**\n * This specifies the properties of the radial gradient colors for the circular gauge.\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], RadialGradient.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"outerPosition\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"innerPosition\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], RadialGradient.prototype, \"colorStop\", void 0);\n    return RadialGradient;\n}(ChildProperty));\nexport { RadialGradient };\n/**\n * Sets and gets the module that enables the gradient option for pointers and ranges.\n *\n * @hidden\n */\nvar Gradient = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     */\n    function Gradient(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {name} name - Specifies the name of the gradient.\n     * @param {name} direction - Specifies the gradient position.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {\n        var linearPosition = {\n            id: name,\n            x1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'right' ? '100%' : '0%')\n                : (!isNullOrUndefined(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?\n                    element.linearGradient.startValue :\n                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),\n            x2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?\n                (direction === 'left' ? '100%' : '0%') :\n                (!isNullOrUndefined(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?\n                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),\n            y1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),\n            y2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1\n                ? (direction === 'top' ? '100%' : '0%') : '0%')\n        };\n        return linearPosition;\n    };\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - Specifies the index of the axis.\n     * @param { string } direction - Specifies the gradient position.\n     * @param { number } rangeIndex - Specifies the index of the range.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {\n        var render = new SvgRenderer('');\n        var colors = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            this.getCircularGradientColor(element.linearGradient.colorStop, index) :\n            this.getGradientColor(element.linearGradient.colorStop);\n        var name = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            '_' + this.gauge.svgObject.id + '_range_' +\n                rangeIndex + '_color_' + index + '_' + 'linearGradient'\n            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';\n        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);\n        gradientPosition = {\n            id: gradientPosition.id,\n            x1: gradientPosition.x1,\n            x2: gradientPosition.x2,\n            y1: gradientPosition.y1,\n            y2: gradientPosition.y2\n        };\n        var def = render.drawGradient('linearGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style for circular gradient path.\n     *\n     * @param {ColorStopModel[]} colorStop - Specifies the colorStop.\n     * @param {number} index - Specifies the index.\n     * @returns {GradientColor[]} - return the gradient color value.\n     * @private\n     */\n    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {\n        var colors = [];\n        var colorIndex = index;\n        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n            colorIndex++;\n        }\n        return colors;\n    };\n    /**\n     * To get the radial gradient string.\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    Gradient.prototype.getRadialGradientColor = function (element) {\n        var render = new SvgRenderer('');\n        var colors = this.getGradientColor(element.radialGradient.colorStop);\n        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';\n        var gradientPosition = {\n            id: name,\n            r: (element.radialGradient.radius.indexOf('%') === -1 ?\n                element.radialGradient.radius :\n                parseFloat(element.radialGradient.radius).toString()) + '%',\n            cx: (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.x :\n                parseFloat(element.radialGradient.outerPosition.x).toString()) + '%',\n            cy: (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.y :\n                parseFloat(element.radialGradient.outerPosition.y).toString()) + '%',\n            fx: (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.x :\n                parseFloat(element.radialGradient.innerPosition.x).toString()) + '%',\n            fy: (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.y :\n                parseFloat(element.radialGradient.innerPosition.y).toString()) + '%'\n        };\n        var def = render.drawGradient('radialGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style.\n     *\n     * @param { ColorStopModel[]} colorStop - Specifies the color stop.\n     * @returns {GradientColor[]} - Returns the gradientColor.\n     * @private\n     */\n    Gradient.prototype.getGradientColor = function (colorStop) {\n        var colors = [];\n        for (var j = 0; j < colorStop.length; j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n        }\n        return colors;\n    };\n    /**\n     * To get a gradient color string\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - specifies the index.\n     * @param {string} direction - specifies the direction.\n     * @param {number} rangeIndex - specifies the index of range.\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {\n        var gradientColor;\n        if ((element.linearGradient && !isNullOrUndefined(element.linearGradient.colorStop)) ||\n            (element.radialGradient && !isNullOrUndefined(element.radialGradient.colorStop))) {\n            if (element.linearGradient) {\n                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);\n            }\n            else {\n                gradientColor = this.getRadialGradientColor(element);\n            }\n            this.gauge.gradientCount = this.gauge.gradientCount + 1;\n        }\n        else {\n            return null;\n        }\n        return gradientColor;\n    };\n    Gradient.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Gradient';\n    };\n    /**\n     * To destroy the Gradient.\n     *\n     * @returns {void}\n     * @private\n     */\n    Gradient.prototype.destroy = function () {\n        this.gauge = null;\n    };\n    return Gradient;\n}());\nexport { Gradient };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable max-len */\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component, animationMode } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement, getElement, stringToNumber, measureText, toPixel, textElement, getAngleFromValue, getAngleFromLocation, getPathArc, getPointer, RectOption, Size, GaugeLocation, Rect, TextOption } from './utils/helper-common';\nimport { setStyles, getValueFromAngle, getRange } from './utils/helper-circular-gauge';\nimport { Border, Margin, Font, TooltipSettings, LegendSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { textTrim, titleTooltip } from './utils/helper-legend';\nimport { Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\nimport { Gradient } from './axes/gradient';\n/**\n * Represents the circular gauge control. This is used to customize the properties of the circular gauge to visualize the data in circular scale.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {CircularGaugeModel} options - Specifies the options\n     * @param {string} element - Specifies the element\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.allowLoadingAnimation = false;\n        /** @private */\n        _this.isRangeUpdate = false;\n        /** @private */\n        _this.isAnimationProgress = true;\n        /** @private */\n        _this.isResize = false;\n        /** @private */\n        _this.isOverAllAnimationComplete = false;\n        /** @private */\n        _this.isDrag = false;\n        /**\n         * @private\n         */\n        _this.gradientCount = 0;\n        return _this;\n    }\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.isPropertyChange = false;\n        this.allowLoadingAnimation = ((this.animationDuration === 0 && animationMode === 'Enable') || this.animationDuration > 0)\n            && !this.isOverAllAnimationComplete;\n        this.renderElements(true);\n        this.renderAnimation();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n    };\n    /**\n     * Method to bind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        this.resizeEvent = this.gaugeResize.bind(this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                var svgElement = getElement(_this.element.id + '_svg');\n                var extraWidth = _this.element.getBoundingClientRect().left - svgElement.getBoundingClientRect().left;\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    e.preventDefault();\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    e.preventDefault();\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, dragArgs);\n                }\n            }\n        });\n        this.notify(Browser.touchMoveEvent, e);\n        titleTooltip(e, e.clientX, e.clientY, this, false);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     *\n     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the location of the gauge\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} pointerIndex - Specifies the pointer index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the gauge location\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} rangeIndex - Specifies the range index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                var previousValue1 = this.activeRange.currentValue;\n                this.activeRange.currentValue = value;\n                var add = (this.activeRange.end - this.activeRange.start);\n                var div = add / 2;\n                var avg = parseFloat(this.activeRange.start.toString()) + div;\n                var start = typeof this.activeRange.start === 'string' ? parseFloat(this.activeRange.start) : this.activeRange.start;\n                var end = typeof this.activeRange.end === 'string' ? parseFloat(this.activeRange.end) : this.activeRange.end;\n                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : ((start < end) ? this.activeRange.start : this.activeRange.end));\n                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : ((start < end) ? this.activeRange.end : this.activeRange.start)) : value;\n                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n                if (this.isTouch) {\n                    this.setRangeValue(axisIndex, rangeIndex, this.startValue, this.endValue);\n                }\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                if (_this.activePointer.type === 'Marker' && _this.activePointer.markerShape === 'Text' && _this.activePointer.pathElement.length === 0) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        if (!isNullOrUndefined(this.activePointer)) {\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        if (e.type.indexOf('touch') > -1 && (args.target.id === (this.element.id + '_CircularGaugeTitle') || args.target.id.indexOf('_gauge_legend_') > -1)) {\n            var touchArg = e;\n            titleTooltip(e, touchArg.changedTouches[0].pageX, touchArg.changedTouches[0].pageY, this, true);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @param {string} type - Specifies the type\n     * @param {string} name - Specifies the name\n     * @returns {IMouseEventArgs} - Returns the mouse event args\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     *\n     * @param {Event} e - Specifies the event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        if (!this.isDestroyed) {\n            // eslint-disable-next-line prefer-const\n            var args = {\n                gauge: this,\n                previousSize: this.availableSize,\n                name: resized,\n                cancel: false,\n                currentSize: this.calculateSvgSize()\n            };\n            this.trigger(resized, args);\n            if (!args.cancel) {\n                if (this.resizeTo) {\n                    clearTimeout(this.resizeTo);\n                }\n                if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-circulargauge')) {\n                    this.animatePointer = false;\n                    this.resizeTo = window.setTimeout(function () {\n                        _this.isResize = true;\n                        _this.isPropertyChange = true;\n                        _this.createSvg();\n                        _this.calculateBounds();\n                        _this.allowLoadingAnimation = false;\n                        if (_this.isOverAllAnimationComplete) {\n                            _this.loadingAnimationDuration = [];\n                        }\n                        _this.renderElements();\n                        _this.isResize = false;\n                    }, 500);\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     *\n     * @param {HTMLElement} element - Specifies the html element\n     * @returns {void}\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = 'element';\n        element.style.msTouchAction = 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        if (isNullOrUndefined(this.renderer)) {\n            this.renderer = new SvgRenderer(this.element.id);\n        }\n        if (isNullOrUndefined(this.gaugeAxisLayoutPanel)) {\n            this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        }\n        this.availableSize = this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                while (this.svgObject.childNodes.length > 0) {\n                    this.svgObject.removeChild(this.svgObject.firstChild);\n                }\n                if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                    remove(this.svgObject);\n                }\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement(this.element.id + '_svg');\n        this.clearTemplate();\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        return new Size(width, height);\n    };\n    /**\n     * To calculate the spacing of the circular gauge element.\n     *\n     * @param {number} top - Specifies the top value\n     * @param {number} left - Specifies the left value\n     * @param {number} width - Specifies the width\n     * @param {number} height - Specifies the height\n     * @param {number} radius - Specifies the radius\n     * @param {number} titleHeight - Specifies the titleHeight\n     * @param {number} isUpperAngle - Specifies the isUpperAngle\n     * @param {number} isLowerAngle - Specifies the isLowerAngle\n     * @param {number} isFullPercent - Specifies the boolean value\n     * @param {number} isUpper - Specifies the boolean value\n     * @param {number} isLower - Specifies the boolean value\n     * @returns {void}\n     */\n    /* eslint-disable max-len */\n    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {\n        var rect;\n        var bottom = this.margin.bottom + this.border.width;\n        var minRadius;\n        var widthRadius;\n        var centerX;\n        var centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            if (!this.allowMargin) {\n                if (!isNullOrUndefined(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                    minRadius = Math.min(width, height) / 2;\n                    rect = new Rect((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);\n                }\n                else {\n                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {\n                        widthRadius = ((width) / 2);\n                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));\n                        if (widthRadius > heightValue) {\n                            widthRadius = heightValue;\n                        }\n                        rect = new Rect((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);\n                    }\n                    else {\n                        if (height > width) {\n                            var heightRadius = height / 2;\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);\n                        }\n                        else {\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n                        }\n                    }\n                }\n            }\n            else {\n                rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            }\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        if (!this.allowMargin) {\n            if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                var difference = height - this.gaugeRect.height;\n                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);\n                this.gaugeRect.y = this.gaugeRect.y - difference;\n                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);\n            }\n            else if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {\n                var difference = this.gaugeRect.height - this.gaugeRect.width;\n                this.gaugeRect.x = this.legendSettings.position === 'Right'\n                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;\n                this.gaugeRect.width = this.legendSettings.position === 'Left' ?\n                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))\n                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);\n            }\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            if ((isUpperAngle || isLowerAngle) && !isNullOrUndefined(this.legendModule)) {\n                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')\n                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :\n                    centerX;\n            }\n            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?\n                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))\n                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));\n            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;\n            if (!isNullOrUndefined(this.axes) && this.axes.length > 1 && !isNullOrUndefined(this.midPoint)) {\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                if (isUpper && isLower) {\n                    centerY = (this.availableSize.height / 2) - bottom;\n                }\n            }\n        }\n        else {\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            centerY = this.centerYpoint !== null ?\n                stringToNumber(this.centerYpoint, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        }\n        this.midPoint = new GaugeLocation(centerX, centerY);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var isUpper = false;\n        var isLower = false;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        this.centerXpoint = (this.centerX === '') ? null : this.centerX;\n        this.centerYpoint = (this.centerY === '') ? null : this.centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        if (!this.allowMargin) {\n            for (var j = 0; j < this.axes.length; j++) {\n                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&\n                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;\n                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&\n                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&\n                    360 !== this.axes[j].endAngle;\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;\n                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;\n                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);\n            }\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);\n        }\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     *\n     * @param {boolean} animate - Specifies whether animation is true or false\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n        removeElement('gauge-measuretext');\n    };\n    CircularGauge.prototype.renderAnimation = function () {\n        if (this.allowLoadingAnimation) {\n            for (var i = 0; i < this.axes.length; i++) {\n                this.gaugeAxisLayoutPanel.axisLineAnimation(i, this.loadingAnimationDuration[i], this);\n            }\n        }\n    };\n    /**\n     * Method to render legend for accumulation chart\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            // eslint-disable-next-line prefer-const\n            var style = {\n                color: this.titleStyle.color,\n                size: this.titleStyle.size || this.themeStyle.fontSize,\n                fontFamily: this.titleStyle.fontFamily || this.themeStyle.fontFamily,\n                fontStyle: this.titleStyle.fontStyle,\n                fontWeight: this.titleStyle.fontWeight || this.themeStyle.titleFontWeight,\n                opacity: this.titleStyle.opacity\n            };\n            var titleSize = style.size;\n            if (!isNaN(Number(titleSize))) {\n                style.size = titleSize + 'px';\n            }\n            var width = Math.abs((this.margin.left + this.margin.right) - this.availableSize.width);\n            var trimmedTitle = textTrim(width, this.title, style);\n            var size = measureText(trimmedTitle, style);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', trimmedTitle);\n            var element = textElement(options, style, style.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('role', 'region');\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param {number} value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        this.allowLoadingAnimation = false;\n        if (!this.isDestroyed && pointer.currentValue !== value) {\n            var enableAnimation_1 = pointer.animation.enable || animationMode === 'Enable';\n            value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n            value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n            pointer['isPointerAnimation'] = true;\n            document.getElementById(this.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex).style.visibility = 'visible';\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    setStyles(element, pointer.color, pointer.border);\n                    if (enableAnimation_1) {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, axisIndex);\n                    }\n                    else {\n                        _this.isAnimationProgress = false;\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                    }\n                }\n                else {\n                    if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                        setStyles(element, pointer.cap.color, pointer.cap.border);\n                    }\n                    else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                        setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                    }\n                    else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                        setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                    }\n                    else if (pointer.type === 'Marker' && pointer.markerShape !== 'Text') {\n                        setStyles(element, pointer.color, pointer.border);\n                    }\n                    if (enableAnimation_1) {\n                        if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                            _this.gaugeAxisLayoutPanel.pointerRenderer.performTextAnimation(element, pointer.currentValue, value, axis, pointer, axisIndex);\n                        }\n                        else {\n                            _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, axisIndex);\n                        }\n                    }\n                    else {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                    }\n                }\n            });\n            if (this.allowLoadingAnimation && !pointer.animation.enable) {\n                this.allowLoadingAnimation = false;\n                pointer.value = value;\n            }\n        }\n        this.isProtectedOnChange = true;\n        pointer.previousValue = pointer.currentValue;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param {string | Function} content - Specifies the content for the annotation in circular gauge.\n     * @returns {void}\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        if (!this.isDestroyed) {\n            this.allowLoadingAnimation = false;\n            var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n            var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n                createElement('div', {\n                    id: this.element.id + '_Annotations_' + axisIndex, styles: this.animationDuration > 0 ? 'opacity: 0' : 'opacity: 1'\n                });\n            var annotation = this.axes[axisIndex].annotations[annotationIndex];\n            if (content !== null) {\n                removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n                annotation.content = content;\n                this.annotationsModule.createTemplate(element, annotationIndex, axisIndex, this);\n                var secondaryElement = getElement(this.element.id + '_Secondary_Element');\n                if (!isElementExist && !isNullOrUndefined(secondaryElement)) {\n                    secondaryElement.appendChild(element);\n                }\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     *\n     * @param {string[] | string | Element} id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(this, id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     *\n     * @param {ExportType} type - Specifies the type of the export.\n     * @param {string} fileName - Specifies the file name for the exported file.\n     * @param {PdfPageOrientation}  orientation - Specifies the orientation for the exported PDF document.\n     * @param {boolean} allowDownload - Specifies whether to download as a file.\n     * @returns {Promise<string>} - Specifies the base64 string of the exported image which is returned when the allowDownload is set to false.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(_this, type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(_this, type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {void}\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param {number} start - Specifies the start value for the current range in circular gauge.\n     * @param {number} end - Specifies the end value for the current range in circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        this.allowLoadingAnimation = false;\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var oldRangeStart = range.start;\n        var oldRangeEnd = range.end;\n        range.start = start;\n        range.end = end;\n        if (range.start !== range.end && oldRangeStart === oldRangeEnd && this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            var height = this.legendModule.legendBounds.height + this.legendSettings.margin.top + this.legendSettings.margin.bottom + this.legendSettings.border.width;\n            var width = this.legendModule.legendBounds.width + this.legendSettings.margin.left + this.legendSettings.margin.right + this.legendSettings.border.width;\n            // eslint-disable-next-line prefer-const\n            var rect = this.gaugeRect;\n            var position = this.legendModule.position;\n            if (position === 'Bottom') {\n                rect.height = rect.height + height;\n            }\n            if (position === 'Top') {\n                rect.height = rect.height + height;\n                rect.y = rect.y - height;\n            }\n            if (position === 'Left') {\n                rect.width = rect.width + width;\n                rect.x = rect.x - width;\n            }\n            if (position === 'Right') {\n                rect.width = rect.width + width;\n            }\n            this.legendModule.calculateLegendBounds(rect, this.availableSize);\n            if (this.legendModule.legendCollection.length) {\n                this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds);\n            }\n        }\n        this.isRangeUpdate = true;\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * This method destroys the circular gauge. This method removes the events associated with the circular gauge and disposes the objects created for rendering and updating the circular gauge.\n     *\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        if (!isNullOrUndefined(this.tooltipModule)) {\n            this.tooltipModule.removeEventListener();\n        }\n        _super.prototype.destroy.call(this);\n        if (!isNullOrUndefined(this.gaugeAxisLayoutPanel)) {\n            this.gaugeAxisLayoutPanel.destroy();\n        }\n        this.availableSize = null;\n        this.midPoint = null;\n        this.activePointer = null;\n        this.activeAxis = null;\n        this.activeRange = null;\n        this.gaugeRect = null;\n        this.gaugeAxisLayoutPanel = null;\n        this.themeStyle = null;\n        this.loadingAnimationDuration = null;\n        this.intl = null;\n        this.removeSvg();\n        this.resizeEvent = null;\n        this.svgObject = null;\n        this.renderer = null;\n    };\n    CircularGauge.prototype.isGradientVisible = function () {\n        var isVisible = false;\n        for (var _i = 0, _a = this.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            for (var _b = 0, _c = axis.pointers; _b < _c.length; _b++) {\n                var pointer = _c[_b];\n                if (!isNullOrUndefined(pointer.linearGradient) || !isNullOrUndefined(pointer.radialGradient) ||\n                    (!isNullOrUndefined(pointer.cap) && (!isNullOrUndefined(pointer.cap.linearGradient) || !isNullOrUndefined(pointer.cap.linearGradient))) ||\n                    (!isNullOrUndefined(pointer.needleTail) && (!isNullOrUndefined(pointer.needleTail.linearGradient) || !isNullOrUndefined(pointer.needleTail.radialGradient)))) {\n                    isVisible = true;\n                    break;\n                }\n            }\n            for (var _d = 0, _e = axis.ranges; _d < _e.length; _d++) {\n                var range = _e[_d];\n                if (!isNullOrUndefined(range.linearGradient) || !isNullOrUndefined(range.radialGradient)) {\n                    isVisible = true;\n                    break;\n                }\n            }\n        }\n        return isVisible;\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                if (!annotationEnable) {\n                    annotationEnable = !isNullOrUndefined(annotation.content) && annotation.content.length !== 0;\n                }\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations],\n                name: 'Annotations'\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip],\n                name: 'Tooltip'\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print],\n                name: 'Print'\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport],\n                name: 'ImageExport'\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport],\n                name: 'PdfExport'\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend],\n                name: 'Legend'\n            });\n        }\n        if (this.isGradientVisible()) {\n            modules.push({\n                member: 'Gradient',\n                args: [this, Gradient],\n                name: 'Gradient'\n            });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {CircularGaugeModel} newProp - Specifies the new property\n     * @param {CircularGaugeModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        if (!this.isDestroyed) {\n            this.isPropertyChange = true;\n            var renderer = false;\n            this.allowLoadingAnimation = this.animationDuration > 0 && !this.isOverAllAnimationComplete ? true : false;\n            var refreshBounds = false;\n            var refreshWithoutAnimation = false;\n            var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n                !isNullOrUndefined(this.activePointer));\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'height':\n                    case 'width':\n                    case 'centerX':\n                    case 'centerY':\n                    case 'margin':\n                        this.createSvg();\n                        refreshBounds = true;\n                        break;\n                    case 'animationDuration':\n                        this.allowLoadingAnimation = true;\n                        break;\n                    case 'title':\n                        refreshBounds = (newProp.title === '' || oldProp.title === '');\n                        renderer = !(newProp.title === '' || oldProp.title === '');\n                        break;\n                    case 'titleStyle':\n                        if (newProp.titleStyle && newProp.titleStyle.size) {\n                            refreshBounds = true;\n                        }\n                        else {\n                            renderer = true;\n                        }\n                        break;\n                    case 'border':\n                        renderer = true;\n                        break;\n                    case 'background':\n                        renderer = true;\n                        break;\n                    case 'legendSettings':\n                        refreshWithoutAnimation = true;\n                        break;\n                    case 'axes':\n                        // eslint-disable-next-line no-case-declarations\n                        var axesPropertyLength = this.axes.length;\n                        for (var x = 0; x < axesPropertyLength; x++) {\n                            if (!isNullOrUndefined(newProp.axes[x])) {\n                                var collection = Object.keys(newProp.axes[x]);\n                                for (var _b = 0, collection_1 = collection; _b < collection_1.length; _b++) {\n                                    var collectionProp = collection_1[_b];\n                                    if (collectionProp === 'pointers') {\n                                        var pointerPropertyLength = Object.keys(newProp.axes[x].pointers).length;\n                                        for (var y = 0; y < pointerPropertyLength; y++) {\n                                            var index = parseInt(Object.keys(newProp.axes[x].pointers)[y], 10);\n                                            if (!isNullOrUndefined(Object.keys(newProp.axes[x].pointers[index]))) {\n                                                this.allowLoadingAnimation = false;\n                                                this.loadingAnimationDuration = [];\n                                                this.isAnimationProgress = this.axes[x].pointers[index].animation.enable;\n                                                this.axes[x].pointers[index]['previousValue'] = this.axes[x].pointers[index]['currentValue'];\n                                                this.axes[x].pointers[index]['isPointerAnimation'] = Object.keys(newProp.axes[x].pointers[index]).indexOf('value') > -1;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        refreshWithoutAnimation = true;\n                        break;\n                }\n            }\n            if (!isPointerValueSame && !this.isRangeUpdate) {\n                if (!refreshBounds && renderer) {\n                    this.removeSvg();\n                    this.renderElements();\n                }\n                if (refreshBounds || this.allowLoadingAnimation) {\n                    this.removeSvg();\n                    this.calculateBounds();\n                    this.renderElements();\n                    if (this.allowLoadingAnimation) {\n                        this.allowLoadingAnimation = this.animationDuration > 0 && !this.isOverAllAnimationComplete ? true : false;\n                        this.renderAnimation();\n                    }\n                }\n                if (refreshWithoutAnimation && !renderer && !refreshBounds && !this.allowLoadingAnimation) {\n                    this.removeSvg();\n                    this.calculateBounds();\n                    this.renderElements(false);\n                }\n            }\n            this.isRangeUpdate = false;\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     *\n     * @returns {string} - Returns the module name\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Property(0)\n    ], CircularGauge.prototype, \"animationDuration\", void 0);\n    __decorate([\n        Complex({ size: null, color: null, fontWeight: null, fontFamily: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowRangePreRender\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(0)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowMargin\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerText","cssText","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","fill","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","element","gauge","functionName","setAttribute","isCompleteAngle","startAngle","endAngle","totalAngle","Math","floor","getDegree","degree","getAngleFromValue","maximumValue","minimumValue","isClockWise","angle","round","getAngleFromLocation","center","point","atan2","PI","getLocationFromAngle","radius","radian","GaugeLocation","cos","sin","getPathArc","start","end","startWidth","endWidth","range","axis","isNullOrUndefined","startRadius","position","isLinearCircularGradient","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","arcPath","arcStartOne","arcEndOne","arcStartTwo","arcEndTwo","clockWise","innerStart","innerEnd","pointPosition","arcRoundedPath","outerOldEnd","innerOldEnd","innerOldStart","outerOldStart","roundedPath","arcWidthPath","endArc","startArc","widthDifference","abs","roundedCornerRadius","arcWidthPathCalculation","roundedArcWidthPathCalculation","startValueToAngle","maximum","minimum","endRadii","sqrt","pow","centerStartDistance","centerDistance","arcStart","arcEnd","angleValueDirection","endRadiusValue","arcTwo","startGreater","arcOne","degreeAngle","degreeValueOne","degreeValueTwo","startAddArc","startSubArc","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getTemplateFunction","template","templateFn","templateComplier","isNaN","parseFloat","querySelectorAll","length","charAt","querySelector","innerHTML","trim","isVue","isVue3","e","removeElement","getElement","remove","stringToNumber","containerSize","getPointer","targetId","tempString","replace","split","tempStringArray","axisIndex","pointerIndex","getLabelFormat","format","match","calculateShapes","location","shape","url","path","space","width","height","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","stroke","setStyles","border","setStyleAttribute","stroke-width","getValueFromAngle","getRange","rangeIndex","getMousePosition","pageX","pageY","elementRect","getBoundingClientRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getElementSize","elementSize","tooltipData","templateElement","templateLength","textTrim","maxWidth","label","i","substring","showTooltip","type","tooltip","tooltipRect","Rect","margin","availableSize","right","bottom","removeTooltip","toString","className","titleTooltip","event","isTitleTouch","target","elementArray","getElementsByClassName","textContent","title","legendSettings","visible","_i","_a","legendModule","legendCollection","legends","originalText","clearTimeout","this","setTimeout","bind","calculateSum","from","to","values","sum","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","linear","currentTime","startValue","endValue","duration","getCompleteArc","innerRadius","checkMinValue","getCompletePath","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","TextOption","VisibleLabels","axisLabelFont","legendLabelFont","__decorate","decorators","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","Location","LegendSettings","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","isPointerAnimation","Axis","visibleLabels","Collection","animationComplete","axisLabelRender","tooltipRender","gaugeMouseLeave","dragStart","dragMove","dragEnd","Annotations","renderAnnotation","index","allowLoadingAnimation","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","renderReactTemplates","annotationAnimation","axes","annotationAnimate","tempOpacity","animate","loadingAnimationDuration","progress","args","timeStamp","delay","isOverAllAnimationComplete","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","observedArgs","length_1","slice","annotationElement","updateLocation","currentRadius","midPoint","measureElementRect","description","getModuleName","destroy","bounds","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","isTooltipRender","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent","RegExp","tooltipArgs","pointer","appendInBodyTag","findPosition","pointerTextStyle","themeStyle","tooltipFontColor","tooltipTextOpacity","tooltipFontSize","svgTooltip","svgTooltipCreate","arrowInverted","tooltipFillOpacity","appendTo","tooltipPosition","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent","enableRtl","rangeTooltipArgs","rangeTooltipTextStyle_1","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","annotationTemplate","elementSizeAn","annotationTextStyle","fontSize","clearTemplate","children","isAngular","gaugeRect","offsetLeft","tooltipLeft","tooltipArg","Tooltip","enable","data","enableRTL","enableAnimation","SanitizeHtmlHelper","sanitize","inverted","areaBounds","tooltipFillColor","enableShadow","controlInstance","child","roundingPlaces","toFixed","isTemplate","addLeft","addTop","addHeight","addWidth","isTooltipRemoved","mouseUpHandler","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","checkAngles","drawAxisLine","lineStyle","lineColor","allowComponentRender","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","labelColor","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","textFont","labelFontFamily","lastlabel","FindAxisLabelCollision","labelTextElement","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","minorTickColor","j","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTickColor","push","axisLineWidth","drawRangePath","rangeElement","colorIndex","roundedStartAngle","roundedEndAngle","gradientRangeColor","rangeSplitValue","linearGradient","colorStop","rangeStart","rangeEnd","isAngleCross360","rangeGap","startAndEndRangeGap","process","degreeValue","gradientModule","radialGradient","rangeColorLength","degreeRange","degreeRangeValue","gradientDegree","gradientAngle","gradientAntiAngle","getGradientColorString","roundedRangeAppendPathCalculation","ceil","rangeAppendPathCalculation","pathElement","drawAxisRange","startEndDifference","previousEndWidth","previousStartWidth","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","rangeColors","theme","palette","toLowerCase","getRangePalette","PointerRenderer","drawPointers","pointerElement","pointers","calculatePointerRadius","visibility","setPointerValue","animation","animationMode","isPropertyChange","previousValue","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","gradientColor","gradientTailColor","gradientCapColor","needle","needleTail","cap","needleStartWidth","needleEndWidth","mid","needleColor","needleTailColor","capColor","minRadius","oldStartValue","oldEndValue","angleValue","roundStartAngle","roundEndAngle","calculateTextElement","textangle","textlocation","String","drawMarkerPointer","gradientMarkerColor","shapeBasedOnPosition","pointerColor","textObject","animatePointer","markerHeight","imageUrl","drawRangeBarPointer","gradientBarColor","performRangeBarAnimation","performTextAnimation","performNeedleAnimation","val","isAnimationProgress","animationDuration","annotationsModule","sweepAngle","pointAngle","pointerValue","arg","AxisLayoutPanel","axisOption","prevAnimatedMajorTickValue","prevAnimatedMajorTickIndex","prevAnimatedMinorTickValue","prevAnimatedMinorTickIndex","allowAxisCount","rangeAnimationCount","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","yMarginDiff","_loop_1","this_1","moveToCenter","centerXpoint","centerYpoint","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","calculateNumericInterval","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","log","currentInterval","_loop_2","axisLabelRenderSuccess","this_2","lastLabel","maxVal","getMaxLabelWidth","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","allowRangePreRender","drawClipPath","durationSplitUp","labelElementAnimation","axisElement","elementLabelAnimation","tickIndex","axisLabelCount","rangeAnimation","axisLineCalculation","axisWidth","axisLineAnimation","prevAnimatedTickType","isAxisLine","pointerValue_1","timeStamp_1","axisElement_1","start_1","end_1","val_1","axisAnimation","isMajorTick","isMinorTick","tickElementAnimation","labelRangeAnimation","majorTickCount","tickElement","minorTickCount","currentTickValue","minorTickInterval","minorTickValue","majorTickValue","isAxisLabel","isRange","rangesElement","rangeElementAnimation","isRangeAbsent","axisindex","gaugeAxisLayoutPanel","splitUpCount","axisCount","labelCount","isLabel","isrange","isPointer","elementId","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendID","click","getLegendOptions","legendText","LegendOptions","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","cursor","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","grayColor","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translateX","translatePage","pagingText","page","pageNumber","translate","group","fontcolor","legendTextElement","prevLegend","maxColumnWidth","textStartLoc","previousBound","isWithinBounds","totalRowCount","availablewidth","getAvailWidth","toggledIndex","legendItemsId_1","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","legendCollections","legendCollections_1","pageUp","pageText","tx","drawRectangle","legendItemsGroup","clippath","createClipPath","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","legendRenderingCollections","titleRect","PdfExport","control","export","fileName","orientation","allowDownload","Promise","resolve","reject","attrs","PdfPageOrientation","Landscape","exportElement","cloneNode","backgroundColor","childNodes","window","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","isDownload","userAgent","svgData","outerHTML","triggerDownload","image_1","context_1","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","printFunction","div","forEach","Element","backgroundElement","getElementsByTagName","ColorStop","GradientPosition","LinearGradient","RadialGradient","Gradient","calculateLinearGradientPosition","x1","x2","y1","y2","getLinearGradientColor","colors","getCircularGradientColor","getGradientColor","gradientCount","gradientPosition","def","drawGradient","getRadialGradientColor","outerPosition","fx","innerPosition","fy","CircularGauge","isRangeUpdate","isResize","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderAnimation","renderComplete","titleFontColor","titleFontWeight","getThemeStyle","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","mouseLeave","isTouch","resizeEvent","gaugeResize","setGaugeStyle","setMouseXY","getMouseArgs","dragArgs","enableRangeDrag","svgElement","activePointer","preventDefault","dragPointInd","dragAxisInd","activeAxis","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","clientX","clientY","buttons","pointerType","stopPropagation","previousValue1","avg","setRangeValue","pointInd","axisInd","rangeInd","pointerInd","previousSize","currentSize","calculateSvgSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","offsetWidth","containerHeight","offsetHeight","borderWidth","join","radiusAndCenterCalculation","titleHeight","isUpperAngle","isLowerAngle","isFullPercent","radiusPercent","isUpper","isLower","widthRadius","centerX","centerY","allowMargin","heightValue","heightRadius","difference","titleStyle","renderBorder","renderTitle","titleSize","Number","trimmedTitle","tabIndex","enableAnimation_1","isProtectedOnChange","setAnnotationValue","isElementExist","secondaryElement","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","svgRect","mouseY","mouseX","axisRange","oldRangeStart","oldRangeEnd","tooltipModule","isGradientVisible","isVisible","_b","_c","_d","_e","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","axesPropertyLength","collection_1","pointerPropertyLength","Event","NotifyPropertyChanges","Component"],"mappings":"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"}