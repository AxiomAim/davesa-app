{"version":3,"file":"ej2-pdf.umd.min.js","sources":["../src/pdf/core/utils.js","../src/pdf/core/pdf-primitives.js","../src/pdf/core/enumerator.js","../src/pdf/core/graphics/pdf-stream-writer.js","../src/pdf/core/fonts/pdf-string-format.js","../src/pdf/core/fonts/pdf-font-metrics.js","../src/pdf/core/fonts/string-layouter.js","../src/pdf/core/fonts/ttf-table.js","../src/pdf/core/fonts/ttf-reader.js","../src/pdf/core/fonts/unicode-true-type-font.js","../src/pdf/core/graphics/rightToLeft/text-shape.js","../src/pdf/core/graphics/rightToLeft/bidirectional.js","../src/pdf/core/graphics/rightToLeft/text-renderer.js","../src/pdf/core/fonts/pdf-standard-font.js","../src/pdf/core/graphics/pdf-path.js","../src/pdf/core/graphics/images/pdf-image.js","../src/pdf/core/graphics/pdf-graphics.js","../src/pdf/core/import-export/xml-writer.js","../src/pdf/core/import-export/xfdf-document.js","../src/pdf/core/import-export/json-document.js","../src/pdf/core/graphics/pdf-template.js","../src/pdf/core/pdf-action.js","../src/pdf/core/form/field.js","../src/pdf/core/annotations/pdf-appearance.js","../src/pdf/core/annotations/annotation.js","../src/pdf/core/annotations/annotation-collection.js","../src/pdf/core/pdf-page.js","../src/pdf/core/graphics/images/image-decoder.js","../src/pdf/core/graphics/images/jpeg-decoder.js","../src/pdf/core/compression/enum.js","../src/pdf/core/compression/decompressed-output.js","../src/pdf/core/graphics/images/png-decoder.js","../src/pdf/core/compression/in-buffer.js","../src/pdf/core/compression/huffman-tree.js","../src/pdf/core/compression/inflater.js","../src/pdf/core/compression/deflate-stream.js","../src/pdf/core/base-stream.js","../src/pdf/core/content-parser.js","../src/pdf/core/decode-stream.js","../src/pdf/core/decrypt-stream.js","../src/pdf/core/flate-stream.js","../src/pdf/core/pdf-catalog.js","../src/pdf/core/predictor-stream.js","../src/pdf/core/pdf-parser.js","../src/pdf/core/security/encryptor.js","../src/pdf/core/pdf-cross-reference.js","../src/pdf/core/form/form.js","../src/pdf/core/import-export/fdf-document.js","../src/pdf/core/pdf-outline.js","../src/pdf/core/import-export/xml-document.js","../src/pdf/core/pdf-file-structure.js","../src/pdf/core/pdf-document.js","../src/pdf/core/annotations/pdf-paddings.js","../src/pdf/core/graphics/images/pdf-bitmap.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { PdfDestination } from './pdf-page';\nimport { PdfFormFieldVisibility, PdfAnnotationFlag, PdfCheckBoxStyle, PdfHighlightMode, PdfBorderStyle, PdfBorderEffectStyle, PdfLineEndingStyle, _PdfCheckFieldState, PdfMeasurementUnit, _PdfGraphicsUnit, PdfTextMarkupAnnotationType, PdfRotationAngle, PdfAnnotationState, PdfAnnotationStateModel, PdfPopupIcon, PdfRubberStampAnnotationIcon, PdfAttachmentIcon, PdfAnnotationIntent, PdfBlendMode, _PdfAnnotationType, PdfDestinationMode } from './enumerator';\nimport { _PdfTransformationMatrix } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nimport { PdfAnnotation, PdfLineAnnotation } from './annotations/annotation';\nimport { PdfTemplate } from './graphics/pdf-template';\nimport { PdfField } from './form/field';\nimport { PdfCjkFontFamily, PdfCjkStandardFont, PdfFontFamily, PdfFontStyle, PdfStandardFont, PdfTrueTypeFont } from './fonts/pdf-standard-font';\nimport { _JpegDecoder } from './graphics/images/jpeg-decoder';\nimport { _PngDecoder } from './graphics/images/png-decoder';\n/**\n * Gets the unsigned value.\n *\n * @param {number} value input value.\n * @param {number} bits bits to process.\n * @returns {number} unsigned value.\n */\nexport function _toUnsigned(value, bits) {\n    return (value & ((Math.pow(2, bits)) - 1));\n}\n/**\n * Gets the signed 16 bit value.\n *\n * @param {number} value input value.\n * @returns {number} unsigned value.\n */\nexport function _toSigned16(value) {\n    return (value << 16) >> 16;\n}\n/**\n * Gets the signed 32 bit value.\n *\n * @param {number} value input value.\n * @returns {number} unsigned value.\n */\nexport function _toSigned32(value) {\n    return (value << 0);\n}\n/**\n * Copy values from one array to another.\n *\n * @param {number[]} target destination array.\n * @param {number} at target index.\n * @param {number[]} source source array.\n * @param {number} start start index.\n * @param {number} end end index.\n * @returns {void} Returns nothing.\n */\nexport function _copyRange(target, at, source, start, end) {\n    if (start === null || typeof start === 'undefined') {\n        start = 0;\n    }\n    end = (typeof end === 'undefined') ? source.length : end;\n    start = Math.max(0, Math.min(source.length, start));\n    end = Math.max(0, Math.min(source.length, end));\n    if (at + (end - start) > target.length) {\n        target.length = at + (end - start);\n    }\n    for (var i = start, j = at; i < end; i++, j++) {\n        target[Number.parseInt(j.toString(), 10)] = source[Number.parseInt(i.toString(), 10)];\n    }\n}\n/**\n * Checks the type of the image using header bytes.\n *\n * @param {Uint8Array} imageData image data.\n * @param {number[]} header header bytes.\n * @returns {boolean} Header matched or not.\n */\nexport function _checkType(imageData, header) {\n    for (var i = 0; i < header.length; i++) {\n        if (header[Number.parseInt(i.toString(), 10)] !== imageData[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Gets the image decoder.\n *\n * @param {Uint8Array} imageData image data.\n * @returns {_ImageDecoder} Image decoder.\n */\nexport function _getDecoder(imageData) {\n    var decoder;\n    if (_checkType(imageData, [255, 216])) {\n        decoder = new _JpegDecoder(imageData);\n    }\n    else if (_checkType(imageData, [137, 80, 78, 71, 13, 10, 26, 10])) {\n        decoder = new _PngDecoder(imageData);\n    }\n    else {\n        throw new Error('Unsupported image format');\n    }\n    return decoder;\n}\n/**\n * Gets the page rotation.\n *\n * @param {PdfPage} page Page.\n * @param {number} height Height.\n * @param {number} left Left.\n * @returns {number} Page rotation.\n */\nexport function _checkRotation(page, height, left) {\n    var topValue = 0;\n    left = (typeof left === 'undefined' || left === null) ? 0 : left;\n    if (page.rotation === PdfRotationAngle.angle90) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : left;\n    }\n    else if (page.rotation === PdfRotationAngle.angle180) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : height;\n    }\n    else if (page.rotation === PdfRotationAngle.angle270) {\n        var size = page.size;\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : size[0] - left;\n    }\n    return topValue;\n}\n/**\n * Gets the page index.\n *\n * @param {PdfDocument} loadedDocument Loaded document.\n * @param {_PdfDictionary} pageDictionary Page dictionary.\n * @returns {number} Page index.\n */\nexport function _getPageIndex(loadedDocument, pageDictionary) {\n    var index = -1;\n    for (var i = 0; i < loadedDocument.pageCount; i++) {\n        var page = loadedDocument.getPage(i);\n        if (page._pageDictionary === pageDictionary) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * Convert string value from annotation flag\n *\n * @private\n * @param {PdfAnnotationFlag} flag Annotation flag.\n * @returns {string} Valid string to write into XML.\n */\nexport function _annotationFlagsToString(flag) {\n    var values = [];\n    if ((flag & PdfAnnotationFlag.hidden) !== 0) {\n        values.push('hidden');\n    }\n    if ((flag & PdfAnnotationFlag.invisible) !== 0) {\n        values.push('invisible');\n    }\n    if ((flag & PdfAnnotationFlag.locked) !== 0) {\n        values.push('locked');\n    }\n    if ((flag & PdfAnnotationFlag.noRotate) !== 0) {\n        values.push('norotate');\n    }\n    if ((flag & PdfAnnotationFlag.noView) !== 0) {\n        values.push('noview');\n    }\n    if ((flag & PdfAnnotationFlag.noZoom) !== 0) {\n        values.push('nozoom');\n    }\n    if ((flag & PdfAnnotationFlag.print) !== 0) {\n        values.push('print');\n    }\n    if ((flag & PdfAnnotationFlag.readOnly) !== 0) {\n        values.push('readonly');\n    }\n    if ((flag & PdfAnnotationFlag.toggleNoView) !== 0) {\n        values.push('togglenoview');\n    }\n    if ((flag & PdfAnnotationFlag.default) !== 0) {\n        values.push('default');\n    }\n    return values.join(',');\n}\n/**\n * Convert string value to annotation flag\n *\n * @private\n * @param {string} flag String value to map\n * @returns {PdfAnnotationFlag} Annotation flag\n */\nexport function _stringToAnnotationFlags(flag) {\n    switch (flag) {\n        case 'hidden':\n            return PdfAnnotationFlag.hidden;\n        case 'invisible':\n            return PdfAnnotationFlag.invisible;\n        case 'locked':\n            return PdfAnnotationFlag.locked;\n        case 'norotate':\n            return PdfAnnotationFlag.noRotate;\n        case 'noview':\n            return PdfAnnotationFlag.noView;\n        case 'nozoom':\n            return PdfAnnotationFlag.noZoom;\n        case 'print':\n            return PdfAnnotationFlag.print;\n        case 'readonly':\n            return PdfAnnotationFlag.readOnly;\n        case 'togglenoview':\n            return PdfAnnotationFlag.toggleNoView;\n        default:\n            return PdfAnnotationFlag.default;\n    }\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @returns {string} Valid string to write into PDF.\n */\nexport function _stringToPdfString(value) {\n    if (value.charCodeAt(0) >= '\\xEF'.charCodeAt(0)) {\n        var encoding = void 0;\n        if (value[0] === '\\xEF' && value[1] === '\\xBB' && value[2] === '\\xBF') {\n            encoding = 'utf-8';\n        }\n        else if (value[0] === '\\xFF' && value[1] === '\\xFE') {\n            encoding = 'utf-16le';\n        }\n        else if (value[0] === '\\xFE' && value[1] === '\\xFF') {\n            encoding = 'utf-16be';\n        }\n        if (encoding) {\n            try {\n                return (new TextDecoder(encoding, { fatal: true })).decode(_stringToBytes(value));\n            }\n            catch (e) { } // eslint-disable-line\n        }\n    }\n    var buffer = [];\n    var translateTable = [\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n        0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n        0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n        0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n        0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac\n    ];\n    for (var i = 0; i < value.length; i++) {\n        var code = translateTable[value.charCodeAt(i)];\n        buffer.push(code ? String.fromCharCode(code) : value.charAt(i));\n    }\n    return buffer.join('');\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @param {boolean} isDirect Whether to return a number[] or Uint8Array.\n * @param {boolean} isPassword Whether the string is a password.\n * @returns {number[] | Uint8Array} Byte array\n */\nexport function _stringToBytes(value, isDirect, isPassword, destination) {\n    if (isDirect === void 0) { isDirect = false; }\n    if (isPassword === void 0) { isPassword = false; }\n    var bytes = [];\n    if (destination) {\n        bytes = destination;\n    }\n    if (isPassword) {\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n    }\n    else {\n        for (var i = 0; i < value.length; i++) {\n            var charCode = value.charCodeAt(i);\n            if (charCode < 0x80) {\n                bytes.push(charCode);\n            }\n            else if (charCode < 0x800) {\n                bytes.push((charCode >> 6) | 0xC0);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n            else if (charCode < 0xD800 || charCode >= 0xE000) {\n                bytes.push((charCode >> 12) | 0xE0);\n                bytes.push(((charCode >> 6) & 0x3F) | 0x80);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n            else {\n                i++;\n                charCode = 0x10000 + (((charCode & 0x3FF) << 10) | (value.charCodeAt(i) & 0x3FF));\n                bytes.push((charCode >> 18) | 0xF0);\n                bytes.push(((charCode >> 12) & 0x3F) | 0x80);\n                bytes.push(((charCode >> 6) & 0x3F) | 0x80);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n        }\n    }\n    return isDirect ? bytes : new Uint8Array(bytes);\n}\n/**\n * Check equal or not.\n *\n * @private\n * @param {number[]} first byte array.\n * @param {number[]} second byte array.\n * @returns {boolean} Equal or not\n */\nexport function _areArrayEqual(first, second) {\n    if (first.length !== second.length) {\n        return false;\n    }\n    for (var i = 0; i < first.length; i++) {\n        if (first[Number.parseInt(i.toString(), 10)] !== second[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Convert number to string as round value with fixed decimal points 2.\n *\n * @private\n * @param {number[]} value number value.\n * @returns {boolean} Equal string.\n */\nexport function _numberToString(value) {\n    if (Number.isInteger(value)) {\n        return value.toString();\n    }\n    return value.toFixed(7);\n}\n/**\n * Check whether entries in two array are equal or not.\n *\n * @private\n * @param {number[]} value first array.\n * @param {number[]} current second array.\n * @returns {boolean} Return true if for each elements are equal in both array.\n */\nexport function _areNotEqual(value, current) {\n    var result = false;\n    if (value.length !== current.length) {\n        return true;\n    }\n    for (var i = 0; i < value.length; i++) {\n        if (value[i] !== current[i]) { // eslint-disable-line\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n/**\n * Process bytes and convert as string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @returns {string} String value processed from input bytes.\n */\nexport function _bytesToString(bytes, isJson) {\n    if (isJson === void 0) { isJson = false; }\n    var length = bytes.length;\n    var max = 8192;\n    var stringBuffer = [];\n    if (length < max) {\n        return (isJson ? _decodeUTF8(bytes) : String.fromCharCode.apply(null, bytes));\n    }\n    for (var i = 0; i < length; i += max) {\n        var chunkEnd = Math.min(i + max, length);\n        var chunk = bytes.subarray(i, chunkEnd);\n        stringBuffer.push(isJson ? _decodeUTF8(chunk) : String.fromCharCode.apply(null, chunk));\n    }\n    return stringBuffer.join('');\n}\n/**\n * Decode unicode string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @returns {string} String value processed from input bytes.\n */\nexport function _decodeUTF8(bytes) {\n    var result = '';\n    var i = 0;\n    while (i < bytes.length) {\n        var byte = bytes[i++];\n        if (byte < 0x80) {\n            result += String.fromCharCode(byte);\n        }\n        else if (byte < 0xE0) {\n            result += String.fromCharCode(((byte & 0x1F) << 6) | (bytes[i++] & 0x3F));\n        }\n        else if (byte < 0xF0) {\n            result += String.fromCharCode(((byte & 0x0F) << 12) | ((bytes[i++] & 0x3F) << 6) | (bytes[i++] & 0x3F));\n        }\n        else {\n            var codePoint = ((byte & 0x07) << 18) | ((bytes[i++] & 0x3F) << 12) | ((bytes[i++] & 0x3F) << 6) | (bytes[i++] & 0x3F) - 0x10000;\n            result += String.fromCharCode((codePoint >> 10) + 0xD800, (codePoint & 0x03FF) + 0xDC00);\n        }\n    }\n    return result;\n}\n/**\n * Convert string to unicode array.\n *\n * @private\n * @param {string} value string value.\n * @returns {Uint8Array} unicode array\n */\nexport function _stringToUnicodeArray(value) {\n    var output = [];\n    if (value !== null && typeof value !== 'undefined') {\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n    }\n    var unicodeArray = new Uint8Array(output);\n    return unicodeArray;\n}\n/**\n * Convert byte array to hex string.\n *\n * @private\n * @param {Uint8Array} byteArray Byte array.\n * @returns {string} Hex string.\n */\nexport function _byteArrayToHexString(byteArray) {\n    var nextHexByte;\n    var stringBuffer = [];\n    for (var i = 0; i < byteArray.length; i++) {\n        nextHexByte = byteArray[Number.parseInt(i.toString(), 10)].toString(16).toUpperCase();\n        if (nextHexByte.length < 2) {\n            nextHexByte = '0' + nextHexByte;\n        }\n        stringBuffer.push(nextHexByte);\n    }\n    return stringBuffer.join('');\n}\n/**\n * Convert hex string to byte array.\n *\n * @private\n * @param {string} hexString Hex string.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Byte array.\n */\nexport function _hexStringToByteArray(hexString, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var array = [];\n    if (hexString) {\n        for (var i = 0; i < hexString.length; i += 2) {\n            array.push(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n    }\n    return isDirect ? array : new Uint8Array(array);\n}\n/**\n * Convert hex string to normal string.\n *\n * @private\n * @param {string} hexString Hex string.\n * @returns {string} Normal string.\n */\nexport function _hexStringToString(hexString) {\n    var result = '';\n    if (hexString && hexString[0] === '#') {\n        hexString = hexString.substring(1);\n        for (var i = 0; i < hexString.length; i += 2) {\n            result += String.fromCharCode(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n        return result;\n    }\n    return hexString;\n}\n/**\n * Check whether the character code is white space.\n *\n * @private\n * @param {number} ch The character code to check.\n * @returns {boolean} True if the character is space, otherwise false.\n */\nexport function _isWhiteSpace(ch) {\n    return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n/**\n * Decode bytes from base64 string.\n *\n * @private\n * @param {string} input The base64 string to decode.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Decoded bytes.\n */\nexport function _decode(input, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var chr1;\n    var chr2;\n    var chr3;\n    var enc1;\n    var enc2;\n    var enc3;\n    var enc4;\n    var i = 0;\n    var resultIndex = 0;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, ''); // eslint-disable-line\n    var totalLength = input.length * 3 / 4;\n    if (input.charAt(input.length - 1) === key.charAt(64)) {\n        totalLength--;\n    }\n    var output = new Array(totalLength | 0);\n    while (i < input.length) {\n        enc1 = key.indexOf(input.charAt(i++));\n        enc2 = key.indexOf(input.charAt(i++));\n        enc3 = key.indexOf(input.charAt(i++));\n        enc4 = key.indexOf(input.charAt(i++));\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr1;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr2;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr3;\n        }\n    }\n    return isDirect ? output : new Uint8Array(output);\n}\n/**\n * Encode bytes to base64 string.\n *\n * @private\n * @param {Uint8Array} bytes Bytes to encode.\n * @returns {string} Decoded string.\n */\nexport function _encode(bytes) {\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var output = '';\n    var currentChar = 0;\n    for (var i = 0; i < bytes.length; i++) {\n        if (i % 3 === 0) {\n            currentChar = (bytes[Number.parseInt(i.toString(), 10)] >> 2);\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n            currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 4) & 63;\n        }\n        else if (i % 3 === 1) {\n            currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 4);\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n            currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 2) & 63;\n        }\n        else if (i % 3 === 2) {\n            currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 6);\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n            currentChar = bytes[Number.parseInt(i.toString(), 10)] & 63;\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n        }\n    }\n    if (bytes.length % 3 === 1) {\n        output += key[Number.parseInt(currentChar.toString(), 10)] + \"==\";\n    }\n    if (bytes.length % 3 === 2) {\n        output += key[Number.parseInt(currentChar.toString(), 10)] + \"=\";\n    }\n    return output;\n}\n/**\n * Get property value in inheritable mode.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} key Input dictionary.\n * @param {boolean} isArray Search array.\n * @param {boolean} stopWhenFound Stop when found.\n * @param {string[]} parentKey Key string for parent node.\n * @returns {any} Property value.\n */\nexport function _getInheritableProperty(dictionary, key, isArray, stopWhenFound) {\n    if (isArray === void 0) { isArray = false; }\n    if (stopWhenFound === void 0) { stopWhenFound = true; }\n    var parentKey = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        parentKey[_i - 4] = arguments[_i];\n    }\n    var values; // eslint-disable-line\n    var refSet = new Set(); // eslint-disable-line\n    while (dictionary instanceof _PdfDictionary && dictionary.objId && !refSet.has(dictionary.objId)) {\n        if (dictionary.objId) {\n            refSet.add(dictionary.objId);\n        }\n        var value = isArray ? dictionary.getArray(key) : dictionary.get(key); // eslint-disable-line\n        if (value !== undefined) {\n            if (stopWhenFound) {\n                return value;\n            }\n            if (!values) {\n                values = [];\n            }\n            values.push(value);\n        }\n        var index = 0;\n        var hasParent = false;\n        while (index < parentKey.length) {\n            var element = parentKey[index]; // eslint-disable-line\n            if (dictionary.has(element)) {\n                dictionary = dictionary.get(element);\n                hasParent = true;\n                break;\n            }\n            index++;\n        }\n        if (!hasParent) {\n            break;\n        }\n    }\n    return values;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {boolean} isWidget Input page.\n * @returns {any} Bounds value.\n */\nexport function _parseRectangle(dictionary, isWidget) {\n    var rectangle = { x: 0, y: 0, width: 0, height: 0 };\n    var elements = dictionary.getArray('Rect');\n    if (elements && Array.isArray(elements)) {\n        var x1 = elements[0];\n        var y1 = elements[1];\n        var x2 = elements[2];\n        var y2 = elements[3];\n        if (typeof x1 !== 'undefined' && typeof y1 !== 'undefined' && typeof x2 !== 'undefined' && typeof y2 !== 'undefined') {\n            rectangle.x = Math.min(x1, x2);\n            rectangle.y = Math.min(y1, y2);\n            rectangle.width = Math.max(x1, x2) - rectangle.x;\n            rectangle.height = Math.max(y1, y2) - rectangle.y;\n            if (isWidget) {\n                rectangle.height = parseFloat(rectangle.height.toFixed(3));\n                if (elements[1] < 0) {\n                    rectangle.y = elements[1];\n                    if (elements[1] > elements[3]) {\n                        rectangle.y -= rectangle.height;\n                    }\n                }\n            }\n        }\n    }\n    return rectangle;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} page Input page.\n * @returns {any} Bounds value.\n */\nexport function _calculateBounds(dictionary, page) {\n    var rect;\n    if (dictionary.has('Rect')) {\n        rect = _parseRectangle(dictionary);\n        if (page) {\n            var size = page.size;\n            var mBox = page.mediaBox;\n            var cropBox = page.cropBox;\n            if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && page._pageDictionary.has('CropBox')) {\n                if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                    size[1] === cropBox[3]) && (rect.x !== cropBox[0])) {\n                    rect.x -= cropBox[0];\n                    rect.y = cropBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else if (mBox && Array.isArray(mBox) && mBox.length === 4 && page._pageDictionary.has('MediaBox')) {\n                if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                    rect.x -= mBox[0];\n                    rect.y = mBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else {\n                rect.y = size[1] - (rect.y + rect.height);\n            }\n        }\n        else {\n            rect.y = rect.y + rect.height;\n        }\n    }\n    return rect;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value array value.\n * @returns {any} Rectangle value.\n */\nexport function _toRectangle(value) {\n    return {\n        x: Math.min(value[0], value[2]),\n        y: Math.min(value[1], value[3]),\n        width: Math.abs(value[0] - value[2]),\n        height: Math.abs(value[1] - value[3])\n    };\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {any} value Rectangle value.\n * @param {any} value.x X value.\n * @param {any} value.y Y value.\n * @param {any} value.width Width value.\n * @param {any} value.height Height value.\n * @returns {number[]} Bounds value.\n */\nexport function _fromRectangle(value) {\n    return [value.x, value.y, value.x + value.width, value.y + value.height];\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value Input dictionary.\n * @param {string} page Input page.\n * @returns {number[]} Bounds value.\n */\nexport function _getUpdatedBounds(value, page) {\n    var x = value[0];\n    var y = value[1];\n    var width = value[2];\n    var height = value[3];\n    if (page) {\n        var size = page.size;\n        var pageWidth = size[0];\n        var pageHeight = size[1];\n        var mBox = page.mediaBox;\n        var cropBox = page.cropBox;\n        if (cropBox && Array.isArray(cropBox) && cropBox.length === 4) {\n            if (cropBox[0] !== 0 || cropBox[1] !== 0 || pageWidth === cropBox[2] || pageHeight === cropBox[3]) {\n                x += cropBox[0];\n                y = cropBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else if (mBox && Array.isArray(mBox) && mBox.length === 4) {\n            if (mBox[0] > 0 || mBox[1] > 0 || pageWidth === mBox[2] || pageHeight === mBox[3]) {\n                x -= mBox[0];\n                y = mBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else {\n            y = pageHeight - (y + height);\n        }\n    }\n    return [x, y, x + width, y + height];\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {string} colorString Color value in string format.\n * @returns {number[]} RGB color value.\n */\nexport function _convertToColor(colorString) {\n    var color = _getColorValue(colorString);\n    if (!color) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(colorString);\n        if (result) {\n            color = [Number.parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\n        }\n    }\n    return color;\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {number[]} array Color array in dictionary.\n * @returns {number[]} RGB color value.\n */\nexport function _parseColor(array) {\n    var color;\n    if (array) {\n        if (array.length === 1) {\n            var entry = array[0];\n            if (typeof entry !== 'undefined') {\n                var round = Math.round(entry * 255);\n                color = [round, round, round];\n            }\n        }\n        else if (array.length === 3) {\n            var r = array[0];\n            var g = array[1];\n            var b = array[2];\n            if (typeof r !== 'undefined' && typeof g !== 'undefined' && typeof b !== 'undefined') {\n                color = [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n            }\n        }\n        else if (array.length === 4) {\n            var c = array[0];\n            var m = array[1];\n            var y = array[2];\n            var k = array[3];\n            if (typeof c !== 'undefined' && typeof m !== 'undefined' && typeof y !== 'undefined' && typeof k !== 'undefined') {\n                var fBlack = k * 255;\n                color = [Math.round(255 - Math.min(255, ((c * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((m * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((y * (255 - fBlack)) + fBlack)))];\n            }\n        }\n    }\n    return color;\n}\n/**\n * Get the border style in _PdfName.\n *\n * @private\n * @param {PdfBorderStyle} style border style in enum.\n * @returns {_PdfName} border style in _PdfName.\n */\nexport function _mapBorderStyle(style) {\n    var token = 'S';\n    switch (style) {\n        case PdfBorderStyle.dot:\n        case PdfBorderStyle.dashed:\n            token = 'D';\n            break;\n        case PdfBorderStyle.beveled:\n            token = 'B';\n            break;\n        case PdfBorderStyle.inset:\n            token = 'I';\n            break;\n        case PdfBorderStyle.underline:\n            token = 'U';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Get the border effect style in _PdfName.\n *\n * @private\n * @param {string} style border effect style as string.\n * @returns {PdfBorderEffectStyle} border effect style.\n */\nexport function _mapBorderEffectStyle(style) {\n    var value = PdfBorderEffectStyle.solid;\n    switch (style) {\n        case 'C':\n            value = PdfBorderEffectStyle.cloudy;\n            break;\n    }\n    return value;\n}\n/**\n * Get the string value for line ending style.\n *\n * @private\n * @param {PdfLineEndingStyle} style style in enum.\n * @returns {string} value default None.\n */\nexport function _reverseMapEndingStyle(style) {\n    var value = 'None';\n    if (typeof style !== 'undefined') {\n        switch (style) {\n            case PdfLineEndingStyle.openArrow:\n                value = 'OpenArrow';\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                value = 'ClosedArrow';\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                value = 'ROpenArrow';\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                value = 'RClosedArrow';\n                break;\n            case PdfLineEndingStyle.butt:\n                value = 'Butt';\n                break;\n            case PdfLineEndingStyle.diamond:\n                value = 'Diamond';\n                break;\n            case PdfLineEndingStyle.circle:\n                value = 'Circle';\n                break;\n            case PdfLineEndingStyle.square:\n                value = 'Square';\n                break;\n            case PdfLineEndingStyle.slash:\n                value = 'Slash';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Get the enum value for line ending style.\n *\n * @private\n * @param {string} style Style value in string.\n * @param {PdfLineEndingStyle} defaultValue Default style value to return.\n * @returns {PdfLineEndingStyle} enum value default 0.\n */\nexport function _mapLineEndingStyle(style, defaultValue) {\n    var value = typeof defaultValue !== 'undefined' ? defaultValue : PdfLineEndingStyle.none;\n    switch (style.toLowerCase()) {\n        case 'openarrow':\n            value = PdfLineEndingStyle.openArrow;\n            break;\n        case 'closedarrow':\n            value = PdfLineEndingStyle.closedArrow;\n            break;\n        case 'ropenarrow':\n            value = PdfLineEndingStyle.rOpenArrow;\n            break;\n        case 'rclosedarrow':\n            value = PdfLineEndingStyle.rClosedArrow;\n            break;\n        case 'butt':\n            value = PdfLineEndingStyle.butt;\n            break;\n        case 'diamond':\n            value = PdfLineEndingStyle.diamond;\n            break;\n        case 'circle':\n            value = PdfLineEndingStyle.circle;\n            break;\n        case 'square':\n            value = PdfLineEndingStyle.square;\n            break;\n        case 'slash':\n            value = PdfLineEndingStyle.slash;\n            break;\n    }\n    return value;\n}\n/**\n * Get highlight mode.\n *\n * @private\n * @param {string} mode Mode entry in dictionary.\n * @returns {PdfHighlightMode} Highlight mode.\n */\nexport function _mapHighlightMode(mode) {\n    switch (mode) {\n        case 'P':\n            return PdfHighlightMode.push;\n        case 'N':\n            return PdfHighlightMode.noHighlighting;\n        case 'O':\n            return PdfHighlightMode.outline;\n        default:\n            return PdfHighlightMode.invert;\n    }\n}\n/**\n * Get highlight mode as string.\n *\n * @private\n * @param {PdfHighlightMode} mode Mode entry.\n * @returns {_PdfName} Highlight mode as PDF name.\n */\nexport function _reverseMapHighlightMode(mode) {\n    switch (mode) {\n        case PdfHighlightMode.push:\n            return _PdfName.get('P');\n        case PdfHighlightMode.noHighlighting:\n            return _PdfName.get('N');\n        case PdfHighlightMode.outline:\n            return _PdfName.get('O');\n        default:\n            return _PdfName.get('I');\n    }\n}\n/**\n * Reverse map blend mode.\n *\n * @private\n * @param {PdfBlendMode} mode Mode entry.\n * @returns {_PdfName} Blend mode as name.\n */\nexport function _reverseMapBlendMode(mode) {\n    var token = 'Normal';\n    switch (mode) {\n        case PdfBlendMode.multiply:\n            token = 'Multiply';\n            break;\n        case PdfBlendMode.screen:\n            token = 'Screen';\n            break;\n        case PdfBlendMode.overlay:\n            token = 'Overlay';\n            break;\n        case PdfBlendMode.darken:\n            token = 'Darken';\n            break;\n        case PdfBlendMode.lighten:\n            token = 'Lighten';\n            break;\n        case PdfBlendMode.colorDodge:\n            token = 'ColorDodge';\n            break;\n        case PdfBlendMode.colorBurn:\n            token = 'ColorBurn';\n            break;\n        case PdfBlendMode.hardLight:\n            token = 'HardLight';\n            break;\n        case PdfBlendMode.softLight:\n            token = 'SoftLight';\n            break;\n        case PdfBlendMode.difference:\n            token = 'Difference';\n            break;\n        case PdfBlendMode.exclusion:\n            token = 'Exclusion';\n            break;\n        case PdfBlendMode.hue:\n            token = 'Hue';\n            break;\n        case PdfBlendMode.saturation:\n            token = 'Saturation';\n            break;\n        case PdfBlendMode.color:\n            token = 'Color';\n            break;\n        case PdfBlendMode.luminosity:\n            token = 'Luminosity';\n            break;\n        default:\n            token = 'Normal';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Map blend mode.\n *\n * @private\n * @param {_PdfName} token Blend mode as name.\n * @returns {PdfBlendMode} Mode value;\n */\nexport function _mapBlendMode(token) {\n    var style = PdfBlendMode.normal;\n    switch (token.name) {\n        case 'Multiply':\n            style = PdfBlendMode.multiply;\n            break;\n        case 'Screen':\n            style = PdfBlendMode.screen;\n            break;\n        case 'Overlay':\n            style = PdfBlendMode.overlay;\n            break;\n        case 'Darken':\n            style = PdfBlendMode.darken;\n            break;\n        case 'Lighten':\n            style = PdfBlendMode.lighten;\n            break;\n        case 'ColorDodge':\n            style = PdfBlendMode.colorDodge;\n            break;\n        case 'ColorBurn':\n            style = PdfBlendMode.colorBurn;\n            break;\n        case 'HardLight':\n            style = PdfBlendMode.hardLight;\n            break;\n        case 'SoftLight':\n            style = PdfBlendMode.softLight;\n            break;\n        case 'Difference':\n            style = PdfBlendMode.difference;\n            break;\n        case 'Exclusion':\n            style = PdfBlendMode.exclusion;\n            break;\n        case 'Hue':\n            style = PdfBlendMode.hue;\n            break;\n        case 'Saturation':\n            style = PdfBlendMode.saturation;\n            break;\n        case 'Color':\n            style = PdfBlendMode.color;\n            break;\n        case 'Luminosity':\n            style = PdfBlendMode.luminosity;\n            break;\n        default:\n            style = PdfBlendMode.normal;\n            break;\n    }\n    return style;\n}\n/**\n * Convert float to string.\n *\n * @private\n * @param {number} value number value.\n * @returns {string} equal fixed length string value;\n */\nexport function _floatToString(value) {\n    var returnString = value.toFixed(2);\n    if (returnString === '0.00') {\n        returnString = '.00';\n    }\n    return returnString;\n}\n/**\n * Check and add proc set value.\n *\n * @private\n * @param {string} value entry.\n * @param {_PdfDictionary} dictionary source dictionary.\n * @returns {void} Nothing;\n */\nexport function _addProcSet(value, dictionary) {\n    var name = _PdfName.get(value);\n    if (dictionary.has('ProcSet')) {\n        var procset = dictionary.getArray('ProcSet');\n        if (procset && procset.indexOf(name) === -1) {\n            procset.push(name);\n            dictionary.update('ProcSet', procset);\n        }\n    }\n    else {\n        dictionary.update('ProcSet', [name]);\n    }\n}\n/**\n * Get new GUID string.\n *\n * @private\n * @returns {string} A new GUID string;\n */\nexport function _getNewGuidString() {\n    return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n        var random = Math.random() * 16 | 0;\n        var result = c === 'a' ? random : (random & 0x3 | 0x8);\n        return result.toString(16);\n    });\n}\n/**\n * Escape PDF name.\n *\n * @private\n * @param {string} value name value.\n * @returns {string} equal and processed name value;\n */\nexport function _escapePdfName(value) {\n    var buffer = [];\n    var start = 0;\n    for (var i = 0; i < value.length; i++) {\n        var char = value.charCodeAt(i);\n        if (char < 0x21 ||\n            char > 0x7e ||\n            char === 0x23 ||\n            char === 0x28 ||\n            char === 0x29 ||\n            char === 0x3c ||\n            char === 0x3e ||\n            char === 0x5b ||\n            char === 0x5d ||\n            char === 0x7b ||\n            char === 0x7d ||\n            char === 0x2f ||\n            char === 0x25) {\n            if (start < i) {\n                buffer.push(value.substring(start, i));\n            }\n            buffer.push(\"#\" + char.toString(16));\n            start = i + 1;\n        }\n    }\n    if (buffer.length === 0) {\n        return value;\n    }\n    if (start < value.length) {\n        buffer.push(value.substring(start, value.length));\n    }\n    return buffer.join('');\n}\n/**\n * Calculate bezier arc points.\n *\n * @private\n * @param {number} x1 value.\n * @param {number} y1 value.\n * @param {number} x2 value.\n * @param {number} y2 value.\n * @param {number} start value.\n * @param {number} extent value.\n * @returns {number[]} bezier arc points;\n */\nexport function _getBezierArc(x1, y1, x2, y2, start, extent) {\n    if (x1 > x2) {\n        var swap = x1;\n        x1 = x2;\n        x2 = swap;\n    }\n    if (y2 > y1) {\n        var swap = y1;\n        y1 = y2;\n        y2 = swap;\n    }\n    var angle;\n    var count;\n    if (Math.abs(extent) <= 90) {\n        angle = extent;\n        count = 1;\n    }\n    else {\n        count = Math.ceil(Math.abs(extent) / 90);\n        angle = extent / count;\n    }\n    var first = ((x1 + x2) / 2);\n    var second = ((y1 + y2) / 2);\n    var firstAngle = ((x2 - x1) / 2);\n    var secondAngle = ((y2 - y1) / 2);\n    var half = (angle * (Math.PI / 360));\n    var value = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(half)) / Math.sin(half)));\n    var points = [];\n    for (var i = 0; (i < count); i++) {\n        var zero = (((start + (i * angle)) * (Math.PI / 180)));\n        var one = (((start + ((i + 1) * angle)) * (Math.PI / 180)));\n        var cosZero = (Math.cos(zero));\n        var cosOne = (Math.cos(one));\n        var sinZero = (Math.sin(zero));\n        var sinOne = (Math.sin(one));\n        if ((angle > 0)) {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero - (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero + (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne + (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne - (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n        else {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero + (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero - (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne - (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne + (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n    }\n    return points;\n}\n/**\n * Find page of the annotation.\n *\n * @private\n * @param {PdfDocument} document PDF document.\n * @param {_PdfReference} reference Annotation reference.\n * @returns {PdfPage} Page of the annotation;\n */\nexport function _findPage(document, reference) {\n    var page;\n    for (var i = 0; i < document.pageCount && typeof page === 'undefined'; i++) {\n        var entry = document.getPage(i);\n        if (entry && entry._pageDictionary.has('Annots')) {\n            var annots = entry._pageDictionary.get('Annots');\n            if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                for (var j = 0; j < annots.length && typeof page === 'undefined'; j++) {\n                    var ref = annots[Number.parseInt(j.toString(), 10)];\n                    if (ref !== null && typeof ref !== 'undefined' && ref instanceof _PdfReference && ref === reference) {\n                        page = entry;\n                    }\n                }\n            }\n        }\n    }\n    return page;\n}\n/**\n * Check the field is checked or not.\n *\n * @private\n * @param {_PdfDictionary} dictionary PDF dictionary.\n * @returns {boolean} True if the field is checked, otherwise false;\n */\nexport function _checkField(dictionary) {\n    var check = false;\n    if (dictionary.has('AS')) {\n        var state = dictionary.get('AS');\n        if (state) {\n            check = state.name !== 'Off';\n        }\n        else {\n            var actual = dictionary.get('V');\n            if (actual) {\n                check = actual.name === _getItemValue(dictionary);\n            }\n        }\n    }\n    return check;\n}\n/**\n * Get item value from state item field.\n *\n * @private\n * @param {_PdfDictionary} itemDictionary PDF document.\n * @returns {string} value of item;\n */\nexport function _getItemValue(itemDictionary) {\n    var itemValue = '';\n    var name;\n    if (itemDictionary.has('AS')) {\n        name = itemDictionary.get('AS');\n        if (name !== null && name.name !== 'Off') {\n            itemValue = name.name;\n        }\n    }\n    if (itemValue === '' && itemDictionary.has('AP')) {\n        var dictionary = itemDictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary) {\n                var keys_1 = [];\n                appearance.forEach(function (key, value) {\n                    keys_1.push(key);\n                });\n                for (var i = 0; i < keys_1.length; i++) {\n                    if (keys_1[Number.parseInt(i.toString(), 10)] !== 'Off') {\n                        itemValue = keys_1[Number.parseInt(i.toString(), 10)];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return itemValue;\n}\n/**\n * Get state item template.\n *\n * @private\n * @param {_PdfCheckFieldState} state Check field state.\n * @param {PdfStateItem | PdfField} item source to check.\n * @returns {PdfTemplate} Appearance template;\n */\nexport function _getStateTemplate(state, item) {\n    var value = state === _PdfCheckFieldState.checked ? _getItemValue(item._dictionary) : 'Off';\n    var template;\n    if (item._dictionary.has('AP')) {\n        var dictionary = item._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance && appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary && (value && value !== '' && appearance.has(value))) {\n                var stream = appearance.get(value);\n                var reference = appearance.getRaw(value);\n                if (reference) {\n                    stream.reference = reference;\n                }\n                if (stream) {\n                    template = new PdfTemplate(stream, item._crossReference);\n                }\n            }\n        }\n    }\n    return template;\n}\n/**\n * Get color value\n *\n * @private\n * @param {string} colorName name of the color.\n * @returns {number[]} return color value as number array.\n */\nexport function _getColorValue(colorName) {\n    var color;\n    switch (colorName) {\n        case 'transparent':\n            color = [255, 255, 255];\n            break;\n        case 'aliceblue':\n            color = [240, 248, 255];\n            break;\n        case 'antiquewhite':\n            color = [250, 235, 215];\n            break;\n        case 'aqua':\n            color = [0, 255, 255];\n            break;\n        case 'aquamarine':\n            color = [127, 255, 212];\n            break;\n        case 'azure':\n            color = [240, 255, 255];\n            break;\n        case 'beige':\n            color = [245, 245, 220];\n            break;\n        case 'bisque':\n            color = [255, 228, 196];\n            break;\n        case 'black':\n            color = [0, 0, 0];\n            break;\n        case 'blanchedalmond':\n            color = [255, 235, 205];\n            break;\n        case 'blue':\n            color = [0, 0, 255];\n            break;\n        case 'blueviolet':\n            color = [138, 43, 226];\n            break;\n        case 'brown':\n            color = [165, 42, 42];\n            break;\n        case 'burlywood':\n            color = [222, 184, 135];\n            break;\n        case 'cadetBlue':\n            color = [95, 158, 160];\n            break;\n        case 'chartreuse':\n            color = [127, 255, 0];\n            break;\n        case 'chocolate':\n            color = [210, 105, 30];\n            break;\n        case 'coral':\n            color = [255, 127, 80];\n            break;\n        case 'cornflowerblue':\n            color = [100, 149, 237];\n            break;\n        case 'cornsilk':\n            color = [255, 248, 220];\n            break;\n        case 'crimson':\n            color = [220, 20, 60];\n            break;\n        case 'cyan':\n            color = [0, 255, 255];\n            break;\n        case 'darkblue':\n            color = [0, 0, 139];\n            break;\n        case 'darkcyan':\n            color = [0, 139, 139];\n            break;\n        case 'darkgoldenrod':\n            color = [184, 134, 11];\n            break;\n        case 'darkgray':\n            color = [169, 169, 169];\n            break;\n        case 'darkgreen':\n            color = [0, 100, 0];\n            break;\n        case 'darkkhaki':\n            color = [189, 183, 107];\n            break;\n        case 'darkmagenta':\n            color = [139, 0, 139];\n            break;\n        case 'darkolivegreen':\n            color = [85, 107, 47];\n            break;\n        case 'darkorange':\n            color = [255, 140, 0];\n            break;\n        case 'darkorchid':\n            color = [153, 50, 204];\n            break;\n        case 'darkred':\n            color = [139, 0, 0];\n            break;\n        case 'darksalmon':\n            color = [233, 150, 122];\n            break;\n        case 'darkseagreen':\n            color = [143, 188, 139];\n            break;\n        case 'darkslateblue':\n            color = [72, 61, 139];\n            break;\n        case 'darkslategray':\n            color = [47, 79, 79];\n            break;\n        case 'darkturquoise':\n            color = [0, 206, 209];\n            break;\n        case 'darkviolet':\n            color = [148, 0, 211];\n            break;\n        case 'deeppink':\n            color = [255, 20, 147];\n            break;\n        case 'deepskyblue':\n            color = [0, 191, 255];\n            break;\n        case 'dimgray':\n            color = [105, 105, 105];\n            break;\n        case 'dodgerblue':\n            color = [30, 144, 255];\n            break;\n        case 'firebrick':\n            color = [178, 34, 34];\n            break;\n        case 'floralwhite':\n            color = [255, 250, 240];\n            break;\n        case 'forestgreen':\n            color = [34, 139, 34];\n            break;\n        case 'fuchsia':\n            color = [255, 0, 255];\n            break;\n        case 'gainsboro':\n            color = [220, 220, 220];\n            break;\n        case 'ghostwhite':\n            color = [248, 248, 255];\n            break;\n        case 'gold':\n            color = [255, 215, 0];\n            break;\n        case 'goldenrod':\n            color = [218, 165, 32];\n            break;\n        case 'gray':\n            color = [128, 128, 128];\n            break;\n        case 'green':\n            color = [0, 128, 0];\n            break;\n        case 'greenyellow':\n            color = [173, 255, 47];\n            break;\n        case 'honeydew':\n            color = [240, 255, 240];\n            break;\n        case 'hotpink':\n            color = [255, 105, 180];\n            break;\n        case 'indianred':\n            color = [205, 92, 92];\n            break;\n        case 'indigo':\n            color = [75, 0, 130];\n            break;\n        case 'ivory':\n            color = [255, 255, 240];\n            break;\n        case 'khaki':\n            color = [240, 230, 140];\n            break;\n        case 'lavender':\n            color = [230, 230, 250];\n            break;\n        case 'lavenderblush':\n            color = [255, 240, 245];\n            break;\n        case 'lawngreen':\n            color = [124, 252, 0];\n            break;\n        case 'lemonchiffon':\n            color = [255, 250, 205];\n            break;\n        case 'lightblue':\n            color = [173, 216, 230];\n            break;\n        case 'lightcoral':\n            color = [240, 128, 128];\n            break;\n        case 'lightcyan':\n            color = [224, 255, 255];\n            break;\n        case 'lightgoldenrodyellow':\n            color = [250, 250, 210];\n            break;\n        case 'lightgreen':\n            color = [144, 238, 144];\n            break;\n        case 'lightgray':\n            color = [211, 211, 211];\n            break;\n        case 'LightPink':\n            color = [255, 182, 193];\n            break;\n        case 'lightsalmon':\n            color = [255, 160, 122];\n            break;\n        case 'lightseagreen':\n            color = [32, 178, 170];\n            break;\n        case 'lightskyblue':\n            color = [135, 206, 250];\n            break;\n        case 'lightslategray':\n            color = [119, 136, 153];\n            break;\n        case 'lightsteelblue':\n            color = [176, 196, 222];\n            break;\n        case 'lightyellow':\n            color = [255, 255, 224];\n            break;\n        case 'lime':\n            color = [0, 255, 0];\n            break;\n        case 'limeGreen':\n            color = [50, 205, 50];\n            break;\n        case 'linen':\n            color = [250, 240, 230];\n            break;\n        case 'magenta':\n            color = [255, 0, 255];\n            break;\n        case 'maroon':\n            color = [128, 0, 0];\n            break;\n        case 'mediumaquamarine':\n            color = [102, 205, 170];\n            break;\n        case 'mediumblue':\n            color = [0, 0, 205];\n            break;\n        case 'mediumorchid':\n            color = [186, 85, 211];\n            break;\n        case 'mediumpurple':\n            color = [147, 112, 219];\n            break;\n        case 'mediumseagreen':\n            color = [60, 179, 113];\n            break;\n        case 'mediumslateblue':\n            color = [123, 104, 238];\n            break;\n        case 'mediumspringgreen':\n            color = [0, 250, 154];\n            break;\n        case 'mediumturquoise':\n            color = [72, 209, 204];\n            break;\n        case 'mediumvioletred':\n            color = [199, 21, 133];\n            break;\n        case 'midnightblue':\n            color = [25, 25, 112];\n            break;\n        case 'mintcream':\n            color = [245, 255, 250];\n            break;\n        case 'mistyrose':\n            color = [255, 228, 225];\n            break;\n        case 'moccasin':\n            color = [255, 228, 181];\n            break;\n        case 'navajowhite':\n            color = [255, 222, 173];\n            break;\n        case 'navy':\n            color = [0, 0, 128];\n            break;\n        case 'oldLace':\n            color = [253, 245, 230];\n            break;\n        case 'olive':\n            color = [128, 128, 0];\n            break;\n        case 'olivedrab':\n            color = [107, 142, 35];\n            break;\n        case 'orange':\n            color = [255, 165, 0];\n            break;\n        case 'orangered':\n            color = [255, 69, 0];\n            break;\n        case 'orchid':\n            color = [218, 112, 214];\n            break;\n        case 'palegoldenrod':\n            color = [238, 232, 170];\n            break;\n        case 'palegreen':\n            color = [152, 251, 152];\n            break;\n        case 'paleturquoise':\n            color = [175, 238, 238];\n            break;\n        case 'palebioletred':\n            color = [219, 112, 147];\n            break;\n        case 'papayawhip':\n            color = [255, 239, 213];\n            break;\n        case 'peachpuff':\n            color = [255, 218, 185];\n            break;\n        case 'peru':\n            color = [205, 133, 63];\n            break;\n        case 'pink':\n            color = [255, 192, 203];\n            break;\n        case 'plum':\n            color = [221, 160, 221];\n            break;\n        case 'powderblue':\n            color = [176, 224, 230];\n            break;\n        case 'purple':\n            color = [128, 0, 128];\n            break;\n        case 'red':\n            color = [255, 0, 0];\n            break;\n        case 'rosybrown':\n            color = [188, 143, 143];\n            break;\n        case 'royalblue':\n            color = [65, 105, 225];\n            break;\n        case 'saddlebrown':\n            color = [139, 69, 19];\n            break;\n        case 'salmon':\n            color = [250, 128, 114];\n            break;\n        case 'sandybrown':\n            color = [244, 164, 96];\n            break;\n        case 'seagreen':\n            color = [46, 139, 87];\n            break;\n        case 'seashell':\n            color = [255, 245, 238];\n            break;\n        case 'sienna':\n            color = [160, 82, 45];\n            break;\n        case 'silver':\n            color = [192, 192, 192];\n            break;\n        case 'skyblue':\n            color = [135, 206, 235];\n            break;\n        case 'slateblue':\n            color = [106, 90, 205];\n            break;\n        case 'slategray':\n            color = [112, 128, 144];\n            break;\n        case 'snow':\n            color = [255, 250, 250];\n            break;\n        case 'springgreen':\n            color = [0, 255, 127];\n            break;\n        case 'steelblue':\n            color = [70, 130, 180];\n            break;\n        case 'tan':\n            color = [210, 180, 140];\n            break;\n        case 'teal':\n            color = [0, 128, 128];\n            break;\n        case 'thistle':\n            color = [216, 191, 216];\n            break;\n        case 'tomato':\n            color = [255, 99, 71];\n            break;\n        case 'turquoise':\n            color = [64, 224, 208];\n            break;\n        case 'violet':\n            color = [238, 130, 238];\n            break;\n        case 'wheat':\n            color = [245, 222, 179];\n            break;\n        case 'white':\n            color = [255, 255, 255];\n            break;\n        case 'whitesmoke':\n            color = [245, 245, 245];\n            break;\n        case 'yellow':\n            color = [255, 255, 0];\n            break;\n        case 'yellowgreen':\n            color = [154, 205, 50];\n            break;\n    }\n    return color;\n}\n/**\n * Update box value in template bounds.\n *\n * @private\n * @param {PdfTemplate} template Template object.\n * @param {number} angle Angle value.\n * @returns {void} Nothing.\n */\nexport function _setMatrix(template, angle) {\n    var box = template._content.dictionary.getArray('BBox');\n    if (box && typeof angle !== 'undefined' && angle !== null) {\n        if (angle === 0) {\n            template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n        else {\n            var matrix = new _PdfTransformationMatrix();\n            if (angle === 90) {\n                matrix._translate(box[3], -box[0]);\n            }\n            else if (angle === 180) {\n                matrix._translate(box[2], box[3]);\n            }\n            else if (angle === 270) {\n                matrix._translate(-box[1], box[2]);\n            }\n            matrix._rotate(angle);\n            template._content.dictionary.set('Matrix', matrix._matrix._elements);\n        }\n    }\n}\n/**\n * Get the state item style to string\n *\n * @private\n * @param {PdfCheckBoxStyle} style State item style.\n * @returns {string} return as string value.\n */\nexport function _styleToString(style) {\n    var value = '4';\n    switch (style) {\n        case PdfCheckBoxStyle.circle:\n            value = 'l';\n            break;\n        case PdfCheckBoxStyle.cross:\n            value = '8';\n            break;\n        case PdfCheckBoxStyle.diamond:\n            value = 'u';\n            break;\n        case PdfCheckBoxStyle.square:\n            value = 'n';\n            break;\n        case PdfCheckBoxStyle.star:\n            value = 'H';\n            break;\n    }\n    return value;\n}\n/**\n * Get the string to state item style\n *\n * @private\n * @param {string} style State item style as string.\n * @returns {PdfCheckBoxStyle} return as state item style.\n */\nexport function _stringToStyle(style) {\n    var value = PdfCheckBoxStyle.check;\n    switch (style) {\n        case 'l':\n            value = PdfCheckBoxStyle.circle;\n            break;\n        case '8':\n            value = PdfCheckBoxStyle.cross;\n            break;\n        case 'u':\n            value = PdfCheckBoxStyle.diamond;\n            break;\n        case 'n':\n            value = PdfCheckBoxStyle.square;\n            break;\n        case 'H':\n            value = PdfCheckBoxStyle.star;\n            break;\n    }\n    return value;\n}\n/**\n * Map measurement unit type.\n *\n * @private\n * @param {string} unitString measurement unit as string.\n * @returns {PdfMeasurementUnit} measurement unit.\n */\nexport function _mapMeasurementUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n        case 'in':\n            unit = PdfMeasurementUnit.inch;\n            break;\n        case 'mm':\n            unit = PdfMeasurementUnit.millimeter;\n            break;\n        case 'p':\n            unit = PdfMeasurementUnit.pica;\n            break;\n        case 'pt':\n            unit = PdfMeasurementUnit.point;\n            break;\n        default:\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map markup annotation type.\n *\n * @private\n * @param {string} text markup type as string.\n * @returns {PdfTextMarkupAnnotationType} markup type as name.\n */\nexport function _mapMarkupAnnotationType(text) {\n    var type;\n    switch (text) {\n        case 'Highlight':\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n        case 'Squiggly':\n            type = PdfTextMarkupAnnotationType.squiggly;\n            break;\n        case 'StrikeOut':\n            type = PdfTextMarkupAnnotationType.strikeOut;\n            break;\n        case 'Underline':\n            type = PdfTextMarkupAnnotationType.underline;\n            break;\n        default:\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n    }\n    return type;\n}\n/**\n * Reverse text markup annotation type.\n *\n * @private\n * @param {PdfTextMarkupAnnotationType} type markup type.\n * @returns {string} markup type as name.\n */\nexport function _reverseMarkupAnnotationType(type) {\n    var token = 'Highlight';\n    switch (type) {\n        case PdfTextMarkupAnnotationType.highlight:\n            token = 'Highlight';\n            break;\n        case PdfTextMarkupAnnotationType.squiggly:\n            token = 'Squiggly';\n            break;\n        case PdfTextMarkupAnnotationType.strikeOut:\n            token = 'StrikeOut';\n            break;\n        case PdfTextMarkupAnnotationType.underline:\n            token = 'Underline';\n            break;\n        default:\n            token = 'Highlight';\n            break;\n    }\n    return token;\n}\n/**\n * Map graphics unit.\n *\n * @private\n * @param {string} unitString String value.\n * @returns {_PdfGraphicsUnit} PDF graphics unit.\n */\nexport function _mapGraphicsUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n        case 'in':\n            unit = _PdfGraphicsUnit.inch;\n            break;\n        case 'mm':\n            unit = _PdfGraphicsUnit.millimeter;\n            break;\n        case 'p':\n            unit = _PdfGraphicsUnit.pica;\n            break;\n        case 'pt':\n            unit = _PdfGraphicsUnit.point;\n            break;\n        default:\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map rubber stamp icon.\n *\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Rubber stamp icon.\n */\nexport function _mapRubberStampIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case '#Approved':\n        case 'SBApproved':\n            icon = PdfRubberStampAnnotationIcon.approved;\n            break;\n        case '#AsIs':\n        case 'SBAsIs':\n            icon = PdfRubberStampAnnotationIcon.asIs;\n            break;\n        case '#Completed':\n        case 'SBCompleted':\n            icon = PdfRubberStampAnnotationIcon.completed;\n            break;\n        case '#Confidential':\n        case 'SBConfidential':\n            icon = PdfRubberStampAnnotationIcon.confidential;\n            break;\n        case '#Departmental':\n        case 'SBDepartmental':\n            icon = PdfRubberStampAnnotationIcon.departmental;\n            break;\n        case '#Draft':\n        case 'SBDraft':\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n        case '#Experimental':\n        case 'SBExperimental':\n            icon = PdfRubberStampAnnotationIcon.experimental;\n            break;\n        case '#Expired':\n        case 'SBExpired':\n            icon = PdfRubberStampAnnotationIcon.expired;\n            break;\n        case '#Final':\n        case 'SBFinal':\n            icon = PdfRubberStampAnnotationIcon.final;\n            break;\n        case '#ForComment':\n        case 'SBForComment':\n            icon = PdfRubberStampAnnotationIcon.forComment;\n            break;\n        case '#ForPublicRelease':\n        case 'SBForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.forPublicRelease;\n            break;\n        case '#InformationOnly':\n        case 'SBInformationOnly':\n            icon = PdfRubberStampAnnotationIcon.informationOnly;\n            break;\n        case '#NotApproved':\n        case 'SBNotApproved':\n            icon = PdfRubberStampAnnotationIcon.notApproved;\n            break;\n        case '#NotForPublicRelease':\n        case 'SBNotForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.notForPublicRelease;\n            break;\n        case '#PreliminaryResults':\n        case 'SBPreliminaryResults':\n            icon = PdfRubberStampAnnotationIcon.preliminaryResults;\n            break;\n        case '#Sold':\n        case 'SBSold':\n            icon = PdfRubberStampAnnotationIcon.sold;\n            break;\n        case '#TopSecret':\n        case 'SBTopSecret':\n            icon = PdfRubberStampAnnotationIcon.topSecret;\n            break;\n        case '#Void':\n        case 'SBVoid':\n            icon = PdfRubberStampAnnotationIcon.void;\n            break;\n        default:\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n    }\n    return icon;\n}\n/**\n * Map popup icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Popup icon.\n */\nexport function _mapPopupIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'Note':\n            icon = PdfPopupIcon.note;\n            break;\n        case 'Comment':\n            icon = PdfPopupIcon.comment;\n            break;\n        case 'Help':\n            icon = PdfPopupIcon.help;\n            break;\n        case 'Insert':\n            icon = PdfPopupIcon.insert;\n            break;\n        case 'Key':\n            icon = PdfPopupIcon.key;\n            break;\n        case 'NewParagraph':\n            icon = PdfPopupIcon.newParagraph;\n            break;\n        case 'Paragraph':\n            icon = PdfPopupIcon.paragraph;\n            break;\n        default:\n            icon = PdfPopupIcon.note;\n            break;\n    }\n    return icon;\n}\n/**\n * Convert annotation state to string value.\n *\n * @private\n * @param {PdfAnnotationState} type Annotation state.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationState(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationState.none:\n            token = 'None';\n            break;\n        case PdfAnnotationState.accepted:\n            token = 'Accepted';\n            break;\n        case PdfAnnotationState.rejected:\n            token = 'Rejected';\n            break;\n        case PdfAnnotationState.cancel:\n            token = 'Cancelled';\n            break;\n        case PdfAnnotationState.completed:\n            token = 'Completed';\n            break;\n        case PdfAnnotationState.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationState.unmarked:\n            token = 'Unmarked';\n            break;\n        case PdfAnnotationState.unknown:\n            token = 'Unknown';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationState} Annotation state.\n */\nexport function _mapAnnotationState(type) {\n    var token = PdfAnnotationState.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationState.none;\n            break;\n        case 'Accepted':\n            token = PdfAnnotationState.accepted;\n            break;\n        case 'Rejected':\n            token = PdfAnnotationState.rejected;\n            break;\n        case 'Cancelled':\n            token = PdfAnnotationState.cancel;\n            break;\n        case 'Completed':\n            token = PdfAnnotationState.completed;\n            break;\n        case 'Marked':\n            token = PdfAnnotationState.marked;\n            break;\n        case 'Unmarked':\n            token = PdfAnnotationState.unmarked;\n            break;\n        case 'Unknown':\n            token = PdfAnnotationState.unknown;\n            break;\n    }\n    return token;\n}\n/**\n * Convert annotation state model to string value.\n *\n * @private\n * @param {PdfAnnotationStateModel} type Annotation state model.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationStateModel(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationStateModel.none:\n            token = 'None';\n            break;\n        case PdfAnnotationStateModel.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationStateModel.review:\n            token = 'Review';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state model.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationStateModel} Annotation state model.\n */\nexport function _mapAnnotationStateModel(type) {\n    var token = PdfAnnotationStateModel.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationStateModel.none;\n            break;\n        case 'Marked':\n            token = PdfAnnotationStateModel.marked;\n            break;\n        case 'Review':\n            token = PdfAnnotationStateModel.review;\n            break;\n    }\n    return token;\n}\n/**\n * Map attachment icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfAttachmentIcon} Icon.\n */\nexport function _mapAttachmentIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'PushPin':\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n        case 'Tag':\n            icon = PdfAttachmentIcon.tag;\n            break;\n        case 'Graph':\n            icon = PdfAttachmentIcon.graph;\n            break;\n        case 'Paperclip':\n            icon = PdfAttachmentIcon.paperClip;\n            break;\n        default:\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n    }\n    return icon;\n}\n/**\n * Map attachment intent.\n *\n * @private\n * @param {string} intentString String value.\n * @returns {PdfAnnotationIntent} intent.\n */\nexport function _mapAnnotationIntent(intentString) {\n    var intent;\n    switch (intentString) {\n        case 'None':\n            intent = PdfAnnotationIntent.none;\n            break;\n        case 'FreeTextCallout':\n            intent = PdfAnnotationIntent.freeTextCallout;\n            break;\n        case 'FreeTextTypeWriter':\n            intent = PdfAnnotationIntent.freeTextTypeWriter;\n            break;\n        default:\n            intent = PdfAnnotationIntent.none;\n            break;\n    }\n    return intent;\n}\n/**\n * Convert PDF font style to string value.\n *\n * @private\n * @param {PdfFontStyle} style Font style.\n * @returns {string} String value.\n */\nexport function _reverseMapPdfFontStyle(style) {\n    var value = '';\n    switch (style) {\n        case PdfFontStyle.regular:\n            value = 'Regular';\n            break;\n        case PdfFontStyle.bold:\n            value = 'Bold';\n            break;\n        case PdfFontStyle.italic:\n            value = 'Italic';\n            break;\n        case PdfFontStyle.underline:\n            value = 'Underline';\n            break;\n        case PdfFontStyle.strikeout:\n            value = 'Strikeout';\n            break;\n        default:\n            value = 'Regular';\n            break;\n    }\n    return value;\n}\n/**\n * Get special character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getSpecialCharacter(input) {\n    var result;\n    switch (input) {\n        case 'head2right':\n            result = '\\u27A2';\n            break;\n        case 'aacute':\n            result = 'a\\u0301';\n            break;\n        case 'eacute':\n            result = 'e\\u0301';\n            break;\n        case 'iacute':\n            result = 'i\\u0301';\n            break;\n        case 'oacute':\n            result = 'o\\u0301';\n            break;\n        case 'uacute':\n            result = 'u\\u0301';\n            break;\n        case 'circleright':\n            result = '\\u27B2';\n            break;\n        case 'bleft':\n            result = '\\u21E6';\n            break;\n        case 'bright':\n            result = '\\u21E8';\n            break;\n        case 'bup':\n            result = '\\u21E7';\n            break;\n        case 'bdown':\n            result = '\\u21E9';\n            break;\n        case 'barb4right':\n            result = '\\u2794';\n            break;\n        case 'bleftright':\n            result = '\\u2B04';\n            break;\n        case 'bupdown':\n            result = '\\u21F3';\n            break;\n        case 'bnw':\n            result = '\\u2B00';\n            break;\n        case 'bne':\n            result = '\\u2B01';\n            break;\n        case 'bsw':\n            result = '\\u2B03';\n            break;\n        case 'bse':\n            result = '\\u2B02';\n            break;\n        case 'bdash1':\n            result = '\\u25AD';\n            break;\n        case 'bdash2':\n            result = '\\u25AB';\n            break;\n        case 'xmarkbld':\n            result = '\\u2717';\n            break;\n        case 'checkbld':\n            result = '\\u2713';\n            break;\n        case 'boxxmarkbld':\n            result = '\\u2612';\n            break;\n        case 'boxcheckbld':\n            result = '\\u2611';\n            break;\n        case 'space':\n            result = '\\u0020';\n            break;\n        case 'pencil':\n            result = '\\u270F';\n            break;\n        case 'scissors':\n            result = '\\u2702';\n            break;\n        case 'scissorscutting':\n            result = '\\u2701';\n            break;\n        case 'readingglasses':\n            result = '\\u2701';\n            break;\n        case 'bell':\n            result = '\\u2701';\n            break;\n        case 'book':\n            result = '\\u2701';\n            break;\n        case 'telephonesolid':\n            result = '\\u2701';\n            break;\n        case 'telhandsetcirc':\n            result = '\\u2701';\n            break;\n        case 'envelopeback':\n            result = '\\u2701';\n            break;\n        case 'hourglass':\n            result = '\\u231B';\n            break;\n        case 'keyboard':\n            result = '\\u2328';\n            break;\n        case 'tapereel':\n            result = '\\u2707';\n            break;\n        case 'handwrite':\n            result = '\\u270D';\n            break;\n        case 'handv':\n            result = '\\u270C';\n            break;\n        case 'handptleft':\n            result = '\\u261C';\n            break;\n        case 'handptright':\n            result = '\\u261E';\n            break;\n        case 'handptup':\n            result = '\\u261D';\n            break;\n        case 'handptdown':\n            result = '\\u261F';\n            break;\n        case 'smileface':\n            result = '\\u263A';\n            break;\n        case 'frownface':\n            result = '\\u2639';\n            break;\n        case 'skullcrossbones':\n            result = '\\u2620';\n            break;\n        case 'flag':\n            result = '\\u2690';\n            break;\n        case 'pennant':\n            result = '\\u1F6A9';\n            break;\n        case 'airplane':\n            result = '\\u2708';\n            break;\n        case 'sunshine':\n            result = '\\u263C';\n            break;\n        case 'droplet':\n            result = '\\u1F4A7';\n            break;\n        case 'snowflake':\n            result = '\\u2744';\n            break;\n        case 'crossshadow':\n            result = '\\u271E';\n            break;\n        case 'crossmaltese':\n            result = '\\u2720';\n            break;\n        case 'starofdavid':\n            result = '\\u2721';\n            break;\n        case 'crescentstar':\n            result = '\\u262A';\n            break;\n        case 'yinyang':\n            result = '\\u262F';\n            break;\n        case 'om':\n            result = '\\u0950';\n            break;\n        case 'wheel':\n            result = '\\u2638';\n            break;\n        case 'aries':\n            result = '\\u2648';\n            break;\n        case 'taurus':\n            result = '\\u2649';\n            break;\n        case 'gemini':\n            result = '\\u264A';\n            break;\n        case 'cancer':\n            result = '\\u264B';\n            break;\n        case 'leo':\n            result = '\\u264C';\n            break;\n        case 'virgo':\n            result = '\\u264D';\n            break;\n        case 'libra':\n            result = '\\u264E';\n            break;\n        case 'scorpio':\n            result = '\\u264F';\n            break;\n        case 'saggitarius':\n            result = '\\u2650';\n            break;\n        case 'capricorn':\n            result = '\\u2651';\n            break;\n        case 'aquarius':\n            result = '\\u2652';\n            break;\n        case 'pisces':\n            result = '\\u2653';\n            break;\n        case 'ampersanditlc':\n            result = '\\u0026';\n            break;\n        case 'ampersandit':\n            result = '\\u0026';\n            break;\n        case 'circle6':\n            result = '\\u25CF';\n            break;\n        case 'circleshadowdwn':\n            result = '\\u274D';\n            break;\n        case 'square6':\n            result = '\\u25A0';\n            break;\n        case 'box3':\n            result = '\\u25A1';\n            break;\n        case 'boxshadowdwn':\n            result = '\\u2751';\n            break;\n        case 'boxshadowup':\n            result = '\\u2752';\n            break;\n        case 'lozenge4':\n            result = '\\u2B27';\n            break;\n        case 'lozenge6':\n            result = '\\u29EB';\n            break;\n        case 'rhombus6':\n            result = '\\u25C6';\n            break;\n        case 'xrhombus':\n            result = '\\u2756';\n            break;\n        case 'rhombus4':\n            result = '\\u2B25';\n            break;\n        case 'clear':\n            result = '\\u2327';\n            break;\n        case 'escape':\n            result = '\\u2353';\n            break;\n        case 'command':\n            result = '\\u2318';\n            break;\n        case 'rosette':\n            result = '\\u2740';\n            break;\n        case 'rosettesolid':\n            result = '\\u273F';\n            break;\n        case 'quotedbllftbld':\n            result = '\\u275D';\n            break;\n        case 'quotedblrtbld':\n            result = '\\u275E';\n            break;\n        case '.notdef':\n            result = '\\u25AF';\n            break;\n        case 'zerosans':\n            result = '\\u24EA';\n            break;\n        case 'onesans':\n            result = '\\u2460';\n            break;\n        case 'twosans':\n            result = '\\u2461';\n            break;\n        case 'threesans':\n            result = '\\u2462';\n            break;\n        case 'foursans':\n            result = '\\u2463';\n            break;\n        case 'fivesans':\n            result = '\\u2464';\n            break;\n        case 'sixsans':\n            result = '\\u2465';\n            break;\n        case 'sevensans':\n            result = '\\u2466';\n            break;\n        case 'eightsans':\n            result = '\\u2467';\n            break;\n        case 'ninesans':\n            result = '\\u2468';\n            break;\n        case 'tensans':\n            result = '\\u2469';\n            break;\n        case 'zerosansinv':\n            result = '\\u24FF';\n            break;\n        case 'onesansinv':\n            result = '\\u2776';\n            break;\n        case 'twosansinv':\n            result = '\\u2777';\n            break;\n        case 'threesansinv':\n            result = '\\u2778';\n            break;\n        case 'foursansinv':\n            result = '\\u2779';\n            break;\n        case 'circle2':\n            result = '\\u00B7';\n            break;\n        case 'circle4':\n            result = '\\u2022';\n            break;\n        case 'square2':\n            result = '\\u25AA';\n            break;\n        case 'ring2':\n            result = '\\u25CB';\n            break;\n        case 'ringbutton2':\n            result = '\\u25C9';\n            break;\n        case 'target':\n            result = '\\u25CE';\n            break;\n        case 'square4':\n            result = '\\u25AA';\n            break;\n        case 'box2':\n            result = '\\u25FB';\n            break;\n        case 'crosstar2':\n            result = '\\u2726';\n            break;\n        case 'pentastar2':\n            result = '\\u2605';\n            break;\n        case 'hexstar2':\n            result = '\\u2736';\n            break;\n        case 'octastar2':\n            result = '\\u2734';\n            break;\n        case 'dodecastar3':\n            result = '\\u2739';\n            break;\n        case 'octastar4':\n            result = '\\u2735';\n            break;\n        case 'registercircle':\n            result = '\\u2316';\n            break;\n        case 'cuspopen':\n            result = '\\u27E1';\n            break;\n        case 'cuspopen1':\n            result = '\\u2311';\n            break;\n        case 'circlestar':\n            result = '\\u2605';\n            break;\n        case 'starshadow':\n            result = '\\u2730';\n            break;\n        case 'deleteleft':\n            result = '\\u232B';\n            break;\n        case 'deleteright':\n            result = '\\u2326';\n            break;\n        case 'scissorsoutline':\n            result = '\\u2704';\n            break;\n        case 'telephone':\n            result = '\\u260F';\n            break;\n        case 'telhandset':\n            result = '\\u1F4DE';\n            break;\n        case 'handptlft1':\n            result = '\\u261C';\n            break;\n        case 'handptrt1':\n            result = '\\u261E';\n            break;\n        case 'handptlftsld1':\n            result = '\\u261A';\n            break;\n        case 'handptrtsld1':\n            result = '\\u261B';\n            break;\n        case 'handptup1':\n            result = '\\u261D';\n            break;\n        case 'handptdwn1':\n            result = '\\u261F';\n            break;\n        case 'xmark':\n            result = '\\u2717';\n            break;\n        case 'check':\n            result = '\\u2713';\n            break;\n        case 'boxcheck':\n            result = '\\u2611';\n            break;\n        case 'boxx':\n            result = '\\u2612';\n            break;\n        case 'boxxbld':\n            result = '\\u2612';\n            break;\n        case 'circlex':\n            result = '=\\u2314';\n            break;\n        case 'circlexbld':\n            result = '\\u2314';\n            break;\n        case 'prohibit':\n        case 'prohibitbld':\n            result = '\\u29B8';\n            break;\n        case 'ampersanditaldm':\n        case 'ampersandbld':\n        case 'ampersandsans':\n        case 'ampersandsandm':\n            result = '\\u0026';\n            break;\n        case 'interrobang':\n        case 'interrobangdm':\n        case 'interrobangsans':\n        case 'interrobngsandm':\n            result = '\\u203D';\n            break;\n        case 'sacute':\n            result = 'ś';\n            break;\n        case 'Sacute':\n            result = 'Ś';\n            break;\n        case 'eogonek':\n            result = 'ę';\n            break;\n        case 'cacute':\n            result = 'ć';\n            break;\n        case 'aogonek':\n            result = 'ą';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Get latin character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getLatinCharacter(input) {\n    var result;\n    switch (input) {\n        case 'zero':\n            result = '0';\n            break;\n        case 'one':\n            result = '1';\n            break;\n        case 'two':\n            result = '2';\n            break;\n        case 'three':\n            result = '3';\n            break;\n        case 'four':\n            result = '4';\n            break;\n        case 'five':\n            result = '5';\n            break;\n        case 'six':\n            result = '6';\n            break;\n        case 'seven':\n            result = '7';\n            break;\n        case 'eight':\n            result = '8';\n            break;\n        case 'nine':\n            result = '9';\n            break;\n        case 'aacute':\n            result = 'á';\n            break;\n        case 'asciicircum':\n            result = '^';\n            break;\n        case 'asciitilde':\n            result = '~';\n            break;\n        case 'asterisk':\n            result = '*';\n            break;\n        case 'at':\n            result = '@';\n            break;\n        case 'atilde':\n            result = 'ã';\n            break;\n        case 'backslash':\n            result = '\\\\';\n            break;\n        case 'bar':\n            result = '|';\n            break;\n        case 'braceleft':\n            result = '{';\n            break;\n        case 'braceright':\n            result = '}';\n            break;\n        case 'bracketleft':\n            result = '[';\n            break;\n        case 'bracketright':\n            result = ']';\n            break;\n        case 'breve':\n            result = '˘';\n            break;\n        case 'brokenbar':\n            result = '|';\n            break;\n        case 'bullet3':\n            result = '•';\n            break;\n        case 'bullet':\n            result = '•';\n            break;\n        case 'caron':\n            result = 'ˇ';\n            break;\n        case 'ccedilla':\n            result = 'ç';\n            break;\n        case 'cedilla':\n            result = '¸';\n            break;\n        case 'cent':\n            result = '¢';\n            break;\n        case 'circumflex':\n            result = 'ˆ';\n            break;\n        case 'colon':\n            result = ':';\n            break;\n        case 'comma':\n            result = ',';\n            break;\n        case 'copyright':\n            result = '©';\n            break;\n        case 'currency1':\n            result = '¤';\n            break;\n        case 'dagger':\n            result = '†';\n            break;\n        case 'daggerdbl':\n            result = '‡';\n            break;\n        case 'degree':\n            result = '°';\n            break;\n        case 'dieresis':\n            result = '¨';\n            break;\n        case 'divide':\n            result = '÷';\n            break;\n        case 'dollar':\n            result = '$';\n            break;\n        case 'dotaccent':\n            result = '˙';\n            break;\n        case 'dotlessi':\n            result = 'ı';\n            break;\n        case 'eacute':\n            result = 'é';\n            break;\n        case 'middot':\n            result = '˙';\n            break;\n        case 'edieresis':\n            result = 'ë';\n            break;\n        case 'egrave':\n            result = 'è';\n            break;\n        case 'ellipsis':\n            result = '...';\n            break;\n        case 'emdash':\n            result = '—';\n            break;\n        case 'endash':\n            result = '–';\n            break;\n        case 'equal':\n            result = '=';\n            break;\n        case 'eth':\n            result = 'ð';\n            break;\n        case 'exclam':\n            result = '!';\n            break;\n        case 'exclamdown':\n            result = '¡';\n            break;\n        case 'florin':\n            result = 'ƒ';\n            break;\n        case 'fraction':\n            result = '⁄';\n            break;\n        case 'germandbls':\n            result = 'ß';\n            break;\n        case 'grave':\n            result = '`';\n            break;\n        case 'greater':\n            result = '>';\n            break;\n        case 'guillemotleft4':\n            result = '«';\n            break;\n        case 'guillemotright4':\n            result = '»';\n            break;\n        case 'guilsinglleft':\n            result = '‹';\n            break;\n        case 'guilsinglright':\n            result = '›';\n            break;\n        case 'hungarumlaut':\n            result = '˝';\n            break;\n        case 'hyphen5':\n            result = '-';\n            break;\n        case 'iacute':\n            result = 'í';\n            break;\n        case 'icircumflex':\n            result = 'î';\n            break;\n        case 'idieresis':\n            result = 'ï';\n            break;\n        case 'igrave':\n            result = 'ì';\n            break;\n        case 'less':\n            result = '<';\n            break;\n        case 'logicalnot':\n            result = '¬';\n            break;\n        case 'lslash':\n            result = 'ł';\n            break;\n        case 'Lslash':\n            result = 'Ł';\n            break;\n        case 'macron':\n            result = '¯';\n            break;\n        case 'minus':\n            result = '−';\n            break;\n        case 'mu':\n            result = 'μ';\n            break;\n        case 'multiply':\n            result = '×';\n            break;\n        case 'ntilde':\n            result = 'ñ';\n            break;\n        case 'numbersign':\n            result = '#';\n            break;\n        case 'oacute':\n            result = 'ó';\n            break;\n        case 'ocircumflex':\n            result = 'ô';\n            break;\n        case 'odieresis':\n            result = 'ö';\n            break;\n        case 'oe':\n            result = 'oe';\n            break;\n        case 'ogonek':\n            result = '˛';\n            break;\n        case 'ograve':\n            result = 'ò';\n            break;\n        case 'onehalf':\n            result = '1/2';\n            break;\n        case 'onequarter':\n            result = '1/4';\n            break;\n        case 'onesuperior':\n            result = '¹';\n            break;\n        case 'ordfeminine':\n            result = 'ª';\n            break;\n        case 'ordmasculine':\n            result = 'º';\n            break;\n        case 'otilde':\n            result = 'õ';\n            break;\n        case 'paragraph':\n            result = '¶';\n            break;\n        case 'parenleft':\n            result = '(';\n            break;\n        case 'parenright':\n            result = ')';\n            break;\n        case 'percent':\n            result = '%';\n            break;\n        case 'period':\n            result = '.';\n            break;\n        case 'periodcentered':\n            result = '·';\n            break;\n        case 'perthousand':\n            result = '‰';\n            break;\n        case 'plus':\n            result = '+';\n            break;\n        case 'plusminus':\n            result = '±';\n            break;\n        case 'question':\n            result = '?';\n            break;\n        case 'questiondown':\n            result = '¿';\n            break;\n        case 'quotedbl':\n            result = '\\'';\n            break;\n        case 'quotedblbase':\n            result = '„';\n            break;\n        case 'quotedblleft':\n            result = '“';\n            break;\n        case 'quotedblright':\n            result = '”';\n            break;\n        case 'quoteleft':\n            result = '‘';\n            break;\n        case 'quoteright':\n            result = '’';\n            break;\n        case 'quotesinglbase':\n            result = '‚';\n            break;\n        case 'quotesingle':\n            result = '\\'';\n            break;\n        case 'registered':\n            result = '®';\n            break;\n        case 'ring':\n            result = '˚';\n            break;\n        case 'scaron':\n            result = 'š';\n            break;\n        case 'section':\n            result = '§';\n            break;\n        case 'semicolon':\n            result = ';';\n            break;\n        case 'slash':\n            result = '/';\n            break;\n        case 'space6':\n            result = ' ';\n            break;\n        case 'space':\n            result = ' ';\n            break;\n        case 'udieresis':\n            result = 'ü';\n            break;\n        case 'uacute':\n            result = 'ú';\n            break;\n        case 'Ecircumflex':\n            result = 'Ê';\n            break;\n        case 'hyphen':\n            result = '-';\n            break;\n        case 'underscore':\n            result = '_';\n            break;\n        case 'adieresis':\n            result = 'ä';\n            break;\n        case 'ampersand':\n            result = '&';\n            break;\n        case 'Adieresis':\n            result = 'Ä';\n            break;\n        case 'Udieresis':\n            result = 'Ü';\n            break;\n        case 'ccaron':\n            result = 'č';\n            break;\n        case 'Scaron':\n            result = 'Š';\n            break;\n        case 'zcaron':\n            result = 'ž';\n            break;\n        case 'sterling':\n            result = '£';\n            break;\n        case 'agrave':\n            result = 'à';\n            break;\n        case 'ecircumflex':\n            result = 'ê';\n            break;\n        case 'acircumflex':\n            result = 'â';\n            break;\n        case 'Oacute':\n            result = 'Ó';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Encode value to string.\n *\n * @private\n * @param {string} value Input string.\n * @returns {string} result.\n */\nexport function _encodeValue(value) {\n    var name = '';\n    for (var i = 0; i < value.length; i++) {\n        var code = value.charCodeAt(i) & 0xff;\n        var entry = String.fromCharCode(code);\n        var hex = '';\n        switch (entry) {\n            case ' ':\n            case '%':\n            case '(':\n            case ')':\n            case '<':\n            case '>':\n            case '[':\n            case ']':\n            case '{':\n            case '}':\n            case '/':\n            case '#':\n                name += '#';\n                hex = code.toString(16).toUpperCase();\n                name += (hex.length === 1 ? ('0' + hex) : hex);\n                break;\n            default:\n                if (code > 126 || code < 37) {\n                    name += '#';\n                    hex = code.toString(16).toUpperCase();\n                    name += (hex.length === 1 ? ('0' + hex) : hex);\n                }\n                else {\n                    name += entry;\n                }\n                break;\n        }\n    }\n    return name;\n}\n/**\n * Parse and retrieve comments and review history from the annotation.\n *\n * @private\n * @param {PdfComment} annotation Input annotation.\n * @param {boolean} isReview Input is review or not.\n * @returns {PdfPopupAnnotationCollection} result.\n */\nexport function _getCommentsOrReview(annotation, isReview) {\n    if (isReview) {\n        return annotation.reviewHistory;\n    }\n    else {\n        return annotation.comments;\n    }\n}\n/**\n * Returns true if input dictionary is belongs to the review history.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is review or not.\n */\nexport function _checkReview(dictionary) {\n    var flag = dictionary.get('F');\n    return ((dictionary.has('State') || dictionary.has('StateModel')) && (flag === 30 || flag === 128));\n}\n/**\n * Returns true if input dictionary is belongs to the comments.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is comments or not.\n */\nexport function _checkComment(dictionary) {\n    var flag = dictionary.get('F');\n    return (!(dictionary.has('State') || dictionary.has('StateModel')) && (flag === 28 || flag === 128));\n}\n/**\n * Update visibility.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {PdfFormFieldVisibility} value Visibility.\n * @returns {void} Nothing.\n */\nexport function _updateVisibility(dictionary, value) {\n    if (dictionary.has('F')) {\n        delete dictionary._map.F;\n        dictionary._updated = true;\n    }\n    switch (value) {\n        case PdfFormFieldVisibility.hidden:\n            dictionary.update('F', PdfAnnotationFlag.hidden);\n            break;\n        case PdfFormFieldVisibility.hiddenPrintable:\n            dictionary.update('F', (PdfAnnotationFlag.noView | PdfAnnotationFlag.print));\n            break;\n        case PdfFormFieldVisibility.visible:\n            if (dictionary.has('DV')) {\n                delete dictionary._map.DV;\n                dictionary._updated = true;\n            }\n            if (dictionary.has('MK')) {\n                var mkDict = dictionary.get('MK');\n                if (mkDict && mkDict.has('BG')) {\n                    delete mkDict._map.BG;\n                    mkDict._updated = true;\n                }\n            }\n            break;\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @param {string} key Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateReference(dictionary, crossTable, key) {\n    if (dictionary && dictionary.has(key)) {\n        var oldAppearance = dictionary.getRaw(key);\n        if (oldAppearance && oldAppearance instanceof _PdfReference && oldAppearance._isNew) {\n            var appearance = dictionary.get(key); // eslint-disable-line\n            if (appearance) {\n                if (appearance instanceof _PdfReference) {\n                    appearance = crossTable._fetch(appearance);\n                }\n                var appearanceDictionary = void 0;\n                if (appearance instanceof _PdfDictionary) {\n                    appearanceDictionary = appearance;\n                }\n                else if (appearance instanceof _PdfBaseStream) {\n                    appearanceDictionary = appearance.dictionary;\n                }\n                if (appearanceDictionary && appearanceDictionary.has('Resources')) {\n                    _removeDuplicateFromResources(appearanceDictionary.get('Resources'), crossTable);\n                }\n            }\n            crossTable._cacheMap.delete(oldAppearance);\n        }\n    }\n}\n/**\n * Remove duplicate reference from resources.\n *\n * @private\n * @param {_PdfDictionary} resources Input resources.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateFromResources(resources, crossTable) {\n    if (resources && resources.size > 0) {\n        resources.forEach(function (key, value) {\n            if (typeof key !== 'undefined' && typeof value !== 'undefined') {\n                if (value instanceof _PdfReference) {\n                    var reference = value;\n                    if (reference._isNew) {\n                        var dictionary = resources.get(key);\n                        if (dictionary && dictionary instanceof _PdfDictionary) {\n                            if (key === 'XObject' && dictionary.has('Resources')) {\n                                _removeDuplicateFromResources(dictionary.get('Resources'), crossTable);\n                            }\n                            crossTable._cacheMap.delete(reference);\n                        }\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    if (value.has('Resources')) {\n                        _removeDuplicateFromResources(value.get('Resources'), crossTable);\n                    }\n                    if (key === 'Font' || key === 'XObject' || key === 'ExtGState') {\n                        _removeDuplicateFromResources(value, crossTable);\n                    }\n                }\n            }\n        });\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {any} normal Input.\n * @param {_PdfCrossReference} crossReference Cross reference table.\n * @param {string} firstKey Key string for appearance type.\n * @param {string} secondKey Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeReferences(normal, crossReference, firstKey, secondKey) {\n    var normalElement;\n    if (normal) {\n        if (normal instanceof _PdfDictionary) {\n            normalElement = normal;\n        }\n        else if (normal instanceof _PdfStream) {\n            normalElement = normal.dictionary;\n        }\n    }\n    if (normalElement) {\n        _removeDuplicateReference(normalElement, crossReference, firstKey);\n        _removeDuplicateReference(normalElement, crossReference, secondKey);\n    }\n}\nvar BaseException = /** @class */ (function () {\n    function BaseException(message, name) {\n        this.message = message;\n        this.name = name;\n    }\n    return BaseException;\n}());\nexport { BaseException };\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(message) {\n        return _super.call(this, message, 'FormatError') || this;\n    }\n    return FormatError;\n}(BaseException));\nexport { FormatError };\nvar ParserEndOfFileException = /** @class */ (function (_super) {\n    __extends(ParserEndOfFileException, _super);\n    function ParserEndOfFileException(message) {\n        return _super.call(this, message, 'ParserEndOfFileException') || this;\n    }\n    return ParserEndOfFileException;\n}(BaseException));\nexport { ParserEndOfFileException };\n/**\n * Gets the default string.\n *\n * @param {string} item Input string.\n * @returns {string} result.\n */\nexport function _defaultToString(item) {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n/**\n * Gets the form field font.\n *\n * @param {PdfForm} form form.\n * @param {PdfWidgetAnnotation} widget widget annotation.\n * @param {PdfField} field field.\n * @returns {PdfFont} font.\n */\nexport function _obtainFontDetails(form, widget, field) {\n    var fontFamily = '';\n    var fontSize;\n    var font;\n    var defaultAppearance;\n    if (widget && widget._dictionary.has('DA') || field._dictionary.has('DA')) {\n        if (widget && widget._dictionary.has('DA')) {\n            defaultAppearance = widget._dictionary.get('DA');\n        }\n        else {\n            defaultAppearance = field._dictionary.get('DA');\n        }\n    }\n    if (defaultAppearance && defaultAppearance !== '' && defaultAppearance.indexOf('Tf') !== -1) {\n        var textCollection = defaultAppearance.split(' ');\n        for (var i = 0; i < textCollection.length; i++) {\n            if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                fontFamily = textCollection[i - 2];\n                while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                    fontFamily = fontFamily.substring(1);\n                }\n                fontSize = Number.parseFloat(textCollection[i - 1]);\n            }\n        }\n    }\n    if (fontFamily) {\n        fontFamily = fontFamily.trim();\n    }\n    if (form && form._dictionary.has('DR')) {\n        var resources = form._dictionary.get('DR');\n        if (resources.has('Font')) {\n            var fonts = resources.get('Font');\n            if (fonts.has(fontFamily)) {\n                var fontDictionary = fonts.get(fontFamily);\n                if (fontDictionary && fontFamily && fontDictionary.has('BaseFont')) {\n                    var baseFont = fontDictionary.get('BaseFont');\n                    var textFontStyle = PdfFontStyle.regular;\n                    if (baseFont) {\n                        defaultAppearance = baseFont.name;\n                        textFontStyle = _getFontStyle(baseFont.name);\n                        if (defaultAppearance.includes('-')) {\n                            defaultAppearance = defaultAppearance.substring(0, defaultAppearance.indexOf('-'));\n                        }\n                        if (widget && widget._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, widget);\n                        }\n                        else if (field && field._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, field);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if ((font === null || typeof font === 'undefined') && fontSize) {\n        font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n    }\n    if ((font === null || typeof font === 'undefined') || (font && font.size === 1)) {\n        if (widget) {\n            font = widget._circleCaptionFont;\n        }\n        else if (field) {\n            font = field._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font style.\n *\n * @param {string} fontFamilyString Font family string.\n * @returns {PdfFontStyle} result.\n */\nexport function _getFontStyle(fontFamilyString) {\n    var position = fontFamilyString.indexOf('-');\n    if (position < 0) {\n        position = fontFamilyString.indexOf(',');\n    }\n    var style = PdfFontStyle.regular;\n    if (position >= 0) {\n        var standardName = fontFamilyString.substring(position + 1, fontFamilyString.length);\n        switch (standardName) {\n            case 'Bold':\n            case 'BoldMT':\n                style = PdfFontStyle.bold;\n                break;\n            case 'Italic':\n            case 'ItalicMT':\n            case 'Oblique':\n            case 'It':\n                style = PdfFontStyle.italic;\n                break;\n            case 'BoldItalic':\n            case 'BoldItalicMT':\n            case 'BoldOblique':\n                style = PdfFontStyle.bold | PdfFontStyle.italic;\n                break;\n        }\n    }\n    return style;\n}\n/**\n * Map the font.\n *\n * @param {string} name Font name.\n * @param {number} size Font size.\n * @param {PdfFontStyle} style Font style.\n * @param {PdfAnnotation} annotation Annotation or Field.\n * @returns {PdfFont} result.\n */\nexport function _mapFont(name, size, style, annotation) {\n    var font;\n    var fontFamily = name ? name : '';\n    if (fontFamily.includes('-')) {\n        fontFamily = fontFamily.substring(0, fontFamily.indexOf('-'));\n    }\n    if (typeof size === 'undefined' && annotation instanceof PdfLineAnnotation && annotation._isLoaded) {\n        size = 10;\n    }\n    var fontSize = typeof size !== 'undefined' ? size : 1;\n    if (annotation._dictionary.has('DS') || annotation._dictionary.has('DA')) {\n        switch (fontFamily) {\n            case 'Helvetica':\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n                break;\n            case 'Courier':\n                font = new PdfStandardFont(PdfFontFamily.courier, fontSize, style);\n                break;\n            case 'Symbol':\n                font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, style);\n                break;\n            case 'Times':\n            case 'TimesRoman':\n                font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, style);\n                break;\n            case 'ZapfDingbats':\n                font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, style);\n                break;\n            case 'MonotypeSungLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeSungLight, fontSize, style);\n                break;\n            case 'SinoTypeSongLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.sinoTypeSongLight, fontSize, style);\n                break;\n            case 'MonotypeHeiMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeHeiMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsGothicMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsGothicMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsShinMyeongJoMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium, fontSize, style);\n                break;\n            case 'HeiseiKakuGothicW5':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiKakuGothicW5, fontSize, style);\n                break;\n            case 'HeiseiMinchoW3':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, fontSize, style);\n                break;\n            default:\n                if (annotation._dictionary.has('AP')) {\n                    var fontData = _tryParseFontStream(annotation._dictionary, annotation._crossReference, annotation);\n                    if (annotation._hasData) {\n                        var base64String = _encode(fontData);\n                        font = new PdfTrueTypeFont(base64String, fontSize, style);\n                    }\n                }\n                break;\n        }\n    }\n    if (font === null || typeof font === 'undefined') {\n        if (annotation instanceof PdfAnnotation) {\n            if (annotation._type !== _PdfAnnotationType.widgetAnnotation) {\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n            }\n            else {\n                font = annotation._circleCaptionFont;\n            }\n        }\n        else if (annotation instanceof PdfField) {\n            font = annotation._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font stream.\n *\n * @param {_PdfDictionary} widgetDictionary Widget dictionary.\n * @param {_PdfCrossReference} crossReference Cross reference.\n * @param {PdfAnnotation} annotation Annotation.\n * @returns {Uint8Array} result.\n */\nexport function _tryParseFontStream(widgetDictionary, crossReference, annotation) {\n    var fontData;\n    var apperance = widgetDictionary.get('AP');\n    if (apperance && apperance.has('N')) {\n        var normal = apperance.get('N');\n        if (normal && normal instanceof _PdfStream && normal.dictionary.has('Resources')) {\n            var resourcesDictionary = normal.dictionary.get('Resources');\n            if (resourcesDictionary && resourcesDictionary.has('Font')) {\n                var fontDictionary = resourcesDictionary.get('Font');\n                if (fontDictionary && fontDictionary instanceof _PdfDictionary) {\n                    fontDictionary.forEach(function (key, value) {\n                        if (value) {\n                            var dictionary = crossReference._fetch(value);\n                            if (dictionary && dictionary.has('DescendantFonts')) {\n                                var descendant = dictionary.getArray('DescendantFonts'); // eslint-disable-line\n                                if (descendant && descendant.length > 0) {\n                                    for (var i = 0; i < descendant.length; i++) {\n                                        var descendantFont = descendant[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                                        if (descendantFont && descendantFont instanceof _PdfDictionary && descendantFont.has('FontDescriptor')) {\n                                            var fontDescriptor = descendantFont.get('FontDescriptor');\n                                            if (fontDescriptor && fontDescriptor.has('FontFile2')) {\n                                                var fontFile = fontDescriptor.get('FontFile2');\n                                                if (fontFile && fontFile instanceof _PdfStream && fontFile.length > 0) {\n                                                    fontData = fontFile.getByteRange(fontFile.start, fontFile.end);\n                                                    if (fontData && fontData.length > 0) {\n                                                        annotation._hasData = true;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        }\n    }\n    return fontData;\n}\n/**\n * Gets the boolean if two arrays are equal.\n *\n * @param {Array<number[]>} inkPointsCollection Ink points collection.\n * @param {Array<number[]>} previousCollection Previous collection.\n * @returns {boolean} result.\n */\nexport function _checkInkPoints(inkPointsCollection, previousCollection) {\n    if (inkPointsCollection.length !== previousCollection.length) {\n        return false;\n    }\n    for (var i = 0; i < inkPointsCollection.length; i++) {\n        if (!_areArrayEqual(inkPointsCollection[Number.parseInt(i.toString(), 10)], previousCollection[Number.parseInt(i.toString(), 10)])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Gets the Destination.\n *\n * @param {_PdfDictionary} dictionary widget dictionary.\n * @param {string} key bookmark or action dictionary key.\n * @returns {PdfDestination} destination.\n */\nexport function _obtainDestination(dictionary, key) {\n    var page;\n    var destination;\n    if (dictionary) {\n        var destinationArray = void 0; // eslint-disable-line\n        if (dictionary.has(key)) {\n            destinationArray = dictionary.getArray(key);\n        }\n        var loadedDocument = dictionary._crossReference._document;\n        var mode = void 0;\n        if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n            var value = destinationArray[0]; // eslint-disable-line\n            var left = void 0;\n            var height = void 0;\n            var bottom = void 0;\n            var right = void 0;\n            var zoom = void 0;\n            if (typeof value === 'number') {\n                var pageNumber = destinationArray[0];\n                if (pageNumber >= 0) {\n                    var document_1 = dictionary._crossReference._document;\n                    if (document_1 && document_1.pageCount > pageNumber) {\n                        page = document_1.getPage(pageNumber);\n                    }\n                    if (destinationArray.length > 1) {\n                        mode = destinationArray[1];\n                    }\n                    if (mode && mode.name === 'XYZ') {\n                        if (destinationArray.length > 2) {\n                            left = destinationArray[2];\n                        }\n                        if (destinationArray.length > 3) {\n                            height = destinationArray[3];\n                        }\n                        if (destinationArray.length > 4) {\n                            zoom = destinationArray[4];\n                        }\n                        if (page) {\n                            var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                            var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                            if (page.rotation !== PdfRotationAngle.angle0) {\n                                _checkRotation(page, height, left);\n                            }\n                            destination = new PdfDestination(page, [leftValue, topValue]);\n                            destination._index = pageNumber;\n                            destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                            if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                destination._setValidation(false);\n                            }\n                        }\n                    }\n                }\n            }\n            if (value instanceof _PdfDictionary) {\n                var pageDictionary = value;\n                var index = void 0;\n                if (loadedDocument && pageDictionary) {\n                    index = _getPageIndex(loadedDocument, pageDictionary);\n                }\n                if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                    page = loadedDocument.getPage(index);\n                }\n                if (destinationArray.length > 1) {\n                    mode = destinationArray[1];\n                }\n                if (mode) {\n                    if (mode.name === 'XYZ') {\n                        if (destinationArray.length > 2) {\n                            left = destinationArray[2];\n                        }\n                        if (destinationArray.length > 3) {\n                            height = destinationArray[3];\n                        }\n                        if (destinationArray.length > 4) {\n                            zoom = destinationArray[4];\n                        }\n                        if (page) {\n                            var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                            var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                            if (page.rotation !== PdfRotationAngle.angle0) {\n                                topValue = _checkRotation(page, height, left);\n                            }\n                            destination = new PdfDestination(page, [leftValue, topValue]);\n                            destination._index = index;\n                            destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                            if (left === null || height === null || zoom === null || typeof left === 'undefined' ||\n                                typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                destination._setValidation(false);\n                            }\n                        }\n                    }\n                    else {\n                        if (mode.name === 'FitR') {\n                            if (destinationArray.length > 2) {\n                                left = destinationArray[2];\n                            }\n                            if (destinationArray.length > 3) {\n                                bottom = destinationArray[3];\n                            }\n                            if (destinationArray.length > 4) {\n                                right = destinationArray[4];\n                            }\n                            if (destinationArray.length > 5) {\n                                height = destinationArray[5];\n                            }\n                            if (page) {\n                                left = (left === null || typeof left === 'undefined') ? 0 : left;\n                                bottom = (bottom === null || typeof bottom === 'undefined') ? 0 : bottom;\n                                height = (height === null || typeof height === 'undefined') ? 0 : height;\n                                right = (right === null || typeof right === 'undefined') ? 0 : right;\n                                destination = new PdfDestination(page, [left, bottom, right, height]);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitR;\n                            }\n                        }\n                        else if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                            if (destinationArray.length >= 3) {\n                                height = destinationArray[2];\n                            }\n                            if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                page = loadedDocument.getPage(index);\n                            }\n                            if (page && page.size) {\n                                var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                                destination = new PdfDestination(page, [0, topValue]);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitH;\n                                if (height === null || typeof height === 'undefined') {\n                                    destination._setValidation(false);\n                                }\n                            }\n                        }\n                        else {\n                            if (page && mode.name === 'Fit') {\n                                destination = new PdfDestination(page);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return destination;\n}\n/**\n * Update the annotation bounds.\n *\n * @param {PdfAnnotation} annotation annotation.\n * @param {number[]} bounds annotation bounds.\n * @returns {number[]} bounds.\n */\nexport function _updateBounds(annotation, bounds) {\n    if (bounds) {\n        annotation._bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n    }\n    var rect;\n    if (annotation._page && annotation.bounds) {\n        rect = [annotation.bounds.x, annotation.bounds.y + annotation.bounds.height,\n            annotation.bounds.width, annotation.bounds.height];\n        if (annotation._page._isNew && annotation._page._pageSettings) {\n            var pageSettings = annotation._page._pageSettings;\n            var pageBounds = [pageSettings.margins.left, pageSettings.margins.top, pageSettings.size[0] -\n                    (pageSettings.margins.left + pageSettings.margins.right),\n                pageSettings.size[1] - (pageSettings.margins.top + pageSettings.margins.bottom)];\n            rect[0] += pageBounds[0];\n            rect[1] = pageSettings.size[1] - (pageBounds[1] + rect[1]);\n        }\n        else {\n            rect = [annotation.bounds.x,\n                annotation._page.size[1] - (annotation.bounds.y + annotation.bounds.height),\n                annotation.bounds.width,\n                annotation.bounds.height];\n        }\n        return [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]];\n    }\n    return rect;\n}\n/**\n * Decode text.\n *\n * @param {string} text Text to decode.\n * @param {boolean} isColorSpace Color space or not\n * @param {boolean} isPassword Password or not\n * @returns {string} Decoded text.\n */\nexport function _decodeText(text, isColorSpace, isPassword) {\n    if (text && typeof text === 'string' && !isColorSpace && !isPassword) {\n        if (text.startsWith('þÿ')) {\n            text = text.substring(2);\n            if (text.endsWith('ÿý')) {\n                text = text.substring(0, text.length - 2);\n            }\n            var bytes = _stringToBytes(text);\n            var result = '';\n            for (var i = 0; i < bytes.length; i += 2) {\n                var x = bytes[Number.parseInt(i.toString(), 10)] << 8;\n                var y = bytes[Number.parseInt((i + 1).toString(), 10)];\n                var codeUnit = x | y;\n                result += String.fromCharCode(codeUnit);\n            }\n            text = result;\n        }\n    }\n    return text;\n}\n/**\n * Number of bytes required to save the number.\n *\n * @param {number} input number.\n * @returns {number} number of bytes.\n */\nexport function _getSize(input) {\n    var size = 0;\n    var uintMaxValue = 0xFFFFFFFF;\n    var ushortMaxValue = 0xFFFF;\n    var byteMaxValue = 0xFF;\n    if (input <= uintMaxValue) {\n        if (input <= ushortMaxValue) {\n            if (input <= byteMaxValue) {\n                size = 1;\n            }\n            else {\n                size = 2;\n            }\n        }\n        else {\n            if (input <= (ushortMaxValue | (ushortMaxValue << 8))) {\n                size = 3;\n            }\n            else {\n                size = 4;\n            }\n        }\n    }\n    else {\n        size = 8;\n    }\n    return size;\n}\n/**\n * Convert the string to big endian bytes.\n *\n * @param {string} input string.\n * @returns {number[]} bytes.\n */\nexport function _stringToBigEndianBytes(input) {\n    var bytes = [];\n    for (var i = 0; i < input.length; i++) {\n        var charCode = input.charCodeAt(Number.parseInt(i.toString(), 10));\n        if (charCode <= 0xFFFF) {\n            bytes.push((charCode >> 8) & 0xFF);\n            bytes.push(charCode & 0xFF);\n        }\n    }\n    return bytes;\n}\n","import { _defaultToString } from './utils';\n/* eslint-disable */\nvar nameCache = Object.create(null);\nvar cmdCache = Object.create(null);\nvar refCache = Object.create(null);\nvar _PdfName = /** @class */ (function () {\n    function _PdfName(name) {\n        this.name = name;\n    }\n    _PdfName.get = function (name) {\n        return nameCache[name] || (nameCache[name] = new _PdfName(name));\n    };\n    return _PdfName;\n}());\nexport { _PdfName };\nvar _PdfCommand = /** @class */ (function () {\n    function _PdfCommand(command) {\n        this.command = command;\n    }\n    _PdfCommand.get = function (command) {\n        return cmdCache[command] || (cmdCache[command] = new _PdfCommand(command));\n    };\n    return _PdfCommand;\n}());\nexport { _PdfCommand };\nvar _PdfReference = /** @class */ (function () {\n    function _PdfReference(objectNumber, gen) {\n        this._isNew = false;\n        this.objectNumber = objectNumber;\n        this.generationNumber = gen;\n    }\n    _PdfReference.prototype.toString = function () {\n        return this.objectNumber + \" \" + this.generationNumber;\n    };\n    _PdfReference.get = function (objectNumber, generationNumber) {\n        var key = generationNumber === 0 ? objectNumber + \"R\" : objectNumber + \"R\" + generationNumber;\n        return refCache[key] || (refCache[key] = new _PdfReference(objectNumber, generationNumber));\n    };\n    return _PdfReference;\n}());\nexport { _PdfReference };\nvar _PdfReferenceSet = /** @class */ (function () {\n    function _PdfReferenceSet(parent) {\n        if (parent === void 0) { parent = null; }\n        this._set = new Set(parent && parent._set);\n    }\n    _PdfReferenceSet.prototype.has = function (ref) {\n        return this._set.has(ref.toString());\n    };\n    _PdfReferenceSet.prototype.put = function (ref) {\n        this._set.add(ref.toString());\n    };\n    _PdfReferenceSet.prototype.remove = function (ref) {\n        this._set.delete(ref.toString());\n    };\n    _PdfReferenceSet.prototype.clear = function () {\n        this._set.clear();\n    };\n    return _PdfReferenceSet;\n}());\nexport { _PdfReferenceSet };\nvar _PdfReferenceSetCache = /** @class */ (function () {\n    function _PdfReferenceSetCache() {\n        this._map = new Map();\n    }\n    Object.defineProperty(_PdfReferenceSetCache.prototype, \"size\", {\n        get: function () {\n            return this._map.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfReferenceSetCache.prototype.get = function (ref) {\n        return this._map.get(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.has = function (ref) {\n        return this._map.has(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.put = function (ref, obj) {\n        this._map.set(ref.toString(), obj);\n    };\n    _PdfReferenceSetCache.prototype.set = function (objId, obj) {\n        this._map.set(objId, obj);\n    };\n    _PdfReferenceSetCache.prototype.clear = function () {\n        this._map.clear();\n    };\n    return _PdfReferenceSetCache;\n}());\nexport { _PdfReferenceSetCache };\nvar Dictionary = /** @class */ (function () {\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || _defaultToString;\n    }\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    Dictionary.prototype.setValue = function (key, value) {\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        this.nElements++;\n        ret = undefined;\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n        }\n        return keysArray;\n    };\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    Dictionary.prototype._size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}());\nexport { Dictionary };\nvar _PdfDictionary = /** @class */ (function () {\n    function _PdfDictionary(xref) {\n        this._isFont = false;\n        this._initialize(xref);\n    }\n    Object.defineProperty(_PdfDictionary.prototype, \"size\", {\n        get: function () {\n            return Object.keys(this._map).length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDictionary.prototype.assignXref = function (xref) {\n        this._crossReference = xref;\n    };\n    _PdfDictionary.prototype.getRaw = function (key) {\n        return this._map[key];\n    };\n    _PdfDictionary.prototype.getRawValues = function () {\n        return this._map.values;\n    };\n    _PdfDictionary.prototype.get = function (key1, key2, key3) {\n        var value = this._get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && value instanceof _PdfReference) {\n            value = this._crossReference._fetch(value);\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.getArray = function (key1, key2, key3) {\n        var value = this.get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && Array.isArray(value)) {\n            value = value.slice();\n            for (var i = 0; i < value.length; i++) {\n                var reference = value[Number.parseInt(i.toString(), 10)];\n                if (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) {\n                    value[Number.parseInt(i.toString(), 10)] = this._crossReference._fetch(reference);\n                }\n            }\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.set = function (key, value) {\n        this._map[key] = value;\n    };\n    _PdfDictionary.prototype.has = function (key) {\n        return typeof this._map[key] !== 'undefined';\n    };\n    _PdfDictionary.prototype.forEach = function (callback) {\n        for (var key in this._map) {\n            callback(key, this.getRaw(key));\n        }\n    };\n    _PdfDictionary.prototype.update = function (key, value) {\n        if (this.has(key)) {\n            var prevValue = this._map[key];\n            if (prevValue !== null && typeof prevValue !== 'undefined' && prevValue instanceof _PdfReference && this._crossReference) {\n                prevValue = this._crossReference._fetch(prevValue);\n            }\n            if (prevValue !== value) {\n                this._map[key] = value;\n                this._updated = true;\n            }\n        }\n        else {\n            this._map[key] = value;\n            this._updated = true;\n        }\n    };\n    _PdfDictionary.getEmpty = function (xref) {\n        var emptyDict = new _PdfDictionary(xref);\n        emptyDict.set = function (key, value) {\n            throw new Error('Should not call set on the empty dictionary.');\n        };\n        return emptyDict;\n    };\n    _PdfDictionary.merge = function (xref, dictionaryArray, mergeSubDictionary) {\n        if (mergeSubDictionary === void 0) { mergeSubDictionary = false; }\n        var mergedDictionary = new _PdfDictionary(xref);\n        var properties = Object.create(null);\n        for (var _i = 0, dictionaryArray_1 = dictionaryArray; _i < dictionaryArray_1.length; _i++) {\n            var dictionary = dictionaryArray_1[_i];\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            for (var _a = 0, _b = dictionary._map; _a < _b.length; _a++) {\n                var _c = _b[_a], key = _c[0], value = _c[1];\n                var property = properties.get(key);\n                if (typeof property === 'undefined') {\n                    property = [];\n                    properties.set(key, property);\n                }\n                else if (!mergeSubDictionary || !(value instanceof _PdfDictionary)) {\n                    continue;\n                }\n                property.push(value);\n            }\n        }\n        for (var _d = 0, properties_1 = properties; _d < properties_1.length; _d++) {\n            var _e = properties_1[_d], name_1 = _e[0], values = _e[1];\n            if (values.length === 1 || !(values[0] instanceof _PdfDictionary)) {\n                mergedDictionary._map[name_1] = values[0];\n                continue;\n            }\n            var subDict = new _PdfDictionary(xref);\n            for (var _f = 0, values_1 = values; _f < values_1.length; _f++) {\n                var dictionary = values_1[_f];\n                for (var _g = 0, _h = dictionary._map; _g < _h.length; _g++) {\n                    var _j = _h[_g], key = _j[0], value = _j[1];\n                    if (typeof subDict._map[key] === 'undefined') {\n                        subDict._map[key] = value;\n                    }\n                }\n            }\n            if (subDict.size > 0) {\n                mergedDictionary._map[name_1] = subDict;\n            }\n        }\n        properties.clear();\n        return mergedDictionary.size > 0 ? mergedDictionary : _PdfDictionary.getEmpty(xref);\n    };\n    _PdfDictionary.prototype._initialize = function (xref) {\n        this._map = Object.create(null);\n        this.suppressEncryption = false;\n        this._updated = false;\n        this.isCatalog = false;\n        this._isNew = false;\n        if (xref) {\n            this._crossReference = xref;\n        }\n    };\n    _PdfDictionary.prototype._get = function (key1, key2, key3) {\n        var value = this._map[key1];\n        if (typeof value === 'undefined') {\n            value = this._map[key2];\n            if (typeof key2 !== 'undefined' && key2 !== null) {\n                value = this._map[key2];\n            }\n            else if (typeof key3 !== 'undefined' && key3 !== null) {\n                value = this._map[key3];\n            }\n        }\n        return value;\n    };\n    return _PdfDictionary;\n}());\nexport { _PdfDictionary };\nvar _PdfNull = /** @class */ (function () {\n    function _PdfNull(value) {\n        if (value === void 0) { value = []; }\n        this.value = value;\n    }\n    return _PdfNull;\n}());\nexport { _PdfNull };\nexport function _clearPrimitiveCaches() {\n    nameCache = Object.create(null);\n    cmdCache = Object.create(null);\n    refCache = Object.create(null);\n}\nexport function _isName(value, name) {\n    return value instanceof _PdfName && (typeof name === 'undefined' || value.name === name);\n}\nexport function _isCommand(value, command) {\n    return value instanceof _PdfCommand && (typeof command === 'undefined' || value.command === command);\n}\n","/**\n * Public Enum to define annotation flag types.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the annotation flag to enable print\n * annotation.flags = PdfAnnotationFlag.print;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationFlag;\n(function (PdfAnnotationFlag) {\n    /**\n     * Specifies the type of `default`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the type of `invisible`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"invisible\"] = 1] = \"invisible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"hidden\"] = 2] = \"hidden\";\n    /**\n     * Specifies the type of `print`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the type of `noZoom`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noZoom\"] = 8] = \"noZoom\";\n    /**\n     * Specifies the type of `noRotate`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noRotate\"] = 16] = \"noRotate\";\n    /**\n     * Specifies the type of `noView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noView\"] = 32] = \"noView\";\n    /**\n     * Specifies the type of `readOnly`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"readOnly\"] = 64] = \"readOnly\";\n    /**\n     * Specifies the type of `locked`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"locked\"] = 128] = \"locked\";\n    /**\n     * Specifies the type of `toggleNoView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"toggleNoView\"] = 256] = \"toggleNoView\";\n})(PdfAnnotationFlag || (PdfAnnotationFlag = {}));\n/**\n * Public Enum to define line ending style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n * // Sets the begin line end style as openArrow\n * annotation.beginLineStyle = PdfLineEndingStyle.openArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineEndingStyle;\n(function (PdfLineEndingStyle) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `openArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"openArrow\"] = 1] = \"openArrow\";\n    /**\n     * Specifies the type of `closedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"closedArrow\"] = 2] = \"closedArrow\";\n    /**\n     * Specifies the type of `rOpenArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rOpenArrow\"] = 3] = \"rOpenArrow\";\n    /**\n     * Specifies the type of `rClosedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rClosedArrow\"] = 4] = \"rClosedArrow\";\n    /**\n     * Specifies the type of `butt`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"butt\"] = 5] = \"butt\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"diamond\"] = 6] = \"diamond\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"circle\"] = 7] = \"circle\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"square\"] = 8] = \"square\";\n    /**\n     * Specifies the type of `slash`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"slash\"] = 9] = \"slash\";\n})(PdfLineEndingStyle || (PdfLineEndingStyle = {}));\n/**\n * Public Enum to define line indent.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Sets the line intent as lineArrow\n * annotation.lineIntent = PdfLineIntent.lineArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineIntent;\n(function (PdfLineIntent) {\n    /**\n     * Specifies the type of `lineArrow`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineArrow\"] = 0] = \"lineArrow\";\n    /**\n     * Specifies the type of `lineDimension`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineDimension\"] = 1] = \"lineDimension\";\n})(PdfLineIntent || (PdfLineIntent = {}));\n/**\n * Public Enum to define line caption type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the line caption type as inline\n * annotation.caption.type = PdfLineCaptionType.inline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCaptionType;\n(function (PdfLineCaptionType) {\n    /**\n     * Specifies the type of `inline`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"inline\"] = 0] = \"inline\";\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"top\"] = 1] = \"top\";\n})(PdfLineCaptionType || (PdfLineCaptionType = {}));\n/**\n * Public Enum to define border style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border style as underline\n * annotation.border.style = PdfBorderStyle.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderStyle;\n(function (PdfBorderStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dashed`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dashed\"] = 1] = \"dashed\";\n    /**\n     * Specifies the type of `beveled`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"beveled\"] = 2] = \"beveled\";\n    /**\n     * Specifies the type of `inset`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"inset\"] = 3] = \"inset\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dot\"] = 5] = \"dot\";\n})(PdfBorderStyle || (PdfBorderStyle = {}));\n/**\n * Public Enum to define border effect style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border effect as underline\n * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderEffectStyle;\n(function (PdfBorderEffectStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `cloudy`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"cloudy\"] = 1] = \"cloudy\";\n})(PdfBorderEffectStyle || (PdfBorderEffectStyle = {}));\n/**\n * Public Enum to define rotation of the interactive elements.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Gets the rotation of the field\n * let rotation: PdfRotationAngle = field.rotationAngle;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRotationAngle;\n(function (PdfRotationAngle) {\n    /**\n     * Specifies the type of `angle0`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle0\"] = 0] = \"angle0\";\n    /**\n     * Specifies the type of `angle90`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle90\"] = 1] = \"angle90\";\n    /**\n     * Specifies the type of `angle180`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle180\"] = 2] = \"angle180\";\n    /**\n     * Specifies the type of `angle270`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle270\"] = 3] = \"angle270\";\n})(PdfRotationAngle || (PdfRotationAngle = {}));\n/**\n * Public Enum to define cross reference type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Save the document with cross reference type as stream\n * document.save('output.pdf', PdfCrossReferenceType.stream);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCrossReferenceType;\n(function (PdfCrossReferenceType) {\n    /**\n     * Specifies the type of `table`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"table\"] = 0] = \"table\";\n    /**\n     * Specifies the type of `stream`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"stream\"] = 1] = \"stream\";\n})(PdfCrossReferenceType || (PdfCrossReferenceType = {}));\n/**\n * Public Enum to define highlight mode of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the highlight mode of text box field as outline\n * field.highlightMode = PdfHighlightMode.outline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfHighlightMode;\n(function (PdfHighlightMode) {\n    /**\n     * Specifies the type of `noHighlighting`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"noHighlighting\"] = 0] = \"noHighlighting\";\n    /**\n     * Specifies the type of `invert`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"invert\"] = 1] = \"invert\";\n    /**\n     * Specifies the type of `outline`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"outline\"] = 2] = \"outline\";\n    /**\n     * Specifies the type of `push`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"push\"] = 3] = \"push\";\n})(PdfHighlightMode || (PdfHighlightMode = {}));\n/**\n * Public Enum to define text alignment of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the text alignment of form field as center\n * field.textAlignment = PdfTextAlignment.center;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `left`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"left\"] = 0] = \"left\";\n    /**\n     * Specifies the type of `center`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"center\"] = 1] = \"center\";\n    /**\n     * Specifies the type of `right`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"right\"] = 2] = \"right\";\n    /**\n     * Specifies the type of `justify`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"justify\"] = 3] = \"justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * Public Enum to define visibility of form field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Sets the visibility of form field as hidden\n * field.visibility = PdfFormFieldVisibility.hidden;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldVisibility;\n(function (PdfFormFieldVisibility) {\n    /**\n     * Specifies the type of `visible`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visible\"] = 0] = \"visible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hidden\"] = 1] = \"hidden\";\n    /**\n     * Specifies the type of `visibleNotPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visibleNotPrintable\"] = 2] = \"visibleNotPrintable\";\n    /**\n     * Specifies the type of `hiddenPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hiddenPrintable\"] = 3] = \"hiddenPrintable\";\n})(PdfFormFieldVisibility || (PdfFormFieldVisibility = {}));\n/**\n * Public Enum to define measurement unit of line measurement annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) PdfLineAnnotation;\n * // Sets the measurement unit of line measurement annoation as centimeter\n * annotation.unit = PdfMeasurementUnit.centimeter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfMeasurementUnit;\n(function (PdfMeasurementUnit) {\n    /**\n     * Specifies the type of `inch`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"inch\"] = 0] = \"inch\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `point`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"centimeter\"] = 4] = \"centimeter\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(PdfMeasurementUnit || (PdfMeasurementUnit = {}));\n/**\n * Public Enum to define measurement type of circle annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfCircleAnnotation = page.annotations.at(0) PdfCircleAnnotation;\n * // Sets the measurement type of circle annotation as diameter\n * annotation.measureType = PdfCircleMeasurementType.diameter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCircleMeasurementType;\n(function (PdfCircleMeasurementType) {\n    /**\n     * Specifies the type of `diameter`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"diameter\"] = 0] = \"diameter\";\n    /**\n     * Specifies the type of `radius`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"radius\"] = 1] = \"radius\";\n})(PdfCircleMeasurementType || (PdfCircleMeasurementType = {}));\n/**\n * Public Enum to define icon type of rubber stamp annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) PdfRubberStampAnnotation;\n * // Sets the rubber stamp annotation icon type as confidential\n * annotation.icon = PdfRubberStampAnnotationIcon.confidential;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRubberStampAnnotationIcon;\n(function (PdfRubberStampAnnotationIcon) {\n    /**\n     * Specifies the type of `approved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"approved\"] = 0] = \"approved\";\n    /**\n     * Specifies the type of `asIs`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"asIs\"] = 1] = \"asIs\";\n    /**\n     * Specifies the type of `confidential`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"confidential\"] = 2] = \"confidential\";\n    /**\n     * Specifies the type of `departmental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"departmental\"] = 3] = \"departmental\";\n    /**\n     * Specifies the type of `draft`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"draft\"] = 4] = \"draft\";\n    /**\n     * Specifies the type of `experimental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"experimental\"] = 5] = \"experimental\";\n    /**\n     * Specifies the type of `expired`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"expired\"] = 6] = \"expired\";\n    /**\n     * Specifies the type of `final`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"final\"] = 7] = \"final\";\n    /**\n     * Specifies the type of `forComment`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forComment\"] = 8] = \"forComment\";\n    /**\n     * Specifies the type of `forPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forPublicRelease\"] = 9] = \"forPublicRelease\";\n    /**\n     * Specifies the type of `notApproved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notApproved\"] = 10] = \"notApproved\";\n    /**\n     * Specifies the type of `notForPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notForPublicRelease\"] = 11] = \"notForPublicRelease\";\n    /**\n     * Specifies the type of `sold`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"sold\"] = 12] = \"sold\";\n    /**\n     * Specifies the type of `topSecret`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"topSecret\"] = 13] = \"topSecret\";\n    /**\n     * Specifies the type of `completed`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"completed\"] = 14] = \"completed\";\n    /**\n     * Specifies the type of `void`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"void\"] = 15] = \"void\";\n    /**\n     * Specifies the type of `informationOnly`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"informationOnly\"] = 16] = \"informationOnly\";\n    /**\n     * Specifies the type of `preliminaryResults`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"preliminaryResults\"] = 17] = \"preliminaryResults\";\n})(PdfRubberStampAnnotationIcon || (PdfRubberStampAnnotationIcon = {}));\n/**\n * Public Enum to define check box style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCheckBoxStyle;\n(function (PdfCheckBoxStyle) {\n    /**\n     * Specifies the type of `check`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"check\"] = 0] = \"check\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"circle\"] = 1] = \"circle\";\n    /**\n     * Specifies the type of `cross`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"cross\"] = 2] = \"cross\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"diamond\"] = 3] = \"diamond\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"square\"] = 4] = \"square\";\n    /**\n     * Specifies the type of `star`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"star\"] = 5] = \"star\";\n})(PdfCheckBoxStyle || (PdfCheckBoxStyle = {}));\n/**\n * Public Enum to define type of text markup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) PdfTextMarkupAnnotation;\n * // Sets the type of the text markup annotation as underline\n * annotation.textMarkupType = PdfTextMarkupAnnotationType.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextMarkupAnnotationType;\n(function (PdfTextMarkupAnnotationType) {\n    /**\n     * Specifies the type of `highlight`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the type of `squiggly`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"squiggly\"] = 2] = \"squiggly\";\n    /**\n     * Specifies the type of `strikeOut`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"strikeOut\"] = 3] = \"strikeOut\";\n})(PdfTextMarkupAnnotationType || (PdfTextMarkupAnnotationType = {}));\n/**\n * Public Enum to define icon type of popup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the icon type of the popup annotation as comment\n * annotation.icon = PdfPopupIcon.comment;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPopupIcon;\n(function (PdfPopupIcon) {\n    /**\n     * Specifies the type of `note`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"note\"] = 0] = \"note\";\n    /**\n     * Specifies the type of `comment`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"comment\"] = 1] = \"comment\";\n    /**\n     * Specifies the type of `help`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"help\"] = 2] = \"help\";\n    /**\n     * Specifies the type of `insert`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"insert\"] = 3] = \"insert\";\n    /**\n     * Specifies the type of `key`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"key\"] = 4] = \"key\";\n    /**\n     * Specifies the type of `new paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"newParagraph\"] = 5] = \"newParagraph\";\n    /**\n     * Specifies the type of `paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"paragraph\"] = 6] = \"paragraph\";\n})(PdfPopupIcon || (PdfPopupIcon = {}));\n/**\n * Public Enum to define annotation state.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state of the popup annotation as accepted\n * annotation.state = PdfAnnotationState.accepted;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationState;\n(function (PdfAnnotationState) {\n    /**\n     * Specifies the default state of `none`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the state of `accepted`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"accepted\"] = 1] = \"accepted\";\n    /**\n     * Specifies the state of `rejected`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"rejected\"] = 2] = \"rejected\";\n    /**\n     * Specifies the state of `cancel`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"cancel\"] = 3] = \"cancel\";\n    /**\n     * Specifies the state of `completed`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"completed\"] = 4] = \"completed\";\n    /**\n     * Specifies the state of `marked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"marked\"] = 5] = \"marked\";\n    /**\n     * Specifies the state of `unmarked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unmarked\"] = 6] = \"unmarked\";\n    /**\n     * Specifies the state of `unknown`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unknown\"] = 7] = \"unknown\";\n})(PdfAnnotationState || (PdfAnnotationState = {}));\n/**\n * Public Enum to define annotation state model.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state model of the popup annotation as marked\n * annotation.stateModel = PdfAnnotationStateModel.marked;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationStateModel;\n(function (PdfAnnotationStateModel) {\n    /**\n     * Specifies the default model of `none`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the model of `marked`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"marked\"] = 1] = \"marked\";\n    /**\n     * Specifies the model of `review`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"review\"] = 2] = \"review\";\n})(PdfAnnotationStateModel || (PdfAnnotationStateModel = {}));\n/**\n * Public Enum to define icon type of attachment annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) PdfAttachmentAnnotation;\n * // Sets the icon type of attachment annotation to pushPin\n * annotation.icon = PdfAttachmentIcon.pushPin;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAttachmentIcon;\n(function (PdfAttachmentIcon) {\n    /**\n     * Specifies the default icon of `pushPin`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"pushPin\"] = 0] = \"pushPin\";\n    /**\n     * Specifies the icon of `tag`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"tag\"] = 1] = \"tag\";\n    /**\n     * Specifies the icon of `graph`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"graph\"] = 2] = \"graph\";\n    /**\n     * Specifies the icon of `paperClip`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"paperClip\"] = 3] = \"paperClip\";\n})(PdfAttachmentIcon || (PdfAttachmentIcon = {}));\n/**\n * Public Enum to define annotation intent of free text annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) PdfFreeTextAnnotation;\n * // Sets the free text annotation intent to freeTextCallout\n * annotation.annotationIntent = PdfAnnotationIntent.freeTextCallout;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationIntent;\n(function (PdfAnnotationIntent) {\n    /**\n     * Specifies the default intent of `none`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the intent of `freeTextCallout`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextCallout\"] = 1] = \"freeTextCallout\";\n    /**\n     * Specifies the intent of `freeTextTypeWriter`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextTypeWriter\"] = 2] = \"freeTextTypeWriter\";\n})(PdfAnnotationIntent || (PdfAnnotationIntent = {}));\n/**\n * Public Enum to define destination mode of document link annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) PdfDocumentLinkAnnotation;\n * // Sets the destination mode as fitToPage\n * annotation.destination.mode = PdfDestinationMode.fitToPage;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the default intent of `location`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"location\"] = 0] = \"location\";\n    /**\n     * Specifies the intent of `FitToPage`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitToPage\"] = 1] = \"fitToPage\";\n    /**\n     * Specifies the intent of `fitR`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitR\"] = 2] = \"fitR\";\n    /**\n     * Specifies the intent of `fitH`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitH\"] = 3] = \"fitH\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n/**\n * Public Enum to define export or import data format.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DataFormat;\n(function (DataFormat) {\n    /**\n     * Specifies the intent of `FDF`.\n     */\n    DataFormat[DataFormat[\"fdf\"] = 0] = \"fdf\";\n    /**\n     * Specifies the intent of `XFDF`.\n     */\n    DataFormat[DataFormat[\"xfdf\"] = 1] = \"xfdf\";\n    /**\n     * Specifies the intent of `JSON`.\n     */\n    DataFormat[DataFormat[\"json\"] = 2] = \"json\";\n    /**\n     * Specifies the intent of `XML`.\n     */\n    DataFormat[DataFormat[\"xml\"] = 3] = \"xml\";\n})(DataFormat || (DataFormat = {}));\n/**\n * Public enum to define form fields tab order.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Set a PDF form's tab order.\n * document.form.orderFormFields(PdfFormFieldsTabOrder.row);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldsTabOrder;\n(function (PdfFormFieldsTabOrder) {\n    /**\n     * Specifies that no tab order is defined.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the tab order is defined by the document's rows.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"row\"] = 1] = \"row\";\n    /**\n     * Specifies the tab order is defined by the document's columns.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"column\"] = 2] = \"column\";\n    /**\n     * Specifies the tab order is defined by the document's structure tree.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"structure\"] = 3] = \"structure\";\n    /**\n     * Specifies the tab order is defined manually.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"manual\"] = 4] = \"manual\";\n    /**\n     * Specifies the tab order is defined by the widget annotations in the document.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"widget\"] = 5] = \"widget\";\n})(PdfFormFieldsTabOrder || (PdfFormFieldsTabOrder = {}));\n/**\n * Enum for PDF loaded annotation type.\n */\nexport var _PdfAnnotationType;\n(function (_PdfAnnotationType) {\n    /**\n     * Specifies the intent of `highlight`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the intent of `underline`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the intent of `strikeOut`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"strikeOut\"] = 2] = \"strikeOut\";\n    /**\n     * Specifies the intent of `squiggly`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squiggly\"] = 3] = \"squiggly\";\n    /**\n     * Specifies the intent of `redactionAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"redactionAnnotation\"] = 4] = \"redactionAnnotation\";\n    /**\n     * Specifies the intent of `textAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textAnnotation\"] = 5] = \"textAnnotation\";\n    /**\n     * Specifies the intent of `linkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"linkAnnotation\"] = 6] = \"linkAnnotation\";\n    /**\n     * Specifies the intent of `documentLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"documentLinkAnnotation\"] = 7] = \"documentLinkAnnotation\";\n    /**\n     * Specifies the intent of `uriAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"uriAnnotation\"] = 8] = \"uriAnnotation\";\n    /**\n     * Specifies the intent of `fileLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileLinkAnnotation\"] = 9] = \"fileLinkAnnotation\";\n    /**\n     * Specifies the intent of `freeTextAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"freeTextAnnotation\"] = 10] = \"freeTextAnnotation\";\n    /**\n     * Specifies the intent of `lineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"lineAnnotation\"] = 11] = \"lineAnnotation\";\n    /**\n     * Specifies the intent of `circleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"circleAnnotation\"] = 12] = \"circleAnnotation\";\n    /**\n     * Specifies the intent of `ellipseAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"ellipseAnnotation\"] = 13] = \"ellipseAnnotation\";\n    /**\n     * Specifies the intent of `squareAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squareAnnotation\"] = 14] = \"squareAnnotation\";\n    /**\n     * Specifies the intent of `rectangleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rectangleAnnotation\"] = 15] = \"rectangleAnnotation\";\n    /**\n     * Specifies the intent of `polygonAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polygonAnnotation\"] = 16] = \"polygonAnnotation\";\n    /**\n     * Specifies the intent of `polyLineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polyLineAnnotation\"] = 17] = \"polyLineAnnotation\";\n    /**\n     * Specifies the intent of `textMarkupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textMarkupAnnotation\"] = 18] = \"textMarkupAnnotation\";\n    /**\n     * Specifies the intent of `caretAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"caretAnnotation\"] = 19] = \"caretAnnotation\";\n    /**\n     * Specifies the intent of `rubberStampAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rubberStampAnnotation\"] = 20] = \"rubberStampAnnotation\";\n    /**\n     * Specifies the intent of `popupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"popupAnnotation\"] = 21] = \"popupAnnotation\";\n    /**\n     * Specifies the intent of `fileAttachmentAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileAttachmentAnnotation\"] = 22] = \"fileAttachmentAnnotation\";\n    /**\n     * Specifies the intent of `soundAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"soundAnnotation\"] = 23] = \"soundAnnotation\";\n    /**\n     * Specifies the intent of `movieAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"movieAnnotation\"] = 24] = \"movieAnnotation\";\n    /**\n     * Specifies the intent of `screenAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"screenAnnotation\"] = 25] = \"screenAnnotation\";\n    /**\n     * Specifies the intent of `widgetAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"widgetAnnotation\"] = 26] = \"widgetAnnotation\";\n    /**\n     * Specifies the intent of `printerMarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"printerMarkAnnotation\"] = 27] = \"printerMarkAnnotation\";\n    /**\n     * Specifies the intent of `trapNetworkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"trapNetworkAnnotation\"] = 28] = \"trapNetworkAnnotation\";\n    /**\n     * Specifies the intent of `watermarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"watermarkAnnotation\"] = 29] = \"watermarkAnnotation\";\n    /**\n     * Specifies the intent of `textWebLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textWebLinkAnnotation\"] = 30] = \"textWebLinkAnnotation\";\n    /**\n     * Specifies the intent of `inkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"inkAnnotation\"] = 31] = \"inkAnnotation\";\n    /**\n     * Specifies the intent of `richMediaAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"richMediaAnnotation\"] = 32] = \"richMediaAnnotation\";\n    /**\n     * Specifies the intent of `angleMeasurementAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"angleMeasurementAnnotation\"] = 33] = \"angleMeasurementAnnotation\";\n    /**\n     * Specifies the intent of `null`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"null\"] = 34] = \"null\";\n})(_PdfAnnotationType || (_PdfAnnotationType = {}));\n/**\n * Enum for PDF graphics unit.\n */\nexport var _PdfGraphicsUnit;\n(function (_PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"centimeter\"] = 0] = \"centimeter\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `pixel`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pixel\"] = 2] = \"pixel\";\n    /**\n     * Specifies the type of `point`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `inch`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"inch\"] = 4] = \"inch\";\n    /**\n     * Specifies the type of `document`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"document\"] = 5] = \"document\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(_PdfGraphicsUnit || (_PdfGraphicsUnit = {}));\nexport var _FieldFlag;\n(function (_FieldFlag) {\n    _FieldFlag[_FieldFlag[\"default\"] = 0] = \"default\";\n    _FieldFlag[_FieldFlag[\"readOnly\"] = 1] = \"readOnly\";\n    _FieldFlag[_FieldFlag[\"required\"] = 2] = \"required\";\n    _FieldFlag[_FieldFlag[\"noExport\"] = 4] = \"noExport\";\n    _FieldFlag[_FieldFlag[\"multiLine\"] = 4096] = \"multiLine\";\n    _FieldFlag[_FieldFlag[\"password\"] = 8192] = \"password\";\n    _FieldFlag[_FieldFlag[\"fileSelect\"] = 1048576] = \"fileSelect\";\n    _FieldFlag[_FieldFlag[\"doNotSpellCheck\"] = 4194304] = \"doNotSpellCheck\";\n    _FieldFlag[_FieldFlag[\"doNotScroll\"] = 8388608] = \"doNotScroll\";\n    _FieldFlag[_FieldFlag[\"comb\"] = 16777216] = \"comb\";\n    _FieldFlag[_FieldFlag[\"richText\"] = 33554432] = \"richText\";\n    _FieldFlag[_FieldFlag[\"noToggleToOff\"] = 16384] = \"noToggleToOff\";\n    _FieldFlag[_FieldFlag[\"radio\"] = 32768] = \"radio\";\n    _FieldFlag[_FieldFlag[\"pushButton\"] = 65536] = \"pushButton\";\n    _FieldFlag[_FieldFlag[\"radiosInUnison\"] = 33554432] = \"radiosInUnison\";\n    _FieldFlag[_FieldFlag[\"combo\"] = 131072] = \"combo\";\n    _FieldFlag[_FieldFlag[\"edit\"] = 262144] = \"edit\";\n    _FieldFlag[_FieldFlag[\"sort\"] = 524288] = \"sort\";\n    _FieldFlag[_FieldFlag[\"multiSelect\"] = 2097152] = \"multiSelect\";\n    _FieldFlag[_FieldFlag[\"commitOnSelectChange\"] = 67108864] = \"commitOnSelectChange\";\n})(_FieldFlag || (_FieldFlag = {}));\nexport var _SignatureFlag;\n(function (_SignatureFlag) {\n    _SignatureFlag[_SignatureFlag[\"none\"] = 0] = \"none\";\n    _SignatureFlag[_SignatureFlag[\"signatureExists\"] = 1] = \"signatureExists\";\n    _SignatureFlag[_SignatureFlag[\"appendOnly\"] = 2] = \"appendOnly\";\n})(_SignatureFlag || (_SignatureFlag = {}));\nexport var _PdfCheckFieldState;\n(function (_PdfCheckFieldState) {\n    _PdfCheckFieldState[_PdfCheckFieldState[\"unchecked\"] = 0] = \"unchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"checked\"] = 1] = \"checked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedUnchecked\"] = 2] = \"pressedUnchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedChecked\"] = 3] = \"pressedChecked\";\n})(_PdfCheckFieldState || (_PdfCheckFieldState = {}));\n/**\n * Public enum to define the PDF document permission flags.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the permission flag\n * let permission: PdfPermissionFlag = document.permissions;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPermissionFlag;\n(function (PdfPermissionFlag) {\n    /**\n     * Specifies the default permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the edit content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editContent\"] = 8] = \"editContent\";\n    /**\n     * Specifies the copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"copyContent\"] = 16] = \"copyContent\";\n    /**\n     * Specifies the edit annotations permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editAnnotations\"] = 32] = \"editAnnotations\";\n    /**\n     * Specifies the fill fields permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fillFields\"] = 256] = \"fillFields\";\n    /**\n     * Specifies the accessibility copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"accessibilityCopyContent\"] = 512] = \"accessibilityCopyContent\";\n    /**\n     * Specifies the assemble document permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"assembleDocument\"] = 1024] = \"assembleDocument\";\n    /**\n     * Specifies the full quality print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fullQualityPrint\"] = 2048] = \"fullQualityPrint\";\n})(PdfPermissionFlag || (PdfPermissionFlag = {}));\n/**\n * Public enum to define the PDF page orientation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Get the page orientation\n * let orientation: PdfPageOrientation = page.orientation;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `portrait`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"portrait\"] = 0] = \"portrait\";\n    /**\n     * Specifies the type of `landscape`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"landscape\"] = 1] = \"landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * Public enum to define the text direction.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Load the font file\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(read('./resources/Fonts/', 'Arial.ttf'), 10);\n * // Add a string format\n * let format: PdfStringFormat = new PdfStringFormat();\n * format.alignment = PdfTextAlignment.right;\n * format.textDirection = PdfTextDirection.rightToLeft;\n * // Draw a text with right to left direction\n * page.graphics.drawString('Hello World مرحبا بالعالم', font, [10, 20, 300, 200], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfTextDirection[PdfTextDirection[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `leftToRight`.\n     */\n    PdfTextDirection[PdfTextDirection[\"leftToRight\"] = 1] = \"leftToRight\";\n    /**\n     * Specifies the type of `rightToLeft`.\n     */\n    PdfTextDirection[PdfTextDirection[\"rightToLeft\"] = 2] = \"rightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n/**\n * Public enum to define the subscript or superscript mode.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n * // Set a new paragraph indent\n * format.paragraphIndent = 20;\n * // Set the subscript or superscript mode\n * format.subSuperScript = PdfSubSuperScript.subScript;\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `superScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"superScript\"] = 1] = \"superScript\";\n    /**\n     * Specifies the type of `subScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"subScript\"] = 2] = \"subScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * Public enum to define blend mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the blend mode\n * graphics.setTransparency(0.5, 0.5, PdfBlendMode.hardLight);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `normal`.\n     */\n    PdfBlendMode[PdfBlendMode[\"normal\"] = 0] = \"normal\";\n    /**\n     * Specifies the type of `multiply`.\n     */\n    PdfBlendMode[PdfBlendMode[\"multiply\"] = 1] = \"multiply\";\n    /**\n     * Specifies the type of `screen`.\n     */\n    PdfBlendMode[PdfBlendMode[\"screen\"] = 2] = \"screen\";\n    /**\n     * Specifies the type of `overlay`.\n     */\n    PdfBlendMode[PdfBlendMode[\"overlay\"] = 3] = \"overlay\";\n    /**\n     * Specifies the type of `darken`.\n     */\n    PdfBlendMode[PdfBlendMode[\"darken\"] = 4] = \"darken\";\n    /**\n     * Specifies the type of `lighten`.\n     */\n    PdfBlendMode[PdfBlendMode[\"lighten\"] = 5] = \"lighten\";\n    /**\n     * Specifies the type of `colorDodge`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorDodge\"] = 6] = \"colorDodge\";\n    /**\n     * Specifies the type of `colorBurn`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorBurn\"] = 7] = \"colorBurn\";\n    /**\n     * Specifies the type of `hardLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hardLight\"] = 8] = \"hardLight\";\n    /**\n     * Specifies the type of `softLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"softLight\"] = 9] = \"softLight\";\n    /**\n     * Specifies the type of `difference`.\n     */\n    PdfBlendMode[PdfBlendMode[\"difference\"] = 10] = \"difference\";\n    /**\n     * Specifies the type of `exclusion`.\n     */\n    PdfBlendMode[PdfBlendMode[\"exclusion\"] = 11] = \"exclusion\";\n    /**\n     * Specifies the type of `hue`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hue\"] = 12] = \"hue\";\n    /**\n     * Specifies the type of `saturation`.\n     */\n    PdfBlendMode[PdfBlendMode[\"saturation\"] = 13] = \"saturation\";\n    /**\n     * Specifies the type of `color`.\n     */\n    PdfBlendMode[PdfBlendMode[\"color\"] = 14] = \"color\";\n    /**\n     * Specifies the type of `luminosity`.\n     */\n    PdfBlendMode[PdfBlendMode[\"luminosity\"] = 15] = \"luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * Public enum to define fill mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the fill mode\n * graphics.setClip([0, 0, 100, 100], PdfFillMode.winding);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `winding`.\n     */\n    PdfFillMode[PdfFillMode[\"winding\"] = 0] = \"winding\";\n    /**\n     * Specifies the type of `alternate`.\n     */\n    PdfFillMode[PdfFillMode[\"alternate\"] = 1] = \"alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * Public enum to define the dash style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfDashStyle[PdfDashStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dash`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dash\"] = 1] = \"dash\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dot\"] = 2] = \"dot\";\n    /**\n     * Specifies the type of `dashDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDot\"] = 3] = \"dashDot\";\n    /**\n     * Specifies the type of `dashDotDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDotDot\"] = 4] = \"dashDotDot\";\n    /**\n     * Specifies the type of `custom`.\n     */\n    PdfDashStyle[PdfDashStyle[\"custom\"] = 5] = \"custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * Public enum to define the line cap.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line cap\n * pen._lineCap = PdfLineCap.round;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `flat`.\n     */\n    PdfLineCap[PdfLineCap[\"flat\"] = 0] = \"flat\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineCap[PdfLineCap[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineCap[PdfLineCap[\"square\"] = 2] = \"square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * Public enum to define the line join.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line join\n * pen._lineJoin = PdfLineJoin.bevel;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `miter`.\n     */\n    PdfLineJoin[PdfLineJoin[\"miter\"] = 0] = \"miter\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineJoin[PdfLineJoin[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `bevel`.\n     */\n    PdfLineJoin[PdfLineJoin[\"bevel\"] = 2] = \"bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\nexport var _PdfWordWrapType;\n(function (_PdfWordWrapType) {\n    /**\n     * Specifies the type of `none`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `word`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"word\"] = 1] = \"word\";\n    /**\n     * Specifies the type of `wordOnly`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"wordOnly\"] = 2] = \"wordOnly\";\n    /**\n     * Specifies the type of `character`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"character\"] = 3] = \"character\";\n})(_PdfWordWrapType || (_PdfWordWrapType = {}));\nexport var _FontDescriptorFlag;\n(function (_FontDescriptorFlag) {\n    _FontDescriptorFlag[_FontDescriptorFlag[\"fixedPitch\"] = 1] = \"fixedPitch\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"serif\"] = 2] = \"serif\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"symbolic\"] = 4] = \"symbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"script\"] = 8] = \"script\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"nonSymbolic\"] = 32] = \"nonSymbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"italic\"] = 64] = \"italic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"forceBold\"] = 262144] = \"forceBold\";\n})(_FontDescriptorFlag || (_FontDescriptorFlag = {}));\nexport var _TrueTypeCmapFormat;\n(function (_TrueTypeCmapFormat) {\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"apple\"] = 0] = \"apple\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"microsoft\"] = 4] = \"microsoft\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"trimmed\"] = 6] = \"trimmed\";\n})(_TrueTypeCmapFormat || (_TrueTypeCmapFormat = {}));\nexport var _TrueTypeCmapEncoding;\n(function (_TrueTypeCmapEncoding) {\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unknown\"] = 0] = \"unknown\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"symbol\"] = 1] = \"symbol\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unicode\"] = 2] = \"unicode\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"macintosh\"] = 3] = \"macintosh\";\n})(_TrueTypeCmapEncoding || (_TrueTypeCmapEncoding = {}));\nexport var _TrueTypePlatformID;\n(function (_TrueTypePlatformID) {\n    _TrueTypePlatformID[_TrueTypePlatformID[\"appleUnicode\"] = 0] = \"appleUnicode\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"macintosh\"] = 1] = \"macintosh\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"iSO\"] = 2] = \"iSO\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"microsoft\"] = 3] = \"microsoft\";\n})(_TrueTypePlatformID || (_TrueTypePlatformID = {}));\nexport var _TrueTypeMicrosoftEncodingID;\n(function (_TrueTypeMicrosoftEncodingID) {\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"undefined\"] = 0] = \"undefined\";\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"unicode\"] = 1] = \"unicode\";\n})(_TrueTypeMicrosoftEncodingID || (_TrueTypeMicrosoftEncodingID = {}));\nexport var _TrueTypeMacintoshEncodingID;\n(function (_TrueTypeMacintoshEncodingID) {\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"roman\"] = 0] = \"roman\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"japanese\"] = 1] = \"japanese\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"chinese\"] = 2] = \"chinese\";\n})(_TrueTypeMacintoshEncodingID || (_TrueTypeMacintoshEncodingID = {}));\nexport var _TrueTypeCompositeGlyphFlag;\n(function (_TrueTypeCompositeGlyphFlag) {\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Reserved\"] = 16] = \"Reserved\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(_TrueTypeCompositeGlyphFlag || (_TrueTypeCompositeGlyphFlag = {}));\nexport var _ImageFormat;\n(function (_ImageFormat) {\n    /**\n     * Specifies the type of `unknown`.\n     */\n    _ImageFormat[_ImageFormat[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * Specifies the type of `bmp`.\n     */\n    _ImageFormat[_ImageFormat[\"bmp\"] = 1] = \"bmp\";\n    /**\n     * Specifies the type of `emf`.\n     */\n    _ImageFormat[_ImageFormat[\"emf\"] = 2] = \"emf\";\n    /**\n     * Specifies the type of `gif`.\n     */\n    _ImageFormat[_ImageFormat[\"gif\"] = 3] = \"gif\";\n    /**\n     * Specifies the type of `jpeg`.\n     */\n    _ImageFormat[_ImageFormat[\"jpeg\"] = 4] = \"jpeg\";\n    /**\n     * Specifies the type of `png`.\n     */\n    _ImageFormat[_ImageFormat[\"png\"] = 5] = \"png\";\n    /**\n     * Specifies the type of `wmf`.\n     */\n    _ImageFormat[_ImageFormat[\"wmf\"] = 6] = \"wmf\";\n    /**\n     * Specifies the type of `icon`.\n     */\n    _ImageFormat[_ImageFormat[\"icon\"] = 7] = \"icon\";\n})(_ImageFormat || (_ImageFormat = {}));\nexport var _TokenType;\n(function (_TokenType) {\n    _TokenType[_TokenType[\"none\"] = 0] = \"none\";\n    _TokenType[_TokenType[\"comment\"] = 1] = \"comment\";\n    _TokenType[_TokenType[\"number\"] = 2] = \"number\";\n    _TokenType[_TokenType[\"real\"] = 3] = \"real\";\n    _TokenType[_TokenType[\"string\"] = 4] = \"string\";\n    _TokenType[_TokenType[\"hexString\"] = 5] = \"hexString\";\n    _TokenType[_TokenType[\"unicodeString\"] = 6] = \"unicodeString\";\n    _TokenType[_TokenType[\"unicodeHexString\"] = 7] = \"unicodeHexString\";\n    _TokenType[_TokenType[\"name\"] = 8] = \"name\";\n    _TokenType[_TokenType[\"operator\"] = 9] = \"operator\";\n    _TokenType[_TokenType[\"beginArray\"] = 10] = \"beginArray\";\n    _TokenType[_TokenType[\"endArray\"] = 11] = \"endArray\";\n    _TokenType[_TokenType[\"eof\"] = 12] = \"eof\";\n})(_TokenType || (_TokenType = {}));\n/**\n * Public enum to define text style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets bookmark at the specified index\n * let bookmark : PdfBookMark = bookmarks.at(0) as PdfBookMark;\n * // Gets the textStyle\n * let textStyle: PdfTextStyle = bookmark.textStyle;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextStyle;\n(function (PdfTextStyle) {\n    /**\n     * Specifies the `regular` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the `italic` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"italic\"] = 1] = \"italic\";\n    /**\n     * Specifies the `bold` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"bold\"] = 2] = \"bold\";\n})(PdfTextStyle || (PdfTextStyle = {}));\nexport var _PdfColorSpace;\n(function (_PdfColorSpace) {\n    _PdfColorSpace[_PdfColorSpace[\"rgb\"] = 0] = \"rgb\";\n    _PdfColorSpace[_PdfColorSpace[\"cmyk\"] = 1] = \"cmyk\";\n    _PdfColorSpace[_PdfColorSpace[\"grayScale\"] = 2] = \"grayScale\";\n    _PdfColorSpace[_PdfColorSpace[\"indexed\"] = 3] = \"indexed\";\n})(_PdfColorSpace || (_PdfColorSpace = {}));\n","import { _escapePdfName } from './../utils';\nvar _PdfStreamWriter = /** @class */ (function () {\n    function _PdfStreamWriter(stream) {\n        this._newLine = '\\r\\n';\n        this._whiteSpace = ' ';\n        this._stream = stream;\n    }\n    _PdfStreamWriter.prototype._writeOperator = function (value) {\n        this._stream.write(value);\n        this._stream.write(this._newLine);\n    };\n    _PdfStreamWriter.prototype._saveGraphicsState = function () {\n        this._writeOperator('q');\n    };\n    _PdfStreamWriter.prototype._restoreGraphicsState = function () {\n        this._writeOperator('Q');\n    };\n    _PdfStreamWriter.prototype._writeComment = function (comment) {\n        if (comment && comment.length > 0) {\n            this._writeOperator('% ' + comment);\n        }\n    };\n    _PdfStreamWriter.prototype._setGraphicsState = function (value) {\n        this._stream.write(\"/\" + _escapePdfName(value.name) + \" \");\n        this._writeOperator('gs');\n    };\n    _PdfStreamWriter.prototype._modifyCtm = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('cm');\n    };\n    _PdfStreamWriter.prototype._modifyTM = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('Tm');\n    };\n    _PdfStreamWriter.prototype._setColorSpace = function (value, forStroking) {\n        this._stream.write(\"/\" + value + \" \");\n        this._writeOperator(forStroking ? 'CS' : 'cs');\n    };\n    _PdfStreamWriter.prototype._setColor = function (color, forStroking) {\n        this._stream.write((color[0] / 255).toFixed(3) + \" \" + (color[1] / 255).toFixed(3) + \" \" + (color[2] / 255).toFixed(3) + \" \");\n        this._writeOperator(forStroking ? 'RG' : 'rg');\n    };\n    _PdfStreamWriter.prototype._appendRectangle = function (x, y, width, height) {\n        this._writePoint(x, y);\n        this._writePoint(width, height);\n        this._writeOperator('re');\n    };\n    _PdfStreamWriter.prototype._writePoint = function (x, y) {\n        this._stream.write(x.toFixed(3) + \" \" + (-y).toFixed(3) + \" \");\n    };\n    _PdfStreamWriter.prototype._clipPath = function (isEvenOdd) {\n        this._stream.write((isEvenOdd ? 'W*' : 'W') + \" n\" + this._newLine);\n    };\n    _PdfStreamWriter.prototype._fillPath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'f*' : 'f');\n    };\n    _PdfStreamWriter.prototype._closeFillPath = function (isEvenOdd) {\n        this._writeOperator('h');\n        this._fillPath(isEvenOdd);\n    };\n    _PdfStreamWriter.prototype._strokePath = function () {\n        this._writeOperator('S');\n    };\n    _PdfStreamWriter.prototype._closeStrokePath = function () {\n        this._writeOperator('s');\n    };\n    _PdfStreamWriter.prototype._fillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'B*' : 'B');\n    };\n    _PdfStreamWriter.prototype._closeFillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'b*' : 'b');\n    };\n    _PdfStreamWriter.prototype._endPath = function () {\n        this._writeOperator('n');\n    };\n    _PdfStreamWriter.prototype._setFont = function (name, size) {\n        this._stream.write(\"/\" + name + \" \" + size.toFixed(3) + \" \");\n        this._writeOperator('Tf');\n    };\n    _PdfStreamWriter.prototype._setTextScaling = function (textScaling) {\n        this._stream.write(textScaling.toFixed(3) + \" \");\n        this._writeOperator('Tz');\n    };\n    _PdfStreamWriter.prototype._closePath = function () {\n        this._writeOperator('h');\n    };\n    _PdfStreamWriter.prototype._startNextLine = function (x, y) {\n        if (typeof x === 'undefined') {\n            this._writeOperator('T*');\n        }\n        else {\n            this._writePoint(x, y);\n            this._writeOperator('Td');\n        }\n    };\n    _PdfStreamWriter.prototype._showText = function (text) {\n        this._writeText(text);\n        this._writeOperator('Tj');\n    };\n    _PdfStreamWriter.prototype._write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += '\\r\\n';\n        this._writeOperator(builder);\n    };\n    _PdfStreamWriter.prototype._writeText = function (text) {\n        var result = '';\n        var data = this._escapeSymbols(text);\n        for (var i = 0; i < data.length; i++) {\n            result += String.fromCharCode(data[i]); // eslint-disable-line\n        }\n        result = '(' + result + ')';\n        this._stream.write(result);\n    };\n    _PdfStreamWriter.prototype._beginText = function () {\n        this._writeOperator('BT');\n    };\n    _PdfStreamWriter.prototype._endText = function () {\n        this._writeOperator('ET');\n    };\n    _PdfStreamWriter.prototype._beginPath = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('m');\n    };\n    _PdfStreamWriter.prototype._appendLineSegment = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('l');\n    };\n    _PdfStreamWriter.prototype._appendBezierSegment = function (x1, y1, x2, y2, x3, y3) {\n        this._writePoint(x1, y1);\n        this._writePoint(x2, y2);\n        this._writePoint(x3, y3);\n        this._writeOperator('c');\n    };\n    _PdfStreamWriter.prototype._setTextRenderingMode = function (renderingMode) {\n        this._stream.write(renderingMode.toString() + \" \");\n        this._writeOperator('Tr');\n    };\n    _PdfStreamWriter.prototype._setCharacterSpacing = function (charSpacing) {\n        this._stream.write(charSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tc');\n    };\n    _PdfStreamWriter.prototype._setWordSpacing = function (wordSpacing) {\n        this._stream.write(wordSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tw');\n    };\n    _PdfStreamWriter.prototype._showNextLineText = function (text, unicode) {\n        if (unicode !== null && typeof unicode !== 'undefined' && unicode) {\n            this._writeText(text);\n            this._writeOperator('\\'');\n        }\n        else {\n            this._stream.write(text);\n            this._writeOperator('\\'');\n        }\n    };\n    _PdfStreamWriter.prototype._setLineDashPattern = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString(); // eslint-disable-line\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' '; // eslint-disable-line\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' d';\n        this._writeOperator(tempPattern);\n    };\n    _PdfStreamWriter.prototype._setMiterLimit = function (miterLimit) {\n        this._stream.write(miterLimit.toFixed(3) + \" \");\n        this._writeOperator('M');\n    };\n    _PdfStreamWriter.prototype._setLineWidth = function (width) {\n        this._stream.write(width.toFixed(3) + \" \");\n        this._writeOperator('w');\n    };\n    _PdfStreamWriter.prototype._setLineCap = function (lineCapStyle) {\n        this._stream.write(lineCapStyle + \" \");\n        this._writeOperator('J');\n    };\n    _PdfStreamWriter.prototype._setLineJoin = function (lineJoinStyle) {\n        this._stream.write(lineJoinStyle + \" \");\n        this._writeOperator('j');\n    };\n    _PdfStreamWriter.prototype._executeObject = function (name) {\n        this._stream.write(\"/\" + name.name + \" \");\n        this._writeOperator('Do');\n    };\n    _PdfStreamWriter.prototype._beginMarkupSequence = function (name) {\n        this._stream.write(\"/\" + name + \" \");\n        this._writeOperator('BMC');\n    };\n    _PdfStreamWriter.prototype._endMarkupSequence = function () {\n        this._writeOperator('EMC');\n    };\n    _PdfStreamWriter.prototype._clear = function () {\n        this._stream._bytes = [];\n    };\n    _PdfStreamWriter.prototype._escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    return _PdfStreamWriter;\n}());\nexport { _PdfStreamWriter };\n","import { PdfSubSuperScript, _PdfWordWrapType } from './../enumerator';\n/**\n * Represents the text layout information.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        this.horizontalScalingFactor = 100.0;\n        this.rightToLeft = false;\n        this._wordWrapType = _PdfWordWrapType.word;\n        this.lineLimit = true;\n        if (typeof arg1 !== 'undefined') {\n            this.alignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.lineAlignment = arg2;\n        }\n        else {\n            this.lineAlignment = PdfVerticalAlignment.top;\n        }\n        this.characterSpacing = 0;\n        this.wordSpacing = 0;\n        this.lineSpacing = 0;\n        this.clipPath = false;\n        this.firstLineIndent = 0;\n        this._internalParagraphIndent = 0;\n        this.measureTrailingSpaces = false;\n        this.noClip = false;\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets the paragraph indent from string format.\n         *\n         * @returns {number} Returns the paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Get the default paragraph indent\n         * let paragraph: number = format.paragraphIndent;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._internalParagraphIndent;\n        },\n        /**\n         * Sets the paragraph indent to string format.\n         *\n         * @param {number} value paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets the subscript or superscript mode from string format.\n         *\n         * @returns {PdfSubSuperScript} Returns the subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Get the subscript or superscript mode\n         * let script: PdfSubSuperScript = format.subSuperScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pdfSubSuperScript === 'undefined' || this._pdfSubSuperScript === null) {\n                return PdfSubSuperScript.none;\n            }\n            else {\n                return this._pdfSubSuperScript;\n            }\n        },\n        /**\n         * Sets the subscript or superscript mode to string format.\n         *\n         * @param {PdfSubSuperScript} value subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Set the subscript or superscript mode\n         * format.subSuperScript = PdfSubSuperScript.subScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"_wordWrap\", {\n        get: function () {\n            return this._wordWrapType;\n        },\n        set: function (value) {\n            this._wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n/**\n * Public enum to define vertical alignment.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.top);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"top\"] = 0] = \"top\";\n    /**\n     * Specifies the type of `middle`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"middle\"] = 1] = \"middle\";\n    /**\n     * Specifies the type of `bottom`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"bottom\"] = 2] = \"bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfSubSuperScript } from './../enumerator';\nvar _PdfFontMetrics = /** @class */ (function () {\n    function _PdfFontMetrics() {\n        this._lineGap = 0;\n    }\n    _PdfFontMetrics.prototype._getAscent = function (format) {\n        return this._ascent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getDescent = function (format) {\n        return this._descent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getLineGap = function (format) {\n        return this._lineGap * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            clearTypeFontCollection.push(clearTypeFonts[Number.parseInt(index.toString(), 10)]);\n        }\n        if (this._getDescent(format) < 0) {\n            height = (this._getAscent(format) - this._getDescent(format) + this._getLineGap(format));\n        }\n        else {\n            height = (this._getAscent(format) + this._getDescent(format) + this._getLineGap(format));\n        }\n        return height;\n    };\n    _PdfFontMetrics.prototype._getSize = function (format) {\n        var size = this._size;\n        if (format !== null && typeof format !== 'undefined') {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.subScript:\n                    size /= this._subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.superScript:\n                    size /= this._superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    return _PdfFontMetrics;\n}());\nexport { _PdfFontMetrics };\nvar _WidthTable = /** @class */ (function () {\n    function _WidthTable() {\n    }\n    return _WidthTable;\n}());\nexport { _WidthTable };\nvar _StandardWidthTable = /** @class */ (function (_super) {\n    __extends(_StandardWidthTable, _super);\n    function _StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        _this.widths = widths;\n        return _this;\n    }\n    _StandardWidthTable.prototype._itemAt = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('The character is not supported by the font.');\n        }\n        return this.widths[Number.parseInt(index.toString(), 10)];\n    };\n    _StandardWidthTable.prototype._toArray = function () {\n        return this.widths;\n    };\n    return _StandardWidthTable;\n}(_WidthTable));\nexport { _StandardWidthTable };\nvar _CjkWidthTable = /** @class */ (function (_super) {\n    __extends(_CjkWidthTable, _super);\n    function _CjkWidthTable(defaultWidth) {\n        var _this = _super.call(this) || this;\n        _this._defaultWidth = defaultWidth;\n        _this.widths = [];\n        return _this;\n    }\n    _CjkWidthTable.prototype._itemAt = function (index) {\n        var width = this._defaultWidth;\n        this.widths.forEach(function (entry) {\n            if (index >= entry._from && index <= entry._to) {\n                width = entry._itemAt(index);\n            }\n        });\n        return width;\n    };\n    _CjkWidthTable.prototype._toArray = function () {\n        var array = [];\n        this.widths.forEach(function (width) {\n            width._appendToArray(array);\n        });\n        return array;\n    };\n    _CjkWidthTable.prototype._add = function (width) {\n        this.widths.push(width);\n    };\n    return _CjkWidthTable;\n}(_WidthTable));\nexport { _CjkWidthTable };\nvar _CjkWidth = /** @class */ (function () {\n    function _CjkWidth() {\n    }\n    return _CjkWidth;\n}());\nexport { _CjkWidth };\nvar _CjkSameWidth = /** @class */ (function (_super) {\n    __extends(_CjkSameWidth, _super);\n    function _CjkSameWidth(from, to, width) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widthTo = to;\n        _this._width = width;\n        return _this;\n    }\n    Object.defineProperty(_CjkSameWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkSameWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthTo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkSameWidth.prototype._itemAt = function (index) {\n        if (index < this._from || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._width;\n    };\n    _CjkSameWidth.prototype._appendToArray = function (array) {\n        array.push(this._from, this._to, this._width);\n    };\n    return _CjkSameWidth;\n}(_CjkWidth));\nexport { _CjkSameWidth };\nvar _CjkDifferentWidth = /** @class */ (function (_super) {\n    __extends(_CjkDifferentWidth, _super);\n    function _CjkDifferentWidth(from, widths) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widths = widths;\n        return _this;\n    }\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthFrom + this._widths.length - 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkDifferentWidth.prototype._itemAt = function (index) {\n        if (index < this._widthFrom || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._widths[Number.parseInt(index.toString(), 10)];\n    };\n    _CjkDifferentWidth.prototype._appendToArray = function (array) {\n        array.push(this._from);\n        array.forEach(function (entry) {\n            array.push(entry);\n        });\n    };\n    return _CjkDifferentWidth;\n}(_CjkWidth));\nexport { _CjkDifferentWidth };\n","import { _PdfWordWrapType } from './../enumerator';\nvar _PdfStringLayouter = /** @class */ (function () {\n    function _PdfStringLayouter() {\n    }\n    _PdfStringLayouter.prototype._layout = function (text, font, format, size) {\n        this._initialize(text, font, format, size);\n        var result = this._doLayout();\n        this._clear();\n        return result;\n    };\n    _PdfStringLayouter.prototype._initialize = function (text, font, format, size) {\n        this._font = font;\n        this._format = format;\n        this._size = size;\n        this._rectangle = [0, 0, size[0], size[1]];\n        this._reader = new _StringTokenizer(text);\n        this._pageHeight = 0;\n    };\n    _PdfStringLayouter.prototype._clear = function () {\n        this._font = null;\n        this._format = null;\n        this._reader._close();\n        this._reader = null;\n    };\n    _PdfStringLayouter.prototype._doLayout = function () {\n        var result = new _PdfStringLayoutResult();\n        var lineResult = new _PdfStringLayoutResult();\n        var lines = [];\n        var line = this._reader._peekLine();\n        var lineIndent = this._getLineIndent(true);\n        while (line !== null) {\n            lineResult = this._layoutLine(line, lineIndent);\n            if (typeof lineResult !== 'undefined' && lineResult !== null) {\n                var numSymbolsInserted = 0;\n                var returnedValue = this._copyToResult(result, lineResult, lines, numSymbolsInserted);\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.flag;\n                if (!success) {\n                    this._reader._read(numSymbolsInserted);\n                    break;\n                }\n            }\n            this._reader._readLine();\n            line = this._reader._peekLine();\n            lineIndent = this._getLineIndent(false);\n        }\n        this._finalizeResult(result, lines);\n        return result;\n    };\n    _PdfStringLayouter.prototype._getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this._format) {\n            lineIndent = (firstLine) ? this._format.firstLineIndent : this._format.paragraphIndent;\n            lineIndent = (this._size[0] > 0) ? Math.min(this._size[0], lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    _PdfStringLayouter.prototype._getLineHeight = function () {\n        var height = this._font._metrics._getHeight();\n        if (this._format && this._format.lineSpacing !== 0) {\n            height = this._format.lineSpacing + this._font._metrics._getHeight();\n        }\n        return height;\n    };\n    _PdfStringLayouter.prototype._getLineWidth = function (line) {\n        return this._font.getLineWidth(line, this._format);\n    };\n    _PdfStringLayouter.prototype._layoutLine = function (line, lineIndent) {\n        var lineResult = new _PdfStringLayoutResult();\n        lineResult._lineHeight = this._getLineHeight();\n        var lines = [];\n        var maxWidth = this._size[0];\n        var lineWidth = this._getLineWidth(line) + lineIndent;\n        var lineType = _LineType.firstParagraphLine;\n        var readWord = true;\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this._addToLineResult(lineResult, lines, line, lineWidth, _LineType.newLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new _StringTokenizer(line);\n            var word = reader._peekWord();\n            if (word.length !== reader._length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader._position += 1;\n                    word = reader._peekWord();\n                }\n            }\n            while (word !== null) {\n                curLine = curLine + word;\n                var curLineWidth = this._getLineWidth(curLine.toString()) + curIndent;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this._getWrapType() === _PdfWordWrapType.none) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        if (this._getWrapType() === _PdfWordWrapType.wordOnly) {\n                            lineResult._remainder = line.substring(reader._position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader._peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this._getLineWidth(word.toString()) > maxWidth) {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.character;\n                            }\n                        }\n                        else {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.word;\n                            }\n                        }\n                        if (this._getWrapType() !== _PdfWordWrapType.character || !readWord) {\n                            var stringValue = builder.toString();\n                            if (stringValue !== ' ') {\n                                this._addToLineResult(lineResult, lines, stringValue, lineWidth, _LineType.layoutBreak | lineType);\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = _LineType.none;\n                            word = (readWord) ? word : reader._peekWord();\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader._peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader._readWord();\n                    word = reader._peekWord();\n                }\n                else {\n                    reader._read();\n                    word = reader._peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                this._addToLineResult(lineResult, lines, builder.toString(), lineWidth, _LineType.newLineBreak | _LineType.lastParagraphLine);\n            }\n            reader._close();\n        }\n        lineResult._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        lines = [];\n        return lineResult;\n    };\n    _PdfStringLayouter.prototype._addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new _LineInfo();\n        info._text = line;\n        info._width = lineWidth;\n        info._lineType = breakType;\n        lines.push(info);\n        var size = lineResult._actualSize;\n        size[1] = size[1] + this._getLineHeight();\n        size[0] = Math.max(size[0], lineWidth);\n        lineResult._size = size;\n    };\n    _PdfStringLayouter.prototype._copyToResult = function (result, lineResult, lines, flag) {\n        var success = true;\n        var allowPartialLines = (this._format && !this._format.lineLimit);\n        var height = result._actualSize[1];\n        var maxHeight = this._size[1];\n        if ((this._pageHeight > 0) && (maxHeight + this._rectangle[1] > this._pageHeight)) {\n            maxHeight = this._rectangle[1] - this._pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        flag = 0;\n        if (lineResult._lines !== null) {\n            for (var i = 0, len = lineResult._lines.length; i < len; i++) {\n                var expHeight = height + lineResult._lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult._lines[i]; // eslint-disable-line\n                    flag += info._text.length;\n                    info = this._trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    var size = result._actualSize;\n                    size[0] = Math.max(size[0], info._width);\n                    result._size = size;\n                    height = expHeight;\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height !== result._size[1]) {\n            result._size = [result._actualSize[0], height];\n        }\n        return { success: success, flag: flag };\n    };\n    _PdfStringLayouter.prototype._finalizeResult = function (result, lines) {\n        result._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        result._lineHeight = this._getLineHeight();\n        if (!this._reader._end) {\n            result._remainder = this._reader._readToEnd();\n        }\n        lines = [];\n    };\n    _PdfStringLayouter.prototype._trimLine = function (info, firstLine) {\n        var line = info._text.trim();\n        var lineWidth = info._width;\n        if (line.length !== info._text.length) {\n            lineWidth = this._getLineWidth(line);\n            if ((info._lineType & _LineType.firstParagraphLine) > 0) {\n                lineWidth += this._getLineIndent(firstLine);\n            }\n        }\n        info._text = line;\n        info._width = lineWidth;\n        return info;\n    };\n    _PdfStringLayouter.prototype._getWrapType = function () {\n        var wrapType = (this._format !== null && typeof this._format !== 'undefined') ?\n            this._format._wordWrap : _PdfWordWrapType.word;\n        return wrapType;\n    };\n    return _PdfStringLayouter;\n}());\nexport { _PdfStringLayouter };\nvar _PdfStringLayoutResult = /** @class */ (function () {\n    function _PdfStringLayoutResult() {\n    }\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_actualSize\", {\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                this._size = [0, 0];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lines\", {\n        get: function () {\n            return this._layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_empty\", {\n        get: function () {\n            return (this._layoutLines === null || this._layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lineCount\", {\n        get: function () {\n            return (!this._empty) ? this._layoutLines.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _PdfStringLayoutResult;\n}());\nexport { _PdfStringLayoutResult };\nvar _LineInfo = /** @class */ (function () {\n    function _LineInfo() {\n    }\n    return _LineInfo;\n}());\nexport { _LineInfo };\nexport var _LineType;\n(function (_LineType) {\n    _LineType[_LineType[\"none\"] = 0] = \"none\";\n    _LineType[_LineType[\"newLineBreak\"] = 1] = \"newLineBreak\";\n    _LineType[_LineType[\"layoutBreak\"] = 2] = \"layoutBreak\";\n    _LineType[_LineType[\"firstParagraphLine\"] = 4] = \"firstParagraphLine\";\n    _LineType[_LineType[\"lastParagraphLine\"] = 8] = \"lastParagraphLine\";\n})(_LineType || (_LineType = {}));\nvar _StringTokenizer = /** @class */ (function () {\n    function _StringTokenizer(textValue) {\n        this._position = 0;\n        if (typeof textValue === 'undefined' || textValue === null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this._text = textValue;\n    }\n    Object.defineProperty(_StringTokenizer.prototype, \"_length\", {\n        get: function () {\n            return this._text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_StringTokenizer.prototype, \"_end\", {\n        get: function () {\n            return (this._position === this._text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _StringTokenizer.prototype._readLine = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekLine = function () {\n        var position = this._position;\n        var line = this._readLine();\n        this._position = position;\n        return line;\n    };\n    _StringTokenizer.prototype._readWord = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position - this._position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n                case ' ':\n                case '\\t':\n                    if (position === this._position) {\n                        position++;\n                    }\n                    text = this._text.substring(this._position, position);\n                    this._position = position;\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekWord = function () {\n        var position = this._position;\n        var word = this._readWord();\n        this._position = position;\n        return word;\n    };\n    _StringTokenizer.prototype._read = function (count) {\n        if (typeof count === 'undefined') {\n            var character = '0';\n            if (!this._end) {\n                character = this._text[this._position];\n                this._position++;\n            }\n            return character;\n        }\n        else {\n            var value = 0;\n            var builder = '';\n            while (!this._end && value < count) {\n                builder += this._read();\n                value++;\n            }\n            return builder;\n        }\n    };\n    _StringTokenizer.prototype._peek = function () {\n        return this._end ? '0' : this._text[this._position];\n    };\n    _StringTokenizer.prototype._close = function () {\n        this._text = null;\n    };\n    _StringTokenizer.prototype._readToEnd = function () {\n        var text;\n        if (this._position === 0) {\n            text = this._text;\n        }\n        else {\n            text = this._text.substring(this._position);\n        }\n        this._position = this._length;\n        return text;\n    };\n    _StringTokenizer._whiteSpace = ' ';\n    _StringTokenizer._tab = '\\t';\n    _StringTokenizer._spaces = [_StringTokenizer._whiteSpace, _StringTokenizer._tab];\n    return _StringTokenizer;\n}());\nexport { _StringTokenizer };\n","var _TrueTypeTableInfo = /** @class */ (function () {\n    function _TrueTypeTableInfo() {\n    }\n    Object.defineProperty(_TrueTypeTableInfo.prototype, \"_empty\", {\n        get: function () {\n            var empty = (this._offset === this._length && this._length === this._checksum && this._checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeTableInfo;\n}());\nexport { _TrueTypeTableInfo };\nvar _TrueTypeOS2Table = /** @class */ (function () {\n    function _TrueTypeOS2Table() {\n    }\n    return _TrueTypeOS2Table;\n}());\nexport { _TrueTypeOS2Table };\nvar _TrueTypePostTable = /** @class */ (function () {\n    function _TrueTypePostTable() {\n    }\n    return _TrueTypePostTable;\n}());\nexport { _TrueTypePostTable };\nvar _TrueTypeNameTable = /** @class */ (function () {\n    function _TrueTypeNameTable() {\n    }\n    return _TrueTypeNameTable;\n}());\nexport { _TrueTypeNameTable };\nvar _TrueTypeMicrosoftCmapSubTable = /** @class */ (function () {\n    function _TrueTypeMicrosoftCmapSubTable() {\n    }\n    return _TrueTypeMicrosoftCmapSubTable;\n}());\nexport { _TrueTypeMicrosoftCmapSubTable };\nvar _TrueTypeHorizontalHeaderTable = /** @class */ (function () {\n    function _TrueTypeHorizontalHeaderTable() {\n    }\n    return _TrueTypeHorizontalHeaderTable;\n}());\nexport { _TrueTypeHorizontalHeaderTable };\nvar _TrueTypeHeadTable = /** @class */ (function () {\n    function _TrueTypeHeadTable() {\n    }\n    return _TrueTypeHeadTable;\n}());\nexport { _TrueTypeHeadTable };\nvar _TrueTypeCmapTable = /** @class */ (function () {\n    function _TrueTypeCmapTable() {\n    }\n    return _TrueTypeCmapTable;\n}());\nexport { _TrueTypeCmapTable };\nvar _TrueTypeCmapSubTable = /** @class */ (function () {\n    function _TrueTypeCmapSubTable() {\n    }\n    return _TrueTypeCmapSubTable;\n}());\nexport { _TrueTypeCmapSubTable };\nvar _TrueTypeAppleCmapSubTable = /** @class */ (function () {\n    function _TrueTypeAppleCmapSubTable() {\n    }\n    return _TrueTypeAppleCmapSubTable;\n}());\nexport { _TrueTypeAppleCmapSubTable };\nvar _TrueTypeTrimmedCmapSubTable = /** @class */ (function () {\n    function _TrueTypeTrimmedCmapSubTable() {\n    }\n    return _TrueTypeTrimmedCmapSubTable;\n}());\nexport { _TrueTypeTrimmedCmapSubTable };\n","import { _TrueTypeTableInfo, _TrueTypeHorizontalHeaderTable, _TrueTypeNameTable, _TrueTypeHeadTable, _TrueTypeOS2Table, _TrueTypePostTable, _TrueTypeCmapSubTable, _TrueTypeCmapTable, _TrueTypeAppleCmapSubTable, _TrueTypeMicrosoftCmapSubTable, _TrueTypeTrimmedCmapSubTable } from './ttf-table';\nimport { Dictionary } from '../pdf-primitives';\nimport { _StringTokenizer } from './string-layouter';\nimport { _TrueTypeCmapFormat, _TrueTypeCmapEncoding, _TrueTypePlatformID, _TrueTypeMicrosoftEncodingID, _TrueTypeMacintoshEncodingID, _TrueTypeCompositeGlyphFlag } from '../../core/enumerator';\nvar _TrueTypeReader = /** @class */ (function () {\n    function _TrueTypeReader(fontData) {\n        this._int32Size = 4;\n        this._isFont = false;\n        this._isMacTtf = false;\n        this._isMacFont = false;\n        this._missedGlyphs = 0;\n        this._tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this._entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this._fontData = fontData;\n        this._initialize();\n    }\n    Object.defineProperty(_TrueTypeReader.prototype, \"macintosh\", {\n        get: function () {\n            if (this._macintoshDictionary === null || typeof this._macintoshDictionary === 'undefined') {\n                this._macintoshDictionary = new Dictionary();\n            }\n            return this._macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoft\", {\n        get: function () {\n            if (this._microsoftDictionary === null || typeof this._microsoftDictionary === 'undefined') {\n                this._microsoftDictionary = new Dictionary();\n            }\n            return this._microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_macintoshGlyphs\", {\n        get: function () {\n            if (this._internalMacintoshGlyphs === null || typeof this._internalMacintoshGlyphs === 'undefined') {\n                this._internalMacintoshGlyphs = new Dictionary();\n            }\n            return this._internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoftGlyphs\", {\n        get: function () {\n            if (this._internalMicrosoftGlyphs === null || typeof this._internalMicrosoftGlyphs === 'undefined') {\n                this._internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this._internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _TrueTypeReader.prototype._initialize = function () {\n        if (typeof this._metrics === 'undefined' || this._metrics === null) {\n            this._metrics = new _TrueTypeMetrics();\n        }\n        this._readFontDictionary();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._initializeFontName(nameTable);\n        this._metrics._macStyle = headTable._macStyle;\n    };\n    _TrueTypeReader.prototype._readFontDictionary = function () {\n        this._offset = 0;\n        this._check();\n        var table = this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        if (typeof this._tableDirectory === 'undefined' || this._tableDirectory === null) {\n            this._tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < table; ++i) {\n            var table_1 = new _TrueTypeTableInfo();\n            var tableKey = this._readString(this._int32Size);\n            table_1._checksum = this._readInt32(this._offset);\n            table_1._offset = this._readInt32(this._offset);\n            table_1._length = this._readInt32(this._offset);\n            this._tableDirectory.setValue(tableKey, table_1);\n        }\n        this._lowestPosition = this._offset;\n        if (!this._isFont) {\n            this._fixOffsets();\n        }\n    };\n    _TrueTypeReader.prototype._fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        var tableKeys = this._tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n            var offset = value._offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this._lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this._lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n                value._offset -= shift;\n                table.setValue(tableKeys[Number.parseInt(i.toString(), 10)], value);\n            }\n            this._tableDirectory = table;\n        }\n    };\n    _TrueTypeReader.prototype._check = function () {\n        var version = this._readInt32(this._offset);\n        this._isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this._isFont = true;\n            this._offset = 0;\n            var fontTag = this._readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset += 4;\n            var ttcIdentificationNumber = this._readInt32(this._offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset = this._readInt32(this._offset);\n            version = this._readInt32(this._offset);\n        }\n        return version;\n    };\n    _TrueTypeReader.prototype._readNameTable = function () {\n        var tableInfo = this._getTable('name');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeNameTable();\n        table._formatSelector = this._readUInt16(this._offset);\n        table._recordsCount = this._readUInt16(this._offset);\n        table._offset = this._readUInt16(this._offset);\n        table._nameRecords = [];\n        var recordSize = 12;\n        var position = this._offset;\n        for (var i = 0; i < table._recordsCount; i++) {\n            this._offset = position;\n            var record = new _TrueTypeNameRecord();\n            record._platformID = this._readUInt16(this._offset);\n            record._encodingID = this._readUInt16(this._offset);\n            record._languageID = this._readUInt16(this._offset);\n            record._nameID = this._readUInt16(this._offset);\n            record._length = this._readUInt16(this._offset);\n            record._offset = this._readUInt16(this._offset);\n            this._offset = tableInfo._offset + table._offset + record._offset;\n            var unicode = (record._platformID === 0 || record._platformID === 3);\n            record._name = this._readString(record._length, unicode);\n            table._nameRecords[Number.parseInt(i.toString(), 10)] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readHeadTable = function () {\n        var tableInfo = this._getTable('head');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHeadTable();\n        table._version = this._readFixed(this._offset);\n        table._fontRevision = this._readFixed(this._offset);\n        table._checkSumAdjustment = this._readUInt32(this._offset);\n        table._magicNumber = this._readUInt32(this._offset);\n        table._flags = this._readUInt16(this._offset);\n        table._unitsPerEm = this._readUInt16(this._offset);\n        table._created = this._readInt64(this._offset);\n        table._modified = this._readInt64(this._offset);\n        table._xMin = this._readInt16(this._offset);\n        table._yMin = this._readInt16(this._offset);\n        table._xMax = this._readInt16(this._offset);\n        table._yMax = this._readInt16(this._offset);\n        table._macStyle = this._readUInt16(this._offset);\n        table._lowestReadableSize = this._readUInt16(this._offset);\n        table._fontDirectionHint = this._readInt16(this._offset);\n        table._indexToLocalFormat = this._readInt16(this._offset);\n        table._glyphDataFormat = this._readInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readHorizontalHeaderTable = function () {\n        var tableInfo = this._getTable('hhea');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHorizontalHeaderTable();\n        table._version = this._readFixed(this._offset);\n        table._ascender = this._readInt16(this._offset);\n        table._descender = this._readInt16(this._offset);\n        table._lineGap = this._readInt16(this._offset);\n        table._advanceWidthMax = this._readUInt16(this._offset);\n        table._minLeftSideBearing = this._readInt16(this._offset);\n        table._minRightSideBearing = this._readInt16(this._offset);\n        table._xMaxExtent = this._readInt16(this._offset);\n        table._caretSlopeRise = this._readInt16(this._offset);\n        table._caretSlopeRun = this._readInt16(this._offset);\n        this._offset += 10;\n        table._metricDataFormat = this._readInt16(this._offset);\n        table._numberOfHMetrics = this._readUInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readOS2Table = function () {\n        var tableInfo = this._getTable('OS/2');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeOS2Table();\n        table._version = this._readUInt16(this._offset);\n        table._xAvgCharWidth = this._readInt16(this._offset);\n        table._usWeightClass = this._readUInt16(this._offset);\n        table._usWidthClass = this._readUInt16(this._offset);\n        table._fsType = this._readInt16(this._offset);\n        table._ySubscriptXSize = this._readInt16(this._offset);\n        table._ySubscriptYSize = this._readInt16(this._offset);\n        table._ySubscriptXOffset = this._readInt16(this._offset);\n        table._ySubscriptYOffset = this._readInt16(this._offset);\n        table._ySuperscriptXSize = this._readInt16(this._offset);\n        table._ySuperscriptYSize = this._readInt16(this._offset);\n        table._ySuperscriptXOffset = this._readInt16(this._offset);\n        table._ySuperscriptYOffset = this._readInt16(this._offset);\n        table._yStrikeoutSize = this._readInt16(this._offset);\n        table._yStrikeoutPosition = this._readInt16(this._offset);\n        table._sFamilyClass = this._readInt16(this._offset);\n        table._panose = this._readBytes(10);\n        table._ulUnicodeRange1 = this._readUInt32(this._offset);\n        table._ulUnicodeRange2 = this._readUInt32(this._offset);\n        table._ulUnicodeRange3 = this._readUInt32(this._offset);\n        table._ulUnicodeRange4 = this._readUInt32(this._offset);\n        table._vendorIdentifier = this._readBytes(4);\n        table._fsSelection = this._readUInt16(this._offset);\n        table._usFirstCharIndex = this._readUInt16(this._offset);\n        table._usLastCharIndex = this._readUInt16(this._offset);\n        table._sTypoAscender = this._readInt16(this._offset);\n        table._sTypoDescender = this._readInt16(this._offset);\n        table._sTypoLineGap = this._readInt16(this._offset);\n        table._usWinAscent = this._readUInt16(this._offset);\n        table._usWinDescent = this._readUInt16(this._offset);\n        table._ulCodePageRange1 = this._readUInt32(this._offset);\n        table._ulCodePageRange2 = this._readUInt32(this._offset);\n        if (table._version > 1) {\n            table._sxHeight = this._readInt16(this._offset);\n            table._sCapHeight = this._readInt16(this._offset);\n            table._usDefaultChar = this._readUInt16(this._offset);\n            table._usBreakChar = this._readUInt16(this._offset);\n            table._usMaxContext = this._readUInt16(this._offset);\n        }\n        else {\n            table._sxHeight = 0;\n            table._sCapHeight = 0;\n            table._usDefaultChar = 0;\n            table._usBreakChar = 0;\n            table._usMaxContext = 0;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readPostTable = function () {\n        var tableInfo = this._getTable('post');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypePostTable();\n        table._formatType = this._readFixed(this._offset);\n        table._italicAngle = this._readFixed(this._offset);\n        table._underlinePosition = this._readInt16(this._offset);\n        table._underlineThickness = this._readInt16(this._offset);\n        table._isFixedPitch = this._readUInt32(this._offset);\n        table._minType42 = this._readUInt32(this._offset);\n        table._maxType42 = this._readUInt32(this._offset);\n        table._minType1 = this._readUInt32(this._offset);\n        table._maxType1 = this._readUInt32(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this._getTable('hmtx');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new _TrueTypeLongHorMetric();\n            glyph._advanceWidth = this._readUInt16(this._offset);\n            glyph._lsb = this._readInt16(this._offset);\n            var glyphWidth = glyph._advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    _TrueTypeReader.prototype._readCmapTable = function () {\n        var tableInfo = this._getTable('cmap');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeCmapTable();\n        table._version = this._readUInt16(this._offset);\n        table._tablesCount = this._readUInt16(this._offset);\n        var position = this._offset;\n        var subTables = [];\n        for (var i = 0; i < table._tablesCount; i++) {\n            this._offset = position;\n            var subTable = new _TrueTypeCmapSubTable();\n            subTable._platformID = this._readUInt16(this._offset);\n            subTable._encodingID = this._readUInt16(this._offset);\n            subTable._offset = this._readUInt32(this._offset);\n            position = this._offset;\n            this._readCmapSubTable(subTable);\n            subTables[Number.parseInt(i.toString(), 10)] = subTable;\n        }\n        return subTables;\n    };\n    _TrueTypeReader.prototype._readCmapSubTable = function (subTable) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var format = this._readUInt16(this._offset);\n        var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n        if (encoding !== _TrueTypeCmapEncoding.unknown) {\n            switch (format) {\n                case _TrueTypeCmapFormat.apple:\n                    this._readAppleCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.microsoft:\n                    this._readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.trimmed:\n                    this._readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeAppleCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        if (this._maxMacIndex === null || typeof this._maxMacIndex === 'undefined') {\n            this._maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readByte(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var collection = (encoding === _TrueTypeCmapEncoding.unicode) ? this._microsoft\n            : this.macintosh;\n        var table = new _TrueTypeMicrosoftCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._segCountX2 = this._readUInt16(this._offset);\n        table._searchRange = this._readUInt16(this._offset);\n        table._entrySelector = this._readUInt16(this._offset);\n        table._rangeShift = this._readUInt16(this._offset);\n        var segCount = table._segCountX2 / 2;\n        table._endCount = this._readUShortArray(segCount);\n        table._reservedPad = this._readUInt16(this._offset);\n        table._startCount = this._readUShortArray(segCount);\n        table._idDelta = this._readUShortArray(segCount);\n        table._idRangeOffset = this._readUShortArray(segCount);\n        var length = (table._length / 2 - 8) - (segCount * 4);\n        table._glyphID = this._readUShortArray(length);\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table._startCount[Number.parseInt(j.toString(), 10)]; k <=\n                table._endCount[Number.parseInt(j.toString(), 10)] && k !== 65535; k++) {\n                if (table._idRangeOffset[Number.parseInt(j.toString(), 10)] === 0) {\n                    codeOffset = (k + table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                else {\n                    index = j + table._idRangeOffset[Number.parseInt(j.toString(), 10)] / 2 - segCount +\n                        k - table._startCount[Number.parseInt(j.toString(), 10)];\n                    if (index >= table._glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table._glyphID[Number.parseInt(index.toString(), 10)] +\n                        table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                var glyph = new _TrueTypeGlyph();\n                glyph._index = codeOffset;\n                glyph._width = this._getWidth(glyph._index);\n                var id = (encoding === _TrueTypeCmapEncoding.symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph._charCode = id;\n                collection.setValue(id, glyph);\n                this._addGlyph(glyph, encoding);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeTrimmedCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._firstCode = this._readUInt16(this._offset);\n        table._entryCount = this._readUInt16(this._offset);\n        for (var i = 0; i < table._entryCount; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readUInt16(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i + table._firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable._recordsCount; i++) {\n            var record = nameTable._nameRecords[Number.parseInt(i.toString(), 10)];\n            if (record._nameID === 1) {\n                this._metrics._fontFamily = record._name;\n            }\n            else if (record._nameID === 6) {\n                this._metrics._postScriptName = record._name;\n            }\n            if (this._metrics._fontFamily !== null && this._metrics._fontFamily !== 'undefined' &&\n                this._metrics._postScriptName !== null && this._metrics._postScriptName !== 'undefined') {\n                break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._getTable = function (name) {\n        var table = new _TrueTypeTableInfo();\n        var obj;\n        if (this._tableDirectory.containsKey(name)) {\n            obj = this._tableDirectory.getValue(name);\n        }\n        if (obj !== null && typeof obj !== 'undefined') {\n            table = obj;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this._width.length) ? glyphCode : this._width.length - 1;\n        return this._width[Number.parseInt(glyphCode.toString(), 10)];\n    };\n    _TrueTypeReader.prototype._getCmapEncoding = function (platformID, encodingID) {\n        var format = _TrueTypeCmapEncoding.unknown;\n        if (platformID === _TrueTypePlatformID.microsoft &&\n            encodingID === _TrueTypeMicrosoftEncodingID.undefined) {\n            format = _TrueTypeCmapEncoding.symbol;\n        }\n        else if (platformID === _TrueTypePlatformID.microsoft\n            && encodingID === _TrueTypeMicrosoftEncodingID.unicode) {\n            format = _TrueTypeCmapEncoding.unicode;\n        }\n        else if (platformID === _TrueTypePlatformID.macintosh\n            && encodingID === _TrueTypeMacintoshEncodingID.roman) {\n            format = _TrueTypeCmapEncoding.macintosh;\n        }\n        return format;\n    };\n    _TrueTypeReader.prototype._addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case _TrueTypeCmapEncoding.unicode:\n                collection = this._microsoftGlyphs;\n                break;\n            case _TrueTypeCmapEncoding.macintosh:\n            case _TrueTypeCmapEncoding.symbol:\n                collection = this._macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph._index, glyph);\n    };\n    _TrueTypeReader.prototype._initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        this._initializeFontName(nameTable);\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[Number.parseInt(i.toString(), 10)];\n            var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n            if (encoding === _TrueTypeCmapEncoding.symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this._metrics._isSymbol = bSymbol;\n        this._metrics._macStyle = headTable._macStyle;\n        this._metrics._isFixedPitch = (postTable._isFixedPitch !== 0);\n        this._metrics._italicAngle = postTable._italicAngle;\n        var factor = 1000 / headTable._unitsPerEm;\n        this._metrics._winAscent = os2Table._sTypoAscender * factor;\n        this._metrics._macAscent = horizontalHeadTable._ascender * factor;\n        this._metrics._capHeight = (os2Table._sCapHeight !== 0) ? os2Table._sCapHeight : 0.7 * headTable._unitsPerEm * factor;\n        this._metrics._winDescent = os2Table._sTypoDescender * factor;\n        this._metrics._macDescent = horizontalHeadTable._descender * factor;\n        this._metrics._leading = (os2Table._sTypoAscender - os2Table._sTypoDescender + os2Table._sTypoLineGap) * factor;\n        this._metrics._lineGap = Math.ceil(horizontalHeadTable._lineGap * factor);\n        var left = headTable._xMin * factor;\n        var top = Math.ceil(this._metrics._macAscent + this._metrics._lineGap);\n        var right = headTable._xMax * factor;\n        var bottom = this._metrics._macDescent;\n        this._metrics._fontBox = [left, top, right, bottom];\n        this._metrics._stemV = 80;\n        this._metrics._widthTable = this._updateWidth();\n        this._metrics._contains = this._tableDirectory.containsKey('CFF');\n        this._metrics._subScriptSizeFactor = headTable._unitsPerEm / os2Table._ySubscriptYSize;\n        this._metrics._superscriptSizeFactor = headTable._unitsPerEm / os2Table._ySuperscriptYSize;\n    };\n    _TrueTypeReader.prototype._updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this._metrics._isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this._getGlyph(String.fromCharCode(Number.parseInt(i.toString(), 10)));\n                bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = Number.parseInt(i.toString(), 10);\n                var text = this._getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    bytes[Number.parseInt(i.toString(), 10)] = glyphInfo._width;\n                }\n                else {\n                    glyphInfo = this._getGlyph(space);\n                    bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n                }\n            }\n        }\n        return bytes;\n    };\n    _TrueTypeReader.prototype._getDefaultGlyph = function () {\n        var glyph = this._getGlyph(_StringTokenizer._whiteSpace);\n        return glyph;\n    };\n    _TrueTypeReader.prototype._getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._setOffset = function (offset) {\n        this._offset = offset;\n    };\n    _TrueTypeReader.prototype._readFontProgram = function (chars) {\n        var glyphChars = this._getGlyphChars(chars);\n        var locaTable = this._readLocaTable(this._bIsLocaShort);\n        if (glyphChars && glyphChars._size() < chars._size()) {\n            this._missedGlyphs = chars._size() - glyphChars._size();\n        }\n        this._updateGlyphChars(glyphChars, locaTable);\n        var result1 = this._generateGlyphTable(glyphChars, locaTable, null, null);\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this._updateLocaTable(newLocaTable, this._bIsLocaShort);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this._getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    _TrueTypeReader.prototype._generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        newLocaTable = [];\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[Number.parseInt(i.toString(), 10)];\n            if (locaTable._offsets.length > 0) {\n                glyphSize += locaTable._offsets[glyphIndex + 1] - locaTable._offsets[Number.parseInt(glyphIndex.toString(), 10)];\n            }\n        }\n        var glyphSizeAligned = this._align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this._getTable('glyf');\n        for (var i = 0; i < locaTable._offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[Number.parseInt(nextGlyphIndex.toString(), 10)] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[Number.parseInt(i.toString(), 10)] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable._offsets[Number.parseInt(i.toString(), 10)];\n                var oldNextGlyphOffset = locaTable._offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this._offset = table._offset + oldGlyphOffset;\n                    var result = this._read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    _TrueTypeReader.prototype._readLocaTable = function (bShort) {\n        var tableInfo = this._getTable('loca');\n        this._offset = tableInfo._offset;\n        var table = new _TrueTypeLocaTable();\n        var buffer = [];\n        if (bShort) {\n            var len = tableInfo._length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo._length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt32(this._offset);\n            }\n        }\n        table._offsets = buffer;\n        return table;\n    };\n    _TrueTypeReader.prototype._updateGlyphChars = function (glyphChars, locaTable) {\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[Number.parseInt(i.toString(), 10)], glyphChars.getValue(glyphCharKeys[Number.parseInt(i.toString(), 10)]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[Number.parseInt(i.toString(), 10)];\n            this._processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    _TrueTypeReader.prototype._processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        if (glyph < locaTable._offsets.length - 1) {\n            var glyphOffset = locaTable._offsets[Number.parseInt(glyph.toString(), 10)];\n            if (glyphOffset !== locaTable._offsets[glyph + 1]) {\n                var tableInfo = this._getTable('glyf');\n                this._offset = tableInfo._offset + glyphOffset;\n                var glyphHeader = new _TrueTypeGlyphHeader();\n                glyphHeader.numberOfContours = this._readInt16(this._offset);\n                glyphHeader.xMin = this._readInt16(this._offset);\n                glyphHeader.yMin = this._readInt16(this._offset);\n                glyphHeader.xMax = this._readInt16(this._offset);\n                glyphHeader.yMax = this._readInt16(this._offset);\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this._readUInt16(this._offset);\n                        var glyphIndex = this._readUInt16(this._offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & _TrueTypeCompositeGlyphFlag.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & _TrueTypeCompositeGlyphFlag.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this._offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._updateLocaTable = function (newLocaTable, bLocaIsShort) {\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this._align(size);\n        var writer = new _BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[Number.parseInt(i.toString(), 10)];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer._writeShort(value);\n            }\n            else {\n                writer._writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer._data, newLocaSize: size };\n    };\n    _TrueTypeReader.prototype._align = function (value) {\n        return (value + 3) & (~3);\n    };\n    _TrueTypeReader.prototype._getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        var result = this._getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var table = result.table;\n        var writer = new _BigEndianWriter(fontProgramLength);\n        writer._writeInt(0x10000);\n        writer._writeShort(table);\n        var entrySelector = this._entrySelectors[Number.parseInt(table.toString(), 10)];\n        writer._writeShort((1 << (entrySelector & 31)) * 16);\n        writer._writeShort(entrySelector);\n        writer._writeShort((table - (1 << (entrySelector & 31))) * 16);\n        this._writeCheckSums(writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        this._writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer._data;\n    };\n    _TrueTypeReader.prototype._getFontProgramLength = function (newLocaTableOut, newGlyphTable, table) {\n        var fontProgramLength = 0;\n        if (newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' && newLocaTableOut.length > 0 &&\n            newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            table = 2;\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                if (tableName !== 'glyf' && tableName !== 'loca') {\n                    var tableInfo = this._getTable(tableName);\n                    if (!tableInfo._empty) {\n                        ++table;\n                        fontProgramLength += this._align(tableInfo._length);\n                    }\n                }\n            }\n            fontProgramLength += newLocaTableOut.length;\n            fontProgramLength += newGlyphTable.length;\n            var usedTablesSize = table * 16 + (3 * 4);\n            fontProgramLength += usedTablesSize;\n        }\n        return { fontProgramLength: fontProgramLength, table: table };\n    };\n    _TrueTypeReader.prototype._getGlyphChars = function (chars) {\n        var dictionary = new Dictionary();\n        if (chars !== null && typeof chars !== 'undefined') {\n            var charKeys = chars.keys();\n            for (var i = 0; i < charKeys.length; i++) {\n                var ch = charKeys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._getGlyph(ch);\n                if (!glyph._empty) {\n                    dictionary.setValue(glyph._index, ch.charCodeAt(0));\n                }\n            }\n        }\n        return dictionary;\n    };\n    _TrueTypeReader.prototype._writeCheckSums = function (writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' &&\n            newLocaTableOut.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            var usedTablesSize = table * 16 + (3 * 4);\n            var nextTableSize = 0;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                writer._writeString(tableName);\n                if (tableName === 'glyf') {\n                    var checksum = this._calculateCheckSum(newGlyphTable);\n                    writer._writeInt(checksum);\n                    nextTableSize = glyphTableSize;\n                }\n                else if (tableName === 'loca') {\n                    var checksum = this._calculateCheckSum(newLocaTableOut);\n                    writer._writeInt(checksum);\n                    nextTableSize = locaTableSize;\n                }\n                else {\n                    writer._writeInt(tableInfo._checksum);\n                    nextTableSize = tableInfo._length;\n                }\n                writer._writeUInt(usedTablesSize);\n                writer._writeUInt(nextTableSize);\n                usedTablesSize += this._align(nextTableSize);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._calculateCheckSum = function (bytes) {\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        var result = 0;\n        if (bytes !== null && typeof bytes !== 'undefined' && bytes.length > 0) {\n            for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n                byte4 += (bytes[pos++] & 255);\n                byte3 += (bytes[pos++] & 255);\n                byte2 += (bytes[pos++] & 255);\n                byte1 += (bytes[pos++] & 255);\n            }\n            result = byte1;\n            result += (byte2 << 8);\n            result += (byte3 << 16);\n            result += (byte4 << 24);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTable !== null && typeof newLocaTable !== 'undefined' &&\n            newLocaTable.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                if (tableName === 'glyf') {\n                    writer._writeBytes(newGlyphTable);\n                }\n                else if (tableName === 'loca') {\n                    writer._writeBytes(newLocaTable);\n                }\n                else {\n                    var count = this._align(tableInfo._length);\n                    var buff = [];\n                    for (var i_1 = 0; i_1 < count; i_1++) {\n                        buff.push(0);\n                    }\n                    this._offset = tableInfo._offset;\n                    var result = this._read(buff, 0, tableInfo._length);\n                    writer._writeBytes(result.buffer);\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._read = function (buffer, index, count) {\n        var written = 0;\n        if (buffer !== null && typeof buffer !== 'undefined' && buffer.length > 0) {\n            var read = 0;\n            do {\n                for (var i = 0; (i < count - written) && (this._offset + i < this._fontData.length); i++) {\n                    buffer[index + i] = this._fontData[this._offset + i];\n                }\n                read = count - written;\n                this._offset += read;\n                written += read;\n            } while (written < count);\n        }\n        return { buffer: buffer, written: written };\n    };\n    _TrueTypeReader.prototype._createInternals = function () {\n        this._metrics = new _TrueTypeMetrics();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._bIsLocaShort = (headTable._indexToLocalFormat === 0);\n        var horizontalHeadTable = this._readHorizontalHeaderTable();\n        var os2Table = this._readOS2Table();\n        var postTable = this._readPostTable();\n        this._width = this._readWidthTable(horizontalHeadTable._numberOfHMetrics, headTable._unitsPerEm);\n        var subTables = this._readCmapTable();\n        this._initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    _TrueTypeReader.prototype._getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this._metrics._isSymbol && this._microsoftGlyphs !== null) {\n                if (this._microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this._microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this._metrics._isSymbol && this._macintoshGlyphs !== null) {\n                if (this._macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this._macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 !== null) ? obj1 : this._getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this._metrics._isSymbol && this._microsoft !== null) {\n                if (this._microsoft.containsKey(code)) {\n                    obj = this._microsoft.getValue(code);\n                    if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                        this._isFontPresent = true;\n                    }\n                }\n                else if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                    this._isFontPresent = false;\n                }\n            }\n            else if (this._metrics._isSymbol && this.macintosh !== null || this._isMacFont) {\n                if (this._maxMacIndex !== 0) {\n                    code %= this._maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this._isFontPresent = true;\n                }\n            }\n            if (charCode === _StringTokenizer._whiteSpace && obj === null) {\n                obj = new _TrueTypeGlyph();\n            }\n            var glyph = (obj !== null) ? obj : this._getDefaultGlyph();\n            return glyph;\n        }\n    };\n    _TrueTypeReader.prototype._readString = function (length, isUnicode) {\n        if (typeof isUnicode === 'undefined' || isUnicode === null) {\n            return this._readString(length, false);\n        }\n        else {\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this._fontData[this._offset]);\n                    }\n                    this._offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this._fontData[this._offset]);\n                    this._offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    _TrueTypeReader.prototype._readFixed = function (offset) {\n        var integer = this._readInt16(offset);\n        var sFraction = this._readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    _TrueTypeReader.prototype._readInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    _TrueTypeReader.prototype._readUInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    _TrueTypeReader.prototype._readInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) +\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readInt64 = function (offset) {\n        var low = this._readInt32(offset + 4);\n        var n = this._readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    _TrueTypeReader.prototype._readUInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) |\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readUShortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset);\n        }\n        return buffer;\n    };\n    _TrueTypeReader.prototype._readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this._fontData[Number.parseInt(this._offset.toString(), 10)]);\n            this._offset += 1;\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._readByte = function (offset) {\n        var result = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 1;\n        return result;\n    };\n    _TrueTypeReader.prototype._getCharacterWidth = function (code) {\n        var glyphInfo = this._getGlyph(code);\n        glyphInfo = (!glyphInfo._empty) ? glyphInfo : this._getDefaultGlyph();\n        var codeWidth = (!glyphInfo._empty) ? glyphInfo._width : 0;\n        return codeWidth;\n    };\n    _TrueTypeReader.prototype._convertString = function (text) {\n        var glyph = '';\n        if (text !== null && text !== undefined && text.length > 0) {\n            for (var k = 0; k < text.length; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    glyph += String.fromCharCode(glyphInfo._index);\n                }\n            }\n        }\n        return glyph;\n    };\n    return _TrueTypeReader;\n}());\nexport { _TrueTypeReader };\nvar _TrueTypeNameRecord = /** @class */ (function () {\n    function _TrueTypeNameRecord() {\n    }\n    return _TrueTypeNameRecord;\n}());\nexport { _TrueTypeNameRecord };\nvar _TrueTypeMetrics = /** @class */ (function () {\n    function _TrueTypeMetrics() {\n    }\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isItalic\", {\n        get: function () {\n            return ((this._macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isBold\", {\n        get: function () {\n            return ((this._macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeMetrics;\n}());\nexport { _TrueTypeMetrics };\nvar _TrueTypeLongHorMetric = /** @class */ (function () {\n    function _TrueTypeLongHorMetric() {\n    }\n    return _TrueTypeLongHorMetric;\n}());\nexport { _TrueTypeLongHorMetric };\nvar _TrueTypeGlyph = /** @class */ (function () {\n    function _TrueTypeGlyph() {\n    }\n    Object.defineProperty(_TrueTypeGlyph.prototype, \"_empty\", {\n        get: function () {\n            return (this._index === this._width && this._width === this._charCode && this._charCode === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeGlyph;\n}());\nexport { _TrueTypeGlyph };\nvar _TrueTypeLocaTable = /** @class */ (function () {\n    function _TrueTypeLocaTable() {\n    }\n    return _TrueTypeLocaTable;\n}());\nexport { _TrueTypeLocaTable };\nvar _TrueTypeGlyphHeader = /** @class */ (function () {\n    function _TrueTypeGlyphHeader() {\n    }\n    return _TrueTypeGlyphHeader;\n}());\nexport { _TrueTypeGlyphHeader };\nvar _BigEndianWriter = /** @class */ (function () {\n    function _BigEndianWriter(capacity) {\n        this.int32Size = 4;\n        this.int16Size = 2;\n        this.int64Size = 8;\n        this._bufferLength = capacity;\n        this._buffer = [];\n    }\n    Object.defineProperty(_BigEndianWriter.prototype, \"_data\", {\n        get: function () {\n            if (this._buffer.length < this._bufferLength) {\n                var length_1 = this._bufferLength - this._buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this._buffer.push(0);\n                }\n            }\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_BigEndianWriter.prototype, \"_position\", {\n        get: function () {\n            if (typeof this._internalPosition === 'undefined' || this._internalPosition === null) {\n                this._internalPosition = 0;\n            }\n            return this._internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _BigEndianWriter.prototype._writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeInt = function (value) {\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(buff);\n    };\n    _BigEndianWriter.prototype._writeString = function (value) {\n        if (value !== null && typeof value !== 'undefined') {\n            var bytes = [];\n            for (var i = 0; i < value.length; i++) {\n                bytes.push(value.charCodeAt(i));\n            }\n            this._flush(bytes);\n        }\n    };\n    _BigEndianWriter.prototype._writeBytes = function (value) {\n        this._flush(value);\n    };\n    _BigEndianWriter.prototype._flush = function (buff) {\n        if (buff !== null && typeof buff !== 'undefined') {\n            var position = this._position;\n            for (var i = 0; i < buff.length; i++) {\n                this._buffer[Number.parseInt(position.toString(), 10)] = buff[Number.parseInt(i.toString(), 10)];\n                position++;\n            }\n            this._internalPosition += buff.length;\n        }\n    };\n    return _BigEndianWriter;\n}());\nexport { _BigEndianWriter };\n","import { _TrueTypeReader } from './ttf-reader';\nimport { _PdfDictionary, _PdfName, Dictionary } from './../pdf-primitives';\nimport { _PdfFontMetrics } from './pdf-font-metrics';\nimport { _StandardWidthTable } from './pdf-font-metrics';\nimport { _FontDescriptorFlag } from '../enumerator';\nimport { _decode } from '../utils';\nimport { _PdfStream } from './../base-stream';\nvar _UnicodeTrueTypeFont = /** @class */ (function () {\n    function _UnicodeTrueTypeFont(base64String, size) {\n        this._nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        this._isEmbedFont = false;\n        this._cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + '\\r\\n' + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 beginCodeSpacerange' + '\\r\\n';\n        this._cmapEndCodeSpaceRange = 'endCodeSpacerange' + '\\r\\n';\n        this._cmapBeginRange = 'beginbfrange' + '\\r\\n';\n        this._cmapEndRange = 'endbfrange' + '\\r\\n';\n        this._cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + '\\r\\n';\n        if (base64String === null || typeof base64String === 'undefined') {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this._fontSize = size;\n        this._fontString = base64String;\n        this._Initialize();\n    }\n    _UnicodeTrueTypeFont.prototype._beginSave = function () {\n        this._descendantFontBeginSave();\n        this._cmapBeginSave();\n        this._fontDictionaryBeginSave();\n        this._fontProgramBeginSave();\n        if (this._fontDescriptor) {\n            this._fontDescriptor.update('FontFile2', this._fontProgram);\n            this._fontDescriptor._updated = true;\n            this._fontDescriptor._isFont = true;\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._descendantFontBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var width = this._getDescendantWidth(); // eslint-disable-line\n            if (width !== null) {\n                this._descendantFont.set('W', width);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._fontDictionaryBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            this._fontDictionary.update('ToUnicode', this._cmap);\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._Initialize = function () {\n        var byteArray = _decode(this._fontString);\n        this._fontData = byteArray;\n        this._ttfReader = new _TrueTypeReader(this._fontData);\n        this._ttfMetrics = this._ttfReader._metrics;\n    };\n    _UnicodeTrueTypeFont.prototype._createInternals = function () {\n        this._fontDictionary = new _PdfDictionary();\n        this._descendantFont = new _PdfDictionary();\n        this._metrics = new _PdfFontMetrics();\n        this._ttfReader._createInternals();\n        this._usedChars = null;\n        var data = []; // eslint-disable-line\n        this._fontProgram = new _PdfStream(data, new _PdfDictionary());\n        this._cmap = new _PdfStream(data, new _PdfDictionary());\n        this._ttfMetrics = this._ttfReader._metrics;\n        this._initializeMetrics();\n        this._subsetName = this._getFontName();\n        this._createDescendantFont();\n        this._createFontDictionary();\n    };\n    _UnicodeTrueTypeFont.prototype._getInternals = function () {\n        return this._fontDictionary;\n    };\n    _UnicodeTrueTypeFont.prototype._initializeMetrics = function () {\n        var ttfMetrics = this._ttfReader._metrics;\n        this._metrics._ascent = ttfMetrics._macAscent;\n        this._metrics._descent = ttfMetrics._macDescent;\n        this._metrics._height = ttfMetrics._macAscent - ttfMetrics._macDescent + ttfMetrics._lineGap;\n        this._metrics._name = ttfMetrics._fontFamily;\n        this._metrics._postScriptName = ttfMetrics._postScriptName;\n        this._metrics._size = this._fontSize;\n        this._metrics._widthTable = new _StandardWidthTable(ttfMetrics._widthTable);\n        this._metrics._lineGap = ttfMetrics._lineGap;\n        this._metrics._subScriptSizeFactor = ttfMetrics._subScriptSizeFactor;\n        this._metrics._superscriptSizeFactor = ttfMetrics._superscriptSizeFactor;\n        this._metrics._isBold = ttfMetrics._isBold;\n    };\n    _UnicodeTrueTypeFont.prototype._getFontName = function () {\n        var builder = '';\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this._nameString[Number.parseInt(index.toString(), 10)];\n        }\n        builder += '+';\n        builder += this._ttfReader._metrics._postScriptName;\n        return builder.toString();\n    };\n    _UnicodeTrueTypeFont.prototype._createDescendantFont = function () {\n        this._descendantFont = new _PdfDictionary();\n        this._descendantFont._updated = true;\n        this._descendantFont.set('Type', new _PdfName('Font'));\n        this._descendantFont.set('Subtype', new _PdfName('CIDFontType2'));\n        this._descendantFont.set('BaseFont', new _PdfName(this._subsetName));\n        this._descendantFont.set('CIDToGIDMap', new _PdfName('Identity'));\n        this._descendantFont.set('DW', 1000);\n        this._fontDescriptor = this._createFontDescriptor();\n        this._descendantFont.set('FontDescriptor', this._fontDescriptor);\n        var systemInfo = this._createSystemInfo();\n        this._descendantFont.set('CIDSystemInfo', systemInfo);\n        this._descendantFont._isFont = true;\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDescriptor = function () {\n        var descriptor = new _PdfDictionary();\n        var metrics = this._ttfReader._metrics;\n        descriptor.set('Type', new _PdfName('FontDescriptor'));\n        descriptor.set('FontName', new _PdfName(this._subsetName));\n        descriptor.set('Flags', this._getDescriptorFlags());\n        descriptor.set('FontBBox', this._getBoundBox());\n        descriptor.set('MissingWidth', metrics._widthTable[32]);\n        descriptor.set('StemV', metrics._stemV);\n        descriptor.set('ItalicAngle', metrics._italicAngle);\n        descriptor.set('CapHeight', metrics._capHeight);\n        descriptor.set('Ascent', metrics._winAscent);\n        descriptor.set('Descent', metrics._winDescent);\n        descriptor.set('Leading', metrics._leading);\n        descriptor.set('AvgWidth', metrics._widthTable[32]);\n        descriptor.set('MaxWidth', metrics._widthTable[32]);\n        descriptor.set('XHeight', 0);\n        descriptor.set('StemH', 0);\n        descriptor._updated = true;\n        return descriptor;\n    };\n    _UnicodeTrueTypeFont.prototype._generateFontProgram = function () {\n        var fontProgram = [];\n        this._usedChars = (this._usedChars === null || typeof this._usedChars === 'undefined') ? new Dictionary()\n            : this._usedChars;\n        this._ttfReader._setOffset(0);\n        fontProgram = this._ttfReader._readFontProgram(this._usedChars);\n        this._fontProgram._clearStream();\n        this._fontProgram._writeBytes(fontProgram);\n    };\n    _UnicodeTrueTypeFont.prototype._getBoundBox = function () {\n        var rect = this._ttfReader._metrics._fontBox;\n        var width = Math.abs(rect[2] - rect[0]);\n        var height = Math.abs(rect[1] - rect[3]);\n        var rectangle = [rect[0], rect[3], width, height];\n        return rectangle;\n    };\n    _UnicodeTrueTypeFont.prototype._cmapBeginSave = function () {\n        this._generateCmap();\n    };\n    _UnicodeTrueTypeFont.prototype._fontProgramBeginSave = function () {\n        this._generateFontProgram();\n    };\n    _UnicodeTrueTypeFont.prototype._toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    _UnicodeTrueTypeFont.prototype._generateCmap = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphChars = this._ttfReader._getGlyphChars(this._usedChars);\n            if (glyphChars._size() > 0) {\n                var keys = glyphChars.keys().sort();\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this._toHexString(first, false) + this._toHexString(last, false) + '\\r\\n';\n                var builder = '';\n                builder += this._cmapPrefix;\n                builder += middlePart;\n                builder += this._cmapEndCodeSpaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this._cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += ' ';\n                        builder += this._cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    builder += this._toHexString(key, true) + this._toHexString(key, true);\n                    builder += this._toHexString(glyphChars.getValue(key), true) + '\\n';\n                }\n                builder += this._cmapSuffix;\n                this._cmap._clearStream();\n                this._cmap._write(builder);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDictionary = function () {\n        this._fontDictionary._updated = true;\n        this._fontDictionary.set('Type', _PdfName.get('Font'));\n        this._fontDictionary.set('Subtype', _PdfName.get('Type0'));\n        this._fontDictionary.set('BaseFont', new _PdfName(this._subsetName));\n        this._fontDictionary.set('Encoding', _PdfName.get('Identity-H'));\n        this._fontDictionary.set('DescendantFonts', this._descendantFont);\n        this._fontDictionary._isFont = true;\n        this._fontDictionary._currentObj = this;\n    };\n    _UnicodeTrueTypeFont.prototype._createSystemInfo = function () {\n        var systemInfo = new _PdfDictionary();\n        systemInfo._updated = true;\n        systemInfo.set('Registry', 'Adobe');\n        systemInfo.set('Ordering', 'Identity');\n        systemInfo.set('Supplement', 0);\n        return systemInfo;\n    };\n    _UnicodeTrueTypeFont.prototype._getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this._ttfReader._metrics;\n        if (metrics._isFixedPitch) {\n            flags |= _FontDescriptorFlag.fixedPitch;\n        }\n        if (metrics._isSymbol) {\n            flags |= _FontDescriptorFlag.symbolic;\n        }\n        else {\n            flags |= _FontDescriptorFlag.nonSymbolic;\n        }\n        if (metrics._isItalic) {\n            flags |= _FontDescriptorFlag.italic;\n        }\n        if (metrics._isBold) {\n            flags |= _FontDescriptorFlag.forceBold;\n        }\n        return flags;\n    };\n    _UnicodeTrueTypeFont.prototype._getCharacterWidth = function (charCode) {\n        var codeWidth = this._ttfReader._getCharacterWidth(charCode);\n        return codeWidth;\n    };\n    _UnicodeTrueTypeFont.prototype._setSymbols = function (text) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._usedChars === null || typeof this._usedChars === 'undefined') {\n                this._usedChars = new Dictionary();\n            }\n            for (var i = 0; i < text.length; i++) {\n                var ch = text[Number.parseInt(i.toString(), 10)];\n                this._usedChars.setValue(ch, String.fromCharCode(0));\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._getDescendantWidth = function () {\n        var array = new Array(); // eslint-disable-line\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphInfo = [];\n            var keys = this._usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._ttfReader._getGlyph(chLen);\n                glyphInfo.push(glyph);\n            }\n            glyphInfo.sort(function (a, b) { return a._index - b._index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new Array(); // eslint-disable-line\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[Number.parseInt(i.toString(), 10)];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph._index;\n                    lastGlyphIndex = glyph._index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph._index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    array.push(Number(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.push(widthDetails);\n                    }\n                    firstGlyphIndex = glyph._index;\n                    widthDetails = new Array(); // eslint-disable-line\n                }\n                widthDetails.push(Number(glyph._width));\n                if ((i + 1) === glyphInfo.length) {\n                    array.push(Number(firstGlyphIndex));\n                    array.push(widthDetails);\n                }\n                lastGlyphIndex = glyph._index;\n            }\n        }\n        return array;\n    };\n    return _UnicodeTrueTypeFont;\n}());\nexport { _UnicodeTrueTypeFont };\n","var _ArabicShapeRenderer = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'ArabicShapeRenderer' class.\n     *\n     * @private\n     */\n    function _ArabicShapeRenderer() {\n        this._arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'], ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'], ['\\u0625', '\\uFE87', '\\uFE88'], ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'], ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'], ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'], ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'], ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'], ['\\u062F', '\\uFEA9', '\\uFEAA'], ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'], ['\\u0632', '\\uFEAF', '\\uFEB0'], ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'], ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'], ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'], ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'], ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'], ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'], ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'], ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'], ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'], ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'], ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'], ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'], ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'], ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'], ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'], ['\\u0688', '\\uFB88', '\\uFB89'], ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'], ['\\u068E', '\\uFB86', '\\uFB87'], ['\\u0691', '\\uFB8C', '\\uFB8D'], ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'], ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'], ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'], ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'], ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'], ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'], ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'], ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'], ['\\u06C7', '\\uFBD7', '\\uFBD8'], ['\\u06C8', '\\uFBDB', '\\uFBDC'], ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'], ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'], ['\\u06D2', '\\uFBAE', '\\uFBAF'], ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this._alef = '\\u0627';\n        this._alefHamza = '\\u0623';\n        this._alefHamzaBelow = '\\u0625';\n        this._alefMadda = '\\u0622';\n        this._lam = '\\u0644';\n        this._hamza = '\\u0621';\n        this._zeroWidthJoiner = '\\u200D';\n        this._hamzaAbove = '\\u0654';\n        this._hamzaBelow = '\\u0655';\n        this._wawHamza = '\\u0624';\n        this._yehHamza = '\\u0626';\n        this._waw = '\\u0648';\n        this._alefsura = '\\u0649';\n        this._yeh = '\\u064A';\n        this._farsiYeh = '\\u06CC';\n        this._shadda = '\\u0651';\n        this._madda = '\\u0653';\n        this._lwa = '\\uFEFB';\n        this._lwawh = '\\uFEF7';\n        this._lwawhb = '\\uFEF9';\n        this._lwawm = '\\uFEF5';\n        this._bwhb = '\\u06D3';\n        this._fathatan = '\\u064B';\n        this._superalef = '\\u0670';\n        this._vowel = 0x1;\n        this._arabicMapTable = new Map();\n        for (var i = 0; i < this._arabicCharTable.length; i++) {\n            this._arabicMapTable.set(this._arabicCharTable[Number.parseInt(i.toString(), 10)][0], this._arabicCharTable[Number.parseInt(i.toString(), 10)]);\n        }\n    }\n    _ArabicShapeRenderer.prototype._getCharacterShape = function (input, index) {\n        if ((input >= this._hamza) && (input <= this._bwhb)) {\n            var value = [];\n            if (this._arabicMapTable.get(input)) {\n                value = this._arabicMapTable.get(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this._lwawm && input <= this._lwa) {\n            return (input);\n        }\n        return input;\n    };\n    _ArabicShapeRenderer.prototype._shape = function (text) {\n        var builder = '';\n        var value = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[Number.parseInt(i.toString(), 10)];\n            if (c >= '؀' && c <= 'ۿ') {\n                value = value + c;\n            }\n            else {\n                if (value.length > 0) {\n                    var shapeText = this._doShape(value.toString(), 0);\n                    builder = builder + shapeText;\n                    value = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (value.length > 0) {\n            var shapeText = this._doShape(value.toString(), 0);\n            builder = builder + shapeText;\n        }\n        return builder.toString();\n    };\n    _ArabicShapeRenderer.prototype._doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new _ArabicShape();\n        var present = new _ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this._ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this._getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous._shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present._shapes);\n                present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n                str = this._append(str, previous, level);\n                previous = present;\n                present = new _ArabicShape();\n                present._shapeValue = next;\n                present._shapes = shapeCount;\n                present._shapeLigature++;\n            }\n        }\n        len = (previous._shapes > 2) ? 1 : 0;\n        len = len % (present._shapes);\n        present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n        str = this._append(str, previous, level);\n        str = this._append(str, present, level);\n        return str.toString();\n    };\n    _ArabicShapeRenderer.prototype._append = function (builder, shape, level) {\n        if (shape._shapeValue !== '') {\n            builder = builder + shape._shapeValue;\n            shape._shapeLigature -= 1;\n            if (shape._shapeType !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeType;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n            if (shape._shapeVowel !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeVowel;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    _ArabicShapeRenderer.prototype._ligature = function (value, shape) {\n        if (shape._shapeValue !== '') {\n            var result = 0;\n            if ((value >= this._fathatan && value <= this._hamzaBelow) || value === this._superalef) {\n                result = 1;\n                if ((shape._shapeVowel !== '') && (value !== this._shadda)) {\n                    result = 2;\n                }\n                if (value === this._shadda) {\n                    if (shape._shapeType === '') {\n                        shape._shapeType = this._shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this._hamzaBelow) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaBelow;\n                    }\n                }\n                else if (value === this._hamzaAbove) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawh;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._waw) {\n                        shape._shapeValue = this._wawHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._yeh || shape._shapeValue === this._alefsura ||\n                        shape._shapeValue === this._farsiYeh) {\n                        shape._shapeValue = this._yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaAbove;\n                    }\n                }\n                else if (value === this._madda) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape._shapeVowel = value;\n                }\n                if (result === 1) {\n                    shape._shapeLigature++;\n                }\n                return result;\n            }\n            if (shape._shapeVowel !== '') {\n                return 0;\n            }\n            if (shape._shapeValue === this._lam) {\n                if (value === this._alef) {\n                    shape._shapeValue = this._lwa;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamza) {\n                    shape._shapeValue = this._lwawh;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamzaBelow) {\n                    shape._shapeValue = this._lwawhb;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefMadda) {\n                    shape._shapeValue = this._lwawm;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n            }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    _ArabicShapeRenderer.prototype._getShapeCount = function (shape) {\n        if ((shape >= this._hamza) && (shape <= this._bwhb) && !((shape >= this._fathatan && shape <= this._hamzaBelow)\n            || shape === this._superalef)) {\n            var c = [];\n            if (this._arabicMapTable.get(shape)) {\n                c = this._arabicMapTable.get(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this._zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return _ArabicShapeRenderer;\n}());\nexport { _ArabicShapeRenderer };\nvar _ArabicShape = /** @class */ (function () {\n    function _ArabicShape() {\n        this._shapeValue = '';\n        this._shapeType = '';\n        this._shapeVowel = '';\n        this._shapeLigature = 0;\n        this._shapes = 1;\n    }\n    return _ArabicShape;\n}());\nexport { _ArabicShape };\n","import { Dictionary } from './../../pdf-primitives';\nvar _Bidirectional = /** @class */ (function () {\n    /**\n     * Creates a new instance of the `_Bidirectional` class.\n     *\n     * @private\n     */\n    function _Bidirectional() {\n        this._indexes = [];\n        this._indexLevels = [];\n        this._mirroringShape = new Dictionary();\n        this._update();\n    }\n    _Bidirectional.prototype._doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this._indexLevels[Number.parseInt(i.toString(), 10)] & 1) === 1)\n                && this._mirroringShape.containsKey(text[Number.parseInt(i.toString(), 10)].charCodeAt(0))) {\n                var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n                result[Number.parseInt(i.toString(), 10)] = String.fromCharCode(this._mirroringShape.getValue(value));\n            }\n            else {\n                result[Number.parseInt(i.toString(), 10)] = text[Number.parseInt(i.toString(), 10)].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[Number.parseInt(j.toString(), 10)];\n        }\n        return res;\n    };\n    _Bidirectional.prototype._getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new _RtlCharacters();\n        this._indexLevels = rtlCharacters._getVisualOrder(inputText, isRtl);\n        this._setDefaultIndexLevel();\n        this._doOrder(0, this._indexLevels.length - 1);\n        var text = this._doMirrorShaping(inputText);\n        var resultBuilder = '';\n        for (var i = 0; i < this._indexes.length; i++) {\n            var index = this._indexes[Number.parseInt(i.toString(), 10)];\n            resultBuilder += text[Number.parseInt(index.toString(), 10)];\n        }\n        return resultBuilder.toString();\n    };\n    _Bidirectional.prototype._setDefaultIndexLevel = function () {\n        for (var i = 0; i < this._indexLevels.length; i++) {\n            this._indexes[Number.parseInt(i.toString(), 10)] = i;\n        }\n    };\n    _Bidirectional.prototype._doOrder = function (sIndex, eIndex) {\n        var max = this._indexLevels[Number.parseInt(sIndex.toString(), 10)];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this._indexLevels[Number.parseInt(i.toString(), 10)];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this._reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            while (true) { // eslint-disable-line\n                while (pstart <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pstart.toString(), 10)] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pend.toString(), 10)] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this._reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    _Bidirectional.prototype._reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this._indexes[Number.parseInt(i.toString(), 10)];\n            this._indexes[Number.parseInt(i.toString(), 10)] = this._indexes[Number.parseInt(j.toString(), 10)];\n            this._indexes[Number.parseInt(j.toString(), 10)] = temp;\n        }\n    };\n    _Bidirectional.prototype._update = function () {\n        this._mirroringShape.setValue(40, 41);\n        this._mirroringShape.setValue(41, 40);\n        this._mirroringShape.setValue(60, 62);\n        this._mirroringShape.setValue(62, 60);\n        this._mirroringShape.setValue(91, 93);\n        this._mirroringShape.setValue(93, 91);\n        this._mirroringShape.setValue(123, 125);\n        this._mirroringShape.setValue(125, 123);\n        this._mirroringShape.setValue(171, 187);\n        this._mirroringShape.setValue(187, 171);\n        this._mirroringShape.setValue(8249, 8250);\n        this._mirroringShape.setValue(8250, 8249);\n        this._mirroringShape.setValue(8261, 8262);\n        this._mirroringShape.setValue(8262, 8261);\n        this._mirroringShape.setValue(8317, 8318);\n        this._mirroringShape.setValue(8318, 8317);\n        this._mirroringShape.setValue(8333, 8334);\n        this._mirroringShape.setValue(8334, 8333);\n        this._mirroringShape.setValue(8712, 8715);\n        this._mirroringShape.setValue(8713, 8716);\n        this._mirroringShape.setValue(8714, 8717);\n        this._mirroringShape.setValue(8715, 8712);\n        this._mirroringShape.setValue(8716, 8713);\n        this._mirroringShape.setValue(8717, 8714);\n        this._mirroringShape.setValue(8725, 10741);\n        this._mirroringShape.setValue(8764, 8765);\n        this._mirroringShape.setValue(8765, 8764);\n        this._mirroringShape.setValue(8771, 8909);\n        this._mirroringShape.setValue(8786, 8787);\n        this._mirroringShape.setValue(8787, 8786);\n        this._mirroringShape.setValue(8788, 8789);\n        this._mirroringShape.setValue(8789, 8788);\n        this._mirroringShape.setValue(8804, 8805);\n        this._mirroringShape.setValue(8805, 8804);\n        this._mirroringShape.setValue(8806, 8807);\n        this._mirroringShape.setValue(8807, 8806);\n        this._mirroringShape.setValue(8808, 8809);\n        this._mirroringShape.setValue(8809, 8808);\n        this._mirroringShape.setValue(8810, 8811);\n        this._mirroringShape.setValue(8811, 8810);\n        this._mirroringShape.setValue(8814, 8815);\n        this._mirroringShape.setValue(8815, 8814);\n        this._mirroringShape.setValue(8816, 8817);\n        this._mirroringShape.setValue(8817, 8816);\n        this._mirroringShape.setValue(8818, 8819);\n        this._mirroringShape.setValue(8819, 8818);\n        this._mirroringShape.setValue(8820, 8821);\n        this._mirroringShape.setValue(8821, 8820);\n        this._mirroringShape.setValue(8822, 8823);\n        this._mirroringShape.setValue(8823, 8822);\n        this._mirroringShape.setValue(8824, 8825);\n        this._mirroringShape.setValue(8825, 8824);\n        this._mirroringShape.setValue(8826, 8827);\n        this._mirroringShape.setValue(8827, 8826);\n        this._mirroringShape.setValue(8828, 8829);\n        this._mirroringShape.setValue(8829, 8828);\n        this._mirroringShape.setValue(8830, 8831);\n        this._mirroringShape.setValue(8831, 8830);\n        this._mirroringShape.setValue(8832, 8833);\n        this._mirroringShape.setValue(8833, 8832);\n        this._mirroringShape.setValue(8834, 8835);\n        this._mirroringShape.setValue(8835, 8834);\n        this._mirroringShape.setValue(8836, 8837);\n        this._mirroringShape.setValue(8837, 8836);\n        this._mirroringShape.setValue(8838, 8839);\n        this._mirroringShape.setValue(8839, 8838);\n        this._mirroringShape.setValue(8840, 8841);\n        this._mirroringShape.setValue(8841, 8840);\n        this._mirroringShape.setValue(8842, 8843);\n        this._mirroringShape.setValue(8843, 8842);\n        this._mirroringShape.setValue(8847, 8848);\n        this._mirroringShape.setValue(8848, 8847);\n        this._mirroringShape.setValue(8849, 8850);\n        this._mirroringShape.setValue(8850, 8849);\n        this._mirroringShape.setValue(8856, 10680);\n        this._mirroringShape.setValue(8866, 8867);\n        this._mirroringShape.setValue(8867, 8866);\n        this._mirroringShape.setValue(8870, 10974);\n        this._mirroringShape.setValue(8872, 10980);\n        this._mirroringShape.setValue(8873, 10979);\n        this._mirroringShape.setValue(8875, 10981);\n        this._mirroringShape.setValue(8880, 8881);\n        this._mirroringShape.setValue(8881, 8880);\n        this._mirroringShape.setValue(8882, 8883);\n        this._mirroringShape.setValue(8883, 8882);\n        this._mirroringShape.setValue(8884, 8885);\n        this._mirroringShape.setValue(8885, 8884);\n        this._mirroringShape.setValue(8886, 8887);\n        this._mirroringShape.setValue(8887, 8886);\n        this._mirroringShape.setValue(8905, 8906);\n        this._mirroringShape.setValue(8906, 8905);\n        this._mirroringShape.setValue(8907, 8908);\n        this._mirroringShape.setValue(8908, 8907);\n        this._mirroringShape.setValue(8909, 8771);\n        this._mirroringShape.setValue(8912, 8913);\n        this._mirroringShape.setValue(8913, 8912);\n        this._mirroringShape.setValue(8918, 8919);\n        this._mirroringShape.setValue(8919, 8918);\n        this._mirroringShape.setValue(8920, 8921);\n        this._mirroringShape.setValue(8921, 8920);\n        this._mirroringShape.setValue(8922, 8923);\n        this._mirroringShape.setValue(8923, 8922);\n        this._mirroringShape.setValue(8924, 8925);\n        this._mirroringShape.setValue(8925, 8924);\n        this._mirroringShape.setValue(8926, 8927);\n        this._mirroringShape.setValue(8927, 8926);\n        this._mirroringShape.setValue(8928, 8929);\n        this._mirroringShape.setValue(8929, 8928);\n        this._mirroringShape.setValue(8930, 8931);\n        this._mirroringShape.setValue(8931, 8930);\n        this._mirroringShape.setValue(8932, 8933);\n        this._mirroringShape.setValue(8933, 8932);\n        this._mirroringShape.setValue(8934, 8935);\n        this._mirroringShape.setValue(8935, 8934);\n        this._mirroringShape.setValue(8936, 8937);\n        this._mirroringShape.setValue(8937, 8936);\n        this._mirroringShape.setValue(8938, 8939);\n        this._mirroringShape.setValue(8939, 8938);\n        this._mirroringShape.setValue(8940, 8941);\n        this._mirroringShape.setValue(8941, 8940);\n        this._mirroringShape.setValue(8944, 8945);\n        this._mirroringShape.setValue(8945, 8944);\n        this._mirroringShape.setValue(8946, 8954);\n        this._mirroringShape.setValue(8947, 8955);\n        this._mirroringShape.setValue(8948, 8956);\n        this._mirroringShape.setValue(8950, 8957);\n        this._mirroringShape.setValue(8951, 8958);\n        this._mirroringShape.setValue(8954, 8946);\n        this._mirroringShape.setValue(8955, 8947);\n        this._mirroringShape.setValue(8956, 8948);\n        this._mirroringShape.setValue(8957, 8950);\n        this._mirroringShape.setValue(8958, 8951);\n        this._mirroringShape.setValue(8968, 8969);\n        this._mirroringShape.setValue(8969, 8968);\n        this._mirroringShape.setValue(8970, 8971);\n        this._mirroringShape.setValue(8971, 8970);\n        this._mirroringShape.setValue(9001, 9002);\n        this._mirroringShape.setValue(9002, 9001);\n        this._mirroringShape.setValue(10088, 10089);\n        this._mirroringShape.setValue(10089, 10088);\n        this._mirroringShape.setValue(10090, 10091);\n        this._mirroringShape.setValue(10091, 10090);\n        this._mirroringShape.setValue(10092, 10093);\n        this._mirroringShape.setValue(10093, 10092);\n        this._mirroringShape.setValue(10094, 10095);\n        this._mirroringShape.setValue(10095, 10094);\n        this._mirroringShape.setValue(10096, 10097);\n        this._mirroringShape.setValue(10097, 10096);\n        this._mirroringShape.setValue(10098, 10099);\n        this._mirroringShape.setValue(10099, 10098);\n        this._mirroringShape.setValue(10100, 10101);\n        this._mirroringShape.setValue(10101, 10100);\n        this._mirroringShape.setValue(10197, 10198);\n        this._mirroringShape.setValue(10198, 10197);\n        this._mirroringShape.setValue(10205, 10206);\n        this._mirroringShape.setValue(10206, 10205);\n        this._mirroringShape.setValue(10210, 10211);\n        this._mirroringShape.setValue(10211, 10210);\n        this._mirroringShape.setValue(10212, 10213);\n        this._mirroringShape.setValue(10213, 10212);\n        this._mirroringShape.setValue(10214, 10215);\n        this._mirroringShape.setValue(10215, 10214);\n        this._mirroringShape.setValue(10216, 10217);\n        this._mirroringShape.setValue(10217, 10216);\n        this._mirroringShape.setValue(10218, 10219);\n        this._mirroringShape.setValue(10219, 10218);\n        this._mirroringShape.setValue(10627, 10628);\n        this._mirroringShape.setValue(10628, 10627);\n        this._mirroringShape.setValue(10629, 10630);\n        this._mirroringShape.setValue(10630, 10629);\n        this._mirroringShape.setValue(10631, 10632);\n        this._mirroringShape.setValue(10632, 10631);\n        this._mirroringShape.setValue(10633, 10634);\n        this._mirroringShape.setValue(10634, 10633);\n        this._mirroringShape.setValue(10635, 10636);\n        this._mirroringShape.setValue(10636, 10635);\n        this._mirroringShape.setValue(10637, 10640);\n        this._mirroringShape.setValue(10638, 10639);\n        this._mirroringShape.setValue(10639, 10638);\n        this._mirroringShape.setValue(10640, 10637);\n        this._mirroringShape.setValue(10641, 10642);\n        this._mirroringShape.setValue(10642, 10641);\n        this._mirroringShape.setValue(10643, 10644);\n        this._mirroringShape.setValue(10644, 10643);\n        this._mirroringShape.setValue(10645, 10646);\n        this._mirroringShape.setValue(10646, 10645);\n        this._mirroringShape.setValue(10647, 10648);\n        this._mirroringShape.setValue(10648, 10647);\n        this._mirroringShape.setValue(10680, 8856);\n        this._mirroringShape.setValue(10688, 10689);\n        this._mirroringShape.setValue(10689, 10688);\n        this._mirroringShape.setValue(10692, 10693);\n        this._mirroringShape.setValue(10693, 10692);\n        this._mirroringShape.setValue(10703, 10704);\n        this._mirroringShape.setValue(10704, 10703);\n        this._mirroringShape.setValue(10705, 10706);\n        this._mirroringShape.setValue(10706, 10705);\n        this._mirroringShape.setValue(10708, 10709);\n        this._mirroringShape.setValue(10709, 10708);\n        this._mirroringShape.setValue(10712, 10713);\n        this._mirroringShape.setValue(10713, 10712);\n        this._mirroringShape.setValue(10714, 10715);\n        this._mirroringShape.setValue(10715, 10714);\n        this._mirroringShape.setValue(10741, 8725);\n        this._mirroringShape.setValue(10744, 10745);\n        this._mirroringShape.setValue(10745, 10744);\n        this._mirroringShape.setValue(10748, 10749);\n        this._mirroringShape.setValue(10749, 10748);\n        this._mirroringShape.setValue(10795, 10796);\n        this._mirroringShape.setValue(10796, 10795);\n        this._mirroringShape.setValue(10797, 10796);\n        this._mirroringShape.setValue(10798, 10797);\n        this._mirroringShape.setValue(10804, 10805);\n        this._mirroringShape.setValue(10805, 10804);\n        this._mirroringShape.setValue(10812, 10813);\n        this._mirroringShape.setValue(10813, 10812);\n        this._mirroringShape.setValue(10852, 10853);\n        this._mirroringShape.setValue(10853, 10852);\n        this._mirroringShape.setValue(10873, 10874);\n        this._mirroringShape.setValue(10874, 10873);\n        this._mirroringShape.setValue(10877, 10878);\n        this._mirroringShape.setValue(10878, 10877);\n        this._mirroringShape.setValue(10879, 10880);\n        this._mirroringShape.setValue(10880, 10879);\n        this._mirroringShape.setValue(10881, 10882);\n        this._mirroringShape.setValue(10882, 10881);\n        this._mirroringShape.setValue(10883, 10884);\n        this._mirroringShape.setValue(10884, 10883);\n        this._mirroringShape.setValue(10891, 10892);\n        this._mirroringShape.setValue(10892, 10891);\n        this._mirroringShape.setValue(10897, 10898);\n        this._mirroringShape.setValue(10898, 10897);\n        this._mirroringShape.setValue(10899, 10900);\n        this._mirroringShape.setValue(10900, 10899);\n        this._mirroringShape.setValue(10901, 10902);\n        this._mirroringShape.setValue(10902, 10901);\n        this._mirroringShape.setValue(10903, 10904);\n        this._mirroringShape.setValue(10904, 10903);\n        this._mirroringShape.setValue(10905, 10906);\n        this._mirroringShape.setValue(10906, 10905);\n        this._mirroringShape.setValue(10907, 10908);\n        this._mirroringShape.setValue(10908, 10907);\n        this._mirroringShape.setValue(10913, 10914);\n        this._mirroringShape.setValue(10914, 10913);\n        this._mirroringShape.setValue(10918, 10919);\n        this._mirroringShape.setValue(10919, 10918);\n        this._mirroringShape.setValue(10920, 10921);\n        this._mirroringShape.setValue(10921, 10920);\n        this._mirroringShape.setValue(10922, 10923);\n        this._mirroringShape.setValue(10923, 10922);\n        this._mirroringShape.setValue(10924, 10925);\n        this._mirroringShape.setValue(10925, 10924);\n        this._mirroringShape.setValue(10927, 10928);\n        this._mirroringShape.setValue(10928, 10927);\n        this._mirroringShape.setValue(10931, 10932);\n        this._mirroringShape.setValue(10932, 10931);\n        this._mirroringShape.setValue(10939, 10940);\n        this._mirroringShape.setValue(10940, 10939);\n        this._mirroringShape.setValue(10941, 10942);\n        this._mirroringShape.setValue(10942, 10941);\n        this._mirroringShape.setValue(10943, 10944);\n        this._mirroringShape.setValue(10944, 10943);\n        this._mirroringShape.setValue(10945, 10946);\n        this._mirroringShape.setValue(10946, 10945);\n        this._mirroringShape.setValue(10947, 10948);\n        this._mirroringShape.setValue(10948, 10947);\n        this._mirroringShape.setValue(10949, 10950);\n        this._mirroringShape.setValue(10950, 10949);\n        this._mirroringShape.setValue(10957, 10958);\n        this._mirroringShape.setValue(10958, 10957);\n        this._mirroringShape.setValue(10959, 10960);\n        this._mirroringShape.setValue(10960, 10959);\n        this._mirroringShape.setValue(10961, 10962);\n        this._mirroringShape.setValue(10962, 10961);\n        this._mirroringShape.setValue(10963, 10964);\n        this._mirroringShape.setValue(10964, 10963);\n        this._mirroringShape.setValue(10965, 10966);\n        this._mirroringShape.setValue(10966, 10965);\n        this._mirroringShape.setValue(10974, 8870);\n        this._mirroringShape.setValue(10979, 8873);\n        this._mirroringShape.setValue(10980, 8872);\n        this._mirroringShape.setValue(10981, 8875);\n        this._mirroringShape.setValue(10988, 10989);\n        this._mirroringShape.setValue(10989, 10988);\n        this._mirroringShape.setValue(10999, 11000);\n        this._mirroringShape.setValue(11000, 10999);\n        this._mirroringShape.setValue(11001, 11002);\n        this._mirroringShape.setValue(11002, 11001);\n        this._mirroringShape.setValue(12296, 12297);\n        this._mirroringShape.setValue(12297, 12296);\n        this._mirroringShape.setValue(12298, 12299);\n        this._mirroringShape.setValue(12299, 12298);\n        this._mirroringShape.setValue(12300, 12301);\n        this._mirroringShape.setValue(12301, 12300);\n        this._mirroringShape.setValue(12302, 12303);\n        this._mirroringShape.setValue(12303, 12302);\n        this._mirroringShape.setValue(12304, 12305);\n        this._mirroringShape.setValue(12305, 12304);\n        this._mirroringShape.setValue(12308, 12309);\n        this._mirroringShape.setValue(12309, 12308);\n        this._mirroringShape.setValue(12310, 12311);\n        this._mirroringShape.setValue(12311, 12310);\n        this._mirroringShape.setValue(12312, 12313);\n        this._mirroringShape.setValue(12313, 12312);\n        this._mirroringShape.setValue(12314, 12315);\n        this._mirroringShape.setValue(12315, 12314);\n        this._mirroringShape.setValue(65288, 65289);\n        this._mirroringShape.setValue(65289, 65288);\n        this._mirroringShape.setValue(65308, 65310);\n        this._mirroringShape.setValue(65310, 65308);\n        this._mirroringShape.setValue(65339, 65341);\n        this._mirroringShape.setValue(65341, 65339);\n        this._mirroringShape.setValue(65371, 65373);\n        this._mirroringShape.setValue(65373, 65371);\n        this._mirroringShape.setValue(65375, 65376);\n        this._mirroringShape.setValue(65376, 65375);\n        this._mirroringShape.setValue(65378, 65379);\n        this._mirroringShape.setValue(65379, 65378);\n    };\n    return _Bidirectional;\n}());\nexport { _Bidirectional };\nvar _RtlCharacters = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'RtlCharacters' class.\n     *\n     * @private\n     */\n    function _RtlCharacters() {\n        this._type = [];\n        this._textOrder = -1;\n        this._rtlCharacterTypes = new Array(65536);\n        this.L = 0;\n        this.lre = 1;\n        this.lro = 2;\n        this.R = 3;\n        this.AL = 4;\n        this.rle = 5;\n        this.rlo = 6;\n        this.pdf = 7;\n        this.EN = 8;\n        this.ES = 9;\n        this.ET = 10;\n        this.AN = 11;\n        this.CS = 12;\n        this.nsm = 13;\n        this.BN = 14;\n        this.B = 15;\n        this.S = 16;\n        this.WS = 17;\n        this.ON = 18;\n        this._charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.nsm, this.nsm, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34, this.ON, 35,\n            37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS, 47, 47, this.CS, 48, 57, this.EN,\n            58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L, 123, 126, this.ON, 127, 132, this.BN, 133, 133,\n            this.B, 134, 159, this.BN, 160, 160, this.CS, 161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175,\n            this.ON, 176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON, 185, 185, this.EN, 186, 186,\n            this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON, 216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698,\n            this.ON, 699, 705, this.L, 706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON, 750, 750,\n            this.L, 751, 767, this.ON, 768, 855, this.nsm, 856, 860, this.L, 861, 879, this.nsm, 880, 883, this.L, 884, 885, this.ON, 886, 893,\n            this.L, 894, 894, this.ON, 895, 899, this.L, 900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014,\n            this.ON, 1015, 1154, this.L, 1155, 1158, this.nsm, 1159, 1159, this.L, 1160, 1161, this.nsm, 1162, 1417, this.L, 1418, 1418,\n            this.ON, 1419, 1424, this.L, 1425, 1441, this.nsm, 1442, 1442, this.L, 1443, 1465, this.nsm, 1466, 1466, this.L, 1467, 1469,\n            this.nsm, 1470, 1470, this.R, 1471, 1471, this.nsm, 1472, 1472, this.R, 1473, 1474, this.nsm, 1475, 1475, this.R, 1476, 1476,\n            this.nsm, 1477, 1487, this.L, 1488, 1514, this.R, 1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON, 1552, 1557, this.nsm, 1558, 1562, this.L, 1563,\n            1563, this.AL, 1564, 1566, this.L, 1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L, 1600, 1610,\n            this.AL, 1611, 1624, this.nsm, 1625, 1631, this.L, 1632, 1641, this.AN, 1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647,\n            this.AL, 1648, 1648, this.nsm, 1649, 1749, this.AL, 1750, 1756, this.nsm, 1757, 1757, this.AL, 1758, 1764, this.nsm, 1765, 1766,\n            this.AL, 1767, 1768, this.nsm, 1769, 1769, this.ON, 1770, 1773, this.nsm, 1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805,\n            this.AL, 1806, 1806, this.L, 1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.nsm, 1810, 1839, this.AL, 1840, 1866,\n            this.nsm, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L, 1920, 1957, this.AL, 1958, 1968, this.nsm, 1969, 1969,\n            this.AL, 1970, 2304, this.L, 2305, 2306, this.nsm, 2307, 2363, this.L, 2364, 2364, this.nsm, 2365, 2368, this.L, 2369, 2376,\n            this.nsm, 2377, 2380, this.L, 2381, 2381, this.nsm, 2382, 2384, this.L, 2385, 2388, this.nsm, 2389, 2401, this.L, 2402, 2403,\n            this.nsm, 2404, 2432, this.L, 2433, 2433, this.nsm, 2434, 2491, this.L, 2492, 2492, this.nsm, 2493, 2496, this.L, 2497, 2500,\n            this.nsm, 2501, 2508, this.L, 2509, 2509, this.nsm, 2510, 2529, this.L, 2530, 2531, this.nsm, 2532, 2545, this.L, 2546, 2547,\n            this.ET, 2548, 2560, this.L, 2561, 2562, this.nsm, 2563, 2619, this.L, 2620, 2620, this.nsm, 2621, 2624, this.L, 2625, 2626,\n            this.nsm, 2627, 2630, this.L, 2631, 2632, this.nsm, 2633, 2634, this.L, 2635, 2637, this.nsm, 2638, 2671, this.L, 2672, 2673,\n            this.nsm, 2674, 2688, this.L, 2689, 2690, this.nsm, 2691, 2747, this.L, 2748, 2748, this.nsm, 2749, 2752, this.L, 2753, 2757,\n            this.nsm, 2758, 2758, this.L, 2759, 2760, this.nsm, 2761, 2764, this.L, 2765, 2765, this.nsm, 2766, 2785, this.L, 2786, 2787,\n            this.nsm, 2788, 2800, this.L, 2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.nsm, 2818, 2875, this.L, 2876, 2876,\n            this.nsm, 2877, 2878, this.L, 2879, 2879, this.nsm, 2880, 2880, this.L, 2881, 2883, this.nsm, 2884, 2892, this.L, 2893, 2893,\n            this.nsm, 2894, 2901, this.L, 2902, 2902, this.nsm, 2903, 2945, this.L, 2946, 2946, this.nsm, 2947, 3007, this.L, 3008, 3008,\n            this.nsm, 3009, 3020, this.L, 3021, 3021, this.nsm, 3022, 3058, this.L, 3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066,\n            this.ON, 3067, 3133, this.L, 3134, 3136, this.nsm, 3137, 3141, this.L, 3142, 3144, this.nsm, 3145, 3145, this.L, 3146, 3149,\n            this.nsm, 3150, 3156, this.L, 3157, 3158, this.nsm, 3159, 3259, this.L, 3260, 3260, this.nsm, 3261, 3275, this.L, 3276, 3277,\n            this.nsm, 3278, 3392, this.L, 3393, 3395, this.nsm, 3396, 3404, this.L, 3405, 3405, this.nsm, 3406, 3529, this.L, 3530, 3530,\n            this.nsm, 3531, 3537, this.L, 3538, 3540, this.nsm, 3541, 3541, this.L, 3542, 3542, this.nsm, 3543, 3632, this.L, 3633, 3633,\n            this.nsm, 3634, 3635, this.L, 3636, 3642, this.nsm, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L, 3655, 3662,\n            this.nsm, 3663, 3760, this.L, 3761, 3761, this.nsm, 3762, 3763, this.L, 3764, 3769, this.nsm, 3770, 3770, this.L, 3771, 3772,\n            this.nsm, 3773, 3783, this.L, 3784, 3789, this.nsm, 3790, 3863, this.L, 3864, 3865, this.nsm, 3866, 3892, this.L, 3893, 3893,\n            this.nsm, 3894, 3894, this.L, 3895, 3895, this.nsm, 3896, 3896, this.L, 3897, 3897, this.nsm, 3898, 3901, this.ON, 3902, 3952,\n            this.L, 3953, 3966, this.nsm, 3967, 3967, this.L, 3968, 3972, this.nsm, 3973, 3973, this.L, 3974, 3975, this.nsm, 3976, 3983,\n            this.L, 3984, 3991, this.nsm, 3992, 3992, this.L, 3993, 4028, this.nsm, 4029, 4037, this.L, 4038, 4038, this.nsm, 4039, 4140,\n            this.L, 4141, 4144, this.nsm, 4145, 4145, this.L, 4146, 4146, this.nsm, 4147, 4149, this.L, 4150, 4151, this.nsm, 4152, 4152,\n            this.L, 4153, 4153, this.nsm, 4154, 4183, this.L, 4184, 4185, this.nsm, 4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786,\n            this.L, 5787, 5788, this.ON, 5789, 5905, this.L, 5906, 5908, this.nsm, 5909, 5937, this.L, 5938, 5940, this.nsm, 5941, 5969,\n            this.L, 5970, 5971, this.nsm, 5972, 6001, this.L, 6002, 6003, this.nsm, 6004, 6070, this.L, 6071, 6077, this.nsm, 6078, 6085,\n            this.L, 6086, 6086, this.nsm, 6087, 6088, this.L, 6089, 6099, this.nsm, 6100, 6106, this.L, 6107, 6107, this.ET, 6108, 6108,\n            this.L, 6109, 6109, this.nsm, 6110, 6127, this.L, 6128, 6137, this.ON, 6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157,\n            this.nsm, 6158, 6158, this.WS, 6159, 6312, this.L, 6313, 6313, this.nsm, 6314, 6431, this.L, 6432, 6434, this.nsm, 6435, 6438,\n            this.L, 6439, 6443, this.nsm, 6444, 6449, this.L, 6450, 6450, this.nsm, 6451, 6456, this.L, 6457, 6459, this.nsm, 6460, 6463,\n            this.L, 6464, 6464, this.ON, 6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON, 6656, 8124, this.L,\n            8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON, 8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157,\n            8159, this.ON, 8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON, 8191, 8191, this.L, 8192, 8202,\n            this.WS, 8203, 8205, this.BN, 8206, 8206, this.L, 8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.lre, 8235, 8235, this.rle, 8236, 8236, this.pdf, 8237, 8237, this.lro, 8238, 8238, this.rlo, 8239, 8239, this.WS,\n            8240, 8244, this.ET, 8245, 8276, this.ON, 8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS, 8288,\n            8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN, 8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315,\n            this.ET, 8316, 8318, this.ON, 8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON, 8335, 8351,\n            this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.nsm, 8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L,\n            8451, 8454, this.ON, 8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON, 8469, 8469, this.L, 8470,\n            8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON, 8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487,\n            this.ON, 8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET, 8495, 8497, this.L, 8498, 8498, this.ON,\n            8499, 8505, this.L, 8506, 8507, this.ON, 8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON, 8524,\n            8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON, 8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082,\n            this.L, 9083, 9108, this.ON, 9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON, 9255, 9279, this.L,\n            9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN, 9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752,\n            9752, this.L, 9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L, 9888, 9889, this.ON, 9890, 9984,\n            this.L, 9985, 9988, this.ON, 9989, 9989, this.L, 9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024,\n            this.L, 10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L, 10063, 10066, this.ON, 10067,\n            10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L, 10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON,\n            10133, 10135, this.L, 10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L, 10192, 10219,\n            this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L, 11904, 11929, this.ON, 11930, 11930, this.L, 11931,\n            12019, this.ON, 12020, 12031, this.L, 12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON, 12321, 12329, this.L, 12330, 12335,\n            this.nsm, 12336, 12336, this.ON, 12337, 12341, this.L, 12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352,\n            12440, this.L, 12441, 12442, this.nsm, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON, 12449, 12538, this.L,\n            12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON, 12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923,\n            this.L, 12924, 12925, this.ON, 12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON, 13008,\n            13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON, 13280, 13310, this.L, 13311, 13311, this.ON,\n            13312, 19903, this.L, 19904, 19967, this.ON, 19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285,\n            this.R, 64286, 64286, this.nsm, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R, 64311, 64311, this.L, 64312,\n            64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R, 64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323,\n            64324, this.R, 64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L, 64467, 64829, this.AL,\n            64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL, 64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007,\n            this.L, 65008, 65020, this.AL, 65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.nsm, 65040, 65055, this.L, 65056,\n            65059, this.nsm, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS, 65105, 65105, this.ON, 65106, 65106, this.CS,\n            65107, 65107, this.L, 65108, 65108, this.ON, 65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121,\n            this.ON, 65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON, 65129, 65130, this.ET, 65131,\n            65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL, 65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L,\n            65279, 65279, this.BN, 65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON, 65291, 65291,\n            this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS, 65295, 65295, this.ES, 65296, 65305, this.EN, 65306,\n            65306, this.CS, 65307, 65312, this.ON, 65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET, 65511, 65511, this.L, 65512, 65518,\n            this.ON, 65519, 65528, this.L, 65529, 65531, this.BN, 65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this._charTypes.length; ++i) {\n            var start = this._charTypes[Number.parseInt(i.toString(), 10)];\n            var end = this._charTypes[++i];\n            var b = this._charTypes[++i];\n            while (start <= end) {\n                this._rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    _RtlCharacters.prototype._getVisualOrder = function (inputText, isRtl) {\n        this._type = this._getCharacterCode(inputText);\n        this._textOrder = isRtl ? this.lre : this.L;\n        this._doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this._levels.length; i++) {\n            result[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n        }\n        return result;\n    };\n    _RtlCharacters.prototype._getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n            characterCodes[Number.parseInt(i.toString(), 10)] = this._rtlCharacterTypes[Number.parseInt(value.toString(), 10)];\n        }\n        return characterCodes;\n    };\n    _RtlCharacters.prototype._setDefaultLevels = function () {\n        for (var i = 0; i < this._length; i++) {\n            this._levels[Number.parseInt(i.toString(), 10)] = this._textOrder;\n        }\n    };\n    _RtlCharacters.prototype._setLevels = function () {\n        this._setDefaultLevels();\n        for (var n = 0; n < this._length; ++n) {\n            var level = this._levels[Number.parseInt(n.toString(), 10)];\n            this._levels[Number.parseInt(n.toString(), 10)] = level;\n        }\n    };\n    _RtlCharacters.prototype._updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] === this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] !== this.L) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] !== this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n            }\n        }\n    };\n    _RtlCharacters.prototype._doVisualOrder = function () {\n        this._length = this._type.length;\n        this._result = this._type;\n        this._levels = [];\n        this._setLevels();\n        this._length = this._getEmbeddedCharactersLength();\n        var preview = this._textOrder;\n        var i = 0;\n        while (i < this._length) {\n            var level = this._levels[Number.parseInt(i.toString(), 10)];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this._length && this._levels[Number.parseInt(length_1.toString(), 10)] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this._length ? this._levels[Number.parseInt(length_1.toString(), 10)] : this._textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this._check(i, length_1, level, preType, type);\n            this._updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this._checkEmbeddedCharacters(this._length);\n    };\n    _RtlCharacters.prototype._getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this._length; ++i) {\n            if (!(this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN)) {\n                this._result[Number.parseInt(index.toString(), 10)] = this._result[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(index.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n                index++;\n            }\n        }\n        return index;\n    };\n    _RtlCharacters.prototype._checkEmbeddedCharacters = function (length) {\n        for (var i = this._type.length - 1; i >= 0; --i) {\n            if (this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN) {\n                this._result[Number.parseInt(i.toString(), 10)] = this._type[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = -1;\n            }\n            else {\n                length -= 1;\n                this._result[Number.parseInt(i.toString(), 10)] = this._result[Number.parseInt(length.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(length.toString(), 10)];\n            }\n        }\n        for (var i = 0; i < this._type.length; i++) {\n            if (this._levels[Number.parseInt(i.toString(), 10)] === -1) {\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[i - 1];\n            }\n        }\n    };\n    _RtlCharacters.prototype._check = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.nsm) {\n                this._result[Number.parseInt(i.toString(), 10)] = charType;\n            }\n            else {\n                charType = this._result[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                        if (this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                            this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this._checkArabicCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.AL) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.R;\n            }\n        }\n        this._checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                var preview = this._result[i - 1];\n                var success = this._result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.EN;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] === this.CS && preview === this.AN && success === this.AN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                }\n            }\n        }\n        this._checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this._getLength(s, length, b);\n                var data = s === index ? startType : this._result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this._result[Number.parseInt(l.toString(), 10)];\n                }\n                i = l;\n            }\n        }\n        this._checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES || this._result[Number.parseInt(i.toString(), 10)] === this.ET\n                || this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.ON;\n            }\n        }\n        this._checkOtherCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R) {\n                        pst = this._result[Number.parseInt(j.toString(), 10)];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.L;\n                }\n            }\n        }\n        this._checkCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this._result[Number.parseInt(index.toString(), 10)];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[Number.parseInt(i.toString(), 10)]) {\n                    index = this._getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    _RtlCharacters.prototype._checkCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.WS ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.ON ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.B ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this._getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this._result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this._result[Number.parseInt(l.toString(), 10)];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this._result[Number.parseInt(j.toString(), 10)] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return _RtlCharacters;\n}());\nexport { _RtlCharacters };\n","import { _UnicodeLine } from './../../fonts/pdf-standard-font';\nimport { _ArabicShapeRenderer } from './../../graphics/rightToLeft/text-shape';\nimport { _Bidirectional } from './../../graphics/rightToLeft/bidirectional';\nimport { PdfTextDirection } from './../../enumerator';\nimport { _stringToUnicodeArray, _bytesToString } from './../../utils';\nvar _RtlRenderer = /** @class */ (function () {\n    function _RtlRenderer() {\n        this._openBracket = '(';\n        this._closeBracket = ')';\n    }\n    _RtlRenderer.prototype._layout = function (line, font, rtl, wordSpace, format) {\n        var result = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (font._isUnicode) {\n                result = this._customLayout(line, rtl, format, font, wordSpace);\n            }\n            else {\n                result = [];\n                result[0] = line;\n            }\n        }\n        return result;\n    };\n    _RtlRenderer.prototype._splitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            var system = false;\n            if (!system) {\n                words = this._customSplitLayout(line, font, rtl, wordSpace, format);\n            }\n        }\n        return words;\n    };\n    _RtlRenderer.prototype._getGlyphIndex = function (line, font, glyphs) {\n        glyphs = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (line.length === 0) {\n                return { _result: false, _glyphIndex: glyphs };\n            }\n            var renderer = new _ArabicShapeRenderer();\n            var text = renderer._shape(line);\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            glyphs = [text.length];\n            var i = 0;\n            for (var k = 0, len = text.length; k < len; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = ttfReader._getGlyph(ch);\n                if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                    glyphs[i++] = (glyphInfo)._index;\n                }\n            }\n        }\n        var unicodeLine = new _UnicodeLine();\n        unicodeLine._result = true;\n        unicodeLine._glyphIndex = glyphs;\n        return unicodeLine;\n    };\n    _RtlRenderer.prototype._customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            var result = null;\n            if (line !== null && typeof line !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var bidi = new _Bidirectional();\n                    result = bidi._getLogicalToVisualString(line, rtl);\n                }\n            }\n            return result;\n        }\n        else {\n            var layouted = '';\n            var result = [];\n            if (line !== null && typeof line !== 'undefined' && font !== null && typeof font !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var renderer = new _ArabicShapeRenderer();\n                    var txt = renderer._shape(line);\n                    layouted = this._customLayout(txt, rtl, format);\n                }\n                if (wordSpace) {\n                    var words = layouted.split('');\n                    var count = words.length;\n                    for (var i = 0; i < count; i++) {\n                        words[Number.parseInt(i.toString(), 10)] = this._addCharacter(font, words[Number.parseInt(i.toString(), 10)]);\n                    }\n                    result = words;\n                }\n                else {\n                    result = [];\n                    result[0] = this._addCharacter(font, layouted);\n                }\n            }\n            return result;\n        }\n    };\n    _RtlRenderer.prototype._addCharacter = function (font, glyphs) {\n        if (font !== null && typeof font !== 'undefined' && glyphs !== null && typeof glyphs !== 'undefined') {\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            font._setSymbols(glyphs);\n            glyphs = ttfReader._convertString(glyphs);\n            var bytes = _stringToUnicodeArray(glyphs);\n            glyphs = _bytesToString(bytes);\n        }\n        return glyphs;\n    };\n    _RtlRenderer.prototype._customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (line !== null && typeof line !== 'undefined') {\n            var reversedLine = this._customLayout(line, rtl, format);\n            words = reversedLine.split('');\n        }\n        return words;\n    };\n    return _RtlRenderer;\n}());\nexport { _RtlRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfStringFormat } from './pdf-string-format';\nimport { _PdfFontMetrics, _CjkWidthTable, _StandardWidthTable, _CjkSameWidth, _CjkDifferentWidth } from './pdf-font-metrics';\nimport { _PdfDictionary, _PdfName } from './../pdf-primitives';\nimport { _PdfStringLayouter } from './string-layouter';\nimport { _UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { _fromRectangle } from './../utils';\nimport { PdfTextDirection } from './../../core/enumerator';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\n/**\n * Represents the base class for font objects.`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this._size = size;\n        }\n        else {\n            this._size = size;\n            this._style = style;\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF font.\n         *\n         * @returns {number} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Gets the font size\n         * let size: number = font.size;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style of the PDF font.\n         *\n         * @returns {PdfFontStyle} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font style\n         * let style: PdfFontStyle = font.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the style of the PDF font.\n         *\n         * @param {PdfFontStyle} value to font style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Sets the font style\n         * font.style = PdfFontStyle.italic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isUnderline\", {\n        /**\n         * Gets the boolean flag indicating whether the font has underline style or not.\n         *\n         * @returns {boolean} isUnderline.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.underline);\n         * // Gets the boolean flag indicating whether the font has underline style or not.\n         * let underline: boolean = font.isUnderline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.underline) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isStrikeout\", {\n        /**\n         * Gets the boolean flag indicating whether the font has strike out style or not.\n         *\n         * @returns {boolean} isStrikeout.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the boolean flag indicating whether the font has strike out style or not.\n         * let strikeout: boolean = font.isStrikeout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.strikeout) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"_metrics\", {\n        get: function () {\n            return this._fontMetrics;\n        },\n        set: function (value) {\n            this._fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isBold\", {\n        /**\n         * Gets the boolean flag indicating whether the font has bold style or not.\n         *\n         * @returns {boolean} isBold.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.bold);\n         * // Gets the boolean flag indicating whether the font has bold style or not.\n         * let bold: boolean = font.isBold;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isItalic\", {\n        /**\n         * Gets the boolean flag indicating whether the font has italic style or not.\n         *\n         * @returns {boolean} isItalic.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the boolean flag indicating whether the font has italic style or not.\n         * let italic: boolean = font.isItalic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the font height.\n         *\n         * @returns {number} height.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font height\n         * let height: number = font.height;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._metrics._getHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype._setInternals = function (internals) {\n        if (!internals) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this._pdfFontInternals = internals;\n    };\n    PdfFont.prototype._getCharacterCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            var numSymbols = 0;\n            var curIndex = 0;\n            curIndex = text.indexOf(symbols, curIndex);\n            while (curIndex !== -1) {\n                numSymbols++;\n                curIndex++;\n                curIndex = text.indexOf(symbols, curIndex);\n            }\n            return numSymbols;\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < text.length; i++) {\n                if (symbols.indexOf(text[Number.parseInt(i.toString(), 10)]) !== -1) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 === null) &&\n            typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 === null)\n            && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number'\n            && (arg3 instanceof PdfStringFormat || arg3 === null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = [arg2, 0];\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new _PdfStringLayouter();\n            var result = layouter._layout(text, this, temparg3, temparg2);\n            arg4 = text.length;\n            arg5 = (result._empty) ? 0 : result._lines.length;\n            return result._actualSize;\n        }\n    };\n    PdfFont.prototype._applyFormatSettings = function (line, format, width) {\n        var realWidth = width;\n        if (typeof format !== 'undefined' && format !== null && width > 0) {\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            if (format.wordSpacing !== 0) {\n                realWidth += this._getCharacterCount(line, [' ', '\\t']) * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    return PdfFont;\n}());\nexport { PdfFont };\n/**\n * Represents one of the 14 standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._checkStyle();\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF standard font.\n         *\n         * @returns {PdfFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the font family\n         * let fontFamily: PdfFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStandardFont.prototype._checkStyle = function () {\n        if (this._fontFamily === PdfFontFamily.symbol || this._fontFamily === PdfFontFamily.zapfDingbats) {\n            this._style &= ~(PdfFontStyle.bold | PdfFontStyle.italic);\n        }\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type1'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        if (this._fontFamily !== PdfFontFamily.symbol && this._fontFamily !== PdfFontFamily.zapfDingbats) {\n            dictionary.set('Encoding', new _PdfName('WinAnsiEncoding'));\n        }\n        return dictionary;\n    };\n    PdfStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this._metrics._name === '0' ||\n            this._metrics._name === '1' ||\n            this._metrics._name === '2' ||\n            this._metrics._name === '3' ||\n            this._metrics._name === '4') {\n            code = code - 32;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var widthTable = this._metrics._widthTable;\n        width = widthTable._itemAt(code);\n        return width;\n    };\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n/**\n * Represents one of the 7 CJK standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCjkStandardFont = /** @class */ (function (_super) {\n    __extends(PdfCjkStandardFont, _super);\n    function PdfCjkStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._size = size;\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfCjkStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF CJK font.\n         *\n         * @returns {PdfCjkFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF CJK standard font\n         * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n         * // Gets the font family\n         * let fontFamily: PdfCjkFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCjkStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfCjkStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfCjkStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type0'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('Encoding', this._getEncoding(this._fontFamily));\n        dictionary.set('DescendantFonts', this._getDescendantFont());\n        return dictionary;\n    };\n    PdfCjkStandardFont.prototype._getEncoding = function (fontFamily) {\n        var encoding = 'Unknown';\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                encoding = 'UniKS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                encoding = 'UniJIS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                encoding = 'UniCNS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                encoding = 'UniGB-UCS2-H';\n                break;\n        }\n        return new _PdfName(encoding);\n    };\n    PdfCjkStandardFont.prototype._getDescendantFont = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('CIDFontType2'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('DW', this._metrics._widthTable._defaultWidth);\n        dictionary.set('W', this._metrics._widthTable._toArray());\n        dictionary.set('FontDescriptor', _PdfCjkFontDescriptorFactory._getFontDescriptor(this._fontFamily, this._style, this._metrics));\n        dictionary.set('CIDSystemInfo', this._getSystemInformation());\n        return [dictionary];\n    };\n    PdfCjkStandardFont.prototype._getSystemInformation = function () {\n        var systemInformation = new _PdfDictionary();\n        systemInformation._updated = true;\n        systemInformation.set('Registry', 'Adobe');\n        switch (this._fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                systemInformation.set('Ordering', 'Korea1');\n                systemInformation.set('Supplement', 1);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                systemInformation.set('Ordering', 'Japan1');\n                systemInformation.set('Supplement', 2);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                systemInformation.set('Ordering', 'CNS1');\n                systemInformation.set('Supplement', '0');\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                systemInformation.set('Ordering', 'GB1');\n                systemInformation.set('Supplement', 2);\n                break;\n        }\n        return systemInformation;\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF CJK standard font\n     * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20, PdfFontStyle.bold);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCjkStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0; i < line.length; i++) {\n            width += this._getCharacterWidthInternal(line.charCodeAt(i));\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfCjkStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        charCode = (charCode >= 0) ? charCode : 0;\n        return this._metrics._widthTable._itemAt(charCode);\n    };\n    return PdfCjkStandardFont;\n}(PdfFont));\nexport { PdfCjkStandardFont };\n/**\n * Represents TrueType font.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF truetype font\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._isEmbedFont = false;\n        _this._isUnicode = true;\n        if (style !== undefined) {\n            _this._createFontInternal(base64String, style);\n        }\n        else {\n            _this._createFontInternal(base64String, PdfFontStyle.regular);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isUnicode\", {\n        /**\n         * Gets the boolean flag indicating whether the font has unicode or not.\n         *\n         * @returns {boolean} unicode.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font has or not.\n         * let isUnicode: boolean = font.isUnicode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isEmbed\", {\n        /**\n         * Gets the boolean flag indicating whether the font is embedded or not.\n         *\n         * @returns {boolean} isEmbed.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font is embedded or not.\n         * let isEmbed: boolean = font.isEmbed;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEmbedFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTrueTypeFont.prototype._createFontInternal = function (base64String, style) {\n        this._fontInternal = new _UnicodeTrueTypeFont(base64String, this._size);\n        this._calculateStyle(style);\n        this._initializeInternals();\n    };\n    PdfTrueTypeFont.prototype._calculateStyle = function (style) {\n        var iStyle = this._fontInternal._ttfMetrics._macStyle;\n        if ((style & PdfFontStyle.underline) !== 0) {\n            iStyle |= PdfFontStyle.underline;\n        }\n        if ((style & PdfFontStyle.strikeout) !== 0) {\n            iStyle |= PdfFontStyle.strikeout;\n        }\n        this.style = iStyle;\n    };\n    PdfTrueTypeFont.prototype._initializeInternals = function () {\n        var internals = null;\n        if (this._fontInternal instanceof _UnicodeTrueTypeFont) {\n            this._fontInternal._isEmbed = this._isEmbedFont;\n        }\n        this._fontInternal._createInternals();\n        internals = this._fontInternal._getInternals();\n        this._metrics = this._fontInternal._metrics;\n        this._metrics._isUnicodeFont = true;\n        this._setInternals(internals);\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF truetype font\n     * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n            width = this._getUnicodeLineWidth(line, width);\n        }\n        else {\n            for (var i = 0, len = line.length; i < len; i++) {\n                width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getUnicodeLineWidth = function (line, width) {\n        width = 0;\n        var glyphIndex = [];\n        var result = false;\n        var rtlRender = new _RtlRenderer();\n        var value = rtlRender._getGlyphIndex(line, this, glyphIndex);\n        result = value._result;\n        glyphIndex = value._glyphIndex;\n        if (result && glyphIndex !== null) {\n            var ttfReader = this._fontInternal._ttfReader;\n            for (var i = 0, len = glyphIndex.length; i < len; i++) {\n                var index = glyphIndex[Number.parseInt(i.toString(), 10)];\n                var glyph = ttfReader._getGlyph(index);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph._width;\n                }\n            }\n        }\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidth = function (charCode, format) {\n        var codeWidth = this._fontInternal._getCharacterWidth(charCode);\n        var size = this._metrics._getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    PdfTrueTypeFont.prototype._setSymbols = function (text) {\n        var internalFont = this._fontInternal;\n        if (internalFont !== null && typeof internalFont !== 'undefined') {\n            internalFont._setSymbols(text);\n        }\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this._metrics._name === '0' ||\n            this._metrics._name === '1' ||\n            this._metrics._name === '2' ||\n            this._metrics._name === '3' ||\n            this._metrics._name === '4') {\n            code = code - 32;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var widthTable = this._metrics._widthTable;\n        width = widthTable._itemAt(code);\n        return width;\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\nvar _PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfStandardFontMetricsFactory() {\n    }\n    _PdfStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.helvetica:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                break;\n            case PdfFontFamily.courier:\n                metrics = this._getCourierMetrics(fontStyle, size);\n                break;\n            case PdfFontFamily.timesRoman:\n                metrics = this._getTimesMetrics(fontStyle, size);\n                break;\n            case PdfFontFamily.symbol:\n                metrics = this._getSymbolMetrics(size);\n                break;\n            case PdfFontFamily.zapfDingbats:\n                metrics = this._getZapfDingbatsMetrics(size);\n                break;\n            default:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                break;\n        }\n        metrics._name = fontFamily.toString();\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getHelveticaMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaBoldItalicAscent;\n            metrics._descent = this._helveticaBoldItalicDescent;\n            metrics._postScriptName = this._helveticaBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._helveticaBoldAscent;\n            metrics._descent = this._helveticaBoldDescent;\n            metrics._postScriptName = this._helveticaBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaItalicAscent;\n            metrics._descent = this._helveticaItalicDescent;\n            metrics._postScriptName = this._helveticaItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._helveticaAscent;\n            metrics._descent = this._helveticaDescent;\n            metrics._postScriptName = this._helveticaName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getCourierMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierBoldItalicAscent;\n            metrics._descent = this._courierBoldItalicDescent;\n            metrics._postScriptName = this._courierBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._courierBoldAscent;\n            metrics._descent = this._courierBoldDescent;\n            metrics._postScriptName = this._courierBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierItalicAscent;\n            metrics._descent = this._courierItalicDescent;\n            metrics._postScriptName = this._courierItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._courierAscent;\n            metrics._descent = this._courierDescent;\n            metrics._postScriptName = this._courierName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getTimesMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesBoldItalicAscent;\n            metrics._descent = this._timesBoldItalicDescent;\n            metrics._postScriptName = this._timesBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldItalicWidths);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._timesBoldAscent;\n            metrics._descent = this._timesBoldDescent;\n            metrics._postScriptName = this._timesBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesItalicAscent;\n            metrics._descent = this._timesItalicDescent;\n            metrics._postScriptName = this._timesItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanItalicWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._timesAscent;\n            metrics._descent = this._timesDescent;\n            metrics._postScriptName = this._timesName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getSymbolMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._symbolAscent;\n        metrics._descent = this._symbolDescent;\n        metrics._postScriptName = this._symbolName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._symbolWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getZapfDingbatsMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._zapfDingbatsAscent;\n        metrics._descent = this._zapfDingbatsDescent;\n        metrics._postScriptName = this._zapfDingbatsName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._zapfDingbatsWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    _PdfStandardFontMetricsFactory._helveticaAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaName = 'Helvetica';\n    _PdfStandardFontMetricsFactory._helveticaBoldAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldName = 'Helvetica-Bold';\n    _PdfStandardFontMetricsFactory._helveticaItalicAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaItalicDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaItalicName = 'Helvetica-Oblique';\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    _PdfStandardFontMetricsFactory._courierAscent = 805;\n    _PdfStandardFontMetricsFactory._courierDescent = -250;\n    _PdfStandardFontMetricsFactory._courierName = 'Courier';\n    _PdfStandardFontMetricsFactory._courierBoldAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldName = 'Courier-Bold';\n    _PdfStandardFontMetricsFactory._courierItalicAscent = 805;\n    _PdfStandardFontMetricsFactory._courierItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierItalicName = 'Courier-Oblique';\n    _PdfStandardFontMetricsFactory._courierBoldItalicAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldItalicName = 'Courier-BoldOblique';\n    _PdfStandardFontMetricsFactory._timesAscent = 898;\n    _PdfStandardFontMetricsFactory._timesDescent = -218;\n    _PdfStandardFontMetricsFactory._timesName = 'Times-Roman';\n    _PdfStandardFontMetricsFactory._timesBoldAscent = 935;\n    _PdfStandardFontMetricsFactory._timesBoldDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldName = 'Times-Bold';\n    _PdfStandardFontMetricsFactory._timesItalicAscent = 883;\n    _PdfStandardFontMetricsFactory._timesItalicDescent = -217;\n    _PdfStandardFontMetricsFactory._timesItalicName = 'Times-Italic';\n    _PdfStandardFontMetricsFactory._timesBoldItalicAscent = 921;\n    _PdfStandardFontMetricsFactory._timesBoldItalicDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldItalicName = 'Times-BoldItalic';\n    _PdfStandardFontMetricsFactory._symbolAscent = 1010;\n    _PdfStandardFontMetricsFactory._symbolDescent = -293;\n    _PdfStandardFontMetricsFactory._symbolName = 'Symbol';\n    _PdfStandardFontMetricsFactory._zapfDingbatsAscent = 820;\n    _PdfStandardFontMetricsFactory._zapfDingbatsDescent = -143;\n    _PdfStandardFontMetricsFactory._zapfDingbatsName = 'ZapfDingbats';\n    _PdfStandardFontMetricsFactory._arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    _PdfStandardFontMetricsFactory._fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    _PdfStandardFontMetricsFactory._zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return _PdfStandardFontMetricsFactory;\n}());\nexport { _PdfStandardFontMetricsFactory };\nvar _PdfCjkStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfCjkStandardFontMetricsFactory() {\n    }\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsGothicMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 127, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYGoThic-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsShinMyeongJoMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYSMyeongJo-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiKakuGothicW5 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -125;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiKakuGo-W5';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiMinchoW3 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -143;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiMin-W3';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeHeiMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MHei-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeSungLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MSung-Light';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getSinoTypeSongLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(814, 939, 500));\n        widthTable._add(new _CjkDifferentWidth(7712, [500]));\n        widthTable._add(new _CjkDifferentWidth(7716, [500]));\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'STSong-Light';\n        }\n        metrics._widthTable = widthTable;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                metrics = this._getHanyangSystemsGothicMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsGothicMedium';\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                metrics = this._getHanyangSystemsShinMyeongJoMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsShinMyeongJoMedium';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                metrics = this._getHeiseiKakuGothicW5(fontStyle, size);\n                metrics._name = 'HeiseiKakuGothicW5';\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                metrics = this._getHeiseiMinchoW3(fontStyle, size);\n                metrics._name = 'HeiseiMinchoW3';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                metrics = this._getMonotypeHeiMedium(fontStyle, size);\n                metrics._name = 'MonotypeHeiMedium';\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                metrics = this._getMonotypeSungLight(fontStyle, size);\n                metrics._name = 'MonotypeSungLight';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                metrics = this._getSinoTypeSongLight(fontStyle, size);\n                metrics._name = 'SinoTypeSongLight';\n                break;\n        }\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    return _PdfCjkStandardFontMetricsFactory;\n}());\nexport { _PdfCjkStandardFontMetricsFactory };\nvar _PdfCjkFontDescriptorFactory = /** @class */ (function () {\n    function _PdfCjkFontDescriptorFactory() {\n    }\n    _PdfCjkFontDescriptorFactory._fillMonotypeSungLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -160, y: -249, width: 1175, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiKakuGothicW5 = function (fontDescriptor, fontStyle, fontFamily, fontMetrics) {\n        var fontBox = { x: -92, y: -250, width: 1102, height: 1172 };\n        var fontBoxItalic = { x: -92, y: -250, width: 1102, height: 1932 };\n        if ((fontStyle & (PdfFontStyle.italic | PdfFontStyle.bold)) !== PdfFontStyle.italic) {\n            this._fillFontBox(fontDescriptor, fontBox);\n        }\n        else {\n            this._fillFontBox(fontDescriptor, fontBoxItalic);\n        }\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 689);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsShinMyeongJoMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: 0, y: -148, width: 1001, height: 1028 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiMinchoW3 = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -123, y: -257, width: 1124, height: 1167 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 702);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillSinoTypeSongLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -25, y: -254, width: 1025, height: 1134 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillMonotypeHeiMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -45, y: -250, width: 1060, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsGothicMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -6, y: -145, width: 1009, height: 1025 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('Flags', 4);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillFontBox = function (fontDescriptor, fontBox) {\n        fontDescriptor.set('FontBBox', _fromRectangle(fontBox));\n    };\n    _PdfCjkFontDescriptorFactory._fillKnownInformation = function (fontDescriptor, fontFamily, fontMetrics) {\n        fontDescriptor.set('FontName', _PdfName.get(fontMetrics._postScriptName));\n        fontDescriptor.set('Type', _PdfName.get('FontDescriptor'));\n        fontDescriptor.set('ItalicAngle', 0);\n        fontDescriptor.set('MissingWidth', fontMetrics._widthTable._defaultWidth);\n        fontDescriptor.set('Ascent', fontMetrics._ascent);\n        fontDescriptor.set('Descent', fontMetrics._descent);\n        switch (fontFamily) {\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                fontDescriptor.set('Flags', 4);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n            case PdfCjkFontFamily.monotypeSungLight:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                fontDescriptor.set('Flags', 6);\n                break;\n        }\n    };\n    _PdfCjkFontDescriptorFactory._getFontDescriptor = function (fontFamily, fontStyle, fontMetrics) {\n        var fontDescriptor = new _PdfDictionary();\n        fontDescriptor._updated = true;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                this._fillHanyangSystemsGothicMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                this._fillHanyangSystemsShinMyeongJoMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                this._fillHeiseiKakuGothicW5(fontDescriptor, fontStyle, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                this._fillHeiseiMinchoW3(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                this._fillMonotypeHeiMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                this._fillMonotypeSungLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                this._fillSinoTypeSongLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            default:\n                break;\n        }\n        return fontDescriptor;\n    };\n    return _PdfCjkFontDescriptorFactory;\n}());\nexport { _PdfCjkFontDescriptorFactory };\n/**\n * Public enum to define font style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the font style `regular`.\n     */\n    PdfFontStyle[PdfFontStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the font style `bold`.\n     */\n    PdfFontStyle[PdfFontStyle[\"bold\"] = 1] = \"bold\";\n    /**\n     * Specifies the font style `italic`.\n     */\n    PdfFontStyle[PdfFontStyle[\"italic\"] = 2] = \"italic\";\n    /**\n     * Specifies the font style `underline`.\n     */\n    PdfFontStyle[PdfFontStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the font style `strikeout`.\n     */\n    PdfFontStyle[PdfFontStyle[\"strikeout\"] = 8] = \"strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Public enum to define font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `helvetica` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"helvetica\"] = 0] = \"helvetica\";\n    /**\n     * Specifies the `courier` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"courier\"] = 1] = \"courier\";\n    /**\n     * Specifies the `timesRoman` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"timesRoman\"] = 2] = \"timesRoman\";\n    /**\n     * Specifies the `symbol` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"symbol\"] = 3] = \"symbol\";\n    /**\n     * Specifies the `zapfDingbats` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"zapfDingbats\"] = 4] = \"zapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * Public enum to define CJK font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCjkFontFamily;\n(function (PdfCjkFontFamily) {\n    /**\n     * Specifies the `heiseiKakuGothicW5` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiKakuGothicW5\"] = 0] = \"heiseiKakuGothicW5\";\n    /**\n     * Specifies the `heiseiMinchoW3` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiMinchoW3\"] = 1] = \"heiseiMinchoW3\";\n    /**\n     * Specifies the `hanyangSystemsGothicMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsGothicMedium\"] = 2] = \"hanyangSystemsGothicMedium\";\n    /**\n     * Specifies the `hanyangSystemsShinMyeongJoMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsShinMyeongJoMedium\"] = 3] = \"hanyangSystemsShinMyeongJoMedium\";\n    /**\n     * Specifies the `monotypeHeiMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeHeiMedium\"] = 4] = \"monotypeHeiMedium\";\n    /**\n     * Specifies the `monotypeSungLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeSungLight\"] = 5] = \"monotypeSungLight\";\n    /**\n     * Specifies the `sinoTypeSongLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"sinoTypeSongLight\"] = 6] = \"sinoTypeSongLight\";\n})(PdfCjkFontFamily || (PdfCjkFontFamily = {}));\nvar _UnicodeLine = /** @class */ (function () {\n    function _UnicodeLine() {\n        this._result = false;\n        this._glyphIndex = [];\n    }\n    return _UnicodeLine;\n}());\nexport { _UnicodeLine };\n","import { _getBezierArc } from './../utils';\nimport { PdfFillMode } from './../enumerator';\nvar _PdfPath = /** @class */ (function () {\n    function _PdfPath() {\n        this._isRoundedRectangle = false;\n        this._fillMode = PdfFillMode.winding;\n        this._points = [];\n        this._pathTypes = [];\n        this._isStart = true;\n    }\n    Object.defineProperty(_PdfPath.prototype, \"_lastPoint\", {\n        get: function () {\n            var value = [0, 0];\n            var count = this._points.length;\n            if (this._points.length > 0) {\n                value[0] = this._points[(count - 1)][0];\n                value[1] = this._points[(count - 1)][0];\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfPath.prototype._addLine = function (x1, y1, x2, y2) {\n        this._addPoints([x1, y1, x2, y2], _PathPointType.line);\n    };\n    _PdfPath.prototype._addLines = function (linePoints) {\n        var start = linePoints[0];\n        if (linePoints.length === 1) {\n            this._addPoint(linePoints[0], _PathPointType.line);\n        }\n        else {\n            for (var i = 1; i < linePoints.length; i++) {\n                var last = linePoints[Number.parseInt(i.toString(), 10)];\n                this._addLine(start[0], start[1], last[0], last[1]);\n                start = last;\n            }\n        }\n    };\n    _PdfPath.prototype._addPoints = function (points, type, start, end) {\n        var startIndex = (typeof start !== 'undefined') ? start : 0;\n        var endIndex = (typeof end !== 'undefined') ? end : points.length;\n        for (var i = startIndex; i < endIndex; i++) {\n            var point = [points[Number.parseInt(i.toString(), 10)], points[i + 1]];\n            if (i === startIndex) {\n                if (this._points.length === 0 || this._isStart) {\n                    this._addPoint(point, _PathPointType.start);\n                    this._isStart = false;\n                }\n                else if (this._isRoundedRectangle && (point[0] !== this._lastPoint[0] || point[1] !== this._lastPoint[1])) {\n                    this._addPoint(point, _PathPointType.line);\n                }\n                else if (point[0] !== this._lastPoint[0] && point[1] !== this._lastPoint[1]) {\n                    this._addPoint(point, _PathPointType.line);\n                }\n            }\n            else {\n                this._addPoint(point, type);\n            }\n            i++;\n        }\n    };\n    _PdfPath.prototype._addPoint = function (points, type) {\n        this._points.push(points);\n        this._pathTypes.push(type);\n    };\n    _PdfPath.prototype._addArc = function (x, y, width, height, startAngle, sweepAngle) {\n        var points = _getBezierArc(x, y, x + width, y + height, startAngle, sweepAngle);\n        for (var i = 0; i < points.length; ++i) {\n            var list = [points[Number.parseInt(i.toString(), 10)],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i]];\n            this._addPoints(list, _PathPointType.bezier);\n        }\n    };\n    _PdfPath.prototype._addRectangle = function (x, y, width, height) {\n        this._startFigure();\n        this._addPoints([x, y, x + width, y, x + width, y + height, x, y + height], _PathPointType.line);\n        this._closeFigure();\n    };\n    _PdfPath.prototype._addPolygon = function (points) {\n        var newPoints = [];\n        points.forEach(function (element) {\n            newPoints.push(element[0], element[1]);\n        });\n        this._startFigure();\n        this._addPoints(newPoints, _PathPointType.line);\n        this._closeFigure();\n    };\n    _PdfPath.prototype._addEllipse = function (x, y, width, height) {\n        this._startFigure();\n        this._addArc(x, y, width, height, 0, 360);\n        this._closeFigure();\n    };\n    _PdfPath.prototype._addBezierPoints = function (pointsCollection) {\n        if (pointsCollection.length < 4) {\n            throw Error('Incorrect size of array points');\n        }\n        var bound = 3;\n        var index = 0;\n        var start = pointsCollection[Number.parseInt(index.toString(), 10)];\n        index++;\n        while ((index + bound) <= pointsCollection.length) {\n            var inner1 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var inner2 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var end = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            this._addBezier(start[0], start[1], inner1[0], inner1[1], inner2[0], inner2[1], end[0], end[1]);\n            start = end;\n        }\n    };\n    _PdfPath.prototype._addBezier = function (x, y, firstX, firstY, secondX, secondY, endX, endY) {\n        var points = [];\n        points.push(x);\n        points.push(y);\n        points.push(firstX);\n        points.push(firstY);\n        points.push(secondX);\n        points.push(secondY);\n        points.push(endX);\n        points.push(endY);\n        this._addPoints(points, _PathPointType.bezier);\n    };\n    _PdfPath.prototype._closeFigure = function (index) {\n        if (typeof index !== 'undefined') {\n            var type = this._pathTypes[Number.parseInt(index.toString(), 10)];\n            type |= _PathPointType.closePath;\n            this._pathTypes[Number.parseInt(index.toString(), 10)] = type;\n        }\n        else {\n            if (this._points.length > 0) {\n                this._closeFigure(this._points.length - 1);\n            }\n            this._startFigure();\n        }\n    };\n    _PdfPath.prototype._startFigure = function () {\n        this._isStart = true;\n    };\n    _PdfPath.prototype._getBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this._points.length > 0) {\n            var xmin = this._points[0][0];\n            var xmax = this._points[0][0];\n            var ymin = this._points[0][1];\n            var ymax = this._points[0][1];\n            for (var i = 1; i < this._points.length; ++i) {\n                var point = this._points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point[0], xmin);\n                xmax = Math.max(point[0], xmax);\n                ymin = Math.min(point[1], ymin);\n                ymax = Math.max(point[1], ymax);\n            }\n            bounds = [xmin, ymin, xmax - xmin, ymax - ymin];\n        }\n        return bounds;\n    };\n    return _PdfPath;\n}());\nexport { _PdfPath };\nexport var _PathPointType;\n(function (_PathPointType) {\n    _PathPointType[_PathPointType[\"start\"] = 0] = \"start\";\n    _PathPointType[_PathPointType[\"line\"] = 1] = \"line\";\n    _PathPointType[_PathPointType[\"bezier\"] = 3] = \"bezier\";\n    _PathPointType[_PathPointType[\"pathTypeMask\"] = 7] = \"pathTypeMask\";\n    _PathPointType[_PathPointType[\"dashMode\"] = 16] = \"dashMode\";\n    _PathPointType[_PathPointType[\"pathMarker\"] = 32] = \"pathMarker\";\n    _PathPointType[_PathPointType[\"closePath\"] = 128] = \"closePath\";\n})(_PathPointType || (_PathPointType = {}));\n","import { _PdfGraphicsUnit } from './../../enumerator';\nimport { _PdfUnitConvertor } from './../../graphics/pdf-graphics';\n/**\n * The 'PdfImage' contains methods and properties to handle the images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets the width of the PDF image.\n         *\n         * @returns {number} image width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the width of the image.\n         * let width: number = image.width;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageWidth;\n        },\n        /**\n         * Sets the width of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the width of the image.\n         * image.width = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets the height of the PDF image.\n         *\n         * @returns {number} image height.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the height of the image.\n         * let height: number = image.height;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageHeight;\n        },\n        /**\n         * Sets the height of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the height of the image.\n         * image.height = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the physical dimension of the PDF image (Read only).\n         *\n         * @returns {number[]} image physical dimension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the physical dimension of the image.\n         * let dimension: number[] = image.physicalDimension;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            this._imagePhysicalDimension = this._getPointSize(this.width, this.height, this._horizontalResolution);\n            return [this.width, this.height];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.draw = function (graphics, x, y) {\n        if ((x === null || typeof x === 'undefined') && (y === null || typeof y === 'undefined')) {\n            x = 0;\n            y = 0;\n        }\n        var needSave = (x !== 0 || y !== 0);\n        var state = null;\n        if (needSave) {\n            state = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        graphics.drawImage(this, 0, 0);\n        if (needSave) {\n            graphics.restore(state);\n        }\n    };\n    PdfImage.prototype._getPointSize = function (width, height, horizontalResolution) {\n        if ((horizontalResolution === null || typeof horizontalResolution === 'undefined')) {\n            var dpiX = 96;\n            var size = this._getPointSize(width, height, dpiX);\n            return size;\n        }\n        else {\n            var ucX = new _PdfUnitConvertor();\n            var ucY = new _PdfUnitConvertor();\n            var ptWidth = ucX._convertUnits(width, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var ptHeight = ucY._convertUnits(height, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var size = [ptWidth, ptHeight];\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","import { PdfPage } from './../pdf-page';\nimport { _PdfStreamWriter } from './pdf-stream-writer';\nimport { _PdfBaseStream } from './../base-stream';\nimport { _floatToString, _addProcSet, _reverseMapBlendMode, _mapBlendMode, _getNewGuidString, _getBezierArc, _numberToString, _bytesToString, _stringToUnicodeArray } from './../utils';\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfFont, PdfStandardFont, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { _PdfStringLayouter, _LineType, _StringTokenizer } from './../fonts/string-layouter';\nimport { PdfTextAlignment, PdfTextDirection, PdfSubSuperScript, PdfBlendMode, PdfLineJoin, PdfLineCap, PdfDashStyle, PdfFillMode } from './../enumerator';\nimport { PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { PdfTemplate } from './pdf-template';\nimport { _PdfPath, _PathPointType } from './pdf-path';\nimport { _UnicodeTrueTypeFont } from '../fonts/unicode-true-type-font';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\nimport { PdfImage } from './images/pdf-image';\n/**\n * Represents a graphics from a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * //Create a new pen.\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * //Draw line on the page graphics.\n * graphics.drawLine(pen, 10, 10, 100, 100);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfGraphics` class.\n     *\n     * @param {number[]} size The graphics client size.\n     * @param {_PdfContentStream} content Content stream.\n     * @param {_PdfCrossReference} xref Cross reference.\n     * @param {PdfPage | PdfTemplate} source Source object of the graphics.\n     * @private\n     */\n    function PdfGraphics(size, content, xref, source) {\n        this._pendingResource = []; // eslint-disable-line\n        this._hasResourceReference = false;\n        if (source instanceof PdfPage) {\n            this._source = source._pageDictionary;\n            this._page = source;\n        }\n        else if (source instanceof PdfTemplate) {\n            this._source = source._content.dictionary;\n            this._template = source;\n        }\n        if (this._source && this._source.has('Resources')) {\n            var obj = this._source.getRaw('Resources'); // eslint-disable-line\n            if (obj instanceof _PdfReference) {\n                this._hasResourceReference = true;\n                this._resourceObject = xref._fetch(obj);\n            }\n            else if (obj instanceof _PdfDictionary) {\n                this._resourceObject = obj;\n            }\n        }\n        else {\n            this._resourceObject = new _PdfDictionary();\n            this._source.update('Resources', this._resourceObject);\n        }\n        this._crossReference = xref;\n        this._sw = new _PdfStreamWriter(content);\n        this._size = size;\n        _addProcSet('PDF', this._resourceObject);\n        this._initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the size of the canvas reduced by margins and page templates (Read only).\n         *\n         * @returns {number[]} The width and height of the client area as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics client size.\n         * let size: number[] = page.graphics.clientSize;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return [this._clipBounds[2], this._clipBounds[3]];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"_matrix\", {\n        get: function () {\n            if (typeof this._m === 'undefined') {\n                this._m = new _PdfTransformationMatrix();\n            }\n            return this._m;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"_resources\", {\n        get: function () {\n            var _this = this;\n            if (typeof this._resourceMap === 'undefined') {\n                this._resourceMap = new Map();\n                if (this._resourceObject.has('Font')) {\n                    var fonts = this._resourceObject.get('Font');\n                    if (fonts && fonts.size > 0) {\n                        fonts.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('XObject')) {\n                    var other = this._resourceObject.get('XObject');\n                    if (other && other.size > 0) {\n                        other.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('ExtGState')) {\n                    var state = this._resourceObject.get('ExtGState');\n                    if (state && state.size > 0) {\n                        if (!this._transparencies) {\n                            this._transparencies = new Map();\n                        }\n                        state.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._setTransparencyData(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n            }\n            return this._resourceMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Save the current graphics state.\n     *\n     * @returns {PdfGraphicsState} graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this._matrix);\n        state._textRenderingMode = this._textRenderingMode;\n        state._charSpacing = this._characterSpacing;\n        state._textScaling = this._textScaling;\n        state._wordSpacing = this._wordSpacing;\n        state._currentBrush = this._currentBrush;\n        state._currentPen = this._currentPen;\n        state._currentFont = this._currentFont;\n        this._graphicsState.push(state);\n        this._sw._saveGraphicsState();\n        return state;\n    };\n    /**\n     * Restore the graphics state.\n     *\n     * @param {PdfGraphicsState} state graphics state.\n     * @returns {void} restore of the graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.restore = function (state) {\n        if (this._graphicsState.length > 0) {\n            if (typeof state === 'undefined') {\n                this._doRestore();\n            }\n            else {\n                if (this._graphicsState.length > 0 && this._graphicsState.indexOf(state) !== -1) {\n                    while (this._graphicsState.length > 0) {\n                        if (this._doRestore() === state) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._doRestore = function () {\n        var state = this._graphicsState.pop();\n        this._m = state._transformationMatrix;\n        this._currentBrush = state._currentBrush;\n        this._currentPen = state._currentPen;\n        this._currentFont = state._currentFont;\n        this._characterSpacing = state._charSpacing;\n        this._wordSpacing = state._wordSpacing;\n        this._textScaling = state._textScaling;\n        this._textRenderingMode = state._textRenderingMode;\n        this._sw._restoreGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.drawRectangle = function (x, y, width, height, first, second) {\n        var pen;\n        var brush;\n        if (first instanceof PdfPen) {\n            pen = first;\n            if (second) {\n                brush = second;\n            }\n        }\n        else {\n            brush = first;\n        }\n        this._stateControl(pen, brush);\n        this._sw._appendRectangle(x, y, width, height);\n        this._drawGraphicsPath(pen, brush);\n    };\n    PdfGraphics.prototype.drawPolygon = function (points, first, second) {\n        if (points.length > 0) {\n            var pen = void 0;\n            var brush = void 0;\n            if (first instanceof PdfPen) {\n                pen = first;\n                if (second) {\n                    brush = second;\n                }\n            }\n            else {\n                brush = first;\n            }\n            this._stateControl(pen, brush);\n            this._sw._beginPath(points[0][0], points[0][1]);\n            for (var i = 1; i < points.length; i++) {\n                this._sw._appendLineSegment(points[Number.parseInt(i.toString(), 10)][0], points[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._drawGraphicsPath(pen, brush, PdfFillMode.winding, true);\n        }\n    };\n    PdfGraphics.prototype.drawEllipse = function (x, y, width, height, first, second) {\n        var pen;\n        var brush;\n        if (first instanceof PdfPen) {\n            pen = first;\n            if (second) {\n                brush = second;\n            }\n        }\n        else {\n            brush = first;\n        }\n        this._stateControl(pen, brush);\n        this._constructArcPath(x, y, x + width, y + height, 0, 360);\n        this._drawGraphicsPath(pen, brush, PdfFillMode.winding, true);\n    };\n    /**\n     * Draw arc on the page graphics.\n     *\n     * @param {number} x value.\n     * @param {number} y value.\n     * @param {number} width value.\n     * @param {number} height value.\n     * @param {number} startAngle value.\n     * @param {number} sweepAngle value.\n     * @param {PdfPen} pen value.\n     * @returns {void} draw a arc.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * //Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * //Draw arc on the page graphics.\n     * graphics.drawArc(10, 20, 100, 200, 20, 30, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawArc = function (x, y, width, height, startAngle, sweepAngle, pen) {\n        if (sweepAngle !== 0) {\n            this._stateControl(pen);\n            this._constructArcPath(x, y, x + width, y + height, startAngle, sweepAngle);\n            this._drawGraphicsPath(pen, null, PdfFillMode.winding, false);\n        }\n    };\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size[0], size[1]);\n        }\n        else {\n            arg1._save();\n            var matrix = new _PdfTransformationMatrix();\n            this._getTranslateTransform(arg2, (arg3 + arg5), matrix);\n            this._getScaleTransform(arg4, arg5, matrix);\n            this._sw._write('q');\n            this._sw._modifyCtm(matrix);\n            var sourceDictionary = void 0;\n            var keyName = void 0;\n            var isNew = true;\n            if (this._resourceObject.has('XObject')) {\n                var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n                if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n                if (sourceDictionary) {\n                    isNew = false;\n                }\n            }\n            if (isNew) {\n                sourceDictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('XObject', sourceDictionary);\n            }\n            if (typeof keyName === 'undefined') {\n                keyName = _PdfName.get(_getNewGuidString());\n            }\n            if (this._crossReference) {\n                this._updateImageResource(arg1, keyName, sourceDictionary, this._crossReference);\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            else {\n                this._pendingResource.push({ 'resource': arg1, 'key': keyName, 'source': sourceDictionary });\n            }\n            this._sw._executeObject(keyName);\n            this._sw._write('Q');\n            this._sw._write('\\r\\n');\n            _addProcSet('ImageB', this._resourceObject);\n            _addProcSet('ImageC', this._resourceObject);\n            _addProcSet('ImageI', this._resourceObject);\n            _addProcSet('Text', this._resourceObject);\n        }\n    };\n    /**\n     * Draw the PDF template onto the page graphics.\n     *\n     * @param {PdfTemplate} template PDF template.\n     * @param {{x: number, y: number, width: number, height: number}} bounds Bounds.\n     * @param {number} bounds.x value.\n     * @param {number} bounds.y value.\n     * @param {number} bounds.width value.\n     * @param {number} bounds.height value.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Get the first annotation of the page\n     * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n     * // Gets the appearance template of the annotation.\n     * let template: PdfTemplate = annotation.createTemplate();\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * //Draw image on the page graphics.\n     * graphics.drawTemplate(template, 10, 20, template.size[0], template.size[1]);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawTemplate = function (template, bounds) {\n        var _this = this;\n        if (typeof template !== 'undefined') {\n            if (template._isExported) {\n                if (this._crossReference) {\n                    template._crossReference = this._crossReference;\n                    template._importStream(true);\n                }\n                else {\n                    template._importStream(false);\n                    this._pendingResource.push(template);\n                }\n            }\n            var scaleX = (template && template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n            var scaleY = (template && template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n            var needScale = !(scaleX === 1 && scaleY === 1);\n            var cropBox = void 0;\n            var mediaBox = void 0;\n            if (this._page) {\n                cropBox = this._page.cropBox;\n                mediaBox = this._page.mediaBox;\n                if (this._page._pageDictionary.has('CropBox') && this._page._pageDictionary.has('MediaBox')) {\n                    if (cropBox[0] > 0 && cropBox[1] > 0 && mediaBox[0] < 0 && mediaBox[1] < 0) {\n                        this.translateTransform(cropBox[0], -cropBox[1]);\n                        bounds.x = -cropBox[0];\n                        bounds.y = cropBox[1];\n                    }\n                }\n            }\n            var state = this.save();\n            var matrix = new _PdfTransformationMatrix();\n            if (this._page) {\n                var needTransform = (this._page._pageDictionary.has('CropBox') &&\n                    this._page._pageDictionary.has('MediaBox') && cropBox && mediaBox &&\n                    cropBox[0] === mediaBox[0] && cropBox[1] === mediaBox[1] && cropBox[2] === mediaBox[2] && cropBox[3] === mediaBox[3]) ||\n                    (this._page._pageDictionary.has('MediaBox') && mediaBox && mediaBox[3] === 0);\n                matrix._translate(bounds.x, -(bounds.y + ((this._page._origin[0] >= 0 || needTransform) ? bounds.height : 0)));\n            }\n            else {\n                matrix._translate(bounds.x, -(bounds.y + bounds.height));\n            }\n            if (needScale) {\n                if (template._isAnnotationTemplate && template._needScale) {\n                    var scaleApplied = false;\n                    if (template._content && template._content.dictionary) {\n                        var dictionary = template._content.dictionary;\n                        if (dictionary.has('Matrix') && dictionary.has('BBox')) {\n                            var templateMatrix = dictionary.getArray('Matrix');\n                            var templateBox = dictionary.getArray('BBox');\n                            if (templateMatrix && templateBox && templateMatrix.length > 5 && templateBox.length > 3) {\n                                var templateScaleX = Number.parseFloat(_numberToString(-templateMatrix[1]));\n                                var templateScaleY = Number.parseFloat(_numberToString(templateMatrix[2]));\n                                var roundScaleX = Number.parseFloat(_numberToString(scaleX));\n                                var roundScaleY = Number.parseFloat(_numberToString(scaleY));\n                                if (roundScaleX === templateScaleX &&\n                                    roundScaleY === templateScaleY &&\n                                    templateBox[2] === template._size[0] &&\n                                    templateBox[3] === template._size[1]) {\n                                    matrix = new _PdfTransformationMatrix();\n                                    matrix._translate(bounds.x - templateMatrix[4], bounds.y + templateMatrix[5]);\n                                    matrix._scale(1, 1);\n                                    scaleApplied = true;\n                                }\n                            }\n                        }\n                    }\n                    if (!scaleApplied) {\n                        matrix._scale(scaleX, scaleY);\n                    }\n                }\n                else {\n                    matrix._scale(scaleX, scaleY);\n                }\n            }\n            this._sw._modifyCtm(matrix);\n            var sourceDictionary = void 0;\n            var isReference = false;\n            var keyName_1;\n            var isNew = true;\n            var ref_1;\n            if (this._resourceObject.has('XObject')) {\n                var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n                if (obj instanceof _PdfReference) {\n                    isReference = true;\n                    sourceDictionary = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n                if (sourceDictionary) {\n                    isNew = false;\n                    this._resources.forEach(function (value, key) {\n                        if (key && key instanceof _PdfReference) {\n                            var base = _this._crossReference._fetch(key);\n                            if (base && template && base === template._content) {\n                                keyName_1 = value;\n                                ref_1 = key;\n                            }\n                        }\n                    });\n                }\n            }\n            if (isNew) {\n                sourceDictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('XObject', sourceDictionary);\n            }\n            if (typeof keyName_1 === 'undefined') {\n                keyName_1 = _PdfName.get(_getNewGuidString());\n                if (template && template._content.reference) {\n                    ref_1 = template._content.reference;\n                }\n                else if (this._crossReference) {\n                    ref_1 = this._crossReference._getNextReference();\n                }\n                else {\n                    this._pendingResource.push({ 'resource': template._content, 'key': keyName_1, 'source': sourceDictionary });\n                }\n                if (ref_1 && this._crossReference) {\n                    if (!this._crossReference._cacheMap.has(ref_1) && template && template._content) {\n                        this._crossReference._cacheMap.set(ref_1, template._content);\n                    }\n                    sourceDictionary.update(keyName_1.name, ref_1);\n                    this._resources.set(ref_1, keyName_1);\n                }\n                this._resourceObject._updated = true;\n            }\n            if (isReference) {\n                this._resourceObject._updated = true;\n            }\n            if (this._hasResourceReference) {\n                this._source._updated = true;\n            }\n            this._sw._executeObject(keyName_1);\n            this.restore(state);\n            _addProcSet('ImageB', this._resourceObject);\n            _addProcSet('ImageC', this._resourceObject);\n            _addProcSet('ImageI', this._resourceObject);\n            _addProcSet('Text', this._resourceObject);\n        }\n    };\n    PdfGraphics.prototype._processResources = function (crossReference) {\n        this._crossReference = crossReference;\n        if (this._pendingResource.length > 0) {\n            for (var i = 0; i < this._pendingResource.length; i++) {\n                var entry = this._pendingResource[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (entry instanceof PdfTemplate) {\n                    entry._crossReference = crossReference;\n                    entry._updatePendingResource(crossReference);\n                }\n                else if (entry.resource instanceof _PdfBaseStream) {\n                    var reference = void 0;\n                    if (entry.resource._reference) {\n                        reference = entry.resource._reference;\n                    }\n                    else {\n                        reference = crossReference._getNextReference();\n                        entry.resource._reference = reference;\n                    }\n                    if (!crossReference._cacheMap.has(reference) && entry.resource) {\n                        crossReference._cacheMap.set(reference, entry.resource);\n                    }\n                    entry.source.update(entry.key.name, reference);\n                    this._resources.set(reference, entry.key);\n                }\n                else if (entry.resource instanceof PdfImage) {\n                    this._updateImageResource(entry.resource, entry.key, entry.source, crossReference);\n                }\n                else if (entry.resource instanceof PdfFont) {\n                    this._updateFontResource(entry.resource, entry.key, entry.source, crossReference);\n                }\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            this._pendingResource = [];\n        }\n    };\n    PdfGraphics.prototype._updateImageResource = function (image, keyName, source, crossReference) {\n        var reference;\n        if (image._reference) {\n            reference = image._reference;\n        }\n        else {\n            reference = crossReference._getNextReference();\n            image._reference = reference;\n        }\n        if (!crossReference._cacheMap.has(reference)) {\n            if (image && image._imageStream && image._imageStream.dictionary) {\n                crossReference._cacheMap.set(reference, image._imageStream);\n                image._imageStream.dictionary._updated = true;\n                if (image._maskStream && image._maskStream.dictionary) {\n                    var ref = void 0;\n                    if (image._maskReference) {\n                        ref = image._maskReference;\n                    }\n                    else {\n                        ref = crossReference._getNextReference();\n                        image._maskReference = ref;\n                    }\n                    crossReference._cacheMap.set(ref, image._maskStream);\n                    image._maskStream.dictionary._updated = true;\n                    image._imageStream.dictionary.set('SMask', ref);\n                }\n            }\n        }\n        source.update(keyName.name, reference);\n        this._resources.set(reference, keyName);\n        this._resourceObject._updated = true;\n    };\n    PdfGraphics.prototype._updateFontResource = function (font, keyName, source, crossReference) {\n        var reference;\n        if (font._reference) {\n            reference = font._reference;\n        }\n        else {\n            reference = crossReference._getNextReference();\n            font._reference = reference;\n        }\n        if (!crossReference._cacheMap.has(reference)) {\n            if (font._dictionary) {\n                crossReference._cacheMap.set(reference, font._dictionary);\n                source.update(keyName.name, reference);\n                this._resources.set(reference, keyName);\n            }\n            else if (font instanceof PdfTrueTypeFont) {\n                var internal = font._fontInternal;\n                if (internal && internal._fontDictionary) {\n                    crossReference._cacheMap.set(reference, internal._fontDictionary);\n                }\n                source.update(keyName.name, reference);\n                this._resources.set(reference, keyName);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawPath = function (path, pen, brush) {\n        if (pen || brush) {\n            this._stateControl(pen, brush, null);\n            this._buildUpPath(path._points, path._pathTypes);\n            this._drawGraphicsPath(pen, brush, path._fillMode, false);\n        }\n    };\n    /**\n     * Draw rounded rectangle on the page graphics.\n     *\n     * @param {number} x value.\n     * @param {number} y value.\n     * @param {number} width value.\n     * @param {number} height value.\n     * @param {number} radius value.\n     * @param {PdfPen} pen value.\n     * @param {PdfBrush} brush value.\n     * @returns {void} draw a rounded rectangle.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * //Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * //Create a new brush.\n     * let brush: PdfBrush = new PdfBrush([0, 0, 255]);\n     * //Draw rounded rectangle on the page graphics.\n     * graphics.drawRoundedRectangle(10, 20, 100, 200, 5, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawRoundedRectangle = function (x, y, width, height, radius, pen, brush) {\n        if (pen === null) {\n            throw new Error('pen');\n        }\n        if (brush === null) {\n            throw new Error('brush');\n        }\n        var bounds = [x, y, width, height];\n        var diameter = radius * 2;\n        var size = [diameter, diameter];\n        var arc = [bounds[0], bounds[1], size[0], size[1]];\n        var path = new _PdfPath();\n        if (radius === 0) {\n            path._addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            this._drawPath(path, pen, brush);\n        }\n        else {\n            path._isRoundedRectangle = true;\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 180, 90);\n            arc[0] = (bounds[0] + bounds[2]) - diameter;\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 270, 90);\n            arc[1] = (bounds[1] + bounds[3]) - diameter;\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 0, 90);\n            arc[0] = bounds[0];\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 90, 90);\n            path._closeFigure();\n            this._drawPath(path, pen, brush);\n        }\n    };\n    PdfGraphics.prototype._constructArcPath = function (x1, y1, x2, y2, start, sweep) {\n        var points = _getBezierArc(x1, y1, x2, y2, start, sweep);\n        if (points.length === 8) {\n            return;\n        }\n        var point = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this._sw._beginPath(point[0], point[1]);\n        for (var i = 0; i < points.length; i = i + 8) {\n            point = [points[Number.parseInt(i.toString(), 10)],\n                points[i + 1],\n                points[i + 2],\n                points[i + 3],\n                points[i + 4],\n                points[i + 5],\n                points[i + 6],\n                points[i + 7]];\n            this._sw._appendBezierSegment(point[2], point[3], point[4], point[5], point[6], point[7]);\n        }\n    };\n    PdfGraphics.prototype._writePen = function (pen) {\n        var lineWidth = pen._width;\n        var pattern = pen._dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= pen._width; // eslint-disable-line\n        }\n        this._sw._setLineDashPattern(pattern, pen._dashOffset * lineWidth);\n        this._sw._setLineWidth(pen._width);\n        this._sw._setLineJoin(pen._lineJoin);\n        this._sw._setLineCap(pen._lineCap);\n        if (pen._miterLimit > 0) {\n            this._sw._setMiterLimit(pen._miterLimit);\n        }\n        this._sw._setColor(pen._color, true);\n    };\n    /**\n     * Draw text on the page graphics.\n     *\n     * @param {string} value draw string.\n     * @param {PdfFont} font value.\n     * @param {number[]} bounds value.\n     * @param {PdfPen} pen value.\n     * @param {PdfBrush} brush value.\n     * @param {PdfStringFormat} format value.\n     * @returns {void} draw a string.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new font.\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n     * // Create a new string format\n     * let format: PdfStringFormat = new PdfStringFormat();\n     * format.alignment = PdfTextAlignment.center;\n     * // Draw text on the page graphics.\n     * graphics.drawString('Hello World', font, [10, 20, 100, 200], pen, new PdfBrush([0, 0, 255]), format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawString = function (value, font, bounds, pen, brush, format) {\n        var layouter = new _PdfStringLayouter();\n        var result = layouter._layout(value, font, format, [bounds[2], bounds[3]]);\n        if (!result._empty) {\n            var rect = this._checkCorrectLayoutRectangle(result._actualSize, bounds[0], bounds[1], format);\n            if (bounds[2] <= 0) {\n                bounds[0] = rect[0];\n                bounds[2] = rect[2];\n            }\n            if (bounds[3] <= 0) {\n                bounds[1] = rect[1];\n                bounds[3] = rect[3];\n            }\n            this._drawStringLayoutResult(result, font, pen, brush, bounds, format);\n        }\n        _addProcSet('Text', this._resourceObject);\n    };\n    PdfGraphics.prototype._buildUpPath = function (points, types) {\n        for (var i = 0; i < points.length; i++) {\n            var point = points[Number.parseInt(i.toString(), 10)];\n            var type = types[Number.parseInt(i.toString(), 10)];\n            switch (type & 0xf) {\n                case _PathPointType.start:\n                    this._sw._beginPath(point[0], point[1]);\n                    break;\n                case _PathPointType.bezier:\n                    var result = this._getBezierPoint(points, types, i); // eslint-disable-line\n                    i = result.index;\n                    var first = result.point; // eslint-disable-line\n                    result = this._getBezierPoint(points, types, i);\n                    i = result.index;\n                    var second = result.point; // eslint-disable-line\n                    this._sw._appendBezierSegment(point[0], point[1], first[0], first[1], second[0], second[1]);\n                    break;\n                case _PathPointType.line:\n                    this._sw._appendLineSegment(point[0], point[1]);\n                    break;\n                default:\n                    throw new Error('Incorrect path formation.');\n            }\n            type = types[Number.parseInt(i.toString(), 10)];\n            if ((type & _PathPointType.closePath) === _PathPointType.closePath) {\n                this._sw._closePath();\n            }\n        }\n    };\n    PdfGraphics.prototype._getBezierPoint = function (points, types, index) {\n        if (types[Number.parseInt(index.toString(), 10)] !== _PathPointType.bezier) {\n            throw new Error('Malforming path.');\n        }\n        index++;\n        return { 'index': index, 'point': points[Number.parseInt(index.toString(), 10)] };\n    };\n    PdfGraphics.prototype._initialize = function () {\n        this._mediaBoxUpperRightBound = 0;\n        this._characterSpacing = -1;\n        this._wordSpacing = -1;\n        this._textScaling = -100;\n        this._textRenderingMode = -1;\n        this._graphicsState = [];\n        this._clipBounds = [0, 0, this._size[0], this._size[1]];\n        this._colorSpaceInitialized = false;\n        this._startCutIndex = -1;\n    };\n    PdfGraphics.prototype._initializeCurrentColorSpace = function () {\n        if (!this._colorSpaceInitialized) {\n            this._sw._setColorSpace('DeviceRGB', true);\n            this._sw._setColorSpace('DeviceRGB', false);\n            this._colorSpaceInitialized = true;\n        }\n    };\n    PdfGraphics.prototype._brushControl = function (brush) {\n        this._sw._setColor(brush._color, false);\n        this._currentBrush = brush;\n    };\n    PdfGraphics.prototype._penControl = function (pen) {\n        this._currentPen = pen;\n        this._writePen(pen);\n        this._currentPen = pen;\n    };\n    PdfGraphics.prototype._fontControl = function (font, format) {\n        var _this = this;\n        var size = font._metrics._getSize(format);\n        this._currentFont = font;\n        var sourceDictionary;\n        var isReference = false;\n        var keyName;\n        var isNew = true;\n        var ref;\n        var hasResource = false;\n        if (this._resourceObject.has('Font')) {\n            var obj = this._resourceObject.getRaw('Font'); // eslint-disable-line\n            if (obj !== null && typeof obj !== 'undefined') {\n                if (obj instanceof _PdfReference) {\n                    isReference = true;\n                    sourceDictionary = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n            }\n            if (typeof sourceDictionary !== 'undefined' && sourceDictionary !== null) {\n                isNew = false;\n                this._resources.forEach(function (value, key) {\n                    if (_this._crossReference) {\n                        if (key !== null && typeof key !== 'undefined') {\n                            var dictionary = _this._crossReference._fetch(key);\n                            if (dictionary && ((font instanceof PdfStandardFont && dictionary === font._dictionary) ||\n                                (font instanceof PdfTrueTypeFont && dictionary === font._fontInternal._fontDictionary))) {\n                                keyName = value;\n                                ref = key;\n                                hasResource = true;\n                            }\n                        }\n                    }\n                    else if (font._reference && font._reference === key) {\n                        keyName = value;\n                        ref = key;\n                        hasResource = true;\n                    }\n                });\n            }\n        }\n        if (isNew) {\n            sourceDictionary = new _PdfDictionary(this._crossReference);\n            this._resourceObject.update('Font', sourceDictionary);\n        }\n        if (typeof keyName === 'undefined') {\n            keyName = _PdfName.get(_getNewGuidString());\n            if (!ref) {\n                if (font._reference) {\n                    ref = font._reference;\n                    sourceDictionary.update(keyName.name, ref);\n                }\n                else if (this._crossReference) {\n                    ref = this._crossReference._getNextReference();\n                }\n                else {\n                    this._pendingResource.push({ 'resource': font, 'key': keyName, 'source': sourceDictionary });\n                }\n            }\n            if (ref && this._crossReference) {\n                if (!font._reference) {\n                    font._reference = ref;\n                }\n                if (font._dictionary) {\n                    this._crossReference._cacheMap.set(ref, font._dictionary);\n                    sourceDictionary.update(keyName.name, ref);\n                }\n                else if (font instanceof PdfTrueTypeFont) {\n                    var internal = font._fontInternal;\n                    if (internal && internal._fontDictionary) {\n                        this._crossReference._cacheMap.set(ref, internal._fontDictionary);\n                    }\n                    sourceDictionary.update(keyName.name, ref);\n                }\n            }\n            if (!hasResource) {\n                this._resources.set(ref, keyName);\n            }\n        }\n        if (isReference) {\n            this._resourceObject._updated = true;\n        }\n        if (this._hasResourceReference) {\n            this._source._updated = true;\n        }\n        this._sw._setFont(keyName.name, size);\n    };\n    PdfGraphics.prototype._stateControl = function (pen, brush, font, format) {\n        if (pen || brush) {\n            this._initializeCurrentColorSpace();\n        }\n        if (pen) {\n            this._penControl(pen);\n        }\n        if (brush) {\n            this._brushControl(brush);\n        }\n        if (font) {\n            this._fontControl(font, format);\n        }\n    };\n    PdfGraphics.prototype._drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result._empty) {\n            var allowPartialLines = (format && typeof format.lineLimit !== 'undefined' && !format.lineLimit);\n            var shouldClip = (typeof format === 'undefined' || (format && typeof format.noClip !== 'undefined'\n                && !format.noClip));\n            var clipRegion = allowPartialLines && shouldClip;\n            var state = void 0;\n            if (clipRegion) {\n                state = this.save();\n                var clipBounds = [layoutRectangle[0], layoutRectangle[1], result._actualSize[0], result._actualSize[1]];\n                if (layoutRectangle[2] > 0) {\n                    clipBounds[2] = layoutRectangle[2];\n                }\n                if (format.lineAlignment === PdfVerticalAlignment.middle) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]) / 2;\n                }\n                else if (format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]);\n                }\n                this.setClip(clipBounds);\n            }\n            this._applyStringSettings(font, pen, brush, format);\n            var textScaling = (typeof format !== 'undefined' && format !== null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this._textScaling) {\n                this._sw._setTextScaling(textScaling);\n                this._textScaling = textScaling;\n            }\n            var verticalAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n            var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                font._metrics._getHeight(format) :\n                format.lineSpacing + font._metrics._getHeight(format);\n            var script = (format !== null && typeof format !== 'undefined' &&\n                format.subSuperScript === PdfSubSuperScript.subScript);\n            var shift = 0;\n            shift = (script) ? height - (font.height + font._metrics._getDescent(format)) : (height - font._metrics._getAscent(format));\n            if (format && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                    (layoutRectangle[3] - result._actualSize[1]) < (font._metrics._size / 2) - 1) {\n                    if (Number.parseFloat(_numberToString(layoutRectangle[3])) <=\n                        Number.parseFloat(_numberToString(font._metrics._getHeight(format)))) {\n                        shift = -(height / font._metrics._size);\n                    }\n                }\n            }\n            var matrix = new _PdfTransformationMatrix();\n            matrix._translate(layoutRectangle[0], (-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                (font._metrics._getDescent(format) > 0 ? -font._metrics._getDescent(format) : font._metrics._getDescent(format))) -\n                verticalAlignShift);\n            this._sw._modifyTM(matrix);\n            if (layoutRectangle[3] < font._metrics._size) {\n                if ((result._actualSize[1] - layoutRectangle[3]) < (font._metrics._size / 2) - 1) {\n                    verticalAlignShift = 0;\n                }\n            }\n            if (verticalAlignShift !== 0) {\n                if (format !== null && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                        (layoutRectangle[3] - result._actualSize[1]) > (font._metrics._size / 2) - 1) {\n                        verticalAlignShift -= (shift - (height - font._metrics._size)) / 2;\n                    }\n                }\n            }\n            this._drawLayoutResult(result, font, format, layoutRectangle);\n            if (verticalAlignShift !== 0) {\n                this._sw._startNextLine(0, -(verticalAlignShift - result._lineHeight));\n            }\n            _addProcSet('Text', this._resourceObject);\n            this._sw._endText();\n            this._underlineStrikeoutText(brush, result, font, layoutRectangle, format);\n            if (clipRegion) {\n                this.restore(state);\n            }\n        }\n    };\n    PdfGraphics.prototype._getNextPage = function () {\n        var page;\n        var pageCount = this._crossReference._document.pageCount;\n        if (this._page._pageIndex < pageCount - 2) {\n            page = this._crossReference._document.getPage(this._page._pageIndex + 1);\n        }\n        return page;\n    };\n    PdfGraphics.prototype._applyStringSettings = function (font, pen, brush, format) {\n        var tm = _TextRenderingMode.fill;\n        if (pen !== null && brush !== null) {\n            tm = _TextRenderingMode.fillStroke;\n        }\n        else if (pen) {\n            tm = _TextRenderingMode.stroke;\n        }\n        else if (brush) {\n            tm = _TextRenderingMode.fill;\n        }\n        if (format && format.clipPath) {\n            tm |= _TextRenderingMode.clipFlag;\n        }\n        this._sw._beginText();\n        this._stateControl(pen, brush, font, format);\n        if (tm !== this._textRenderingMode) {\n            this._sw._setTextRenderingMode(tm);\n            this._textRenderingMode = tm;\n        }\n        var cs = (typeof format !== 'undefined' && format !== null) ? format.characterSpacing : 0;\n        if (cs !== this._characterSpacing) {\n            this._sw._setCharacterSpacing(cs);\n            this._characterSpacing = cs;\n        }\n        var ws = (typeof format !== 'undefined' && format !== null) ? format.wordSpacing : 0;\n        if (ws !== this._wordSpacing) {\n            this._sw._setWordSpacing(ws);\n            this._wordSpacing = ws;\n        }\n    };\n    PdfGraphics.prototype._drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n            font._metrics._getHeight(format) :\n            format.lineSpacing + font._metrics._getHeight(format);\n        var lines = result._lines;\n        var ttfFont = font;\n        var unicode = (ttfFont !== null && ttfFont.isUnicode);\n        for (var i = 0, len = lines.length; (i < len && i !== this._startCutIndex); i++) {\n            var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n            var lineWidth = lineInfo._width;\n            var hAlignShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format) +\n                this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n            if (hAlignShift !== 0) {\n                this._sw._startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this._drawUnicodeLine(lineInfo, layoutRectangle[2], font, format);\n            }\n            else {\n                this._drawAsciiLine(lineInfo, layoutRectangle[2], format, font);\n            }\n            if ((i + 1 !== len)) {\n                var vAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var matrix = new _PdfTransformationMatrix();\n                var baseline = ((-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                    font._metrics._getDescent(format)) -\n                    vAlignShift) -\n                    (height * (i + 1));\n                matrix._translate(layoutRectangle[0], baseline);\n                this._sw._modifyTM(matrix);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeLine = function (lineInfo, width, font, format) {\n        var line = lineInfo._text;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && (format.wordSpacing !== 0 ||\n            format.alignment === PdfTextAlignment.justify));\n        var ttfFont = font;\n        var wordSpacing = this._justifyLine(lineInfo, width, format, ttfFont);\n        var rtlRender = new _RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none)) {\n            var blocks = [];\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                blocks = rtlRender._layout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender._layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = [];\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    words = rtlRender._splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this._breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this._convertToUnicode(line, ttfFont);\n                this._sw._showNextLineText(token, true);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        if (blocks !== null && typeof blocks !== 'undefined' && blocks.length > 0 && words !== null && typeof words !== 'undefined' &&\n            words.length > 0 && font !== null && typeof font !== 'undefined') {\n            this._sw._startNextLine();\n            var x = 0;\n            var xShift = 0;\n            var firstLineIndent = 0;\n            var paragraphIndent = 0;\n            try {\n                if (format !== null && typeof format !== 'undefined') {\n                    firstLineIndent = format.firstLineIndent;\n                    paragraphIndent = format.paragraphIndent;\n                    format.firstLineIndent = 0;\n                    format.paragraphIndent = 0;\n                }\n                var spaceWidth = font._getCharacterWidth(_StringTokenizer._whiteSpace, format) + wordSpacing;\n                var characterSpacing = (format !== null) ? format.characterSpacing : 0;\n                var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n                spaceWidth += characterSpacing + wordSpace;\n                for (var i = 0; i < blocks.length; i++) {\n                    var token = blocks[i]; //eslint-disable-line\n                    var word = words[i]; //eslint-disable-line\n                    var tokenWidth = 0;\n                    if (x !== 0) {\n                        this._sw._startNextLine(x, 0);\n                    }\n                    if (word.length > 0) {\n                        tokenWidth += font.measureString(word, format)[0];\n                        tokenWidth += characterSpacing;\n                        this._sw._showText(token);\n                    }\n                    if (i !== blocks.length - 1) {\n                        x = tokenWidth + spaceWidth;\n                        xShift += x;\n                    }\n                }\n                if (xShift > 0) {\n                    this._sw._startNextLine(-xShift, 0);\n                }\n            }\n            finally {\n                if (format !== null && typeof format !== 'undefined') {\n                    format.firstLineIndent = firstLineIndent;\n                    format.paragraphIndent = paragraphIndent;\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._breakUnicodeLine = function (line, ttfFont, words) {\n        var tokens = [];\n        if (line !== null && typeof line !== 'undefined' && line.length > 0) {\n            words = line.split(null);\n            for (var i = 0; i < words.length; i++) {\n                var word = words[i]; //eslint-disable-line\n                var token = this._convertToUnicode(word, ttfFont);\n                tokens[Number.parseInt(i.toString(), 10)] = token;\n            }\n        }\n        return { tokens: tokens, words: words };\n    };\n    PdfGraphics.prototype._convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text !== null && typeof text !== 'undefined' && ttfFont !== null && typeof ttfFont !== 'undefined' &&\n            ttfFont._fontInternal instanceof _UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont._fontInternal._ttfReader;\n            ttfFont._setSymbols(text);\n            token = ttfReader._convertString(text);\n            var bytes = _stringToUnicodeArray(token);\n            token = _bytesToString(bytes);\n        }\n        return token;\n    };\n    PdfGraphics.prototype._getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && (typeof format !== 'undefined' && format !== null) && format.lineAlignment !== PdfVerticalAlignment.top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && (typeof format !== 'undefined' && format !== null) && format.alignment !== PdfTextAlignment.left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getLineIndent = function (lineInfo, format, width, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo._lineType & _LineType.firstParagraphLine) > 0);\n        if (format && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (width > 0) ? Math.min(width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    PdfGraphics.prototype._drawAsciiLine = function (lineInfo, width, format, font) {\n        this._justifyLine(lineInfo, width, format, font);\n        var value = '';\n        if (lineInfo._text.indexOf('(') !== -1 || lineInfo._text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo._text.length; i++) {\n                if (lineInfo._text[Number.parseInt(i.toString(), 10)] === '(') {\n                    value += '\\\\\\('; // eslint-disable-line\n                }\n                else if (lineInfo._text[Number.parseInt(i.toString(), 10)] === ')') {\n                    value += '\\\\\\)'; // eslint-disable-line\n                }\n                else {\n                    value += lineInfo._text[Number.parseInt(i.toString(), 10)];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo._text;\n        }\n        this._sw._showNextLineText('(' + value + ')');\n    };\n    PdfGraphics.prototype._justifyLine = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var shouldJustify = this._shouldJustify(lineInfo, boundsWidth, format, font);\n        var hasWordSpacing = (format && format.wordSpacing !== 0);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            wordSpace = (boundsWidth - lineWidth) / whitespacesCount;\n            this._sw._setWordSpacing(wordSpace);\n        }\n        else if (format && format.alignment === PdfTextAlignment.justify) {\n            this._sw._setWordSpacing(0);\n        }\n        return wordSpace;\n    };\n    PdfGraphics.prototype._shouldJustify = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var justifyStyle = (format && format.alignment === PdfTextAlignment.justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== ' ');\n        var goodLineBreakStyle = ((lineInfo._lineType & _LineType.layoutBreak) > 0);\n        return (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.justify));\n    };\n    PdfGraphics.prototype._underlineStrikeoutText = function (brush, result, font, layoutRectangle, format) {\n        if (font.isUnderline || font.isStrikeout) {\n            var linePen = this._createUnderlineStrikeoutPen(brush, font);\n            if (typeof linePen !== 'undefined' && linePen !== null) {\n                var shift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var underlineYOffset = layoutRectangle[1] + shift + font._metrics._getAscent(format) + 1.5 * linePen._width;\n                var strikeoutYOffset = layoutRectangle[1] + shift + font._metrics._getHeight(format) / 2 + 1.5 * linePen._width;\n                var lines = result._lines;\n                for (var i = 0; i < result._lineCount; i++) {\n                    var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n                    var lineWidth = lineInfo._width;\n                    var hShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format);\n                    var lineIndent = this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n                    var x1 = layoutRectangle[0] + hShift;\n                    var x2 = (!this._shouldJustify(lineInfo, layoutRectangle[2], format, font)) ?\n                        x1 + lineWidth - lineIndent :\n                        x1 + layoutRectangle[2] - lineIndent;\n                    if (font.isUnderline) {\n                        this.drawLine(linePen, x1, underlineYOffset, x2, underlineYOffset);\n                        underlineYOffset += result._lineHeight;\n                    }\n                    if (font.isStrikeout) {\n                        this.drawLine(linePen, x1, strikeoutYOffset, x2, strikeoutYOffset);\n                        strikeoutYOffset += result._lineHeight;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Draw line on the page graphics.\n     *\n     * @param {PdfPen} pen pen value.\n     * @param {number} x1 value.\n     * @param {number} y1 value.\n     * @param {number} x2 value.\n     * @param {number} y2 value.\n     * @returns {void} draw a line.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * //Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * //Draw line on the page graphics.\n     * graphics.drawLine(pen, 10, 10, 100, 100);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawLine = function (pen, x1, y1, x2, y2) {\n        this._stateControl(pen);\n        this._sw._beginPath(x1, y1);\n        this._sw._appendLineSegment(x2, y2);\n        this._sw._strokePath();\n        _addProcSet('PDF', this._resourceObject);\n    };\n    PdfGraphics.prototype._createUnderlineStrikeoutPen = function (brush, font) {\n        return new PdfPen(brush._color, font._metrics._size / 20);\n    };\n    PdfGraphics.prototype._checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = [x, y, textSize[0], textSize[0]];\n        if (format) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2] / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2];\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3] / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3];\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    PdfGraphics.prototype._drawGraphicsPath = function (pen, brush, fillMode, needClosing) {\n        if (typeof fillMode === 'undefined') {\n            fillMode = PdfFillMode.winding;\n        }\n        var isBrush = (typeof brush !== 'undefined' && brush !== null);\n        var isPen = (typeof pen !== 'undefined' && pen !== null);\n        var isEvenOdd = fillMode === PdfFillMode.alternate;\n        if (isPen && isBrush) {\n            if (needClosing) {\n                this._sw._closeFillStrokePath(isEvenOdd);\n            }\n            else {\n                this._sw._fillStrokePath(isEvenOdd);\n            }\n        }\n        else if (!isPen && !isBrush) {\n            this._sw._endPath();\n        }\n        else if (isPen) {\n            if (needClosing) {\n                this._sw._closeStrokePath();\n            }\n            else {\n                this._sw._strokePath();\n            }\n        }\n        else {\n            if (needClosing) {\n                this._sw._closeFillPath(isEvenOdd);\n            }\n            else {\n                this._sw._fillPath(isEvenOdd);\n            }\n        }\n    };\n    PdfGraphics.prototype._initializeCoordinates = function (page) {\n        var cbox;\n        if (page) {\n            var location_1 = [0, 0];\n            var needTransformation = false;\n            if (page._pageDictionary.has('CropBox') && page._pageDictionary.has('MediaBox')) {\n                cbox = page._pageDictionary.getArray('CropBox');\n                var mbox = page._pageDictionary.getArray('MediaBox');\n                if (cbox[0] === mbox[0] && cbox[1] === mbox[1] && cbox[2] === mbox[2] && cbox[3] === mbox[3]) {\n                    needTransformation = true;\n                }\n                if (cbox[0] > 0 && cbox[3] > 0 && mbox[0] < 0 && mbox[1] < 0) {\n                    this.translateTransform(cbox[0], -cbox[3]);\n                    location_1[0] = -cbox[0];\n                    location_1[1] = cbox[3];\n                }\n                else if (!page._pageDictionary.has('CropBox')) {\n                    needTransformation = true;\n                }\n                if (needTransformation) {\n                    this._sw._writeComment('Change co-ordinate system to left/top.');\n                    if (this._cropBox) {\n                        this.translateTransform(this._cropBox[0], -this._cropBox[3]);\n                    }\n                    else {\n                        if (-(page._origin[1]) < this._mediaBoxUpperRightBound || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this._sw._writeComment('Change co-ordinate system to left/top.');\n            if (this._mediaBoxUpperRightBound !== (-this._size[1])) {\n                if (this._cropBox) {\n                    cbox = this._cropBox;\n                    if (cbox[0] > 0 || cbox[1] > 0 || this._size[0] === cbox[2] || this._size[1] === cbox[3]) {\n                        this.translateTransform(cbox[0], -cbox[3]);\n                    }\n                    else {\n                        if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n                else {\n                    if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                        this.translateTransform(0, -this._size[1]);\n                    }\n                    else {\n                        this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Represents a scale transform of the graphics.\n     *\n     * @param {number} scaleX Scale factor in the x direction.\n     * @param {number} scaleY Scale factor in the y direction.\n     * @returns {void} scale transform.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics scale transform.\n     * graphics.scaleTransform(0.5, 0.5);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._scale(scaleX, scaleY);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a translate transform of the graphics.\n     *\n     * @param {number} x x-coordinate of the translation.\n     * @param {number} y y-coordinate of the translation.\n     * @returns {void} translate transform.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.translateTransform = function (x, y) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._translate(x, -y);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a rotate transform of the graphics.\n     *\n     * @param {number} angle Angle of rotation in degrees\n     * @returns {void} rotate transform.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics rotate transform.\n     * graphics.rotateTransform(-90);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._rotate(-angle);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a clipping region of this graphics.\n     *\n     * @param {number[]} bounds Rectangle structure that represents the new clip region.\n     * @param {PdfFillMode} mode Member of the PdfFillMode enumeration that specifies the filling operation to use.\n     * @returns {void} clipping region.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * //Set clip.\n     * graphics.setClip([0, 0, 50, 12], PdfFillMode.alternate);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setClip = function (bounds, mode) {\n        if (typeof mode === 'undefined') {\n            mode = PdfFillMode.winding;\n        }\n        this._sw._appendRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n        this._sw._clipPath(mode === PdfFillMode.alternate);\n    };\n    /**\n     * Represents a transparency of this graphics.\n     *\n     * @param {number} stroke transparency value.\n     * @param {number} fill transparency value.\n     * @param {PdfBlendMode} mode blend mode.\n     * @returns {void} transparency of this graphics.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * //Set transparency.\n     * graphics.setTransparency(0.5, 0.5, PdfBlendMode.multiply);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setTransparency = function (stroke, fill, mode) {\n        if (typeof fill === 'undefined') {\n            fill = stroke;\n        }\n        if (typeof mode === 'undefined') {\n            mode = PdfBlendMode.normal;\n        }\n        if (typeof this._transparencies === 'undefined') {\n            this._transparencies = new Map();\n        }\n        var transparencyKey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var transparencyData;\n        if (this._transparencies.size > 0) {\n            this._transparencies.forEach(function (value, key) {\n                if (value === transparencyKey) {\n                    transparencyData = key;\n                }\n            });\n        }\n        if (!transparencyData) {\n            transparencyData = new _TransparencyData();\n            var transparencyDict = new _PdfDictionary();\n            transparencyDict.update('CA', stroke);\n            transparencyDict.update('ca', fill);\n            transparencyDict.update('BM', _reverseMapBlendMode(mode));\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, transparencyDict);\n            transparencyData._dictionary = transparencyDict;\n            transparencyData._key = transparencyKey;\n            transparencyData._name = _PdfName.get(_getNewGuidString());\n            transparencyData._reference = ref;\n            var dictionary = void 0;\n            var isReference = false;\n            if (this._resourceObject.has('ExtGState')) {\n                var obj = this._resourceObject.getRaw('ExtGState'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined') {\n                    if (obj instanceof _PdfReference) {\n                        isReference = true;\n                        dictionary = this._crossReference._fetch(obj);\n                    }\n                    else if (obj instanceof _PdfDictionary) {\n                        dictionary = obj;\n                    }\n                }\n            }\n            else {\n                dictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('ExtGState', dictionary);\n            }\n            dictionary.update(transparencyData._name.name, ref);\n            if (isReference) {\n                this._resourceObject._updated = true;\n            }\n            if (this._hasResourceReference) {\n                this._source._updated = true;\n            }\n        }\n        this._sw._setGraphicsState(transparencyData._name);\n    };\n    PdfGraphics.prototype._setTransparencyData = function (ref, name) {\n        this._resourceMap.set(ref, name);\n        var dictionary = this._crossReference._fetch(ref);\n        var stroke = 0;\n        var fill = 0;\n        var mode = 0;\n        if (dictionary.has('CA')) {\n            stroke = dictionary.get('CA');\n        }\n        if (dictionary.has('ca')) {\n            fill = dictionary.get('ca');\n        }\n        if (dictionary.has('ca')) {\n            fill = dictionary.get('ca');\n        }\n        if (dictionary.has('BM')) {\n            mode = _mapBlendMode(dictionary.get('BM'));\n        }\n        var tkey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var tdata = new _TransparencyData();\n        tdata._dictionary = dictionary;\n        tdata._key = tkey;\n        tdata._name = name;\n        tdata._reference = ref;\n        this._transparencies.set(tdata, tkey);\n    };\n    PdfGraphics.prototype._getTranslateTransform = function (x, y, input) {\n        input._translate(x, -y);\n        return input;\n    };\n    PdfGraphics.prototype._getScaleTransform = function (x, y, input) {\n        if (input === null || typeof input === 'undefined') {\n            input = new _PdfTransformationMatrix();\n        }\n        input._scale(x, y);\n        return input;\n    };\n    PdfGraphics.prototype._clipTranslateMargins = function (clipBounds) {\n        this._clipBounds = clipBounds;\n        this._sw._writeComment('Clip margins.');\n        this._sw._appendRectangle(clipBounds[0], clipBounds[1], clipBounds[2], clipBounds[3]);\n        this._sw._closePath();\n        this._sw._clipPath(false);\n        this._sw._writeComment('Translate co-ordinate system.');\n        this.translateTransform(clipBounds[0], clipBounds[1]);\n    };\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\nvar _PdfTransformationMatrix = /** @class */ (function () {\n    function _PdfTransformationMatrix() {\n        this._matrix = new _Matrix(1, 0, 0, 1, 0, 0);\n    }\n    _PdfTransformationMatrix.prototype._translate = function (x, y) {\n        this._matrix._translate(x, y);\n    };\n    _PdfTransformationMatrix.prototype._scale = function (x, y) {\n        this._matrix._elements[0] = x;\n        this._matrix._elements[3] = y;\n    };\n    _PdfTransformationMatrix.prototype._rotate = function (angle) {\n        angle = (angle * Math.PI) / 180;\n        this._matrix._elements[0] = Math.cos(angle);\n        this._matrix._elements[1] = Math.sin(angle);\n        this._matrix._elements[2] = -Math.sin(angle);\n        this._matrix._elements[3] = Math.cos(angle);\n    };\n    _PdfTransformationMatrix.prototype._multiply = function (matrix) {\n        this._matrix._multiply(matrix._matrix);\n    };\n    _PdfTransformationMatrix.prototype._toString = function () {\n        var builder = '';\n        for (var i = 0, len = this._matrix._elements.length; i < len; i++) {\n            builder += _floatToString(this._matrix._elements[Number.parseInt(i.toString(), 10)]) + ' ';\n        }\n        return builder;\n    };\n    return _PdfTransformationMatrix;\n}());\nexport { _PdfTransformationMatrix };\nvar _Matrix = /** @class */ (function () {\n    function _Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this._elements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this._elements = [arg1, arg2, arg3, arg4, arg5, arg6];\n        }\n        else {\n            this._elements = arg1;\n        }\n    }\n    Object.defineProperty(_Matrix.prototype, \"_offsetX\", {\n        get: function () {\n            return this._elements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_Matrix.prototype, \"_offsetY\", {\n        get: function () {\n            return this._elements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _Matrix.prototype._clone = function () {\n        return new _Matrix(this._elements.slice());\n    };\n    _Matrix.prototype._translate = function (x, y) {\n        this._elements[4] = x;\n        this._elements[5] = y;\n    };\n    _Matrix.prototype._transform = function (points) {\n        var x = points[0];\n        var y = points[1];\n        var x2 = x * this._elements[0] + y * this._elements[2] + this._offsetX;\n        var y2 = x * this._elements[1] + y * this._elements[3] + this._offsetY;\n        return [x2, y2];\n    };\n    _Matrix.prototype._multiply = function (matrix) {\n        this._elements = [(this._elements[0] * matrix._elements[0] + this._elements[1] * matrix._elements[2]),\n            (this._elements[0] * matrix._elements[1] + this._elements[1] * matrix._elements[3]),\n            (this._elements[2] * matrix._elements[0] + this._elements[3] * matrix._elements[2]),\n            (this._elements[2] * matrix._elements[1] + this._elements[3] * matrix._elements[3]),\n            (this._offsetX * matrix._elements[0] + this._offsetY * matrix._elements[2] + matrix._offsetX),\n            (this._offsetX * matrix._elements[1] + this._offsetY * matrix._elements[3] + matrix._offsetY)];\n    };\n    return _Matrix;\n}());\nexport { _Matrix };\n/**\n * Represents a state of the graphics from a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // Save the graphics\n * let state: PdfGraphicsState = graphics.save();\n * //Set graphics translate transform.\n * graphics.translateTransform(100, 100);\n * //Draws the String.\n * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n * //Restore the graphics.\n * graphics.restore(state);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphicsState = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfGraphicsState` class.\n     *\n     * @private\n     * @param {PdfGraphics} graphics Graphics.\n     * @param {_PdfTransformationMatrix} matrix Matrix.\n     *\n     */\n    function PdfGraphicsState(graphics, matrix) {\n        if (graphics) {\n            this._g = graphics;\n            this._transformationMatrix = matrix;\n        }\n        this._charSpacing = 0;\n        this._wordSpacing = 0;\n        this._textScaling = 100;\n        this._textRenderingMode = _TextRenderingMode.fill;\n    }\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar _TransparencyData = /** @class */ (function () {\n    function _TransparencyData() {\n    }\n    return _TransparencyData;\n}());\nexport var _TextRenderingMode;\n(function (_TextRenderingMode) {\n    _TextRenderingMode[_TextRenderingMode[\"fill\"] = 0] = \"fill\";\n    _TextRenderingMode[_TextRenderingMode[\"stroke\"] = 1] = \"stroke\";\n    _TextRenderingMode[_TextRenderingMode[\"fillStroke\"] = 2] = \"fillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"none\"] = 3] = \"none\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFlag\"] = 4] = \"clipFlag\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFill\"] = 4] = \"clipFill\";\n    _TextRenderingMode[_TextRenderingMode[\"clipStroke\"] = 5] = \"clipStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFillStroke\"] = 6] = \"clipFillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clip\"] = 7] = \"clip\";\n})(_TextRenderingMode || (_TextRenderingMode = {}));\n/**\n * Represents a brush for the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new brush\n * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n * // Draw a rectangle using brush\n * graphics.drawRectangle(10, 10, 100, 100, brush);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBrush` class.\n     *\n     * @param {number[]} color Color.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Draw a rectangle using brush\n     * graphics.drawRectangle(10, 10, 100, 100, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBrush(color) {\n        this._color = typeof color !== 'undefined' ? color : [0, 0, 0];\n    }\n    return PdfBrush;\n}());\nexport { PdfBrush };\n/**\n * Represents a pen for the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPen` class.\n     *\n     * @param {number[]} color Color.\n     * @param {number} width Width.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a rectangle using pen\n     * graphics.drawRectangle(150, 50, 50, 50, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfPen(color, width) {\n        this._color = color;\n        this._width = width;\n        this._dashOffset = 0;\n        this._dashPattern = [];\n        this._dashStyle = PdfDashStyle.solid;\n        this._miterLimit = 0;\n        this._lineCap = PdfLineCap.flat;\n        this._lineJoin = PdfLineJoin.miter;\n    }\n    return PdfPen;\n}());\nexport { PdfPen };\nvar _PdfUnitConvertor = /** @class */ (function () {\n    function _PdfUnitConvertor() {\n        this._horizontalResolution = 96;\n        this._proportions = this._updateProportions(this._horizontalResolution);\n    }\n    _PdfUnitConvertor.prototype._updateProportions = function (pixel) {\n        return [pixel / 2.54, pixel / 6.0, 1, pixel / 72.0, pixel, pixel / 300.0, pixel / 25.4];\n    };\n    _PdfUnitConvertor.prototype._convertUnits = function (value, from, to) {\n        return this._convertFromPixels(this._convertToPixels(value, from), to);\n    };\n    _PdfUnitConvertor.prototype._convertFromPixels = function (value, to) {\n        var index = to;\n        return (value / this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    _PdfUnitConvertor.prototype._convertToPixels = function (value, from) {\n        var index = from;\n        return (value * this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    return _PdfUnitConvertor;\n}());\nexport { _PdfUnitConvertor };\n","import { _stringToBytes } from './../utils';\nvar _XmlWriter = /** @class */ (function () {\n    function _XmlWriter(isAppearance) {\n        if (isAppearance === void 0) { isAppearance = false; }\n        this._position = 0;\n        this._bufferText = '';\n        this._buffer = new Uint8Array(0);\n        this._namespaceStack = [];\n        this._elementStack = [];\n        if (!isAppearance) {\n            this._currentState = 'Initial';\n            this._namespaceStack.push(new _Namespace());\n            this._elementStack.push(new _XmlElement());\n            this._namespaceStack[0]._set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[1]._set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[2]._set('', '', 'Implied');\n            this._elementStack[0]._set('', '', '', this._namespaceStack.length - 1);\n        }\n        else {\n            this._currentState = 'StartDocument';\n            this._skipNamespace = true;\n        }\n        this._attributeStack = [];\n    }\n    Object.defineProperty(_XmlWriter.prototype, \"buffer\", {\n        get: function () {\n            this._flush();\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _XmlWriter.prototype._writeStartDocument = function (standalone) {\n        if (this._currentState !== 'Initial' || typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._currentState = 'StartDocument';\n        this._rawText('<?xml version=\"1.0\" encoding=\"utf-8');\n        if (typeof standalone !== 'undefined' && standalone !== null) {\n            this._rawText('\" standalone=\"');\n            this._rawText(standalone ? 'yes' : 'no');\n        }\n        this._rawText('\"?>');\n    };\n    _XmlWriter.prototype._writeStartElement = function (localName, prefix, namespace) {\n        if (typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n        }\n        this._checkName(localName);\n        if (this._currentState === 'Initial') {\n            this._writeStartDocument();\n        }\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n        }\n        this._currentState = 'StartElement';\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                prefix = this._lookupPrefix(namespace);\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        else if (prefix.length > 0) {\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null || (typeof namespace !== 'undefined' && namespace.length === 0)) {\n                throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            namespace = this._lookupNamespace(prefix);\n        }\n        this._writeStartElementInternal(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndElement = function () {\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n            this._currentState = 'ElementContent';\n        }\n        else if (this._currentState === 'ElementContent') {\n            this._currentState = 'ElementContent';\n        }\n        this._currentState = 'EndElement';\n        var top = this._elementStack.length - 1;\n        this._writeEndElementInternal(this._elementStack[Number.parseInt(top.toString(), 10)]._prefix, this._elementStack[Number.parseInt(top.toString(), 10)]._localName);\n        this._namespaceStack.splice(this._elementStack[Number.parseInt(top.toString(), 10)]._previousTop + 1);\n        this._elementStack.splice(top);\n        // if (this._bufferText.length > 10240) {\n        //     this._flush();\n        // }\n    };\n    _XmlWriter.prototype._writeElementString = function (localName, value, prefix, namespace) {\n        this._writeStartElement(localName, prefix, namespace);\n        if (typeof value !== 'undefined' && value !== null && value.length !== 0) {\n            this._writeString(value);\n        }\n        this._writeEndElement();\n    };\n    _XmlWriter.prototype._writeAttributeString = function (localName, value, prefix, namespace) {\n        this._writeStartAttribute(localName, value, prefix, namespace);\n        this._writeStringInternal(value, true);\n        this._writeEndAttribute();\n    };\n    _XmlWriter.prototype._writeString = function (text) {\n        this._writeInternal(text, false);\n    };\n    _XmlWriter.prototype._writeRaw = function (text) {\n        this._writeInternal(text, true);\n    };\n    _XmlWriter.prototype._writeInternal = function (text, isRawString) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._currentState !== 'StartElement' && this._currentState !== 'ElementContent') {\n                throw new Error('InvalidOperationException: Wrong Token');\n            }\n            if (this._currentState === 'StartElement') {\n                this._startElementContent();\n            }\n            this._currentState = 'ElementContent';\n            if (isRawString) {\n                this._rawText(text);\n            }\n            else {\n                this._writeStringInternal(text, false);\n            }\n        }\n    };\n    _XmlWriter.prototype._save = function () {\n        while (this._elementStack.length - 1 > 0) {\n            this._writeEndElement();\n        }\n        if (this._bufferText !== '') {\n            this._flush();\n        }\n        return this._buffer;\n    };\n    _XmlWriter.prototype._destroy = function () {\n        this._buffer = undefined;\n        for (var i = 0; i < this._namespaceStack.length; i++) {\n            this._namespaceStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._namespaceStack = [];\n        for (var i = 0; i < this._elementStack.length; i++) {\n            this._elementStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._elementStack = [];\n        this._bufferText = '';\n        this._position = 0;\n    };\n    _XmlWriter.prototype._flush = function () {\n        if (this._buffer && this._bufferText && this._bufferText !== '') {\n            if (this._buffer.length > 0) {\n                var buffer = new Array(this._bufferText.length);\n                for (var i = 0; i < this._bufferText.length; i++) {\n                    buffer[Number.parseInt(i.toString(), 10)] = this._bufferText.charCodeAt(i) & 0xff;\n                }\n                var array = new Uint8Array(this._buffer.length + buffer.length);\n                array.set(this._buffer);\n                array.set(buffer, this._buffer.length);\n                this._buffer = array;\n            }\n            else {\n                this._buffer = _stringToBytes(this._bufferText);\n            }\n            this._bufferText = '';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttribute = function (localName, value, prefix, namespace) {\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            if (prefix === 'xmlns') {\n                localName = 'xmlns';\n                prefix = '';\n            }\n            else {\n                throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n            }\n        }\n        if (this._currentState !== 'StartElement') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._checkName(localName);\n        this._writeStartAttributePrefixAndNameSpace(localName, value, prefix, namespace);\n    };\n    _XmlWriter.prototype._writeStartAttributePrefixAndNameSpace = function (localName, value, prefix, namespace) {\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {\n                    prefix = this._lookupPrefix(namespace);\n                }\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = '';\n            }\n        }\n        this._writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);\n    };\n    _XmlWriter.prototype._writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {\n        if (prefix.length === 0) {\n            if (localName[0] === 'x' && localName === 'xmlns') {\n                this._skipPushAndWrite(prefix, localName, namespace);\n                this._pushNamespaceExplicit('', value);\n                return;\n            }\n            else if (namespace.length > 0) {\n                prefix = this._lookupPrefix(namespace);\n            }\n        }\n        else {\n            if (prefix[0] === 'x') {\n                if (prefix === 'xmlns') {\n                    this._skipPushAndWrite(prefix, localName, namespace);\n                    this._pushNamespaceExplicit(localName, value);\n                    return;\n                }\n                else if (prefix === 'xml') {\n                    if (localName === 'space' || localName === 'lang') {\n                        this._skipPushAndWrite(prefix, localName, namespace);\n                        return;\n                    }\n                }\n            }\n            if (namespace.length === 0) {\n                prefix = '';\n            }\n        }\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n            this._pushNamespaceImplicit(prefix, namespace);\n        }\n        this._skipPushAndWrite(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndAttribute = function () {\n        this._currentState = 'StartElement';\n        this._bufferText += '\"';\n    };\n    _XmlWriter.prototype._writeStartElementInternal = function (prefix, localName, namespace) {\n        this._bufferText += '<';\n        if (prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        var top = this._elementStack.length;\n        this._elementStack.push(new _XmlElement());\n        this._elementStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespace, this._namespaceStack.length - 1);\n        this._pushNamespaceImplicit(prefix, namespace);\n        for (var i = 0; i < this._attributeStack.length; i++) {\n            this._attributeStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._attributeStack = [];\n    };\n    _XmlWriter.prototype._writeEndElementInternal = function (prefix, localName) {\n        if (this._position !== this._bufferText.length + 1) {\n            this._bufferText += '</';\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n                this._rawText(prefix);\n                this._bufferText += ':';\n            }\n            this._rawText(localName);\n            this._bufferText += '>';\n        }\n        else {\n            this._bufferText = this._bufferText.substring(0, this._bufferText.length - 1);\n            this._bufferText += ' />';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttributeInternal = function (prefix, localName) {\n        this._bufferText += ' ';\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        this._bufferText += '=\"';\n    };\n    _XmlWriter.prototype._writeNamespaceDeclaration = function (prefix, namespaceUri) {\n        if (!this._skipNamespace) {\n            this._writeStartNamespaceDeclaration(prefix);\n            this._writeStringInternal(namespaceUri, true);\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStartNamespaceDeclaration = function (prefix) {\n        if (typeof prefix === 'undefined' || prefix === null || prefix.length === 0) {\n            this._rawText(' xmlns=\"');\n        }\n        else {\n            this._rawText(' xmlns:');\n            this._rawText(prefix);\n            this._bufferText += '=';\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStringInternal = function (text, inAttributeValue) {\n        if (typeof text === 'undefined' || text === null) {\n            text = '';\n        }\n        text = text.replace(/\\&/g, '&amp;'); // eslint-disable-line\n        text = text.replace(/\\</g, '&lt;'); // eslint-disable-line\n        text = text.replace(/\\>/g, '&gt;'); // eslint-disable-line\n        if (inAttributeValue) {\n            text = text.replace(/\\\"/g, '&quot;'); // eslint-disable-line\n        }\n        this._bufferText += text;\n        if (!inAttributeValue) {\n            this._position = 0;\n        }\n    };\n    _XmlWriter.prototype._startElementContent = function () {\n        var start = this._elementStack[this._elementStack.length - 1]._previousTop;\n        for (var i = this._namespaceStack.length - 1; i > start; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._kind === 'NeedToWrite') {\n                this._writeNamespaceDeclaration(this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix, this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri);\n            }\n        }\n        this._bufferText += '>';\n        this._position = this._bufferText.length + 1;\n    };\n    _XmlWriter.prototype._rawText = function (text) {\n        this._bufferText += text;\n    };\n    _XmlWriter.prototype._addNamespace = function (prefix, ns, kind) {\n        var top = this._namespaceStack.length;\n        this._namespaceStack.push(new _Namespace());\n        this._namespaceStack[Number.parseInt(top.toString(), 10)]._set(prefix, ns, kind);\n    };\n    _XmlWriter.prototype._lookupPrefix = function (namespace) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri === namespace) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespace = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespaceIndex = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    _XmlWriter.prototype._pushNamespaceImplicit = function (prefix, ns) {\n        var kind;\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        var isValid = true;\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri !== ns) {\n                    throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');\n                }\n                isValid = false;\n            }\n            else {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind === 'Special') {\n                    if (prefix === 'xml') {\n                        if (ns !== this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri) {\n                            throw new Error('InvalidArgumentException: Xml String');\n                        }\n                        else {\n                            kind = 'Implied';\n                        }\n                    }\n                    else {\n                        throw new Error('InvalidArgumentException: Prefix \"xmlns\" is reserved for use by XML.');\n                    }\n                }\n                else {\n                    kind = (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri === ns) ?\n                        'Implied' :\n                        'NeedToWrite';\n                }\n            }\n        }\n        else {\n            if ((ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml') ||\n                (ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns')) {\n                throw new Error('InvalidArgumentException');\n            }\n            kind = 'NeedToWrite';\n        }\n        if (isValid) {\n            this._addNamespace(prefix, ns, kind);\n        }\n    };\n    _XmlWriter.prototype._pushNamespaceExplicit = function (prefix, ns) {\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind = 'Written';\n                return;\n            }\n        }\n        this._addNamespace(prefix, ns, 'Written');\n        return;\n    };\n    _XmlWriter.prototype._addAttribute = function (prefix, localName, namespaceName) {\n        var top = this._attributeStack.length;\n        this._attributeStack.push(new _XmlAttribute());\n        this._attributeStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespaceName);\n        for (var i = 0; i < top; i++) {\n            if (this._attributeStack[Number.parseInt(i.toString(), 10)]._isDuplicate(prefix, localName, namespaceName)) {\n                throw new Error('XmlException: duplicate attribute name');\n            }\n        }\n    };\n    _XmlWriter.prototype._skipPushAndWrite = function (prefix, localName, namespace) {\n        this._addAttribute(prefix, localName, namespace);\n        this._writeStartAttributeInternal(prefix, localName);\n    };\n    _XmlWriter.prototype._checkName = function (text) {\n        var format = /[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]/; // eslint-disable-line\n        if (format.test(text)) {\n            throw new Error('InvalidArgumentException: invalid name character');\n        }\n    };\n    return _XmlWriter;\n}());\nexport { _XmlWriter };\nvar _Namespace = /** @class */ (function () {\n    function _Namespace() {\n    }\n    _Namespace.prototype._set = function (prefix, namespaceUri, kind) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._kind = kind;\n    };\n    _Namespace.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._kind = undefined;\n    };\n    return _Namespace;\n}());\nexport { _Namespace };\nvar _XmlElement = /** @class */ (function () {\n    function _XmlElement() {\n    }\n    _XmlElement.prototype._set = function (prefix, localName, namespaceUri, previousTop) {\n        this._previousTop = previousTop;\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlElement.prototype._destroy = function () {\n        this._previousTop = undefined;\n        this._prefix = undefined;\n        this._localName = undefined;\n        this._namespaceUri = undefined;\n    };\n    return _XmlElement;\n}());\nexport { _XmlElement };\nvar _XmlAttribute = /** @class */ (function () {\n    function _XmlAttribute() {\n    }\n    _XmlAttribute.prototype._set = function (prefix, localName, namespaceUri) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlAttribute.prototype._isDuplicate = function (prefix, localName, namespaceUri) {\n        return ((this._localName === localName) && ((this._prefix === prefix) || (this._namespaceUri === namespaceUri)));\n    };\n    _XmlAttribute.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._localName = undefined;\n    };\n    return _XmlAttribute;\n}());\nexport { _XmlAttribute };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { PdfAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfDocumentLinkAnnotation, PdfUriAnnotation } from './../annotations/annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { _hexStringToByteArray, _stringToAnnotationFlags, _convertToColor, _bytesToString, _hexStringToString, _getSpecialCharacter, _getLatinCharacter, _getInheritableProperty, _getNewGuidString, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _encode } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField, PdfListField } from './../form/field';\nvar _ExportHelper = /** @class */ (function () {\n    function _ExportHelper() {\n        this._asPerSpecification = false;\n        this._fileName = '';\n        this._formKey = '';\n        this._exportEmptyFields = false;\n        this._groupReferences = new Map();\n        this._groupHolders = [];\n        this._richTextPrefix = '<?xml version=\"1.0\"?>';\n        this._table = new Map(); // eslint-disable-line\n        this._fields = new Map();\n        this._richTextValues = new Map();\n        this._jsonData = [];\n        this._openingBrace = 123;\n        this._openingBracket = 91;\n        this._closingBrace = 125;\n        this._closingBracket = 93;\n        this._colon = 58;\n        this._doubleQuotes = 34;\n        this._comma = 44;\n        this._space = 32;\n        this.fdfString = '';\n        this._xmlImport = false;\n    }\n    _ExportHelper.prototype._exportFormFieldsData = function (field) {\n        var textValue = '';\n        if (field !== null && typeof field !== 'undefined' && field.export) {\n            var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n            if (type && type.name !== null && typeof type.name !== 'undefined') {\n                var font = this._getEncodedFontDictionary(field._dictionary);\n                var fieldName = field.name;\n                if (font !== null && typeof font !== 'undefined') {\n                    fieldName = this._getEncodedValue(fieldName, font);\n                }\n                var value = void 0; // eslint-disable-line\n                var selectedValue = void 0;\n                switch (type.name) {\n                    case 'Tx':\n                        textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Ch':\n                        value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                textValue = selectedValue;\n                                this._table.set(fieldName, textValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                                return values;\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Btn':\n                        value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            var text = this._getExportValue(value, field);\n                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                var radioButton = void 0;\n                                if (field instanceof PdfRadioButtonListField) {\n                                    radioButton = field;\n                                }\n                                if (!field._dictionary.has('Opt') ||\n                                    (radioButton !== null &&\n                                        typeof radioButton !== 'undefined'\n                                        && radioButton.selectedIndex === -1)) {\n                                    text = this._getEncodedValue(text, font);\n                                    textValue = text;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else {\n                                    if (field._dictionary.has('Opt')) {\n                                        var options = field._dictionary.getArray('Opt');\n                                        var index = Number.parseInt(text, 10);\n                                        if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                            index = 0;\n                                        }\n                                        if (options !== null && typeof options !== 'undefined') {\n                                            var current = void 0;\n                                            if (radioButton) {\n                                                current = options[radioButton.selectedIndex];\n                                            }\n                                            else {\n                                                current = options[Number.parseInt(index.toString(), 10)];\n                                            }\n                                            if (current !== null && typeof current !== 'undefined') {\n                                                text = current;\n                                            }\n                                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                                text = this._getEncodedValue(text, font);\n                                                textValue = text;\n                                                this._table.set(fieldName, textValue);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                                if (this._exportEmptyFields) {\n                                    textValue = text;\n                                }\n                                else {\n                                    textValue = 'Off';\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else {\n                            if (field instanceof PdfRadioButtonListField) {\n                                textValue = field._getAppearanceStateValue();\n                                if (!textValue) {\n                                    if (this._exportEmptyFields) {\n                                        textValue = '';\n                                    }\n                                    else {\n                                        textValue = 'Off';\n                                    }\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                            else {\n                                var widget = field.itemAt(field._defaultIndex);\n                                var dictionary = void 0;\n                                if (widget) {\n                                    dictionary = widget._dictionary;\n                                }\n                                else {\n                                    dictionary = field._dictionary;\n                                }\n                                if (dictionary && dictionary.has('AS')) {\n                                    textValue = dictionary.get('AS').name;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else if (this._exportEmptyFields) {\n                                    textValue = '';\n                                    this._table.set(fieldName, textValue);\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n        return textValue;\n    };\n    _ExportHelper.prototype._exportFormFieldData = function (field) {\n        var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n        if (type && type.name !== null && typeof type.name !== 'undefined') {\n            var font = this._getEncodedFontDictionary(field._dictionary);\n            var fieldName = field.name;\n            if (font !== null && typeof font !== 'undefined') {\n                fieldName = this._getEncodedValue(fieldName, font);\n            }\n            var textValue = void 0;\n            var value = void 0; // eslint-disable-line\n            switch (type.name) {\n                case 'Tx':\n                    textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field._dictionary.has('RV')) {\n                            textValue = _getInheritableProperty(field._dictionary, 'RV', false, true, 'Parent');\n                            if (textValue !== null && typeof textValue !== 'undefined') {\n                                textValue += this._key;\n                                this._formKey = this._key;\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            var replaceValue = textValue;\n                            if (field instanceof PdfTextBoxField && field.multiLine) {\n                                replaceValue = replaceValue.replace('\\n', '');\n                                replaceValue = replaceValue.replace('\\r', '\\r\\n');\n                                textValue = replaceValue;\n                            }\n                            this._table.set(fieldName, textValue);\n                        }\n                    }\n                    else {\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Ch':\n                    value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field instanceof PdfListField) {\n                            if (Array.isArray(value)) {\n                                this._table.set(fieldName, value);\n                            }\n                            else {\n                                if (typeof value === 'string') {\n                                    value = this._getEncodedValue(value, font);\n                                    this._table.set(fieldName, value);\n                                }\n                                else if ((value === null || typeof value === 'undefined') && field._dictionary.has('I')) {\n                                    var selectedValue = field._obtainSelectedValue();\n                                    if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                                        if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                            selectedValue = this._getEncodedValue(selectedValue, font);\n                                            this._table.set(fieldName, textValue);\n                                        }\n                                        else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                            var values = [];\n                                            for (var i = 0; i < selectedValue.length; i++) {\n                                                values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                            }\n                                            this._table.set(fieldName, values);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        var selectedValue = void 0;\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                this._table.set(fieldName, selectedValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Btn':\n                    value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (value !== null && typeof value !== 'undefined') {\n                        var text = this._getExportValue(value, field);\n                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                            if (this._asPerSpecification && this._format !== 'XML') {\n                                text = _hexStringToString(text);\n                            }\n                            var radioButton = void 0;\n                            if (field instanceof PdfRadioButtonListField) {\n                                radioButton = field;\n                            }\n                            if (!field._dictionary.has('Opt') ||\n                                (radioButton !== null &&\n                                    typeof radioButton !== 'undefined'\n                                    && radioButton.selectedIndex === -1)) {\n                                text = this._getEncodedValue(text, font);\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                if (field._dictionary.has('Opt')) {\n                                    var options = field._dictionary.getArray('Opt');\n                                    var index = Number.parseInt(text, 10);\n                                    if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                        index = 0;\n                                    }\n                                    if (options !== null && typeof options !== 'undefined') {\n                                        var current = void 0;\n                                        if (radioButton) {\n                                            current = options[radioButton.selectedIndex];\n                                        }\n                                        else {\n                                            current = options[Number.parseInt(index.toString(), 10)];\n                                        }\n                                        if (current !== null && typeof current !== 'undefined') {\n                                            text = current;\n                                        }\n                                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                            text = this._getEncodedValue(text, font);\n                                            this._table.set(fieldName, text);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            if (this._exportEmptyFields) {\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                this._table.set(fieldName, 'Off');\n                            }\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfRadioButtonListField) {\n                            var text = field._getAppearanceStateValue();\n                            if (!text) {\n                                if (this._exportEmptyFields) {\n                                    text = '';\n                                }\n                                else {\n                                    text = 'Off';\n                                }\n                            }\n                            this._table.set(fieldName, text);\n                        }\n                        else {\n                            var widget = field.itemAt(field._defaultIndex);\n                            var dictionary = void 0;\n                            if (widget) {\n                                dictionary = widget._dictionary;\n                            }\n                            else {\n                                dictionary = field._dictionary;\n                            }\n                            if (dictionary && dictionary.has('AS')) {\n                                this._table.set(fieldName, dictionary.get('AS').name);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    _ExportHelper.prototype._getAnnotationType = function (dictionary) {\n        var type = '';\n        if (dictionary.has('Subtype')) {\n            var subtype = dictionary.get('Subtype');\n            if (subtype) {\n                type = subtype.name;\n            }\n        }\n        return type;\n    };\n    _ExportHelper.prototype._getValue = function (primitive, isJson) {\n        if (isJson === void 0) { isJson = false; }\n        var value = '';\n        if (typeof primitive !== 'undefined' && primitive !== null) {\n            if (primitive instanceof _PdfName) {\n                value = primitive.name;\n            }\n            else if (typeof primitive === 'boolean') {\n                value = primitive ? isJson ? 'true' : 'yes' : isJson ? 'false' : 'no';\n            }\n            else if (typeof primitive === 'string') {\n                value = this._getValidString(primitive);\n            }\n            else if (Array.isArray(primitive)) {\n                var colorArray = primitive; // eslint-disable-line\n                if (colorArray.length > 0) {\n                    value = this._getValue(colorArray[0], isJson);\n                }\n                for (var i = 1; i < colorArray.length; i++) {\n                    value += ',' + this._getValue(colorArray[Number.parseInt(i.toString(), 10)], isJson);\n                }\n            }\n            else if (typeof primitive === 'number') {\n                value = primitive.toString();\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getColor = function (primitive) {\n        var color = '';\n        if (primitive && Array.isArray(primitive) && primitive.length >= 3) {\n            var r = Math.round(primitive[0] * 255).toString(16).toUpperCase();\n            var g = Math.round(primitive[1] * 255).toString(16).toUpperCase();\n            var b = Math.round(primitive[2] * 255).toString(16).toUpperCase();\n            color = '#' + (r.length === 1 ? ('0' + r) : r) + (g.length === 1 ? ('0' + g) : g) + (b.length === 1 ? ('0' + b) : b);\n        }\n        return color;\n    };\n    _ExportHelper.prototype._getValidString = function (value) {\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getEncodedFontDictionary = function (source) {\n        var font;\n        var kids; // eslint-disable-line\n        if (source.has('Kids') && !source.has('AP')) {\n            kids = source.getArray('Kids');\n        }\n        if (source.has('AP') || (kids !== null && typeof kids !== 'undefined' && Array.isArray(kids))) {\n            var appearance = void 0;\n            if (kids !== null && typeof kids !== 'undefined' && kids.length > 0) {\n                var kid = kids[0];\n                if (kid !== null && typeof kid !== 'undefined' && kid.has('AP')) {\n                    appearance = kid.get('AP');\n                }\n            }\n            else {\n                appearance = source.get('AP');\n            }\n            if (appearance !== null && typeof appearance !== 'undefined' && appearance.has('N')) {\n                var normal = appearance.get('N');\n                if (normal !== null && typeof normal !== 'undefined' && normal instanceof _PdfBaseStream && normal.dictionary.has('Resources')) {\n                    var resource = normal.dictionary.get('Resources');\n                    if (resource !== null && typeof resource !== 'undefined' && resource.has('Font')) {\n                        font = resource.get('Font');\n                    }\n                }\n            }\n        }\n        return font;\n    };\n    _ExportHelper.prototype._getEncodedValue = function (value, dictionary) {\n        var _this = this;\n        var text = value;\n        var structure;\n        if (this._encodeDictionary !== null && typeof this._encodeDictionary !== 'undefined') {\n            structure = new _FontStructure(this._encodeDictionary);\n            return this._replaceNotUsedCharacters(text, structure);\n        }\n        else {\n            var root = this._document.form._dictionary;\n            if (root !== null && typeof root !== 'undefined' && root.has('DR')) {\n                var resource = root.get('DR');\n                if (resource !== null && typeof resource !== 'undefined' && resource.has('Encoding')) {\n                    var encoding = resource.get('Encoding');\n                    if (encoding !== null && typeof encoding !== 'undefined' && encoding.has('PDFDocEncoding')) {\n                        var pdfEncoding = encoding.get('PDFDocEncoding');\n                        if (pdfEncoding !== null && typeof pdfEncoding !== 'undefined' && pdfEncoding.has('Differences')) {\n                            var encodingDictionary = new _PdfDictionary(this._crossReference);\n                            encodingDictionary.set('Differences', pdfEncoding.get('Differences'));\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, encodingDictionary);\n                            var fontEncodeDictionary = new _PdfDictionary(this._crossReference);\n                            fontEncodeDictionary.set('Subtype', _PdfName.get('Type1'));\n                            fontEncodeDictionary.set('Encoding', reference);\n                            structure = new _FontStructure(fontEncodeDictionary);\n                            if (structure !== null &&\n                                typeof structure !== 'undefined' &&\n                                structure.differencesDictionary !== null &&\n                                typeof structure.differencesDictionary !== 'undefined' &&\n                                structure.differencesDictionary.size > 0) {\n                                this._encodeDictionary = fontEncodeDictionary;\n                                return this._replaceNotUsedCharacters(text, structure);\n                            }\n                        }\n                    }\n                }\n            }\n            if (value !== null &&\n                typeof value !== 'undefined' &&\n                dictionary !== null &&\n                typeof dictionary !== 'undefined' &&\n                dictionary.size > 0) {\n                var result_1;\n                var isSkip_1 = false;\n                dictionary.forEach(function (key, value) {\n                    if (!isSkip_1 && value !== null && typeof value !== 'undefined') {\n                        var fontDictionary = void 0;\n                        if (value instanceof _PdfDictionary) {\n                            fontDictionary = value;\n                        }\n                        else if (value instanceof _PdfReference) {\n                            var holder = _this._crossReference._fetch(value); // eslint-disable-line\n                            if (holder !== null && typeof holder !== 'undefined' && holder instanceof _PdfDictionary) {\n                                fontDictionary = holder;\n                            }\n                        }\n                        if (fontDictionary) {\n                            structure = new _FontStructure(fontDictionary);\n                            result_1 = _this._replaceNotUsedCharacters(text, structure);\n                            isSkip_1 = true;\n                        }\n                    }\n                });\n                if (!isSkip_1) {\n                    return result_1;\n                }\n            }\n            return text;\n        }\n    };\n    _ExportHelper.prototype._replaceNotUsedCharacters = function (input, structure) {\n        var updatedString = '';\n        var differencesDictionary = structure.differencesDictionary;\n        for (var i = 0; i < input.length; i++) {\n            var text = input[Number.parseInt(i.toString(), 10)];\n            var code = input.charCodeAt(i);\n            if (differencesDictionary.has(text)) {\n                var difference = differencesDictionary.get(text);\n                if ((difference.length > 1 && structure._fontType !== 'Type3') ||\n                    (code > 127 && code <= 255 && structure._fontType === 'Type1' &&\n                        structure._baseFontEncoding !== 'WinAnsiEncoding' &&\n                        structure._fontEncoding === 'Encoding' && structure._fontName === 'ZapfDingbats')) {\n                    updatedString += text;\n                }\n                else {\n                    updatedString += difference;\n                }\n            }\n            else {\n                updatedString += text;\n            }\n        }\n        return updatedString;\n    };\n    _ExportHelper.prototype._getExportValue = function (primitive, field) {\n        var value;\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (field !== null && typeof field !== 'undefined') {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                if (value !== null &&\n                    typeof value !== 'undefined' &&\n                    value !== '' &&\n                    field instanceof PdfRadioButtonListField &&\n                    field.selectedIndex !== -1) {\n                    var item = field.itemAt(field.selectedIndex);\n                    if (item !== null && typeof item !== 'undefined' && item.value === value) {\n                        value = item.value;\n                    }\n                }\n            }\n            else {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                else if (Array.isArray(primitive)) {\n                    var values = [];\n                    for (var i = 0; i < primitive.length; i++) {\n                        var element = primitive[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (element instanceof _PdfName) {\n                            values.push(element.name);\n                        }\n                        else if (typeof element === 'string') {\n                            values.push(element);\n                        }\n                    }\n                    return values;\n                }\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._addReferenceToGroup = function (reference, dictionary) {\n        var name = dictionary.get('NM');\n        if (name && name !== '') {\n            this._groupReferences.set(name, reference);\n            if (dictionary.has('IRT')) {\n                this._groupHolders.push(dictionary);\n            }\n        }\n        else if (!name && dictionary.has('IRT')) {\n            name = dictionary.get('IRT');\n            if (name && name !== '' && this._groupReferences.has(name)) {\n                dictionary.update('IRT', this._groupReferences.get(name));\n            }\n        }\n    };\n    _ExportHelper.prototype._handlePopup = function (annotations, reference, annotationDictionary, pageDictionary) {\n        if (annotationDictionary.has('Popup')) {\n            var popupReference = annotationDictionary.getRaw('Popup');\n            var popup = annotationDictionary.get('Popup');\n            if (popup instanceof _PdfDictionary) {\n                if (popupReference && popup) {\n                    popup.update('Parent', reference);\n                }\n                var popupAnnotation = annotations._parseAnnotation(popup);\n                var index = annotations._annotations.length;\n                annotations._annotations.push(reference);\n                pageDictionary.set('Annots', annotations._annotations);\n                pageDictionary._updated = true;\n                annotations._parsedAnnotations.set(index, popupAnnotation);\n            }\n        }\n    };\n    _ExportHelper.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._fields.forEach(function (value, key) {\n                var richTextValue;\n                if (_this._richTextValues.size > 0 && _this._richTextValues.has(key)) {\n                    richTextValue = _this._richTextValues.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (richTextValue && richTextValue !== '') {\n                            field._dictionary.update('RV', richTextValue);\n                        }\n                        _this._importFieldData(field, value);\n                    }\n                }\n            });\n        }\n    };\n    _ExportHelper.prototype._importFieldData = function (field, values) {\n        if (values !== null &&\n            typeof values !== 'undefined' &&\n            values.length > 0 &&\n            field !== null &&\n            typeof field !== 'undefined' &&\n            !field.readOnly) {\n            var value = values[0];\n            if (field instanceof PdfTextBoxField) {\n                if (value !== null && typeof value !== 'undefined') {\n                    if (field instanceof PdfTextBoxField && field.multiLine) {\n                        value = value.replace('\\r\\n', '\\r');\n                        value = value.replace('\\n', '\\r');\n                    }\n                    field.text = value;\n                }\n            }\n            else if (field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                var selectedValues_1;\n                if (values.length > 1) {\n                    selectedValues_1 = values;\n                }\n                else {\n                    if (this._xmlImport) {\n                        selectedValues_1 = (value.indexOf(',') !== -1 ? value.split(',') : [value]);\n                    }\n                    else {\n                        selectedValues_1 = [value.indexOf(',') !== -1 ? value.split(',')[0] : value];\n                    }\n                }\n                var indexes_1 = [];\n                var options_1 = field._options;\n                if (options_1 && options_1.length > 0) {\n                    options_1.forEach(function (option) {\n                        if (selectedValues_1.indexOf(option[0]) !== -1 || selectedValues_1.indexOf(option[1]) !== -1) {\n                            indexes_1.push(options_1.indexOf(option));\n                        }\n                    });\n                }\n                if (indexes_1.length > 0) {\n                    field.selectedIndex = indexes_1;\n                    if (field instanceof PdfComboBoxField && this._asPerSpecification && field._dictionary.has('AP')) {\n                        delete field._dictionary._map.AP;\n                        field._dictionary._updated = true;\n                    }\n                }\n            }\n            else if (field instanceof PdfCheckBoxField) {\n                var lowerCase = value.toLowerCase();\n                if (this._containsExportValue(value, field) || lowerCase === 'on' || lowerCase === 'yes') {\n                    field.checked = true;\n                }\n                else {\n                    field.checked = false;\n                }\n            }\n            else if (field instanceof PdfRadioButtonListField) {\n                var index = -1;\n                for (var i = 0; i < field._kidsCount; i++) {\n                    var item = field.itemAt(i);\n                    if (item && item.value && item.value === value) {\n                        index = i;\n                        break;\n                    }\n                }\n                if (index !== -1 && field.selectedIndex !== index) {\n                    field.selectedIndex = index;\n                }\n            }\n        }\n    };\n    _ExportHelper.prototype._containsExportValue = function (value, field) {\n        var result = false;\n        if (field._kidsCount > 0) {\n            for (var i = 0; i < field._kidsCount; i++) {\n                var kid = field.itemAt(i);\n                if (kid && this._checkSelected(kid._dictionary, value)) {\n                    return true;\n                }\n            }\n        }\n        else {\n            result = this._checkSelected(field._dictionary, value);\n            if (!result && this._asPerSpecification && field._dictionary.has('AS')) {\n                var asEntry = field._dictionary.get('AS');\n                if (asEntry && (asEntry.name === 'Off' || asEntry.name === 'No')) {\n                    if (field._dictionary.has('Opt')) {\n                        var options = field._dictionary.getArray('Opt');\n                        if (options && options.length > 0) {\n                            options.forEach(function (option) {\n                                if (option === value) {\n                                    result = true;\n                                }\n                            });\n                        }\n                    }\n                }\n                else {\n                    result = true;\n                }\n            }\n        }\n        return result;\n    };\n    _ExportHelper.prototype._checkSelected = function (dictionary, value) {\n        if (dictionary && dictionary.has('AP')) {\n            var appearance = dictionary.get('AP');\n            if (appearance && appearance instanceof _PdfDictionary && appearance.has('N')) {\n                var normalTemplate = appearance.get('N');\n                if (normalTemplate &&\n                    normalTemplate instanceof _PdfDictionary &&\n                    normalTemplate.has(value) &&\n                    !(value.toLocaleLowerCase() === 'off' || value.toLocaleLowerCase() === 'no')) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    _ExportHelper.prototype._dispose = function () {\n        this.exportAppearance = undefined;\n        this._asPerSpecification = undefined;\n        this._skipBorderStyle = undefined;\n        this._fileName = undefined;\n        this._document = undefined;\n        this._crossReference = undefined;\n        this._isAnnotationExport = undefined;\n        this._isAnnotationImport = undefined;\n        this._key = undefined;\n        this._formKey = undefined;\n        this._exportEmptyFields = undefined;\n        this._groupReferences = undefined;\n        this._groupHolders = undefined;\n        this._encodeDictionary = undefined;\n        this._annotationTypes = undefined;\n        this._annotationAttributes = undefined;\n        this._xmlDocument = undefined;\n        this._parser = undefined;\n        this._table = undefined;\n        this._fields = undefined;\n        this._richTextValues = undefined;\n        this._jsonData = undefined;\n    };\n    return _ExportHelper;\n}());\nexport { _ExportHelper };\nvar _XfdfDocument = /** @class */ (function (_super) {\n    __extends(_XfdfDocument, _super);\n    function _XfdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _XfdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        return this._save();\n    };\n    _XfdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XfdfDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        writer._writeStartElement('xfdf');\n        writer._writeAttributeString(null, 'http://ns.adobe.com/xfdf/', 'xmlns', null);\n        writer._writeAttributeString('space', 'preserve', 'xml', null);\n        if (this._isAnnotationExport) {\n            writer._writeStartElement('annots');\n            if (this._document) {\n                for (var i = 0; i < this._document.pageCount; i++) {\n                    var page = this._document.getPage(i);\n                    var annotations = page.annotations;\n                    for (var j = 0; j < annotations.count; j++) {\n                        var annotation = annotations.at(j);\n                        if (annotation && (!this._annotationTypes ||\n                            this._annotationTypes.length === 0 ||\n                            (this._annotationTypes && this._annotationTypes.length > 0 && this._checkAnnotationType(annotation)))) {\n                            this._exportAnnotationData(annotation, writer, i);\n                        }\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        else {\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this._exportFormFieldData(field);\n                    }\n                }\n                this._writeFormFieldData(writer, this._asPerSpecification);\n            }\n        }\n        if (!this._asPerSpecification) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XfdfDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        var _this = this;\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n            writer._writeEndElement();\n            var elements = this._getElements(this._table); // eslint-disable-line\n            if (elements && elements.size > 0) {\n                writer._writeStartElement('fields');\n                var flag_1 = false;\n                elements.forEach(function (value, key) {\n                    writer._writeStartElement('field');\n                    writer._writeAttributeString('name', key.toString());\n                    if (Array.isArray(value)) {\n                        value.forEach(function (item) {\n                            writer._writeStartElement('value');\n                            writer._writeString(item.toString());\n                            writer._writeEndElement();\n                            flag_1 = true;\n                        });\n                    }\n                    if (value instanceof Map) {\n                        _this._writeFieldName(value, writer);\n                    }\n                    else if (!flag_1 && !value.toString().endsWith(_this._formKey) || (!flag_1 && _this._formKey === '')) {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                        writer._writeEndElement();\n                    }\n                    else if (_this._formKey !== '' && value.toString().endsWith(_this._formKey)) {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                        writer._writeEndElement();\n                    }\n                    writer._writeEndElement();\n                    flag_1 = false;\n                });\n                writer._writeEndElement();\n            }\n            writer._writeStartElement('ids');\n            var hasId = false;\n            if (this._crossReference._root.has('ID')) {\n                var id = this._crossReference._root.getArray('ID');\n                if (id && id.length >= 1) {\n                    writer._writeAttributeString('original', id[0]);\n                    writer._writeAttributeString('modified', id[1]);\n                    hasId = true;\n                }\n            }\n            if (!hasId) {\n                writer._writeAttributeString('original', '');\n                writer._writeAttributeString('modified', '');\n            }\n            writer._writeEndElement();\n        }\n        else {\n            writer._writeStartElement('fields');\n            this._table.forEach(function (value, key) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    writer._writeStartElement('value');\n                    writer._writeString(value.toString());\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            });\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeFieldName = function (value, writer) {\n        var _this = this;\n        value.forEach(function (value, key) {\n            if (value instanceof Map) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                _this._writeFieldName(value, writer);\n                writer._writeEndElement();\n            }\n            else {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    if (!value.toString().endsWith(_this._formKey) || _this._formKey === '') {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                    }\n                    else {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                    }\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            }\n        });\n    };\n    _XfdfDocument.prototype._getElements = function (table) {\n        var _this = this;\n        var elements = new Map(); // eslint-disable-line\n        table.forEach(function (value, key) {\n            var parentElements = elements; // eslint-disable-line\n            if (key.toString().indexOf('.') !== -1) {\n                var values = key.toString().split('.');\n                for (var i = 0; i < values.length; i++) {\n                    var element = values[Number.parseInt(i.toString(), 10)];\n                    if (parentElements.has(element)) {\n                        _this._getElements(parentElements[element]); // eslint-disable-line\n                        parentElements = parentElements[element]; // eslint-disable-line\n                    }\n                    else {\n                        if (i === values.length - 1) {\n                            parentElements.set(element, value);\n                        }\n                        else {\n                            var newTable = new Map(); // eslint-disable-line\n                            parentElements.set(element, newTable);\n                            parentElements = newTable;\n                        }\n                    }\n                }\n            }\n            else {\n                parentElements.set(key, value);\n            }\n        });\n        return elements;\n    };\n    _XfdfDocument.prototype._checkAnnotationType = function (annotation) {\n        return (typeof annotation._type !== 'undefined' && this._annotationTypes.indexOf(annotation._type) !== -1);\n    };\n    _XfdfDocument.prototype._exportAnnotationData = function (annotation, writer, pageIndex) {\n        if (annotation._dictionary &&\n            !(annotation instanceof PdfFileLinkAnnotation ||\n                annotation instanceof PdfTextWebLinkAnnotation ||\n                annotation instanceof PdfDocumentLinkAnnotation ||\n                annotation instanceof PdfUriAnnotation)) {\n            this._writeAnnotationData(writer, pageIndex, annotation);\n        }\n    };\n    _XfdfDocument.prototype._writeAnnotationData = function (writer, pageIndex, source) {\n        var hasAppearance = false;\n        var annotation;\n        var dictionary;\n        if (source instanceof PdfAnnotation) {\n            annotation = source;\n            dictionary = source._dictionary;\n        }\n        else {\n            dictionary = source;\n        }\n        var type = this._getAnnotationType(dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            if (!this._annotationAttributes) {\n                this._annotationAttributes = [];\n            }\n            writer._writeStartElement(type.toLowerCase());\n            writer._writeAttributeString('page', pageIndex.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    writer._writeAttributeString('start', points[0].toString() + ',' + points[1].toString());\n                    writer._writeAttributeString('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, pageIndex, writer, hasAppearance);\n            writer._writeEndElement();\n            this._annotationAttributes = [];\n        }\n    };\n    _XfdfDocument.prototype._writeDictionary = function (dictionary, pageIndex, writer, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                writer._writeAttributeString('inreplyto', _this._getValue(entry.get('NM')));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, writer, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(writer, key, value);\n                }\n            }\n        });\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                writer._writeStartElement('appearance');\n                writer._writeRaw(_encode(stream));\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'), writer);\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    writer._writeAttributeString('bits', this._getValue(soundDictionary.get('B')));\n                }\n                if (soundDictionary.has('C')) {\n                    writer._writeAttributeString('channels', this._getValue(soundDictionary.get('C')));\n                }\n                if (soundDictionary.has('E')) {\n                    writer._writeAttributeString('encoding', this._getValue(soundDictionary.get('E')));\n                }\n                if (soundDictionary.has('R')) {\n                    writer._writeAttributeString('rate', this._getValue(soundDictionary.get('R')));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        writer._writeStartElement('data');\n                        writer._writeAttributeString('MODE', 'raw');\n                        writer._writeAttributeString('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            writer._writeAttributeString('length', this._getValue(soundDictionary.get('Length')));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            writer._writeAttributeString('filter', this._getValue(soundDictionary.get('Filter')));\n                        }\n                        writer._writeRaw(data);\n                        writer._writeEndElement();\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    writer._writeAttributeString('file', this._getValue(fsDictionary.get('F')));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'));\n                                        writer._writeAttributeString('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'));\n                                        writer._writeAttributeString('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        writer._writeAttributeString('size', this._getValue(paramsDictionary.get('Size')));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'));\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        writer._writeAttributeString('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                writer._writeStartElement('data');\n                                writer._writeAttributeString('MODE', 'raw');\n                                writer._writeAttributeString('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    writer._writeAttributeString('length', this._getValue(fDictionary.get('Length')));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    writer._writeAttributeString('filter', this._getValue(fDictionary.get('Filter')));\n                                }\n                                writer._writeRaw(data);\n                                writer._writeEndElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (dictionary.has('Vertices')) {\n            writer._writeStartElement('vertices');\n            var vertices = dictionary.getArray('Vertices');\n            if (vertices && vertices.length > 0) {\n                var elementCount = vertices.length;\n                if (elementCount % 2 === 0) {\n                    var value = '';\n                    for (var i = 0; i < elementCount - 1; i++) {\n                        value += this._getValue(vertices[Number.parseInt(i.toString(), 10)]) + (i % 2 !== 0 ? ';' : ',');\n                    }\n                    value += this._getValue(vertices[elementCount - 1]);\n                    if (value && value !== '') {\n                        writer._writeRaw(value);\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        if (dictionary.has('Popup')) {\n            var popup = dictionary.get('Popup');\n            if (popup) {\n                this._writeAnnotationData(writer, pageIndex, popup);\n            }\n        }\n        if (dictionary.has('DA')) {\n            var defaultAppearance = dictionary.get('DA');\n            if (defaultAppearance) {\n                this._writeRawData(writer, 'defaultappearance', defaultAppearance);\n            }\n        }\n        if (dictionary.has('DS')) {\n            var defaultStyle = dictionary.get('DS');\n            if (defaultStyle) {\n                this._writeRawData(writer, 'defaultstyle', defaultStyle);\n            }\n        }\n        if (dictionary.has('InkList')) {\n            var inkList = dictionary.getArray('InkList');\n            if (inkList && inkList.length > 0) {\n                writer._writeStartElement('inklist');\n                for (var j = 0; j < inkList.length; j++) {\n                    writer._writeElementString('gesture', this._getValue(inkList[Number.parseInt(j.toString(), 10)]));\n                }\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('RC')) {\n            var value = dictionary.get('RC');\n            if (value && value !== '') {\n                var index = value.indexOf('<body');\n                if (index > 0) {\n                    value = value.substring(index);\n                }\n                this._writeRawData(writer, 'contents-richtext', value);\n            }\n        }\n        if (dictionary.has('Contents')) {\n            var value = dictionary.get('Contents');\n            if (value && value.length > 0) {\n                writer._writeStartElement('contents');\n                writer._writeString(value);\n                writer._writeEndElement();\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearanceString = function (appearance) {\n        var textWriter = new _XmlWriter(true);\n        textWriter._writeStartElement('DICT');\n        textWriter._writeAttributeString('KEY', 'AP');\n        this._writeAppearanceDictionary(textWriter, appearance);\n        textWriter._writeEndElement();\n        var buffer = textWriter.buffer;\n        textWriter._destroy();\n        return buffer;\n    };\n    _XfdfDocument.prototype._writeAppearanceDictionary = function (writer, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(writer, value instanceof _PdfReference ? dictionary.get(key) : value, dictionary, key);\n            });\n        }\n    };\n    _XfdfDocument.prototype._writeObject = function (writer, primitive, dictionary, key) {\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (primitive instanceof _PdfName) {\n                this._writePrefix(writer, 'NAME', key);\n                writer._writeAttributeString('VAL', primitive.name);\n                writer._writeEndElement();\n            }\n            else if (Array.isArray(primitive)) {\n                this._writePrefix(writer, 'ARRAY', key);\n                if (dictionary.has(key)) {\n                    this._writeArray(writer, dictionary.getArray(key), dictionary);\n                }\n                else {\n                    this._writeArray(writer, primitive, dictionary);\n                }\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'string') {\n                this._writePrefix(writer, 'STRING', key);\n                writer._writeAttributeString('VAL', primitive);\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'number') {\n                if (Number.isInteger(primitive)) {\n                    this._writePrefix(writer, 'INT', key);\n                    writer._writeAttributeString('VAL', primitive.toString());\n                }\n                else {\n                    this._writePrefix(writer, 'FIXED', key);\n                    writer._writeAttributeString('VAL', primitive.toFixed(6));\n                }\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'boolean') {\n                this._writePrefix(writer, 'BOOL', key);\n                writer._writeAttributeString('VAL', primitive ? 'true' : 'false');\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfDictionary) {\n                this._writePrefix(writer, 'DICT', key);\n                this._writeAppearanceDictionary(writer, primitive);\n                writer._writeEndElement();\n            }\n            else if (primitive === null) {\n                this._writePrefix(writer, 'NULL', key);\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfBaseStream && primitive.dictionary) {\n                var streamDictionary = primitive.dictionary;\n                this._writePrefix(writer, 'STREAM', key);\n                writer._writeAttributeString('DEFINE', '');\n                if ((streamDictionary.has('Subtype') &&\n                    this._getValue(streamDictionary.get('Subtype')) === 'Image') ||\n                    (!streamDictionary.has('Type') && !streamDictionary.has('Subtype'))) {\n                    var data = primitive.getString(true);\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'RAW');\n                    writer._writeAttributeString('ENCODING', 'HEX');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                else {\n                    var data = primitive.getString();\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    data = data.replace(/</g, '&lt;');\n                    data = data.replace(/>/g, '&gt;');\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'FILTERED');\n                    writer._writeAttributeString('ENCODING', 'ASCII');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                writer._writeEndElement();\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfReference && this._crossReference) {\n                this._writeObject(writer, this._crossReference._fetch(primitive), dictionary, key);\n            }\n        }\n    };\n    _XfdfDocument.prototype._writePrefix = function (writer, name, key) {\n        writer._writeStartElement(name);\n        if (key) {\n            writer._writeAttributeString('KEY', key);\n        }\n    };\n    _XfdfDocument.prototype._writeArray = function (writer, array, dictionary) {\n        var _this = this;\n        array.forEach(function (entry) {\n            _this._writeObject(writer, entry, dictionary);\n        });\n    };\n    _XfdfDocument.prototype._getFormatedString = function (value, isParsing) {\n        if (isParsing === void 0) { isParsing = false; }\n        if (isParsing) {\n            value = value.replace('&amp;', '&');\n            value = value.replace('&lt;', '<');\n            value = value.replace('&gt;', '>');\n        }\n        else {\n            value = value.replace('&', '&amp;');\n            value = value.replace('<', '&lt;');\n            value = value.replace('>', '&gt;');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._writeAttribute = function (writer, key, primitive) {\n        if (this._annotationAttributes && this._annotationAttributes.indexOf(key) === -1) {\n            switch (key) {\n                case 'C':\n                    this._writeColor(writer, primitive, 'color', 'c');\n                    break;\n                case 'IC':\n                    this._writeColor(writer, primitive, 'interior-color');\n                    break;\n                case 'M':\n                    this._writeAttributeString(writer, 'date', primitive);\n                    break;\n                case 'NM':\n                    this._writeAttributeString(writer, 'name', primitive);\n                    break;\n                case 'Name':\n                    this._writeAttributeString(writer, 'icon', primitive);\n                    break;\n                case 'Subj':\n                    this._writeAttributeString(writer, 'subject', primitive);\n                    break;\n                case 'T':\n                    this._writeAttributeString(writer, 'title', primitive);\n                    break;\n                case 'Rotate':\n                    this._writeAttributeString(writer, 'rotation', primitive);\n                    break;\n                case 'W':\n                    this._writeAttributeString(writer, 'width', primitive);\n                    break;\n                case 'LE':\n                    if (primitive && Array.isArray(primitive)) {\n                        if (primitive.length === 2) {\n                            writer._writeAttributeString('head', this._getValue(primitive[0]));\n                            writer._writeAttributeString('tail', this._getValue(primitive[1]));\n                        }\n                    }\n                    else if (primitive instanceof _PdfName) {\n                        this._writeAttributeString(writer, 'head', primitive);\n                    }\n                    break;\n                case 'S':\n                    if (this._annotationAttributes.indexOf('style') === -1) {\n                        switch (this._getValue(primitive)) {\n                            case 'D':\n                                writer._writeAttributeString('style', 'dash');\n                                break;\n                            case 'C':\n                                writer._writeAttributeString('style', 'cloudy');\n                                break;\n                            case 'S':\n                                writer._writeAttributeString('style', 'solid');\n                                break;\n                            case 'B':\n                                writer._writeAttributeString('style', 'bevelled');\n                                break;\n                            case 'I':\n                                writer._writeAttributeString('style', 'inset');\n                                break;\n                            case 'U':\n                                writer._writeAttributeString('style', 'underline');\n                                break;\n                        }\n                        this._annotationAttributes.push('style');\n                    }\n                    break;\n                case 'D':\n                    this._writeAttributeString(writer, 'dashes', primitive);\n                    break;\n                case 'I':\n                    this._writeAttributeString(writer, 'intensity', primitive);\n                    break;\n                case 'RD':\n                    this._writeAttributeString(writer, 'fringe', primitive);\n                    break;\n                case 'IT':\n                    this._writeAttributeString(writer, 'IT', primitive);\n                    break;\n                case 'RT':\n                    this._writeAttributeString(writer, 'replyType', primitive, true);\n                    break;\n                case 'LL':\n                    this._writeAttributeString(writer, 'leaderLength', primitive);\n                    break;\n                case 'LLE':\n                    this._writeAttributeString(writer, 'leaderExtend', primitive);\n                    break;\n                case 'Cap':\n                    this._writeAttributeString(writer, 'caption', primitive);\n                    break;\n                case 'Q':\n                    this._writeAttributeString(writer, 'justification', primitive);\n                    break;\n                case 'CP':\n                    this._writeAttributeString(writer, 'caption-style', primitive);\n                    break;\n                case 'CL':\n                    this._writeAttributeString(writer, 'callout', primitive);\n                    break;\n                case 'QuadPoints':\n                    this._writeAttributeString(writer, 'coords', primitive);\n                    break;\n                case 'CA':\n                    this._writeAttributeString(writer, 'opacity', primitive);\n                    break;\n                case 'F':\n                    if (typeof primitive === 'number' && this._annotationAttributes.indexOf('flags') === -1) {\n                        var flag = _annotationFlagsToString(primitive);\n                        writer._writeAttributeString('flags', flag);\n                        this._annotationAttributes.push('flags');\n                    }\n                    break;\n                case 'InkList':\n                case 'Type':\n                case 'Subtype':\n                case 'P':\n                case 'Parent':\n                case 'L':\n                case 'Contents':\n                case 'RC':\n                case 'DA':\n                case 'DS':\n                case 'FS':\n                case 'MeasurementTypes':\n                case 'Vertices':\n                case 'GroupNesting':\n                case 'ITEx':\n                case 'TextMarkupContent':\n                    break;\n                default:\n                    this._writeAttributeString(writer, key.toLowerCase(), primitive);\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._writeAttributeString = function (writer, attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        if (this._annotationAttributes.indexOf(attribute) === -1) {\n            var value = this._getValue(primitive);\n            writer._writeAttributeString(attribute, isLowerCase ? value.toLowerCase() : value);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._writeRawData = function (writer, name, value) {\n        if (value && value !== '') {\n            writer._writeStartElement(name);\n            writer._writeRaw(value);\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeColor = function (writer, primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive);\n            if (c && c !== '' && this._annotationAttributes.indexOf(tag) === -1) {\n                writer._writeAttributeString(tag, c);\n                this._annotationAttributes.push(tag);\n            }\n        }\n        if (color && color !== '' && this._annotationAttributes.indexOf(attribute) === -1) {\n            writer._writeAttributeString(attribute, color);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._exportMeasureDictionary = function (dictionary, writer) {\n        writer._writeStartElement('measure');\n        if (dictionary) {\n            if (dictionary.has('R')) {\n                writer._writeAttributeString('rateValue', this._getValue(dictionary.get('R')));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                writer._writeStartElement('area');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                writer._writeStartElement('distance');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                writer._writeStartElement('xformat');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n        }\n        writer._writeEndElement();\n    };\n    _XfdfDocument.prototype._exportMeasureFormatDetails = function (measurementDetails, writer) {\n        if (measurementDetails.has('C')) {\n            writer._writeAttributeString('c', this._getValue(measurementDetails.get('C')));\n        }\n        if (measurementDetails.has('F')) {\n            writer._writeAttributeString('f', this._getValue(measurementDetails.get('F')));\n        }\n        if (measurementDetails.has('D')) {\n            writer._writeAttributeString('d', this._getValue(measurementDetails.get('D')));\n        }\n        if (measurementDetails.has('RD')) {\n            writer._writeAttributeString('rd', this._getValue(measurementDetails.get('RD')));\n        }\n        if (measurementDetails.has('U')) {\n            writer._writeAttributeString('u', this._getValue(measurementDetails.get('U')));\n        }\n        if (measurementDetails.has('RT')) {\n            writer._writeAttributeString('rt', this._getValue(measurementDetails.get('RT')));\n        }\n        if (measurementDetails.has('SS')) {\n            writer._writeAttributeString('ss', this._getValue(measurementDetails.get('SS')));\n        }\n        if (measurementDetails.has('FD')) {\n            writer._writeAttributeString('fd', this._getValue(measurementDetails.get('FD')));\n        }\n    };\n    //#endregion Export Annotations\n    //#region Import Annotations\n    _XfdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var xml = _bytesToString(data, true);\n        this._xmlDocument = (new DOMParser()).parseFromString(xml, 'text/xml');\n        this._isAnnotationImport = true;\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._xmlDocument = (new DOMParser()).parseFromString(_bytesToString(data, true), 'text/xml');\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._readXmlData = function (root) {\n        if (root && root.nodeType === 1) {\n            this._checkXfdf(root);\n            if (this._isAnnotationImport) {\n                var xList = root.getElementsByTagName('annots');\n                if (xList && xList.length > 0) {\n                    for (var i = 0; i < xList.length; i++) {\n                        var child = xList.item(i);\n                        if (child && child.localName === 'annots' && child.hasChildNodes()) {\n                            var childeNodes = child.childNodes;\n                            for (var j = 0; j < childeNodes.length; j++) {\n                                var childNode = childeNodes.item(j);\n                                if (childNode && childNode.nodeType === 1) {\n                                    var element = childNode;\n                                    if (element && element.nodeType === 1) {\n                                        this._parseAnnotationData(element);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n            else {\n                this._parseFormData(root);\n            }\n        }\n        this._dispose();\n    };\n    _XfdfDocument.prototype._checkXfdf = function (element) {\n        if (element.nodeName !== 'xfdf') {\n            throw new Error('Invalid XFDF file.');\n        }\n    };\n    _XfdfDocument.prototype._parseFormData = function (root) {\n        var list = root.getElementsByTagName('f');\n        if (list && list.length > 0) {\n            var fileNameElement = list.item(0);\n            if (fileNameElement && fileNameElement.localName === 'f' && fileNameElement.hasAttribute('href')) {\n                var fileName = fileNameElement.getAttribute('href');\n                if (fileName && fileName !== '') {\n                    this._fileName = fileName;\n                }\n            }\n        }\n        list = root.getElementsByTagName('ids');\n        if (list && list.length > 0) {\n            this._asPerSpecification = true;\n        }\n        var child = root.childNodes;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode && childNode.nodeType === 1) {\n                    var element = childNode;\n                    if (element && element.localName === 'fields' && element.hasChildNodes()) {\n                        var fieldList = element.childNodes;\n                        var elements = [];\n                        for (var j = 0; j < fieldList.length; j++) {\n                            var field = fieldList.item(j);\n                            if (field && field.nodeType === 1) {\n                                var filedElement = field;\n                                if (filedElement && filedElement.localName === 'field') {\n                                    elements.push(filedElement);\n                                }\n                            }\n                        }\n                        this._importFormNodes(elements);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XfdfDocument.prototype._importFormNodes = function (list) {\n        for (var i = 0; i < list.length; i++) {\n            var child = list[Number.parseInt(i.toString(), 10)];\n            var fieldName = '';\n            if (child) {\n                if (child.hasAttribute('name')) {\n                    fieldName = child.getAttribute('name');\n                }\n                if (fieldName && fieldName !== '') {\n                    var values = child.getElementsByTagName('value');\n                    if (values && values.length > 0) {\n                        var node = child;\n                        var textName = '';\n                        while (node.localName !== 'fields') {\n                            if (textName.length > 0) {\n                                textName = '.' + textName;\n                            }\n                            var skip = false;\n                            if (node.hasAttribute('name')) {\n                                var name_1 = node.getAttribute('name');\n                                if (name_1 && name_1 !== '') {\n                                    textName = name_1 + textName;\n                                    skip = true;\n                                }\n                            }\n                            if (!skip) {\n                                textName += node.localName;\n                            }\n                            node = node.parentElement;\n                        }\n                        fieldName = textName;\n                        var dataValues = void 0;\n                        if (this._fields.has(fieldName)) {\n                            dataValues = this._fields.get(fieldName);\n                        }\n                        else {\n                            dataValues = [];\n                        }\n                        for (var j = 0; j < values.length; j++) {\n                            dataValues.push(values.item(j).textContent);\n                        }\n                        this._fields.set(fieldName, dataValues);\n                    }\n                    else {\n                        values = child.getElementsByTagName('value-richtext');\n                        if (values && values.length > 0) {\n                            var element = values.item(0);\n                            if (element) {\n                                var node = child;\n                                var textName = '';\n                                while (node.localName !== 'fields') {\n                                    if (textName.length > 0) {\n                                        textName = '.' + textName;\n                                    }\n                                    var skip = false;\n                                    if (node.hasAttribute('name')) {\n                                        var name_2 = node.getAttribute('name');\n                                        if (name_2 && name_2 !== '') {\n                                            textName = name_2 + textName;\n                                            skip = true;\n                                        }\n                                    }\n                                    if (!skip) {\n                                        textName += node.localName;\n                                    }\n                                    node = node.parentElement;\n                                }\n                                fieldName = textName;\n                                var richText = element.textContent;\n                                if (element.childNodes && element.childNodes.length > 0) {\n                                    var childNode = element.childNodes[0];\n                                    if (childNode && childNode.hasChildNodes()) {\n                                        richText = '';\n                                        var childNodes = childNode.childNodes;\n                                        for (var j = void 0; j < childNodes.length; j++) {\n                                            richText += childNodes.item(j).textContent + '\\r';\n                                        }\n                                        if (richText.length > 0) {\n                                            richText = richText.substring(0, richText.length - 1);\n                                        }\n                                        else {\n                                            richText = element.textContent;\n                                        }\n                                    }\n                                }\n                                var dataValues = void 0;\n                                if (this._fields.has(fieldName)) {\n                                    dataValues = this._fields.get(fieldName);\n                                }\n                                else {\n                                    dataValues = [];\n                                }\n                                for (var j = 0; j < values.length; j++) {\n                                    dataValues.push(richText);\n                                }\n                                this._fields.set(fieldName, dataValues);\n                                if (!this._richTextValues.has(fieldName)) {\n                                    this._richTextValues.set(fieldName, element.innerHTML);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._parseAnnotationData = function (element) {\n        if (element) {\n            var pageIndex = -1;\n            if (element.hasAttributes && element.hasAttribute('page')) {\n                pageIndex = Number.parseInt(element.getAttribute('page'), 10);\n                if (pageIndex >= 0 && pageIndex < this._document.pageCount) {\n                    var page = this._document.getPage(pageIndex);\n                    var annotationDictionary = this._getAnnotationDictionary(page, element);\n                    if (annotationDictionary && annotationDictionary.size > 0) {\n                        var pageDictionary = page._pageDictionary;\n                        if (pageDictionary) {\n                            var annotations = page.annotations;\n                            var annotation = annotations._parseAnnotation(annotationDictionary);\n                            if (annotation) {\n                                annotation._isImported = true;\n                                var reference = this._crossReference._getNextReference();\n                                this._crossReference._cacheMap.set(reference, annotationDictionary);\n                                if (annotationDictionary.has('NM') || annotationDictionary.has('IRT')) {\n                                    this._addReferenceToGroup(reference, annotationDictionary);\n                                }\n                                annotation._ref = reference;\n                                var index = annotations._annotations.length;\n                                annotations._annotations.push(reference);\n                                pageDictionary.set('Annots', annotations._annotations);\n                                pageDictionary._updated = true;\n                                annotations._parsedAnnotations.set(index, annotation);\n                                this._handlePopup(annotations, reference, annotationDictionary, pageDictionary);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAnnotationDictionary = function (page, element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        dictionary.update('Type', _PdfName.get('Annot'));\n        var isValidType = true;\n        switch (element.localName.toLowerCase()) {\n            case 'line':\n                dictionary.update('Subtype', _PdfName.get('Line'));\n                if (element.hasAttribute('start') && element.hasAttribute('end')) {\n                    var points_1 = [];\n                    element.getAttribute('start').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    element.getAttribute('end').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    if (points_1.length === 4) {\n                        dictionary.update('L', points_1);\n                    }\n                }\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'circle':\n                dictionary.update('Subtype', _PdfName.get('Circle'));\n                break;\n            case 'square':\n                dictionary.update('Subtype', _PdfName.get('Square'));\n                break;\n            case 'polyline':\n                dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'polygon':\n                dictionary.update('Subtype', _PdfName.get('Polygon'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'ink':\n                dictionary.update('Subtype', _PdfName.get('Ink'));\n                break;\n            case 'popup':\n                dictionary.update('Subtype', _PdfName.get('Popup'));\n                break;\n            case 'text':\n                dictionary.update('Subtype', _PdfName.get('Text'));\n                break;\n            case 'freetext':\n                dictionary.update('Subtype', _PdfName.get('FreeText'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'stamp':\n                dictionary.update('Subtype', _PdfName.get('Stamp'));\n                break;\n            case 'highlight':\n                dictionary.update('Subtype', _PdfName.get('Highlight'));\n                break;\n            case 'squiggly':\n                dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                break;\n            case 'underline':\n                dictionary.update('Subtype', _PdfName.get('Underline'));\n                break;\n            case 'strikeout':\n                dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                break;\n            case 'fileattachment':\n                dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                break;\n            case 'sound':\n                dictionary.update('Subtype', _PdfName.get('Sound'));\n                break;\n            case 'caret':\n                dictionary.update('Subtype', _PdfName.get('Caret'));\n                break;\n            case 'redact':\n                dictionary.update('Subtype', _PdfName.get('Redact'));\n                break;\n            default:\n                isValidType = false;\n                break;\n        }\n        if (isValidType) {\n            this._addAnnotationData(dictionary, element, page);\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._addAnnotationData = function (dictionary, element, page) {\n        this._addBorderStyle(dictionary, element);\n        this._applyAttributeValues(dictionary, element.attributes);\n        this._parseInnerElements(dictionary, element, page);\n        this._addMeasureDictionary(dictionary, element);\n    };\n    _XfdfDocument.prototype._addBorderStyle = function (dictionary, element) {\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('width')) {\n            borderStyleDictionary.update('W', Number.parseFloat(element.getAttribute('width')));\n        }\n        var isBasicStyle = true;\n        if (element.hasAttribute('style')) {\n            var style = '';\n            switch (element.getAttribute('style')) {\n                case 'dash':\n                    style = 'D';\n                    break;\n                case 'solid':\n                    style = 'S';\n                    break;\n                case 'bevelled':\n                    style = 'B';\n                    break;\n                case 'inset':\n                    style = 'I';\n                    break;\n                case 'underline':\n                    style = 'U';\n                    break;\n                case 'cloudy':\n                    style = 'C';\n                    isBasicStyle = false;\n                    break;\n            }\n            if (style !== '') {\n                (isBasicStyle ? borderStyleDictionary : borderEffectDictionary).update('S', _PdfName.get(style));\n                if (!isBasicStyle && element.hasAttribute('intensity')) {\n                    borderEffectDictionary.update('I', Number.parseFloat(element.getAttribute('intensity')));\n                }\n                else if (element.hasAttribute('dashes')) {\n                    var dashes_1 = [];\n                    element.getAttribute('dashes').split(',').forEach(function (value) {\n                        dashes_1.push(Number.parseFloat(value));\n                    });\n                    borderStyleDictionary.update('D', dashes_1);\n                }\n            }\n        }\n        if (borderEffectDictionary.size > 0) {\n            dictionary.update('BE', borderEffectDictionary);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', 'Border');\n            dictionary.update('BS', borderStyleDictionary);\n        }\n    };\n    _XfdfDocument.prototype._applyAttributeValues = function (dictionary, attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n            var attribute = attributes[Number.parseInt(i.toString(), 10)];\n            var value = attribute.value;\n            var values = void 0;\n            var leaderExtend = void 0;\n            switch (attribute.name.toLowerCase()) {\n                case 'page':\n                case 'start':\n                case 'end':\n                case 'width':\n                case 'head':\n                case 'tail':\n                case 'style':\n                case 'intensity':\n                case 'itex':\n                    break;\n                case 'state':\n                    this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'rect':\n                    values = this._obtainPoints(value);\n                    if (values && values.length === 4) {\n                        dictionary.update('Rect', values);\n                    }\n                    break;\n                case 'color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('C', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'interior-color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('IC', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value && value !== '') {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    this._addString(dictionary, 'Subj', this._getFormatedString(value, true));\n                    break;\n                case 'title':\n                    this._addString(dictionary, 'T', this._getFormatedString(value, true));\n                    break;\n                case 'rotation':\n                    this._addInt(dictionary, 'Rotate', value);\n                    break;\n                case 'justification':\n                    this._addInt(dictionary, 'Q', value);\n                    break;\n                case 'fringe':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'RD');\n                    break;\n                case 'it':\n                    if (value && value !== '') {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    this._addFloat(dictionary, 'LL', value);\n                    break;\n                case 'leaderextend':\n                    leaderExtend = Number.parseFloat(value);\n                    if (typeof leaderExtend !== 'undefined') {\n                        dictionary.update('LLE', leaderExtend);\n                    }\n                    break;\n                case 'caption':\n                    if (value && value !== '') {\n                        dictionary.update('Cap', value.toLowerCase() === 'yes' ? true : false);\n                    }\n                    break;\n                case 'caption-style':\n                    if (value && value !== '') {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'CL');\n                    break;\n                case 'coords':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'QuadPoints');\n                    break;\n                case 'border':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'Border');\n                    break;\n                case 'opacity':\n                    this._addFloat(dictionary, 'CA', value);\n                    break;\n                case 'flags':\n                    if (value && value !== '') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i_1 = 0; i_1 < flags.length; i_1++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i_1.toString(), 10)]);\n                            if (i_1 === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    if (value && value !== '') {\n                        dictionary.update('Open', (value === 'true' || value === 'yes') ? true : false);\n                    }\n                    break;\n                case 'calibrate':\n                    this._addString(dictionary, 'Calibrate', value);\n                    break;\n                case 'customdata':\n                    this._addString(dictionary, 'CustomData', value);\n                    break;\n                case 'overlaytext':\n                    dictionary.update('OverlayText', value);\n                    break;\n                case 'repeat':\n                    dictionary.update('Repeat', (value === 'true' || value === 'yes') ? true : false);\n                    break;\n                default:\n                    if (this._document._allowImportCustomData) {\n                        this._addString(dictionary, attribute.name, value);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._obtainPoints = function (value) {\n        var points = [];\n        value.split(',').forEach(function (value) {\n            points.push(Number.parseFloat(value));\n        });\n        return points;\n    };\n    _XfdfDocument.prototype._parseInnerElements = function (dictionary, element, page) {\n        if (element.hasChildNodes) {\n            var children = element.childNodes;\n            var _loop_1 = function (index) {\n                var child = children[Number.parseInt(index.toString(), 10)];\n                if (child.nodeType === 1) {\n                    var childElement = child;\n                    var textContent = child.textContent;\n                    var innerHTML = childElement.innerHTML;\n                    switch (child.nodeName.toLowerCase()) {\n                        case 'popup':\n                            if (childElement && childElement.hasAttributes) {\n                                var popupDictionary = this_1._getAnnotationDictionary(page, childElement);\n                                if (popupDictionary.size > 0) {\n                                    var reference = this_1._crossReference._getNextReference();\n                                    this_1._crossReference._cacheMap.set(reference, popupDictionary);\n                                    dictionary.update('Popup', reference);\n                                    if (popupDictionary.has('NM')) {\n                                        this_1._addReferenceToGroup(reference, popupDictionary);\n                                    }\n                                }\n                            }\n                            break;\n                        case 'contents':\n                            if (textContent && textContent !== '') {\n                                dictionary.update('Contents', this_1._getFormatedString(textContent, true));\n                            }\n                            break;\n                        case 'contents-richtext':\n                            if (innerHTML && innerHTML !== '') {\n                                dictionary.update('RC', this_1._richTextPrefix + innerHTML);\n                            }\n                            break;\n                        case 'defaultstyle':\n                            this_1._addString(dictionary, 'DS', textContent);\n                            break;\n                        case 'defaultappearance':\n                            this_1._addString(dictionary, 'DA', textContent);\n                            break;\n                        case 'vertices':\n                            if (textContent && textContent !== '') {\n                                var vertices_1 = [];\n                                textContent.split(',').forEach(function (value) {\n                                    if (value.indexOf(';') !== -1) {\n                                        value.split(';').forEach(function (innerValue) {\n                                            vertices_1.push(innerValue);\n                                        });\n                                    }\n                                    else {\n                                        vertices_1.push(value);\n                                    }\n                                });\n                                if (vertices_1.length > 0) {\n                                    var verticesArray_1 = [];\n                                    vertices_1.forEach(function (value) {\n                                        verticesArray_1.push(Number.parseFloat(value));\n                                    });\n                                    dictionary.update('Vertices', verticesArray_1);\n                                }\n                            }\n                            break;\n                        case 'appearance':\n                            this_1._addAppearanceData(child, dictionary);\n                            break;\n                        case 'inklist':\n                            if (child.hasChildNodes) {\n                                var inkListCollection = [];\n                                var childNodes = child.childNodes;\n                                var _loop_2 = function (i) {\n                                    var inkChild = childNodes[Number.parseInt(i.toString(), 10)];\n                                    if (inkChild && inkChild.nodeType === 1) {\n                                        var inkChildElement = inkChild;\n                                        if (inkChildElement.nodeName.toLowerCase() === 'gesture') {\n                                            if (inkChildElement.textContent && inkChildElement.textContent !== '') {\n                                                var points_2 = [];\n                                                inkChildElement.textContent.split(',').forEach(function (value) {\n                                                    if (value.indexOf(';') !== -1) {\n                                                        value.split(';').forEach(function (innerValue) {\n                                                            points_2.push(innerValue);\n                                                        });\n                                                    }\n                                                    else {\n                                                        points_2.push(value);\n                                                    }\n                                                });\n                                                if (points_2.length > 0) {\n                                                    var pointsArray_1 = [];\n                                                    points_2.forEach(function (value) {\n                                                        pointsArray_1.push(Number.parseFloat(value));\n                                                    });\n                                                    inkListCollection.push(pointsArray_1);\n                                                }\n                                            }\n                                        }\n                                    }\n                                };\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    _loop_2(i);\n                                }\n                                dictionary.update('InkList', inkListCollection);\n                            }\n                            break;\n                        case 'data':\n                            this_1._addStreamData(child, dictionary, element);\n                            break;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var index = 0; index < children.length; index++) {\n                _loop_1(index);\n            }\n        }\n    };\n    _XfdfDocument.prototype._addStreamData = function (child, dictionary, parent) {\n        if (child && child.textContent && child.textContent !== '') {\n            var raw = _hexStringToByteArray(child.textContent, true);\n            if (raw && raw.length > 0) {\n                if (dictionary.has('Subtype')) {\n                    var subtype = dictionary.get('Subtype');\n                    if (subtype && subtype.name === 'FileAttachment') {\n                        this._addFileAttachment(dictionary, parent, raw);\n                    }\n                    else if (subtype && subtype.name === 'Sound') {\n                        this._addSound(dictionary, parent, raw);\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._addSound = function (dictionary, element, raw) {\n        var soundStream = new _PdfContentStream(raw);\n        soundStream.dictionary._crossReference = this._crossReference;\n        soundStream.dictionary.update('Type', _PdfName.get('Sound'));\n        if (element.hasAttribute('bits')) {\n            this._addInt(soundStream.dictionary, 'B', element.getAttribute('bits'));\n        }\n        if (element.hasAttribute('rate')) {\n            this._addInt(soundStream.dictionary, 'R', element.getAttribute('rate'));\n        }\n        if (element.hasAttribute('channels')) {\n            this._addInt(soundStream.dictionary, 'C', element.getAttribute('channels'));\n        }\n        if (element.hasAttribute('encoding')) {\n            var value = element.getAttribute('encoding');\n            if (value && value !== '') {\n                soundStream.dictionary.update('E', _PdfName.get(value));\n            }\n        }\n        if (element.hasAttribute('filter')) {\n            soundStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        }\n        var soundReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(soundReference, soundStream);\n        dictionary.update('Sound', soundReference);\n    };\n    _XfdfDocument.prototype._addFileAttachment = function (dictionary, element, raw) {\n        var fileDictionary = new _PdfDictionary(this._crossReference);\n        fileDictionary.update('Type', _PdfName.get('Filespec'));\n        if (element.hasAttribute('file')) {\n            var value = element.getAttribute('file');\n            this._addString(fileDictionary, 'F', value);\n            this._addString(fileDictionary, 'UF', value);\n        }\n        var fileStream = new _PdfContentStream(raw);\n        fileStream.dictionary._crossReference = this._crossReference;\n        var param = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('size')) {\n            var size = Number.parseInt(element.getAttribute('size'), 10);\n            if (typeof size !== 'undefined') {\n                param.update('Size', size);\n                fileStream.dictionary.update('DL', size);\n            }\n        }\n        if (element.hasAttribute('modification')) {\n            this._addString(param, 'ModDate', element.getAttribute('modification'));\n        }\n        if (element.hasAttribute('creation')) {\n            this._addString(param, 'CreationDate', element.getAttribute('creation'));\n        }\n        fileStream.dictionary.update('Params', param);\n        if (element.hasAttribute('mimetype')) {\n            this._addString(fileStream.dictionary, 'Subtype', element.getAttribute('mimetype'));\n        }\n        fileStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        var embeddedFile = new _PdfDictionary(this._crossReference);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileStream);\n        embeddedFile.update('F', reference);\n        fileDictionary.update('EF', embeddedFile);\n        var fileReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fileReference, fileDictionary);\n        dictionary.update('FS', fileReference);\n    };\n    _XfdfDocument.prototype._addAppearanceData = function (element, dictionary) {\n        var innerText = element.textContent;\n        if (innerText && innerText !== '') {\n            var document_1 = (new DOMParser()).parseFromString(atob(innerText), 'text/xml');\n            if (document_1 && document_1.hasChildNodes) {\n                var childNodes = document_1.childNodes;\n                if (childNodes && childNodes.length === 1) {\n                    var rootNode = childNodes[0];\n                    if (rootNode && rootNode.nodeType === 1) {\n                        var rootElement = rootNode;\n                        if (rootElement.nodeName.toUpperCase() === 'DICT' && rootElement.hasAttribute('KEY')) {\n                            var key = rootElement.getAttribute('KEY');\n                            if (key && key === 'AP' && rootElement.hasChildNodes) {\n                                var appearance = new _PdfDictionary(this._crossReference);\n                                childNodes = rootElement.childNodes;\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    this._getAppearance(appearance, childNodes[Number.parseInt(i.toString(), 10)]);\n                                }\n                                if (appearance.size > 0) {\n                                    dictionary.update('AP', appearance);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearance = function (source, child) {\n        var appearance = source instanceof _PdfDictionary ? source : source.dictionary;\n        if (child && child.nodeType === 1) {\n            var element = child;\n            if (element && element.localName) {\n                var stream = void 0;\n                var dictionary = void 0;\n                var data = void 0;\n                switch (element.localName) {\n                    case 'STREAM':\n                        stream = this._getStream(element);\n                        if (stream) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, stream);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'DICT':\n                        dictionary = this._getDictionary(element);\n                        if (dictionary) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, dictionary);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'ARRAY':\n                        this._addKey(this._getArray(element), appearance, element);\n                        break;\n                    case 'FIXED':\n                        this._addKey(this._getFixed(element), appearance, element);\n                        break;\n                    case 'INT':\n                        this._addKey(this._getInt(element), appearance, element);\n                        break;\n                    case 'STRING':\n                        this._addKey(this._getString(element), appearance, element);\n                        break;\n                    case 'NAME':\n                        this._addKey(this._getName(element), appearance, element);\n                        break;\n                    case 'BOOL':\n                        this._addKey(this._getBoolean(element), appearance, element);\n                        break;\n                    case 'DATA':\n                        data = this._getData(element);\n                        if (data && data.length > 0 && source instanceof _PdfContentStream) {\n                            source._bytes = data;\n                            var isImage = false;\n                            if (appearance && appearance.has('Subtype')) {\n                                var type = appearance.get('Subtype');\n                                isImage = type && type.name === 'Image';\n                            }\n                            if (isImage) {\n                                source._isCompress = false;\n                            }\n                            else {\n                                if (source.dictionary.has('Length')) {\n                                    delete source.dictionary._map.Length;\n                                }\n                                if (source.dictionary.has('Filter')) {\n                                    delete source.dictionary._map.Filter;\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getStream = function (element) {\n        var stream = new _PdfContentStream([]);\n        stream.dictionary._crossReference = this._crossReference;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(stream, child);\n                }\n            }\n        }\n        return stream;\n    };\n    _XfdfDocument.prototype._getDictionary = function (element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(dictionary, child);\n                }\n            }\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._getArray = function (element) {\n        var array = []; // eslint-disable-line\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._addArrayElements(array, child);\n                }\n            }\n        }\n        return array;\n    };\n    _XfdfDocument.prototype._getData = function (element) {\n        var data = [];\n        if (element && element.textContent &&\n            element.textContent !== '' &&\n            element.hasAttribute('MODE') && element.hasAttribute('ENCODING')) {\n            var mode = element.getAttribute('MODE');\n            var encoding = element.getAttribute('ENCODING');\n            if (mode && encoding) {\n                var innerText = this._getFormatedString(element.textContent, true);\n                if (mode === 'FILTERED' && encoding === 'ASCII') {\n                    data = _stringToBytes(innerText, true);\n                }\n                else if (mode === 'RAW' && encoding === 'HEX') {\n                    data = _hexStringToByteArray(innerText, true);\n                }\n            }\n        }\n        return data;\n    };\n    _XfdfDocument.prototype._addArrayElements = function (array, child) {\n        if (child && child.nodeType === 1) {\n            var element = child;\n            var stream = void 0;\n            var dictionary = void 0;\n            var value = void 0; // eslint-disable-line\n            var floatValue = void 0;\n            var intValue = void 0;\n            var name_3;\n            var bool = void 0;\n            switch (element.localName) {\n                case 'STREAM':\n                    stream = this._getStream(element);\n                    if (stream) {\n                        var reference = this._crossReference._getNextReference();\n                        stream.reference = reference;\n                        this._crossReference._cacheMap.set(reference, stream);\n                        array.push(reference);\n                    }\n                    break;\n                case 'DICT':\n                    dictionary = this._getDictionary(element);\n                    if (dictionary) {\n                        var reference = this._crossReference._getNextReference();\n                        this._crossReference._cacheMap.set(reference, dictionary);\n                        array.push(reference);\n                    }\n                    break;\n                case 'ARRAY':\n                    value = this._getArray(element);\n                    if (value) {\n                        array.push(value);\n                    }\n                    break;\n                case 'FIXED':\n                    floatValue = this._getFixed(element);\n                    if (typeof floatValue !== 'undefined' && !isNaN(floatValue)) {\n                        array.push(floatValue);\n                    }\n                    break;\n                case 'INT':\n                    intValue = this._getInt(element);\n                    if (typeof intValue !== 'undefined' && !isNaN(intValue)) {\n                        array.push(intValue);\n                    }\n                    break;\n                case 'NAME':\n                    name_3 = this._getName(element);\n                    if (name_3) {\n                        array.push(name_3);\n                    }\n                    break;\n                case 'BOOL':\n                    bool = this._getBoolean(element);\n                    if (typeof bool !== 'undefined' && bool !== null) {\n                        array.push(bool);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._getFixed = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseFloat(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getInt = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseInt(element.getAttribute('VAL'), 10);\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getString = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getName = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = _PdfName.get(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getBoolean = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL') === 'true' ? true : false;\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._addMeasureDictionary = function (dictionary, element) {\n        var measurement;\n        var area;\n        var distance;\n        var xformat;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var childElement = childNodes[Number.parseInt(i.toString(), 10)];\n                if (childElement && childElement.localName === 'measure') {\n                    measurement = childElement;\n                    break;\n                }\n            }\n        }\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var dDict = new _PdfDictionary(this._crossReference);\n        var aDict = new _PdfDictionary(this._crossReference);\n        var xDict = new _PdfDictionary(this._crossReference);\n        var dArray = [];\n        var aArray = [];\n        var xArray = [];\n        if (measurement) {\n            measureDictionary.update('Type', _PdfName.get('Measure'));\n            if (measurement.hasAttribute('rateValue')) {\n                var attribute = measurement.getAttribute('rateValue');\n                if (attribute && attribute !== '') {\n                    measureDictionary.update('R', attribute);\n                }\n            }\n            if (measurement.hasChildNodes) {\n                var childNodes = measurement.childNodes;\n                for (var i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[Number.parseInt(i.toString(), 10)];\n                    if (child && child.nodeType === 1) {\n                        var childElement = child;\n                        switch (childElement.nodeName.toLowerCase()) {\n                            case 'distance':\n                                distance = childElement;\n                                break;\n                            case 'area':\n                                area = childElement;\n                                break;\n                            case 'xformat':\n                                xformat = childElement;\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        if (xformat) {\n            this._addElements(xformat, xDict);\n            xArray.push(xDict);\n        }\n        if (distance) {\n            this._addElements(distance, dDict);\n            dArray.push(dDict);\n        }\n        if (area) {\n            this._addElements(area, aDict);\n            aArray.push(aDict);\n        }\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        if (measureDictionary.size > 0 && measureDictionary.has('Type')) {\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _XfdfDocument.prototype._addElements = function (element, dictionary) {\n        if (element.hasAttribute('d')) {\n            this._addFloat(dictionary, 'D', element.getAttribute('d'));\n        }\n        if (element.hasAttribute('c')) {\n            this._addFloat(dictionary, 'C', element.getAttribute('c'));\n        }\n        if (element.hasAttribute('rt')) {\n            dictionary.update('RT', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('rd')) {\n            dictionary.update('RD', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('ss')) {\n            dictionary.update('SS', element.getAttribute('ss'));\n        }\n        if (element.hasAttribute('u')) {\n            dictionary.update('U', element.getAttribute('u'));\n        }\n        if (element.hasAttribute('f')) {\n            dictionary.update('F', _PdfName.get(element.getAttribute('f')));\n        }\n        if (element.hasAttribute('fd')) {\n            dictionary.update('FD', element.getAttribute('fd') === 'yes' ? true : false);\n        }\n    };\n    _XfdfDocument.prototype._addString = function (dictionary, key, value) {\n        if (value && value !== '') {\n            dictionary.update(key, value);\n        }\n    };\n    _XfdfDocument.prototype._addInt = function (dictionary, key, value) {\n        var intValue = Number.parseInt(value, 10);\n        if (typeof intValue !== 'undefined') {\n            dictionary.update(key, intValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloat = function (dictionary, key, value) {\n        var floatValue = Number.parseFloat(value);\n        if (typeof floatValue !== 'undefined') {\n            dictionary.update(key, floatValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloatPoints = function (dictionary, points, key) {\n        if (points && points.length > 0) {\n            dictionary.update(key, points);\n        }\n    };\n    _XfdfDocument.prototype._addKey = function (primitive, dictionary, element) {\n        if (typeof primitive !== 'undefined' && primitive !== null && element.hasAttribute('KEY')) {\n            dictionary.update(element.getAttribute('KEY'), primitive);\n        }\n    };\n    _XfdfDocument.prototype._addLineEndStyle = function (dictionary, element) {\n        var beginLineStyle = '';\n        if (element.hasAttribute('head')) {\n            beginLineStyle = element.getAttribute('head');\n        }\n        var endLineStyle = '';\n        if (element.hasAttribute('tail')) {\n            endLineStyle = element.getAttribute('tail');\n        }\n        if (beginLineStyle && beginLineStyle !== '') {\n            if (endLineStyle && endLineStyle !== '') {\n                var lineEndingStyles = [];\n                lineEndingStyles.push(_PdfName.get(beginLineStyle));\n                lineEndingStyles.push(_PdfName.get(endLineStyle));\n                dictionary.update('LE', lineEndingStyles);\n            }\n            else {\n                dictionary.update('LE', _PdfName.get(beginLineStyle));\n            }\n        }\n        else if (endLineStyle && endLineStyle !== '') {\n            dictionary.update('LE', _PdfName.get(endLineStyle));\n        }\n    };\n    return _XfdfDocument;\n}(_ExportHelper));\nexport { _XfdfDocument };\nvar _FontStructure = /** @class */ (function () {\n    function _FontStructure(dictionary) {\n        this._baseFontEncoding = '';\n        this._dictionary = dictionary;\n        this._fontType = this._dictionary.get('Subtype').name;\n    }\n    Object.defineProperty(_FontStructure.prototype, \"differencesDictionary\", {\n        get: function () {\n            if (!this._differencesDictionary) {\n                this._differencesDictionary = this._getDifferencesDictionary();\n            }\n            return this._differencesDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"baseFontEncoding\", {\n        get: function () {\n            return this._baseFontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontEncoding\", {\n        get: function () {\n            if (!this._fontEncoding) {\n                this._fontEncoding = this._getFontEncoding();\n            }\n            return this._fontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontName\", {\n        get: function () {\n            if (!this._fontName) {\n                this._fontName = this._getFontName();\n            }\n            return this._fontName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _FontStructure.prototype._getFontEncoding = function () {\n        var encoding = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var baseFont = this._dictionary.get('Encoding'); // eslint-disable-line\n            if (baseFont instanceof _PdfName) {\n                encoding = baseFont.name;\n            }\n            else if (baseFont instanceof _PdfDictionary) {\n                if (baseFont.has('BaseEncoding')) {\n                    var baseFontEncoding = baseFont.get('BaseEncoding');\n                    if (baseFontEncoding && baseFontEncoding instanceof _PdfName) {\n                        this._baseFontEncoding = baseFontEncoding.name;\n                    }\n                }\n                if (baseFont.has('Type')) {\n                    var fontEncoding = baseFont.get('Type');\n                    if (fontEncoding !== null && typeof fontEncoding !== 'undefined') {\n                        encoding = fontEncoding.name;\n                    }\n                }\n            }\n        }\n        if (encoding.toString() === 'identity#2dh' || encoding === 'CMap') {\n            encoding = 'Identity-H';\n        }\n        return encoding;\n    };\n    _FontStructure.prototype._getDifferencesDictionary = function () {\n        var result = new Map();\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var encoding = this._dictionary.get('Encoding');\n            if (encoding !== null &&\n                typeof encoding !== 'undefined' &&\n                encoding instanceof _PdfDictionary &&\n                encoding.has('Differences')) {\n                var differences = encoding.getArray('Differences'); // eslint-disable-line\n                var count = 0;\n                if (differences !== null && typeof differences !== 'undefined') {\n                    for (var i = 0; i < differences.length; i++) {\n                        var text = '';\n                        var item = differences[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (typeof item === 'number') {\n                            text = item.toString();\n                            count = Number.parseInt(text, 10);\n                        }\n                        else if (item instanceof _PdfName) {\n                            text = item.name;\n                            if (this._fontType === 'Type1' && text === '.notdef') {\n                                text = ' ';\n                                result.set(count.toString(), _getLatinCharacter(text));\n                            }\n                            else {\n                                text = _getLatinCharacter(text);\n                                text = _getSpecialCharacter(text);\n                                if (!result.has(count.toString())) {\n                                    result.set(count.toString(), _getLatinCharacter(text));\n                                }\n                                count++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    _FontStructure.prototype._getFontName = function () {\n        var fontName = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('BaseFont')) {\n            var baseFont = this._dictionary.get('BaseFont');\n            var font = baseFont.name;\n            if (font.indexOf('#20') !== -1 && font.indexOf('+') === -1) {\n                var index = font.lastIndexOf('#20');\n                font = font.substring(0, index);\n                font += '+';\n            }\n            if (baseFont.name.indexOf('+') !== -1) {\n                fontName = baseFont.name.split('+')[1];\n            }\n            else {\n                fontName = baseFont.name;\n            }\n            if (fontName.indexOf('-') !== -1) {\n                fontName = fontName.split('-')[0];\n            }\n            else if (fontName.indexOf(',') !== -1) {\n                fontName = fontName.split(',')[0];\n            }\n            if (fontName.indexOf('MT') !== -1) {\n                fontName = fontName.replace('MT', '');\n            }\n            if (fontName.indexOf('#20') !== -1) {\n                fontName = fontName.replace('#20', ' ');\n            }\n            if (fontName.indexOf('#') !== -1) {\n                fontName = this._decodeHexFontName(fontName);\n            }\n        }\n        return fontName;\n    };\n    _FontStructure.prototype._decodeHexFontName = function (fontName) {\n        var result = fontName;\n        for (var i = 0; i < fontName.length; i++) {\n            if (fontName[Number.parseInt(i.toString(), 10)] === '#') {\n                var hexValue = fontName[i + 1] + fontName[i + 2];\n                var value = Number.parseInt(hexValue, 16);\n                if (value !== 0) {\n                    result = result.replace(\"#\" + hexValue, String.fromCharCode(value));\n                    i += 2;\n                }\n                if (result.indexOf('#') === -1) {\n                    break;\n                }\n            }\n        }\n        return result;\n    };\n    return _FontStructure;\n}());\nexport { _FontStructure };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ExportHelper } from './xfdf-document';\nimport { _stringToAnnotationFlags, _convertToColor, _encode, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _bytesToString, _hexStringToByteArray, _decode } from './../utils';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream, _PdfStream } from './../base-stream';\nimport { PdfAnnotationFlag } from './../enumerator';\nvar _JsonDocument = /** @class */ (function (_super) {\n    __extends(_JsonDocument, _super);\n    function _JsonDocument(fileName) {\n        var _this = _super.call(this) || this;\n        _this._isImport = false;\n        _this._isColorSpace = false;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _JsonDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _JsonDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                this._exportFormFieldsData(field);\n            }\n            this._writeFormFieldData();\n        }\n        return this._save();\n    };\n    _JsonDocument.prototype._save = function () {\n        var result = new Uint8Array(this._jsonData);\n        this._jsonData = [];\n        return result;\n    };\n    _JsonDocument.prototype._writeFormFieldData = function () {\n        var _this = this;\n        this._jsonData.push(this._openingBrace);\n        var index = 0;\n        this._table.forEach(function (value, key) {\n            key = _this._getValidString(key);\n            _this._jsonData.push(_this._doubleQuotes);\n            for (var i = 0; i < key.length; i++) {\n                _this._jsonData.push(key.charCodeAt(i));\n            }\n            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                value = _this._getValidString(typeof value === 'string' ? value : value[0]);\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._doubleQuotes);\n                _this._jsonData = _stringToBytes(value, true, false, _this._jsonData);\n                _this._jsonData.push(_this._doubleQuotes);\n            }\n            else {\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._openingBracket);\n                for (var j = 0; j < value.length; j++) {\n                    _this._jsonData.push(_this._doubleQuotes);\n                    var entry = value[Number.parseInt(j.toString(), 10)];\n                    for (var k = 0; k < entry.length; k++) {\n                        _this._jsonData.push(entry.charCodeAt(k));\n                    }\n                    _this._jsonData.push(_this._doubleQuotes);\n                    if (j < value.length - 1) {\n                        _this._jsonData.push(_this._comma);\n                    }\n                }\n                _this._jsonData.push(_this._closingBracket);\n            }\n            if (index < _this._table.size - 1) {\n                _this._jsonData.push(_this._comma);\n            }\n            index++;\n        });\n        this._jsonData.push(this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var _this = this;\n        var isAnnotationAdded = false;\n        this._jsonData.push(this._openingBrace, this._doubleQuotes, 112, 100, 102, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBrace);\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(i !== 0 && isAnnotationAdded ? this._comma : this._space, this._doubleQuotes);\n                var pageNumber = _stringToBytes(i.toString(), true, false, []);\n                pageNumber.forEach(function (entry) {\n                    _this._jsonData.push(entry);\n                });\n                this._jsonData.push(this._doubleQuotes, this._colon, this._openingBrace, this._doubleQuotes, 115, 104, 97, 112, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBracket);\n                isAnnotationAdded = true;\n            }\n            var count = 0;\n            for (var k = 0; k < page.annotations.count; k++) {\n                var annotation = page.annotations.at(k);\n                if (annotation) {\n                    if (count !== 0) {\n                        this._jsonData.push(this._comma);\n                    }\n                    count++;\n                    this._exportAnnotation(annotation, i);\n                    this._jsonData = _stringToBytes(this._convertToJson(this._table), true, false, this._jsonData);\n                    this._table.clear();\n                }\n            }\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(this._closingBracket, this._closingBrace);\n            }\n        }\n        this._jsonData.push(this._closingBrace, this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotation = function (annotation, index) {\n        var hasAppearance = false;\n        var dictionary = annotation._dictionary;\n        var type = this._getAnnotationType(annotation._dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            this._table.set('type', type);\n            this._table.set('page', index.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    this._table.set('start', points[0].toString() + ',' + points[1].toString());\n                    this._table.set('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, index, hasAppearance);\n        }\n    };\n    _JsonDocument.prototype._writeDictionary = function (dictionary, pageIndex, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                _this._table.set('inreplyto', _this._getValue(entry.get('NM'), true));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(key, value, dictionary);\n                }\n            }\n        });\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'));\n        }\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                this._table.set('appearance', _encode(stream));\n            }\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    this._table.set('bits', this._getValue(soundDictionary.get('B'), true));\n                }\n                if (soundDictionary.has('C')) {\n                    this._table.set('channels', this._getValue(soundDictionary.get('C'), true));\n                }\n                if (soundDictionary.has('E')) {\n                    this._table.set('encoding', this._getValue(soundDictionary.get('E'), true));\n                }\n                if (soundDictionary.has('R')) {\n                    this._table.set('rate', this._getValue(soundDictionary.get('R'), true));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        this._table.set('MODE', 'raw');\n                        this._table.set('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            this._table.set('length', this._getValue(soundDictionary.get('Length'), true));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            this._table.set('filter', this._getValue(soundDictionary.get('Filter'), true));\n                        }\n                        this._table.set('data', data);\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    this._table.set('file', this._getValue(fsDictionary.get('F'), true));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'), true);\n                                        this._table.set('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'), true);\n                                        this._table.set('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        this._table.set('size', this._getValue(paramsDictionary.get('Size'), true));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'), true);\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        this._table.set('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                this._table.set('MODE', 'raw');\n                                this._table.set('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    this._table.set('length', this._getValue(fDictionary.get('Length'), true));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    this._table.set('filter', this._getValue(fDictionary.get('Filter'), true));\n                                }\n                                this._table.set('data', data);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeColor = function (primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive, true);\n            if (c && c !== '') {\n                this._table.set(tag, c);\n            }\n        }\n        if (color && color !== '') {\n            this._table.set(attribute, color);\n        }\n    };\n    _JsonDocument.prototype._writeAttributeString = function (attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        var value = this._getValue(primitive, true);\n        this._table.set(attribute, isLowerCase ? value.toLowerCase() : value);\n    };\n    _JsonDocument.prototype._writeAttribute = function (key, primitive, dictionary) {\n        var value;\n        switch (key) {\n            case 'C':\n                this._writeColor(primitive, 'color', 'c');\n                break;\n            case 'IC':\n                this._writeColor(primitive, 'interior-color');\n                break;\n            case 'DA':\n                value = dictionary.get('DA');\n                if (value) {\n                    this._table.set('defaultappearance', value);\n                }\n                break;\n            case 'M':\n                this._writeAttributeString('date', primitive);\n                break;\n            case 'NM':\n                this._table.set('name', primitive);\n                break;\n            case 'Name':\n                this._writeAttributeString('icon', primitive);\n                break;\n            case 'Subj':\n                this._writeAttributeString('subject', primitive);\n                break;\n            case 'T':\n                this._writeAttributeString('title', primitive);\n                break;\n            case 'Rect':\n                value = this._getValue(primitive, true);\n                if (value) {\n                    var rectArray = value.split(',');\n                    var subTable = new Map();\n                    subTable.set('x', rectArray[0]);\n                    subTable.set('y', rectArray[1]);\n                    subTable.set('width', rectArray[2]);\n                    subTable.set('height', rectArray[3]);\n                    this._table.set(key.toLowerCase(), this._convertToJson(subTable));\n                }\n                break;\n            case 'CreationDate':\n                this._writeAttributeString('creationdate', primitive);\n                break;\n            case 'Rotate':\n                this._writeAttributeString('rotation', primitive);\n                break;\n            case 'W':\n                this._writeAttributeString('width', primitive);\n                break;\n            case 'LE':\n                if (primitive && Array.isArray(primitive)) {\n                    if (primitive.length === 2) {\n                        this._table.set('head', this._getValue(primitive[0], true));\n                        this._table.set('tail', this._getValue(primitive[1], true));\n                    }\n                }\n                else if (primitive instanceof _PdfName) {\n                    this._writeAttributeString('head', primitive);\n                }\n                break;\n            case 'S':\n                switch (this._getValue(primitive, true)) {\n                    case 'D':\n                        this._table.set('style', 'dash');\n                        break;\n                    case 'C':\n                        this._table.set('style', 'cloudy');\n                        break;\n                    case 'S':\n                        this._table.set('style', 'solid');\n                        break;\n                    case 'B':\n                        this._table.set('style', 'bevelled');\n                        break;\n                    case 'I':\n                        this._table.set('style', 'inset');\n                        break;\n                    case 'U':\n                        this._table.set('style', 'underline');\n                        break;\n                }\n                break;\n            case 'D':\n                this._writeAttributeString('dashes', primitive);\n                break;\n            case 'I':\n                this._writeAttributeString('intensity', primitive);\n                break;\n            case 'RD':\n                this._writeAttributeString('fringe', primitive);\n                break;\n            case 'IT':\n                this._writeAttributeString('IT', primitive);\n                break;\n            case 'RT':\n                this._writeAttributeString('replyType', primitive, true);\n                break;\n            case 'LL':\n                this._writeAttributeString('leaderLength', primitive);\n                break;\n            case 'LLE':\n                this._writeAttributeString('leaderExtend', primitive);\n                break;\n            case 'Cap':\n                this._writeAttributeString('caption', primitive);\n                break;\n            case 'CP':\n                this._writeAttributeString('caption-style', primitive);\n                break;\n            case 'CL':\n                this._writeAttributeString('callout', primitive);\n                break;\n            case 'QuadPoints':\n                this._writeAttributeString('coords', primitive);\n                break;\n            case 'CA':\n                this._writeAttributeString('opacity', primitive);\n                break;\n            case 'F':\n                if (typeof primitive === 'number') {\n                    var flag = _annotationFlagsToString(primitive);\n                    this._table.set('flags', flag);\n                }\n                break;\n            case 'Contents':\n                value = dictionary.get('Contents');\n                if (value && value.length > 0) {\n                    this._table.set('contents', this._getValidString(value));\n                }\n                break;\n            case 'InkList':\n                this._writeInkList(dictionary);\n                break;\n            case 'Vertices':\n                this._writeVertices(dictionary);\n                break;\n            case 'DS':\n                value = dictionary.get('DS');\n                if (value) {\n                    var styleTable = new Map();\n                    var textStyle = value.split(';');\n                    for (var i = 0; i < textStyle.length; i++) {\n                        var text = textStyle[Number.parseInt(i.toString(), 10)].split(':');\n                        if (text && text.length > 0 && text[0] && text[0].length > 1 && text[0].startsWith(' ')) {\n                            text[0] = text[0].substring(1);\n                        }\n                        styleTable.set(text[0], text[1]);\n                    }\n                    this._table.set('defaultStyle', this._convertToJson(styleTable));\n                }\n                break;\n            case 'AllowedInteractions':\n                if (primitive.indexOf('\"') !== -1) {\n                    primitive = primitive.replace(/\"/g, '\\\\\"');\n                }\n                this._table.set(key, primitive);\n                break;\n            case 'Type':\n            case 'Subtype':\n            case 'P':\n            case 'Parent':\n            case 'L':\n            case 'RC':\n            case 'FS':\n            case 'MeasurementTypes':\n            case 'GroupNesting':\n            case 'ITEx':\n            case 'TextMarkupContent':\n                break;\n            case 'Border':\n            case 'A':\n            case 'R':\n            case 'X':\n            case 'ca':\n                this._writeAttributeString(key.toLowerCase(), primitive);\n                break;\n            default:\n                if (typeof primitive === 'string' && primitive.startsWith('{') && primitive.endsWith('}')) {\n                    this._table.set(key, primitive);\n                }\n                else {\n                    this._writeAttributeString(key, primitive);\n                }\n                break;\n        }\n    };\n    _JsonDocument.prototype._writeVertices = function (dictionary) {\n        var vertices = dictionary.getArray('Vertices');\n        if (vertices && vertices.length > 0) {\n            var elementCount = vertices.length;\n            if (elementCount % 2 === 0) {\n                var vertice = '';\n                for (var i = 0; i < elementCount - 1; i++) {\n                    vertice += this._getValue(vertices[Number.parseInt(i.toString(), 10)], true) + (i % 2 !== 0 ? ';' : ',');\n                }\n                vertice += this._getValue(vertices[elementCount - 1], true);\n                if (vertice && vertice !== '') {\n                    this._table.set('vertices', vertice);\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeInkList = function (dictionary) {\n        var inkList = dictionary.getArray('InkList');\n        if (inkList && inkList.length > 0) {\n            var points = new Map();\n            var json = '[';\n            for (var j = 0; j < inkList.length; j++) {\n                json += '[' + this._getValue(inkList[Number.parseInt(j.toString(), 10)], true) + ']';\n                if (j < inkList.length - 1) {\n                    json += ',';\n                }\n            }\n            json += ']';\n            points.set('gesture', json);\n            this._table.set('inklist', this._convertToJson(points));\n        }\n    };\n    _JsonDocument.prototype._exportMeasureDictionary = function (dictionary) {\n        if (dictionary) {\n            if (dictionary.has('Type')) {\n                this._table.set('type1', 'Measure');\n            }\n            if (dictionary.has('R')) {\n                this._table.set('ratevalue', this._getValue(dictionary.get('R'), true));\n            }\n            if (dictionary.has('SubType')) {\n                this._table.set('SubType', this._getValue(dictionary.get('SubType'), true));\n            }\n            if (dictionary.has('TargetUnitConversion')) {\n                this._table.set('TargetUnitConversion', this._getValue(dictionary.get('TargetUnitConversion'), true));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                this._exportMeasureFormatDetails('area', array[0]);\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                this._exportMeasureFormatDetails('distance', array[0]);\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                this._exportMeasureFormatDetails('xformat', array[0]);\n            }\n            if (dictionary.has('T')) {\n                var array = dictionary.getArray('T');\n                this._exportMeasureFormatDetails('tformat', array[0]);\n            }\n            if (dictionary.has('V')) {\n                var array = dictionary.getArray('V');\n                this._exportMeasureFormatDetails('vformat', array[0]);\n            }\n        }\n    };\n    _JsonDocument.prototype._exportMeasureFormatDetails = function (key, measurementDetails) {\n        var details = new Map();\n        if (measurementDetails.has('C')) {\n            details.set('c', this._getValue(measurementDetails.get('C'), true));\n        }\n        if (measurementDetails.has('F')) {\n            details.set('f', this._getValue(measurementDetails.get('F'), true));\n        }\n        if (measurementDetails.has('D')) {\n            details.set('d', this._getValue(measurementDetails.get('D'), true));\n        }\n        if (measurementDetails.has('RD')) {\n            details.set('rd', this._getValue(measurementDetails.get('RD'), true));\n        }\n        if (measurementDetails.has('U')) {\n            details.set('u', this._getValue(measurementDetails.get('U'), true));\n        }\n        if (measurementDetails.has('RT')) {\n            details.set('rt', this._getValue(measurementDetails.get('RT'), true));\n        }\n        if (measurementDetails.has('SS')) {\n            details.set('ss', this._getValue(measurementDetails.get('SS'), true));\n        }\n        if (measurementDetails.has('FD')) {\n            details.set('fd', this._getValue(measurementDetails.get('FD'), true));\n        }\n        this._table.set(key, this._convertToJson(details));\n    };\n    _JsonDocument.prototype._getAppearanceString = function (appearance) {\n        var parentTable = new Map();\n        var appearanceTable = new Map();\n        this._writeAppearanceDictionary(appearanceTable, appearance);\n        parentTable.set('ap', this._convertToJson(appearanceTable));\n        return _stringToBytes(this._convertToJson(parentTable));\n    };\n    _JsonDocument.prototype._writeAppearanceDictionary = function (table, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(table, ((value instanceof _PdfReference) ? dictionary.get(key) : value), dictionary, key);\n            });\n        }\n    };\n    _JsonDocument.prototype._writeObject = function (table, value, dictionary, key, array) {\n        var _this = this;\n        if (value instanceof _PdfName) {\n            this._writeTable('name', value.name, table, key, array);\n        }\n        else if (Array.isArray(value)) {\n            var list = [];\n            if (key === 'ColorSpace') {\n                value.forEach(function (element) {\n                    if (typeof element === 'string') {\n                        _this._isColorSpace = true;\n                    }\n                });\n            }\n            this._writeArray(list, value, dictionary);\n            this._isColorSpace = false;\n            this._writeTable('array', this._convertToJsonArray(list), table, key, array);\n        }\n        else if (typeof value === 'string') {\n            if (this._isColorSpace) {\n                var bytes = _stringToBytes(value);\n                this._writeTable('unicodeData', _byteArrayToHexString(bytes), table, key, array);\n            }\n            else {\n                this._writeTable('string', value, table, key, array);\n            }\n        }\n        else if (typeof value === 'number') {\n            this._writeTable(Number.isInteger(value) ? 'int' : 'fixed', value.toString(), table, key, array);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeTable('boolean', value ? 'true' : 'false', table, key, array);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var subTable = new Map();\n            this._writeAppearanceDictionary(subTable, value);\n            this._writeTable('dict', this._convertToJson(subTable), table, key, array);\n        }\n        else if (value instanceof _PdfBaseStream && value.dictionary) {\n            var dataTable = new Map(); // eslint-disable-line\n            var streamTable = new Map(); // eslint-disable-line\n            var streamDictionary = value.dictionary;\n            var data = void 0;\n            var baseStream = value; // eslint-disable-line\n            var isImageStream = false;\n            if (streamDictionary.has('Subtype') && streamDictionary.get('Subtype').name === 'Image') {\n                isImageStream = true;\n            }\n            if (isImageStream && baseStream.stream && baseStream.stream instanceof _PdfStream) {\n                var stream = baseStream.stream;\n                data = baseStream.getString(true, stream.getByteRange(stream.start, stream.end));\n            }\n            else if (baseStream.stream && baseStream.stream.stream) {\n                var flateStream = baseStream.stream; // eslint-disable-line\n                if (flateStream.stream && flateStream.stream instanceof _PdfStream) {\n                    var stream = flateStream.stream;\n                    data = flateStream.getString(true, stream.getByteRange(stream.start, stream.end));\n                }\n            }\n            else {\n                data = value.getString(true);\n            }\n            if (!streamDictionary.has('Length') && data && data !== '') {\n                streamDictionary.update('Length', value.length);\n            }\n            this._writeAppearanceDictionary(streamTable, streamDictionary);\n            var type = void 0;\n            if (streamDictionary.has('Subtype')) {\n                type = this._getValue(streamDictionary.get('Subtype'));\n            }\n            if ((!streamDictionary.has('Type') && !streamDictionary.has('Subtype')) ||\n                (streamDictionary.has('Subtype') &&\n                    (type === 'Image' || type === 'Form' || type === 'CIDFontType0C' || type === 'OpenType'))) {\n                dataTable.set('mode', 'raw');\n                dataTable.set('encoding', 'hex');\n            }\n            else {\n                dataTable.set('mode', 'filtered');\n                dataTable.set('encoding', 'ascii');\n            }\n            if (data && data !== '') {\n                dataTable.set('bytes', data);\n            }\n            streamTable.set('data', this._convertToJson(dataTable));\n            this._writeTable('stream', this._convertToJson(streamTable), table, key, array);\n        }\n        else if (value instanceof _PdfReference && this._crossReference) {\n            this._writeObject(table, this._crossReference._fetch(value), dictionary, key, array);\n        }\n        else if (value === null || typeof value === 'undefined') {\n            this._writeTable('null', 'null', table, key, array);\n        }\n    };\n    _JsonDocument.prototype._writeTable = function (tableKey, value, table, key, array) {\n        var map = new Map();\n        map.set(tableKey, value);\n        if (key) {\n            table.set(key, this._convertToJson(map));\n        }\n        else if (array) {\n            array.push(map);\n        }\n    };\n    _JsonDocument.prototype._writeArray = function (array, value, dictionary) {\n        for (var i = 0; i < value.length; i++) {\n            this._writeObject(null, value[Number.parseInt(i.toString(), 10)], dictionary, null, array);\n        }\n    };\n    _JsonDocument.prototype._convertToJson = function (table) {\n        var j = 0;\n        var json = '{';\n        table.forEach(function (value, key) {\n            if (value.startsWith('{') || value.startsWith('[')) {\n                if (key === 'AllowedInteractions') {\n                    json += '\"' + key + '\":\"' + value + '\"';\n                }\n                else {\n                    json += '\"' + key + '\":' + value;\n                }\n            }\n            else {\n                if (value.startsWith(' ') && value.length > 1 && (value[1] === '[' || value[1] === '{')) {\n                    value = value.substring(1);\n                }\n                json += '\"' + key + '\":\"' + value + '\"';\n            }\n            if (j < table.size - 1) {\n                json += ',';\n            }\n            j++;\n        });\n        return json + '}';\n    };\n    _JsonDocument.prototype._convertToJsonArray = function (array) {\n        var json = '[';\n        for (var i = 0; i < array.length; i++) {\n            json += this._convertToJson(array[Number.parseInt(i.toString(), 10)]);\n            if (i < array.length - 1) {\n                json += ',';\n            }\n        }\n        return json + ']';\n    };\n    // #import\n    _JsonDocument.prototype._parseJson = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        var stringData = _bytesToString(data, true);\n        if (stringData.startsWith('{') && !stringData.endsWith('}')) {\n            while (stringData.length > 0 && !stringData.endsWith('}')) {\n                stringData = stringData.substring(0, stringData.length - 1);\n            }\n        }\n        return JSON.parse(stringData);\n    };\n    _JsonDocument.prototype._importFormData = function (document, data) {\n        var _this = this;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys && keys.length > 0) {\n                var _loop_1 = function (i) {\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    var value = json[key]; // eslint-disable-line\n                    if (Array.isArray(value)) {\n                        if (this_1._fields.has('key')) {\n                            value.forEach(function (entry) {\n                                _this._fields.get(key).push(entry);\n                            });\n                        }\n                        else {\n                            this_1._fields.set(key, value);\n                        }\n                    }\n                    else {\n                        if (this_1._fields.has('key')) {\n                            this_1._fields.get(key).push(value);\n                        }\n                        else {\n                            this_1._fields.set(key, [value]);\n                        }\n                    }\n                };\n                var this_1 = this;\n                for (var i = 0; i < keys.length; i++) {\n                    _loop_1(i);\n                }\n                this._importField();\n            }\n        }\n    };\n    _JsonDocument.prototype._importAnnotations = function (document, data) {\n        var _this = this;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys.indexOf('pdfAnnotation') !== -1) {\n                var pageAnnotations_1 = json.pdfAnnotation; // eslint-disable-line\n                var pageCount_1 = document.pageCount;\n                var pageKeys = Object.keys(pageAnnotations_1);\n                if (pageKeys && pageKeys.length > 0) {\n                    pageKeys.forEach(function (key) {\n                        var pageIndex = Number.parseInt(key, 10);\n                        if (typeof pageIndex !== 'undefined' && pageIndex < pageCount_1) {\n                            var page_1 = document.getPage(pageIndex);\n                            var pageAnnotation = pageAnnotations_1[key]; // eslint-disable-line\n                            if (pageAnnotation) {\n                                var pageAnnotationKeys = Object.keys(pageAnnotation);\n                                if (pageAnnotationKeys && pageAnnotationKeys.length > 0 && pageAnnotationKeys.indexOf('shapeAnnotation') !== -1) {\n                                    var annotations = pageAnnotation['shapeAnnotation']; // eslint-disable-line\n                                    if (annotations && annotations.length > 0) {\n                                        annotations.forEach(function (annotation) {\n                                            var annotationKeys = Object.keys(annotation);\n                                            if (annotationKeys && annotationKeys.length > 0 && annotationKeys.indexOf('type') !== -1) {\n                                                var dictionary = new _PdfDictionary(_this._crossReference);\n                                                dictionary.update('Type', _PdfName.get('Annot'));\n                                                var isValidType = true;\n                                                switch (annotation['type'].toLowerCase()) {\n                                                    case 'line':\n                                                        dictionary.update('Subtype', _PdfName.get('Line'));\n                                                        break;\n                                                    case 'circle':\n                                                        dictionary.update('Subtype', _PdfName.get('Circle'));\n                                                        break;\n                                                    case 'square':\n                                                        dictionary.update('Subtype', _PdfName.get('Square'));\n                                                        break;\n                                                    case 'polyline':\n                                                        dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                                                        break;\n                                                    case 'polygon':\n                                                        dictionary.update('Subtype', _PdfName.get('Polygon'));\n                                                        break;\n                                                    case 'ink':\n                                                        dictionary.update('Subtype', _PdfName.get('Ink'));\n                                                        break;\n                                                    case 'popup':\n                                                        dictionary.update('Subtype', _PdfName.get('Popup'));\n                                                        break;\n                                                    case 'text':\n                                                        dictionary.update('Subtype', _PdfName.get('Text'));\n                                                        break;\n                                                    case 'freetext':\n                                                        dictionary.update('Subtype', _PdfName.get('FreeText'));\n                                                        break;\n                                                    case 'stamp':\n                                                        dictionary.update('Subtype', _PdfName.get('Stamp'));\n                                                        break;\n                                                    case 'highlight':\n                                                        dictionary.update('Subtype', _PdfName.get('Highlight'));\n                                                        break;\n                                                    case 'squiggly':\n                                                        dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                                                        break;\n                                                    case 'underline':\n                                                        dictionary.update('Subtype', _PdfName.get('Underline'));\n                                                        break;\n                                                    case 'strikeout':\n                                                        dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                                                        break;\n                                                    case 'fileattachment':\n                                                        dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                                                        break;\n                                                    case 'sound':\n                                                        dictionary.update('Subtype', _PdfName.get('Sound'));\n                                                        break;\n                                                    case 'redact':\n                                                        dictionary.update('Subtype', _PdfName.get('Redact'));\n                                                        break;\n                                                    case 'caret':\n                                                        dictionary.update('Subtype', _PdfName.get('Caret'));\n                                                        break;\n                                                    default:\n                                                        isValidType = false;\n                                                        break;\n                                                }\n                                                if (isValidType) {\n                                                    _this._addAnnotationData(dictionary, annotation, annotationKeys);\n                                                    var pageDictionary = page_1._pageDictionary;\n                                                    if (pageDictionary) {\n                                                        var annotations_1 = page_1.annotations;\n                                                        var annotation_1 = annotations_1._parseAnnotation(dictionary);\n                                                        if (annotation_1) {\n                                                            annotation_1._isImported = true;\n                                                            var reference = _this._crossReference._getNextReference();\n                                                            _this._crossReference._cacheMap.set(reference, dictionary);\n                                                            if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                                                _this._addReferenceToGroup(reference, dictionary);\n                                                            }\n                                                            annotation_1._ref = reference;\n                                                            var index = annotations_1._annotations.length;\n                                                            annotations_1._annotations.push(reference);\n                                                            pageDictionary.set('Annots', annotations_1._annotations);\n                                                            pageDictionary._updated = true;\n                                                            annotations_1._parsedAnnotations.set(index, annotation_1);\n                                                            _this._handlePopup(annotations_1, reference, dictionary, pageDictionary);\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n        }\n    };\n    _JsonDocument.prototype._addAnnotationData = function (dictionary, annotation, annotationKeys) {\n        var _this = this;\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        var dataStream = new Map();\n        var linePoints = [];\n        var beginLineStyle;\n        var endLineStyle;\n        var values = '';\n        var rect;\n        var outColor;\n        annotationKeys.forEach(function (key) {\n            var value = annotation[key]; // eslint-disable-line\n            switch (key.toLowerCase()) {\n                case 'start':\n                case 'end':\n                    _this._addLinePoints(value, linePoints);\n                    if (linePoints.length === 4) {\n                        dictionary.update('L', linePoints);\n                        linePoints = [];\n                    }\n                    break;\n                case 'itex':\n                    break;\n                case 'state':\n                    _this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    _this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value.toLowerCase() === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    _this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'dashes':\n                case 'width':\n                case 'intensity':\n                case 'style':\n                    _this._addBorderStyle(key, value, borderEffectDictionary, borderStyleDictionary);\n                    break;\n                case 'rect':\n                    rect = value;\n                    if (rect) {\n                        var points = [];\n                        points.push(Number.parseFloat(rect.x));\n                        points.push(Number.parseFloat(rect.y));\n                        points.push(Number.parseFloat(rect.width));\n                        points.push(Number.parseFloat(rect.height));\n                        if (points && points.length === 4) {\n                            dictionary.update('Rect', points);\n                        }\n                    }\n                    break;\n                case 'color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('C', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'oc':\n                    if (value && dictionary.get('Subtype').name === 'Redact') {\n                        outColor = value.split(',');\n                        var color_1 = [];\n                        outColor.forEach(function (entry) {\n                            color_1.push(Number.parseFloat(entry));\n                        });\n                        if (color_1 && color_1.length > 0) {\n                            dictionary.update('OC', color_1);\n                        }\n                    }\n                    break;\n                case 'interior-color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('IC', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    _this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    _this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    _this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value) {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    _this._addString(dictionary, 'Subj', value);\n                    break;\n                case 'title':\n                    _this._addString(dictionary, 'T', value);\n                    break;\n                case 'rotation':\n                    dictionary.update('Rotate', Number.parseFloat(value));\n                    break;\n                case 'fringe':\n                    _this._addFloatPoints(dictionary, 'RD', _this._parseFloatPoints(value));\n                    break;\n                case 'it':\n                    if (value) {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    dictionary.update('LL', Number.parseFloat(value));\n                    break;\n                case 'leaderextend':\n                    dictionary.update('LLE', Number.parseFloat(value));\n                    break;\n                case 'caption':\n                    _this._addBoolean(dictionary, 'Cap', value.toLowerCase());\n                    break;\n                case 'caption-style':\n                    if (value) {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    _this._addFloatPoints(dictionary, 'CL', _this._parseFloatPoints(value));\n                    break;\n                case 'coords':\n                    _this._addFloatPoints(dictionary, 'QuadPoints', _this._parseFloatPoints(value));\n                    break;\n                case 'border':\n                    _this._addFloatPoints(dictionary, 'Border', _this._parseFloatPoints(value));\n                    break;\n                case 'opacity':\n                    dictionary.update('CA', Number.parseFloat(value));\n                    break;\n                case 'defaultstyle':\n                    if (value) {\n                        var styleKeys_1 = Object.keys(value);\n                        if (styleKeys_1 && styleKeys_1.length > 0) {\n                            var style_1 = '';\n                            var count_1 = 0;\n                            styleKeys_1.forEach(function (styleKey) {\n                                var styleValue = value[styleKey]; // eslint-disable-line\n                                style_1 += styleKey + ':' + styleValue;\n                                if (count_1 < styleKeys_1.length - 1) {\n                                    style_1 += ';';\n                                }\n                                count_1++;\n                            });\n                            _this._addString(dictionary, 'DS', style_1);\n                        }\n                    }\n                    break;\n                case 'defaultappearance':\n                    _this._addString(dictionary, 'DA', value);\n                    break;\n                case 'flags':\n                    if (value && typeof value === 'string') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i = 0; i < flags.length; i++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i.toString(), 10)]);\n                            if (i === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    _this._addBoolean(dictionary, 'Open', value.toLowerCase());\n                    break;\n                case 'repeat':\n                    _this._addBoolean(dictionary, 'Repeat', value.toLowerCase());\n                    break;\n                case 'overlaytext':\n                    _this._addString(dictionary, 'OverlayText', value);\n                    break;\n                case 'contents':\n                    if (typeof value === 'string') {\n                        if (value.indexOf('\\\\r') !== -1) {\n                            value = value.replace('\\\\r', '\\r');\n                        }\n                        if (value) {\n                            _this._addString(dictionary, 'Contents', value);\n                        }\n                    }\n                    break;\n                case 'q':\n                    dictionary.update('Q', Number.parseInt(value, 10));\n                    break;\n                case 'inklist':\n                    if (value) {\n                        var gestureKeys = Object.keys(value);\n                        if (gestureKeys && gestureKeys.length > 0 && gestureKeys.indexOf('gesture') !== -1) {\n                            var gesture = value.gesture;\n                            if (gesture && gesture.length > 0) {\n                                dictionary.update('InkList', gesture);\n                            }\n                        }\n                    }\n                    break;\n                case 'head':\n                    beginLineStyle = value;\n                    break;\n                case 'tail':\n                    endLineStyle = value;\n                    break;\n                case 'creation':\n                case 'modification':\n                case 'file':\n                case 'bits':\n                case 'channels':\n                case 'encoding':\n                case 'rate':\n                case 'length':\n                case 'filter':\n                case 'mode':\n                case 'size':\n                    dataStream.set(key, value);\n                    break;\n                case 'data':\n                    values = value;\n                    break;\n                case 'vertices':\n                    if (value && typeof value === 'string') {\n                        var split = value.split(/[,;]/);\n                        if (split && split.length > 0) {\n                            var vertices = [];\n                            for (var i = 0; i < split.length; i++) {\n                                vertices.push(Number.parseFloat(split[Number.parseInt(i.toString(), 10)]));\n                            }\n                            if (vertices.length > 0 && vertices.length % 2 === 0) {\n                                dictionary.update('Vertices', vertices);\n                            }\n                        }\n                    }\n                    break;\n                case 'appearance':\n                    _this._addAppearanceData(dictionary, value);\n                    break;\n                case 'allowedinteractions':\n                    _this._addString(dictionary, 'AllowedInteractions', value);\n                    break;\n                default:\n                    if (_this._document._allowImportCustomData && key !== 'type' && key !== 'page') {\n                        _this._addString(dictionary, key, typeof value === 'string' ? value : JSON.stringify(value));\n                    }\n                    break;\n            }\n        });\n        this._addMeasureDictionary(dictionary, annotation, annotationKeys);\n        if (beginLineStyle) {\n            if (endLineStyle) {\n                dictionary.update('LE', [_PdfName.get(beginLineStyle), _PdfName.get(endLineStyle)]);\n            }\n            else {\n                dictionary.update('LE', beginLineStyle);\n            }\n        }\n        else if (endLineStyle) {\n            dictionary.update('LE', endLineStyle);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', _PdfName.get('Border'));\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderStyleDictionary);\n            dictionary.update('BS', reference);\n        }\n        if (borderEffectDictionary.size > 0) {\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderEffectDictionary);\n            dictionary.update('BE', reference);\n        }\n        this._addStreamData(dictionary, dataStream, values);\n    };\n    _JsonDocument.prototype._addLinePoints = function (value, linePoints) {\n        if (value && value.indexOf(',') !== -1) {\n            var points = value.split(',');\n            points.forEach(function (point) {\n                linePoints.push(Number.parseFloat(point));\n            });\n        }\n    };\n    _JsonDocument.prototype._addString = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addBoolean = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value === 'yes' || value === 'true');\n        }\n    };\n    _JsonDocument.prototype._addBorderStyle = function (key, value, borderEffectDictionary, borderStyleDictionary) {\n        var style = '';\n        var isBasicStyle = true;\n        switch (value) {\n            case 'dash':\n                style = 'D';\n                break;\n            case 'solid':\n                style = 'S';\n                break;\n            case 'bevelled':\n                style = 'B';\n                break;\n            case 'inset':\n                style = 'I';\n                break;\n            case 'underline':\n                style = 'U';\n                break;\n            case 'cloudy':\n                style = 'C';\n                isBasicStyle = false;\n                break;\n        }\n        switch (key.toLowerCase()) {\n            case 'width':\n                borderStyleDictionary.update('W', Number.parseFloat(value));\n                break;\n            case 'intensity':\n                borderEffectDictionary.update('I', Number.parseFloat(value));\n                break;\n            case 'dashes':\n                if (value && value.indexOf(',') !== -1) {\n                    borderStyleDictionary.update('D', this._parseFloatPoints(value));\n                }\n                break;\n        }\n        if (style) {\n            if (isBasicStyle) {\n                borderStyleDictionary.update('S', _PdfName.get(style));\n            }\n            else {\n                borderEffectDictionary.update('S', _PdfName.get(style));\n            }\n        }\n    };\n    _JsonDocument.prototype._parseFloatPoints = function (value) {\n        var dashes = value.split(',');\n        var dashArray = [];\n        dashes.forEach(function (dash) {\n            dashArray.push(Number.parseFloat(dash));\n        });\n        return dashArray;\n    };\n    _JsonDocument.prototype._addFloatPoints = function (dictionary, key, value) {\n        if (value && value.length > 0) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addMeasureDictionary = function (dictionary, annotation, annotationKeys) {\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var aArray = [];\n        var dArray = [];\n        var xArray = [];\n        var tArray = [];\n        var vArray = [];\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        measureDictionary.set('T', tArray);\n        measureDictionary.set('V', vArray);\n        if (annotationKeys.indexOf('ratevalue') !== -1) {\n            this._addString(measureDictionary, 'R', annotation['ratevalue']);\n        }\n        if (annotationKeys.indexOf('subtype') !== -1) {\n            this._addString(measureDictionary, 'Subtype', annotation['subtype']);\n        }\n        if (annotationKeys.indexOf('targetunitconversion') !== -1) {\n            this._addString(measureDictionary, 'TargetUnitConversion', annotation['targetunitconversion']);\n        }\n        if (annotationKeys.indexOf('area') !== -1) {\n            aArray.push(this._readDictionaryElements(annotation['area']));\n        }\n        if (annotationKeys.indexOf('distance') !== -1) {\n            dArray.push(this._readDictionaryElements(annotation['distance']));\n        }\n        if (annotationKeys.indexOf('xformat') !== -1) {\n            xArray.push(this._readDictionaryElements(annotation['xformat']));\n        }\n        if (annotationKeys.indexOf('tformat') !== -1) {\n            tArray.push(this._readDictionaryElements(annotation['tformat']));\n        }\n        if (annotationKeys.indexOf('vformat') !== -1) {\n            vArray.push(this._readDictionaryElements(annotation['vformat']));\n        }\n        if (annotationKeys.indexOf('type1') !== -1) {\n            measureDictionary.set('Type', _PdfName.get('Measure'));\n            var reference = this._crossReference._getNextReference();\n            measureDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _JsonDocument.prototype._readDictionaryElements = function (elements) {\n        var keys = Object.keys(elements);\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (keys && keys.length > 0) {\n            keys.forEach(function (key) {\n                var value = elements[key]; // eslint-disable-line\n                if (key && value) {\n                    switch (key) {\n                        case 'd':\n                            dictionary.set('D', Number.parseFloat(value));\n                            break;\n                        case 'c':\n                            dictionary.set('C', Number.parseFloat(value));\n                            break;\n                        case 'rt':\n                            dictionary.set('RT', value);\n                            break;\n                        case 'rd':\n                            dictionary.set('RD', value);\n                            break;\n                        case 'ss':\n                            dictionary.set('SS', value);\n                            break;\n                        case 'u':\n                            dictionary.set('U', value);\n                            break;\n                        case 'f':\n                            dictionary.set('F', _PdfName.get(value));\n                            break;\n                        case 'fd':\n                            dictionary.set('FD', value);\n                            break;\n                        case 'type':\n                            dictionary.set('Type', _PdfName.get(value));\n                            break;\n                    }\n                }\n            });\n        }\n        return dictionary;\n    };\n    _JsonDocument.prototype._addStreamData = function (dictionary, data, values) {\n        var _this = this;\n        var subtype = dictionary.get('Subtype').name;\n        var bytes = _hexStringToByteArray(values, true);\n        if (subtype === 'Sound') {\n            var soundStream_1 = new _PdfContentStream(bytes);\n            soundStream_1.dictionary._crossReference = this._crossReference;\n            soundStream_1.dictionary.update('Type', _PdfName.get('Sound'));\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    switch (key) {\n                        case 'bits':\n                        case 'rate':\n                        case 'channels':\n                            soundStream_1.dictionary.set(key, Number.parseInt(value, 10));\n                            break;\n                        case 'encoding':\n                            soundStream_1.dictionary.set('E', _PdfName.get(value));\n                            break;\n                        case 'filter':\n                            soundStream_1.dictionary.set('Filter', _PdfName.get('FlateDecode'));\n                            break;\n                    }\n                }\n            });\n            soundStream_1.reference = this._crossReference._getNextReference();\n            soundStream_1.dictionary.objId = soundStream_1.reference.objectNumber + ' ' + soundStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(soundStream_1.reference, soundStream_1);\n            dictionary.update('Sound', soundStream_1.reference);\n        }\n        else if (subtype === 'FileAttachment') {\n            var fileDictionary_1 = new _PdfDictionary(this._crossReference);\n            fileDictionary_1.update('Type', _PdfName.get('Filespec'));\n            var fileStream_1 = new _PdfContentStream(bytes);\n            fileStream_1.dictionary._crossReference = this._crossReference;\n            var param_1 = new _PdfDictionary(this._crossReference);\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    var size = void 0;\n                    switch (key) {\n                        case 'file':\n                            _this._addString(fileDictionary_1, 'F', value);\n                            _this._addString(fileDictionary_1, 'UF', value);\n                            break;\n                        case 'size':\n                            size = Number.parseInt(value, 10);\n                            if (typeof size !== 'undefined') {\n                                param_1.update('Size', size);\n                                fileStream_1.dictionary.update('DL', size);\n                            }\n                            break;\n                        case 'creation':\n                            _this._addString(param_1, 'CreationDate', value);\n                            break;\n                        case 'modification':\n                            _this._addString(param_1, 'ModificationDate', value);\n                            break;\n                    }\n                }\n            });\n            fileStream_1.dictionary.update('Params', param_1);\n            fileStream_1.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n            fileStream_1.reference = this._crossReference._getNextReference();\n            fileStream_1.dictionary.objId = fileStream_1.reference.objectNumber + ' ' + fileStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(fileStream_1.reference, fileStream_1);\n            var embeddedFile = new _PdfDictionary(this._crossReference);\n            embeddedFile.update('F', fileStream_1.reference);\n            fileDictionary_1.update('EF', embeddedFile);\n            var reference = this._crossReference._getNextReference();\n            fileDictionary_1.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, fileDictionary_1);\n            dictionary.update('FS', reference);\n        }\n    };\n    _JsonDocument.prototype._addAppearanceData = function (dictionary, data) {\n        if (data) {\n            var encoded = _decode(data, false);\n            var decoded = _bytesToString(encoded);\n            if (decoded.startsWith('{') && !decoded.endsWith('}')) {\n                while (decoded.length > 0 && !decoded.endsWith('}')) {\n                    decoded = decoded.substring(0, decoded.length - 1);\n                }\n            }\n            var json = JSON.parse(decoded); // eslint-disable-line\n            if (json) {\n                var keys = Object.keys(json);\n                if (keys && keys.length > 0 && keys.indexOf('ap') !== -1) {\n                    dictionary.update('AP', this._parseDictionary(json['ap']));\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._parseAppearance = function (element) {\n        var _this = this;\n        var value; // eslint-disable-line\n        var keys = Object.keys(element);\n        if (keys.indexOf('name') !== -1) {\n            value = _PdfName.get(element.name);\n        }\n        else if (keys.indexOf('int') !== -1) {\n            value = Number.parseInt(element.int, 10);\n        }\n        else if (keys.indexOf('fixed') !== -1) {\n            value = Number.parseFloat(element.fixed);\n        }\n        else if (keys.indexOf('string') !== -1) {\n            value = element.string;\n        }\n        else if (keys.indexOf('boolean') !== -1) {\n            value = element.boolean === 'true' ? true : false;\n        }\n        else if (keys.indexOf('array') !== -1) {\n            var array = element.array; // eslint-disable-line\n            value = [];\n            array.forEach(function (element) {\n                value.push(_this._parseAppearance(element));\n            });\n        }\n        else if (keys.indexOf('dict') !== -1) {\n            var dictionary = this._parseDictionary(element.dict);\n            value = this._crossReference._getNextReference();\n            dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n            this._crossReference._cacheMap.set(value, dictionary);\n        }\n        else if (keys.indexOf('stream') !== -1) {\n            var stream = this._parseStream(element.stream);\n            value = this._crossReference._getNextReference();\n            stream.reference = value;\n            stream.dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n            this._crossReference._cacheMap.set(value, stream);\n        }\n        else if (keys.indexOf('unicodeData') !== -1) {\n            value = _bytesToString(_hexStringToByteArray(element.unicodeData, false));\n        }\n        else {\n            value = null;\n        }\n        return value;\n    };\n    _JsonDocument.prototype._parseDictionary = function (element) {\n        var _this = this;\n        var result = new _PdfDictionary(this._crossReference);\n        if (element) {\n            var keys = Object.keys(element);\n            if (keys && keys.length > 0) {\n                keys.forEach(function (key) {\n                    var value = element[key]; // eslint-disable-line\n                    if (key !== 'data') {\n                        var primitive = _this._parseAppearance(value); // eslint-disable-line\n                        result.update(key, primitive);\n                    }\n                });\n            }\n        }\n        return result;\n    };\n    _JsonDocument.prototype._parseStream = function (element) {\n        var result;\n        var keys = Object.keys(element);\n        if (element && keys.indexOf('data')) {\n            var data = element.data; // eslint-disable-line\n            var bytes = void 0;\n            if (data) {\n                var dataKeys = Object.keys(data);\n                if (dataKeys && dataKeys.indexOf('bytes') !== -1) {\n                    var byteString = data.bytes;\n                    if (byteString) {\n                        bytes = _hexStringToByteArray(byteString, true);\n                    }\n                }\n            }\n            if (!bytes) {\n                bytes = [];\n            }\n            var stream = new _PdfContentStream(bytes);\n            if (this._crossReference) {\n                this._parseStreamElements(stream, element);\n            }\n            else {\n                stream._pendingResources = JSON.stringify(element);\n            }\n            result = stream;\n        }\n        return result;\n    };\n    _JsonDocument.prototype._parseStreamElements = function (stream, element) {\n        if (typeof element === 'undefined' && stream._pendingResources) {\n            element = JSON.parse(stream._pendingResources);\n        }\n        if (element) {\n            var dictionary = this._parseDictionary(element);\n            var isImage = false;\n            if (dictionary && dictionary.has('Subtype')) {\n                var type = dictionary.get('Subtype');\n                isImage = type && type.name === 'Image';\n            }\n            if (isImage) {\n                stream._isCompress = false;\n            }\n            else {\n                if (dictionary.has('Length')) {\n                    delete dictionary._map.Length;\n                }\n                if (dictionary.has('Filter')) {\n                    delete dictionary._map.Filter;\n                }\n            }\n            stream.dictionary = dictionary;\n        }\n    };\n    _JsonDocument.prototype._getValidString = function (value) {\n        if (value.indexOf('\\\\') !== -1) {\n            value = value.replace(/\\\\/g, '\\\\\\\\');\n        }\n        if (value.indexOf('\"') !== -1) {\n            value = value.replace(/\"/g, '\\\\\"');\n        }\n        if (value.indexOf('[') !== -1) {\n            value = value.replace(/\\[/g, '\\\\[');\n        }\n        if (value.indexOf(']') !== -1) {\n            value = value.replace(/\\[/g, '\\\\]');\n        }\n        if (value.indexOf('{') !== -1) {\n            value = value.replace(/\\[/g, '\\\\{');\n        }\n        if (value.indexOf('}') !== -1) {\n            value = value.replace(/\\}/g, '\\\\}');\n        }\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    return _JsonDocument;\n}(_ExportHelper));\nexport { _JsonDocument };\n","import { _PdfName } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { PdfGraphics } from './pdf-graphics';\nimport { _toRectangle } from './../utils';\nimport { _JsonDocument } from './../import-export/json-document';\n/**\n * `PdfTemplate` class represents the template of the PDF.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the normal appearance of the annotation\n * let normalAppearance: PdfTemplate = annotation.appearance.normal;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * normalAppearance.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(value, crossReference) {\n        this._isExported = false;\n        this._crossReference = crossReference;\n        if (value instanceof _PdfBaseStream) {\n            this._content = value;\n            if (!this._content.dictionary.has('Type') || !this._content.dictionary.has('Subtype')) {\n                this._initialize();\n            }\n            var bounds = this._content.dictionary.getArray('BBox');\n            if (bounds && bounds.length > 3) {\n                var rect = _toRectangle(bounds);\n                this._size = [rect.width, rect.height];\n            }\n            this._isReadOnly = true;\n        }\n        else {\n            if (typeof value !== 'undefined') {\n                this._size = [value[2], value[3]];\n                this._content = new _PdfContentStream([]);\n                this._content.dictionary._crossReference = this._crossReference;\n                this._initialize();\n                this._content.dictionary.set('BBox', [value[0], value[1], value[0] + value[2], value[1] + value[3]]);\n            }\n            else {\n                this._isReadOnly = true;\n            }\n        }\n        this._writeTransformation = true;\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Get the graphics of the PDF template. (Read only)\n         *\n         * @returns {PdfGraphics} The graphics object of the PDF template.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the graphics of the normal appearance\n         * let graphics: PdfGraphics = annotation.appearance.normal.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isReadOnly) {\n                return null;\n            }\n            if (typeof this._g === 'undefined') {\n                this._g = new PdfGraphics(this._size, this._content, this._crossReference, this);\n                if (this._writeTransformation) {\n                    this._g._initializeCoordinates();\n                }\n                this._g._isTemplateGraphics = true;\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        /**\n         * Get the size of the PDF template. (Read only)\n         *\n         * @returns {number[]} Template width and height as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Get the width and height of the PDF template as number array.\n         * let size: number[] = template.size;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, size[0], size[1]);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTemplate.prototype._initialize = function () {\n        this._content.dictionary.set('Type', _PdfName.get('XObject'));\n        this._content.dictionary.set('Subtype', _PdfName.get('Form'));\n    };\n    PdfTemplate.prototype._exportStream = function (dictionary, crossReference) {\n        var jsonDocument = new _JsonDocument();\n        jsonDocument._crossReference = crossReference;\n        jsonDocument._isAnnotationExport = true;\n        var resourceTable = new Map();\n        jsonDocument._writeObject(resourceTable, dictionary.get('N'), dictionary, 'normal');\n        this._appearance = jsonDocument._convertToJson(resourceTable);\n        jsonDocument._dispose();\n    };\n    PdfTemplate.prototype._importStream = function (hasCrossReference) {\n        var jsonDocument = new _JsonDocument();\n        if (hasCrossReference) {\n            jsonDocument._crossReference = this._crossReference;\n        }\n        var json = JSON.parse(this._appearance); // eslint-disable-line\n        if (json) {\n            var entry = json['normal']; // eslint-disable-line\n            if (entry) {\n                this._content = jsonDocument._parseStream(entry['stream']);\n                if (hasCrossReference) {\n                    this._content.dictionary._crossReference = this._crossReference;\n                    this._content.dictionary._updated = true;\n                }\n            }\n        }\n        jsonDocument._dispose();\n    };\n    PdfTemplate.prototype._updatePendingResource = function (crossReference) {\n        if (this._content._pendingResources && this._content._pendingResources !== '') {\n            var jsonDocument = new _JsonDocument();\n            jsonDocument._crossReference = crossReference;\n            jsonDocument._parseStreamElements(this._content);\n            this._content._pendingResources = '';\n            jsonDocument._dispose();\n        }\n    };\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestinationMode } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName } from './pdf-primitives';\nimport { _obtainDestination } from './utils';\n/**\n * Represents base class for all action types.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Get the GoTo action to the mouse enter property of the button field\n * let pdfAction: PdfAction = field.actions.mouseEnter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfAction = /** @class */ (function () {\n    function PdfAction() {\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        /**\n         * Get the next action to be performed after the action represented by this instance.\n         *\n         * @returns {PdfAction} The next action to be executed.\n         *\n         * Represents an action which goes to a destination in the current document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the page1\n         * let Page1: PdfPage = document.getPage(1);\n         * // Create a PdfGoToAction for navigating to the specified page.\n         * let action: PdfGoToAction = new PdfGoToAction(page1);\n         * // Set the destination page for the action\n         * action.destination = new PdfDestination(secondPage);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = action1;\n         * // Access the page\n         * let page: PdfPage = document.getPage(2);\n         * // Access button field\n         * let field1: PdfButtonField = document.form.fieldAt(1) as PdfButtonField;\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(page);\n         * // Set the next property\n         * gotoAction.next = action;\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        get: function () {\n            return this._next;\n        },\n        /**\n         * Set the next action to be performed after the action represented by this instance.\n         *\n         * @param {PdfAction} value The next action to be executed.\n         *\n         * Represents an action which goes to a destination in the current document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the page1\n         * let Page1: PdfPage = document.getPage(1);\n         * let action: PdfGoToAction = new PdfGoToAction(page1);\n         * // Set the destination page for the action\n         * action.destination = new PdfDestination(secondPage);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = action1;\n         * // Access the third page\n         * let page: PdfPage = document.getPage(2);\n         * // Access button field\n         * let field1: PdfButtonField = document.form.fieldAt(1) as PdfButtonField;\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(page);\n         * // Set the next property\n         * gotoAction.next = action;\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            this._next = value;\n            var reference = this._page._crossReference._getNextReference();\n            this._page._crossReference._cacheMap.set(reference, value._dictionary);\n            value._dictionary.objId = reference.toString();\n            this._dictionary.update('Next', reference);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n/**\n * Represents an action which goes to a destination in the current document.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Set the goto action to the button\n * field.actions.mouseEnter = gotoAction;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfGoToAction = /** @class */ (function (_super) {\n    __extends(PdfGoToAction, _super);\n    function PdfGoToAction(arg) {\n        var _this = _super.call(this) || this;\n        if (arg instanceof PdfDestination) {\n            _this._destination = arg;\n            _this._page = arg.page;\n        }\n        else {\n            _this._page = arg;\n            _this._destination = new PdfDestination(arg, [0, 0]);\n        }\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', new _PdfName('Action'));\n        _this._dictionary.update('S', new _PdfName('GoTo'));\n        return _this;\n    }\n    Object.defineProperty(PdfGoToAction.prototype, \"destination\", {\n        /**\n         * Get the destination to be navigated.\n         *\n         * @returns {PdfDestination} The destination to be navigated.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action value from button field\n         * let action: PdfAction = field.actions.mouseEnter.destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destination;\n        },\n        /**\n         * Set the destination to be navigated.\n         *\n         * @param {PdfDestination} value The destination to be navigated.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the goto action to the button\n         * field.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            this._destination = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGoToAction;\n}(PdfAction));\nexport { PdfGoToAction };\n/**\n * Represents actions to be performed as response to field events.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Get the pdf field actions\n * let fieldActions: PdfFieldActions = field.actions;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfFieldActions = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfFieldActions` class.\n     *\n     * @private\n     * @param {PdfField} field field items.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access button field\n     * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n     * // Access the second page\n     * let secondPage: PdfPage = document.getPage(2);\n     * // Create a PdfDestination for the specified page\n     * let destination: PdfDestination = new PdfDestination(secondPage)\n     * // Creates a new PdfGoToAction with the specified destination\n     * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n     * // Set the goto action to the button\n     * field.actions.mouseEnter = gotoAction;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     */\n    function PdfFieldActions(field) {\n        this._field = field;\n    }\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseEnter\", {\n        /**\n         * Get the action to be performed when the mouse cursor enters the field area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse enters the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse enters the field area\n         * let action: PdfAction = field.actions.mouseEnter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseEnter) {\n                this._mouseEnter = this._getPdfAction('E');\n            }\n            return this._mouseEnter;\n        },\n        /**\n         * Set the action to be performed when the mouse cursor enters the field area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse enters the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseEnter = value;\n                this._updateAction(this._mouseEnter, 'E');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseLeave\", {\n        /**\n         * Get the action to be performed when the cursor exits the fields area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse exists the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse leave the field area.\n         * let action: PdfAction = field.actions.mouseLeave;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseLeave) {\n                this._mouseLeave = this._getPdfAction('X');\n            }\n            return this._mouseLeave;\n        },\n        /**\n         * Set the action to be performed when the cursor exits the fields area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse exists the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse leave property of the button field\n         * field.actions.mouseLeave = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseLeave = value;\n                this._updateAction(this._mouseLeave, 'X');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseUp\", {\n        /**\n         * Get the action to be performed when the mouse button is released inside the field area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse released inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse up the field area.\n         * let action: PdfAction = field.actions.mouseUp;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseUp) {\n                this._mouseUp = this._getPdfAction('U');\n            }\n            return this._mouseUp;\n        },\n        /**\n         * Set the action to be performed when the mouse button is released inside the field area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse released inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse up property of the button field\n         * field.actions.mouseUp = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseUp = value;\n                this._updateAction(this._mouseUp, 'U');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseDown\", {\n        /**\n         * Get the action to be performed when the mouse button is pressed inside the field’s area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse button is pressed inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse down the field area.\n         * let action: PdfAction = field.actions.mouseDown;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseDown) {\n                this._mouseDown = this._getPdfAction('D');\n            }\n            return this._mouseDown;\n        },\n        /**\n         * Set the action to be performed when the mouse button is pressed inside the field’s area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse button is pressed inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse down property of the button field\n         * field.actions.mouseDown = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseDown = value;\n                this._updateAction(this._mouseDown, 'D');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"gotFocus\", {\n        /**\n         * Get the action to be performed when the field receives the input focus.\n         *\n         * @returns {PdfAction} The action to be executed when the field receives the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the got focus the field area.\n         * let action: PdfAction = field.actions.gotFocus;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._gotFocus) {\n                this._gotFocus = this._getPdfAction('Fo');\n            }\n            return this._gotFocus;\n        },\n        /**\n         * Set the action to be performed when the field receives the input focus.\n         *\n         * @param {PdfAction} value The action to be executed when the field receives the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the got focus property of the button field\n         * field.actions.gotFocus = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._gotFocus = value;\n                this._updateAction(this._gotFocus, 'Fo');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"lostFocus\", {\n        /**\n         * Get the action to be performed when the field loses the input focus.\n         *\n         * @returns {PdfAction} The action to be executed when the field loses the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the lost focus the field area.\n         * let action: PdfAction = field.actions.lostFocus;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._lostFocus) {\n                this._lostFocus = this._getPdfAction('Bl');\n            }\n            return this._lostFocus;\n        },\n        /**\n         * Set the action to be performed when the field loses the input focus.\n         *\n         * @param {PdfAction} value The action to be executed when the field loses the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the lost focus property of the button field\n         * field.actions.lostFocus = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._lostFocus = value;\n                this._updateAction(this._lostFocus, 'Bl');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFieldActions.prototype._updateAction = function (action, key) {\n        var widget;\n        if (this._field._kidsCount > 0) {\n            widget = this._field.itemAt(0);\n            if (widget && widget._dictionary && action instanceof PdfGoToAction) {\n                var dictionary = new _PdfDictionary();\n                var page = action._page;\n                var destination = action.destination;\n                if (destination._destinationMode === PdfDestinationMode.location) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('XYZ'), destination.location[0], page.size[1], destination.zoom]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitR) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('FitR'), 0, 0, 0, 0]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitH) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('FitH'), page.size[1]]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitToPage) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('Fit')]);\n                }\n                dictionary.set(key, action._dictionary);\n                dictionary._updated = true;\n                widget._dictionary.update('AA', dictionary);\n            }\n        }\n    };\n    PdfFieldActions.prototype._getPdfAction = function (key) {\n        var result;\n        var widget = this._field.itemAt(0);\n        if (widget && widget._dictionary && widget._dictionary.has('AA')) {\n            var action = widget._dictionary.get('AA');\n            if (action && action.has(key)) {\n                var dictionary = action.get(key);\n                if (dictionary && dictionary.has('S')) {\n                    var type = dictionary.get('S');\n                    if (type && type.name === 'GoTo' && dictionary.has('D')) {\n                        if (!dictionary._crossReference) {\n                            dictionary._crossReference = widget._crossReference;\n                        }\n                        result = new PdfGoToAction(_obtainDestination(dictionary, 'D'));\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    return PdfFieldActions;\n}());\nexport { PdfFieldActions };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfRadioButtonListItem, PdfStateItem, PdfWidgetAnnotation, PdfListFieldItem, _PaintParameter, PdfInteractiveBorder } from './../annotations/annotation';\nimport { _getItemValue, _checkField, _removeReferences, _removeDuplicateReference, _updateVisibility, _styleToString, _getStateTemplate, _findPage, _getInheritableProperty, _getNewGuidString, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _mapBorderStyle, _getUpdatedBounds, _setMatrix, _obtainFontDetails } from './../utils';\nimport { _PdfCheckFieldState, PdfFormFieldVisibility, _FieldFlag, PdfAnnotationFlag, PdfTextAlignment, PdfHighlightMode, PdfBorderStyle, PdfRotationAngle, PdfCheckBoxStyle, PdfFormFieldsTabOrder, PdfFillMode } from './../enumerator';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _TextRenderingMode, PdfBrush, PdfPen } from './../graphics/pdf-graphics';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { _PdfPath } from './../graphics/pdf-path';\nimport { PdfAnnotationCollection } from '../annotations/annotation-collection';\nimport { PdfFieldActions } from '../pdf-action';\n/**\n * `PdfField` class represents the base class for form field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form field at index 0\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the count of the loaded field items\n * let count: number = field.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfField = /** @class */ (function () {\n    function PdfField() {\n        this._visible = true;\n        this._isTransparentBackColor = false;\n        this._isTransparentBorderColor = false;\n        this._defaultFont = new PdfStandardFont(PdfFontFamily.helvetica, 8);\n        this._appearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._defaultItemFont = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n        this._flatten = false;\n        this._hasData = false;\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n    }\n    Object.defineProperty(PdfField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the count of the loaded field items\n         * let count: number = field.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"form\", {\n        /**\n         * Gets the form object of the field (Read only).\n         *\n         * @returns {PdfForm} Form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form object of the field\n         * let form: PdfForm = field.form;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"name\", {\n        /**\n         * Gets the name of the field (Read only).\n         *\n         * @returns {string} Field name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the name of the field\n         * let name: string = field.name;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined') {\n                var names = _getInheritableProperty(this._dictionary, 'T', false, false, 'Parent');\n                if (names && names.length > 0) {\n                    if (names.length === 1) {\n                        this._name = names[0];\n                    }\n                    else {\n                        this._name = names.join('.');\n                    }\n                }\n            }\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"actualName\", {\n        /**\n         * Gets the actual name of the field (Read only).\n         *\n         * @private\n         * @returns {string} Actual name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the actual name of the field\n         * let name: string = field.actualName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._actualName === 'undefined' && this._dictionary.has('T')) {\n                var name_1 = this._dictionary.get('T');\n                if (name_1 && typeof name_1 === 'string') {\n                    this._actualName = name_1;\n                }\n            }\n            return this._actualName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"mappingName\", {\n        /**\n         * Gets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @returns {string} Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the mapping name of the field\n         * let name: string = field.mappingName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mappingName === 'undefined' && this._dictionary.has('TM')) {\n                var name_2 = this._dictionary.get('TM');\n                if (name_2 && typeof name_2 === 'string') {\n                    this._mappingName = name_2;\n                }\n            }\n            return this._mappingName;\n        },\n        /**\n         * Sets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @param {string} value Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the mapping name of the field\n         * field.mappingName = ‘Author’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.mappingName === 'undefined' || this._mappingName !== value) {\n                this._mappingName = value;\n                this._dictionary.update('TM', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"toolTip\", {\n        /**\n         * Gets the tool tip of the form field.\n         *\n         * @returns {string} Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tool tip value of the field\n         * let toolTip: string = field.toolTip;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._alternateName === 'undefined' && this._dictionary.has('TU')) {\n                var name_3 = this._dictionary.get('TU');\n                if (name_3 && typeof name_3 === 'string') {\n                    this._alternateName = name_3;\n                }\n            }\n            return this._alternateName;\n        },\n        /**\n         * Sets the tool tip of the form field.\n         *\n         * @param {string} value Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tool tip value of the field\n         * field.toolTip = ‘Author of the document’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.toolTip === 'undefined' || this._alternateName !== value) {\n                this._alternateName = value;\n                this._dictionary.update('TU', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visibility\", {\n        /**\n         * Gets the form field visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form field visibility.\n         * let visibility: PdfFormFieldVisibility = field.visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                else {\n                    return PdfFormFieldVisibility.visibleNotPrintable;\n                }\n                var flagValue = 3;\n                if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                    flagValue = 0;\n                }\n                if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                    flagValue = 1;\n                }\n                if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                    flagValue &= 2;\n                }\n                switch (flagValue) {\n                    case 0:\n                        value = PdfFormFieldVisibility.hidden;\n                        break;\n                    case 1:\n                        value = PdfFormFieldVisibility.hiddenPrintable;\n                        break;\n                    case 2:\n                        value = PdfFormFieldVisibility.visibleNotPrintable;\n                        break;\n                    case 3:\n                        value = PdfFormFieldVisibility.visible;\n                        break;\n                }\n            }\n            else {\n                if (typeof this._visibility === 'undefined') {\n                    this._visibility = PdfFormFieldVisibility.visible;\n                }\n                value = this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the form field visibility.\n         *\n         * @param {PdfFormFieldVisibility} value visibility.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the form field visibility.\n         * field.visibility = PdfFormFieldVisibility.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (widget && (!widget._hasFlags || this.visibility !== value)) {\n                    _updateVisibility(widget._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n                else if (!this._dictionary.has('F') || this.visibility !== value) {\n                    _updateVisibility(this._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n            }\n            else {\n                if (this.visibility !== value) {\n                    this._visibility = value;\n                    switch (value) {\n                        case PdfFormFieldVisibility.hidden:\n                            widget.flags = PdfAnnotationFlag.hidden;\n                            break;\n                        case PdfFormFieldVisibility.hiddenPrintable:\n                            widget.flags = (PdfAnnotationFlag.noView | PdfAnnotationFlag.print);\n                            break;\n                        case PdfFormFieldVisibility.visible:\n                            widget.flags = PdfAnnotationFlag.print;\n                            break;\n                        case PdfFormFieldVisibility.visibleNotPrintable:\n                            widget.flags = PdfAnnotationFlag.default;\n                            break;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the bounds of list box field.\n         * let bounds: {x: number, y: number, width: number, height: number} = field.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the bounds.\n         * field.bounds = {x: 10, y: 10, width: 100, height: 20};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                widget._page = this.page;\n                widget.bounds = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the field.\n         *\n         * @returns {number} angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation angle of the form field.\n         * let rotate: number = field.rotate;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var angle;\n            if (widget && typeof widget.rotate !== 'undefined') {\n                angle = widget.rotate;\n            }\n            else if (this._dictionary.has('R')) {\n                angle = this._dictionary.get('R');\n            }\n            else {\n                for (var i = 0; i < this._kidsCount && typeof angle === 'undefined'; i++) {\n                    if (i !== this._defaultIndex) {\n                        widget = this.itemAt(i);\n                        if (widget && typeof widget.rotate !== 'undefined') {\n                            angle = widget.rotate;\n                        }\n                    }\n                }\n            }\n            if (typeof angle === 'undefined') {\n                angle = 0;\n            }\n            return angle;\n        },\n        /**\n         * Sets the rotation angle of the field.\n         *\n         * @param {number} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the rotation angle.\n         * field.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget.rotate = value;\n            }\n            else if (!this._dictionary.has('R') || this._dictionary.get('R') !== value) {\n                this._dictionary.update('R', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"color\", {\n        /**\n         * Gets the fore color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the fore color of the field.\n         * let color: number[] = field.color;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color) {\n                value = widget.color;\n            }\n            else if (this._defaultAppearance) {\n                value = this._da.color;\n            }\n            return value;\n        },\n        /**\n         * Sets the fore color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the fore color of the field.\n         * field.color = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color) {\n                widget.color = value;\n            }\n            else {\n                var isNew = false;\n                if (!this._defaultAppearance) {\n                    this._da = new _PdfDefaultAppearance('');\n                    isNew = true;\n                }\n                if (isNew || this._da.color !== value) {\n                    this._da.color = value;\n                    this._dictionary.update('DA', this._da.toString());\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(false);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field.backColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(true);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} Value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"readOnly\", {\n        /**\n         * Gets a value indicating whether read only.\n         *\n         * @returns {boolean} read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether read only.\n         * let readOnly: boolean = field.readOnly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.readOnly) !== 0;\n        },\n        /**\n         * Sets a value indicating whether read only.\n         *\n         * @param {boolean} value read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether read only.\n         * field.readOnly = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.readOnly;\n            }\n            else {\n                if (this._fieldFlags === _FieldFlag.readOnly) {\n                    this._fieldFlags |= _FieldFlag.default;\n                }\n                this._fieldFlags &= ~_FieldFlag.readOnly;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"required\", {\n        /**\n         * Gets a value indicating whether the field is required.\n         *\n         * @returns {boolean} required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is required.\n         * let required: boolean = field.required;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.required) !== 0;\n        },\n        /**\n         * Sets a value indicating whether the field is required.\n         *\n         * @param {boolean} value required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is required.\n         * field.required = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.required;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.required;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visible\", {\n        /**\n         * Gets a value indicating the visibility of the field (Read only).\n         *\n         * @returns {boolean} visible or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating the visibility of the field.\n         * let visible: boolean = field.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                return flag !== PdfAnnotationFlag.hidden;\n            }\n            else {\n                return this._visible;\n            }\n        },\n        /**\n         * Sets a value indicating the visibility of the field.\n         * Only applicable for newly created PDF form fields.\n         *\n         * @param {boolean} value or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating the visibility of the field\n         * field.visible = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && this._visible !== value && !value) {\n                this._visible = value;\n                this.itemAt(this._defaultIndex).flags = PdfAnnotationFlag.hidden;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"border\", {\n        /**\n         * Gets the width, style and dash of the border of the field.\n         *\n         * @returns {PdfInteractiveBorder} Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width, style and dash of the border of the field.\n         * let border: PdfInteractiveBorder = field.border;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var value;\n            if (widget && widget._dictionary.has('BS')) {\n                value = widget.border;\n            }\n            else {\n                value = new PdfInteractiveBorder();\n                if (!(this instanceof PdfButtonField)) {\n                    value._width = 0;\n                }\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            value._width = border.get('W');\n                        }\n                        if (border.has('S')) {\n                            var borderStyle = border.get('S');\n                            if (borderStyle) {\n                                switch (borderStyle.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            value._dash = border.getArray('D');\n                        }\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Sets the width, style and dash of the border of the field.\n         *\n         * @param {PdfInteractiveBorder} value Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the width, style and dash of the border of the field.\n         * field.border = new PdfInteractiveBorder(2, PdfBorderStyle.solid);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                this._updateBorder(widget._dictionary, value);\n            }\n            else {\n                this._updateBorder(this._dictionary, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the field (Read only).\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation of the field.\n         * let rotate: PdfRotationAngle = field.rotationAngle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = PdfRotationAngle.angle0;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                value = widget.rotationAngle;\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"export\", {\n        /**\n         * Gets a value indicating whether the field is allow to export data or not.\n         *\n         * @returns {boolean} Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is allow to export data or not.\n         * let export: boolean = field.export;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.noExport) !== 0);\n        },\n        /**\n         * Sets a value indicating whether the field is allow to export data or not.\n         *\n         * @param {boolean} value Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is allow to export data or not.\n         * field.export = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.noExport;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.noExport;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"tabIndex\", {\n        /**\n         * Gets the tab index of annotation in current page.\n         *\n         * @returns {number} tab index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tab index of annotation in current page.\n         * let tabIndex: number = field.tabIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var annots;\n            if (this.page._pageDictionary.has('Annots')) {\n                annots = this.page._pageDictionary.get('Annots');\n            }\n            if (this._kids && this._kids.length > 0) {\n                for (var i = 0; i < this._kids.length; i++) {\n                    var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                    if (reference) {\n                        if (this.page._pageDictionary.has('Annots')) {\n                            if (annots) {\n                                var index1 = annots.indexOf(reference);\n                                if (index1 !== -1) {\n                                    return index1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else if (this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n                if (this._ref) {\n                    if (annots) {\n                        var index1 = annots.indexOf(this._ref);\n                        if (index1 !== -1) {\n                            return index1;\n                        }\n                    }\n                }\n            }\n            return -1;\n        },\n        /**\n         * Sets the tab index of a annotation in the current page.\n         *\n         * @param {number} value index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tab index of annotation in current page.\n         * field.tabIndex = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabIndex = value;\n            var page = this.page;\n            if (page && (this.form._tabOrder === PdfFormFieldsTabOrder.manual || page.tabOrder === PdfFormFieldsTabOrder.manual)) {\n                if (page._pageDictionary.has('Annots')) {\n                    var annots = page._pageDictionary.get('Annots');\n                    var annotationCollection = new PdfAnnotationCollection(annots, this._crossReference, page);\n                    page._annotations = annotationCollection;\n                    var index = annots.indexOf(this._ref);\n                    if (index < 0) {\n                        index = this._annotationIndex;\n                    }\n                    var annotations = page.annotations._reArrange(this._ref, this._tabIndex, index);\n                    page._pageDictionary.update('Annots', annotations);\n                    page._pageDictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"page\", {\n        /**\n         * Gets the page object of the form field (Read only).\n         *\n         * @returns {PdfPage} Page object.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the page object of the form field.\n         * let page: PdfPage = field.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._page) {\n                var widget = this.itemAt(this._defaultIndex);\n                var dictionary = (typeof widget !== 'undefined') ? widget._dictionary : this._dictionary;\n                var document_1;\n                if (this._crossReference) {\n                    document_1 = this._crossReference._document;\n                }\n                var page = void 0;\n                if (dictionary.has('P')) {\n                    var ref = dictionary.getRaw('P');\n                    if (ref && document_1) {\n                        for (var i = 0; i < document_1.pageCount; i++) {\n                            var entry = document_1.getPage(i);\n                            if (entry && entry._ref === ref) {\n                                page = entry;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!page && document_1) {\n                    var widgetRef = (typeof widget !== 'undefined') ? widget._ref : this._ref;\n                    if (!page && widgetRef) {\n                        page = _findPage(document_1, widgetRef);\n                    }\n                    if (!page && this._kids && this._kids.length > 0) {\n                        for (var i = 0; i < this._kids.length; i++) {\n                            page = _findPage(document_1, this._kids[Number.parseInt(i.toString(), 10)]);\n                            if (page) {\n                                break;\n                            }\n                        }\n                    }\n                }\n                this._page = page;\n            }\n            return this._page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the boolean flag indicating whether the form field have been flattened or not.\n         * let flatten: boolean = field.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the boolean flag indicating whether the form field have been flattened or not.\n         * field.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_grayBrush\", {\n        get: function () {\n            if (!this._gray) {\n                this._gray = new PdfBrush([128, 128, 128]);\n            }\n            return this._gray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_silverBrush\", {\n        get: function () {\n            if (!this._silver) {\n                this._silver = new PdfBrush([198, 198, 198]);\n            }\n            return this._silver;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_whiteBrush\", {\n        get: function () {\n            if (!this._white) {\n                this._white = new PdfBrush([255, 255, 255]);\n            }\n            return this._white;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_blackBrush\", {\n        get: function () {\n            if (!this._black) {\n                this._black = new PdfBrush([0, 0, 0]);\n            }\n            return this._black;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_kidsCount\", {\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                if (!mkDictionary) {\n                    var item = this.itemAt(this._defaultIndex);\n                    if (item && item._dictionary.has('MK')) {\n                        mkDictionary = item._dictionary.get('MK');\n                    }\n                }\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_hasBorderColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                if (!mkDictionary) {\n                    var item = this.itemAt(this._defaultIndex);\n                    if (item && item._dictionary.has('MK')) {\n                        mkDictionary = item._dictionary.get('MK');\n                    }\n                }\n                return (mkDictionary && mkDictionary.has('BC'));\n            }\n            else {\n                return !this._isTransparentBorderColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._parseBackColor = function (hasTransparency) {\n        var value;\n        if ((!hasTransparency) || ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor))) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor) {\n                value = widget.backColor;\n            }\n            else if (this._mkDictionary) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BG')) {\n                    var bgArray = mkDict.getArray('BG');\n                    if (bgArray) {\n                        value = _parseColor(bgArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [255, 255, 255];\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._parseBorderColor = function (hasTransparency) {\n        var value;\n        if ((!hasTransparency) || ((this._isLoaded && this._hasBorderColor) || (!this._isLoaded && !this._isTransparentBorderColor))) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor) {\n                value = widget.borderColor;\n            }\n            else if (this._mkDictionary) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BC')) {\n                    var bgArray = mkDict.getArray('BC');\n                    if (bgArray) {\n                        value = _parseColor(bgArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [0, 0, 0];\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._updateBackColor = function (value, hasTransparency) {\n        if (hasTransparency === void 0) { hasTransparency = false; }\n        if (hasTransparency && value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n            }\n            var item = this.itemAt(this._defaultIndex);\n            if (item) {\n                item.backColor = value;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor !== value) {\n                widget.backColor = value;\n            }\n            else {\n                var mkDictionary = this._mkDictionary;\n                if (typeof mkDictionary === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDictionary.has('BG') || _parseColor(mkDictionary.getArray('BG')) !== value) {\n                    mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    PdfField.prototype._updateBorderColor = function (value, hasTransparency) {\n        if (hasTransparency === void 0) { hasTransparency = false; }\n        if (hasTransparency && value.length === 4 && value[3] !== 255) {\n            this._isTransparentBorderColor = true;\n            if (this._dictionary.has('BC')) {\n                delete this._dictionary._map.BC;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BC')) {\n                delete mkDictionary._map.BC;\n                if (this._dictionary.has('BS')) {\n                    var bsDictionary = this._dictionary.get('BS');\n                    if (bsDictionary && bsDictionary.has('W')) {\n                        delete bsDictionary._map.W;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n            var item = this.itemAt(this._defaultIndex);\n            if (item) {\n                item.borderColor = value;\n            }\n        }\n        else {\n            this._isTransparentBorderColor = false;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor !== value) {\n                widget.borderColor = value;\n            }\n            else {\n                var mkDictionary = this._mkDictionary;\n                if (typeof mkDictionary === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDictionary.has('BC') || _parseColor(mkDictionary.getArray('BC')) !== value) {\n                    mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Gets the field item as `PdfWidgetAnnotation` at the specified index.\n     *\n     * @param {number} index Item index.\n     * @returns {PdfWidgetAnnotation} Loaded PDF form field item at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Access the count of the field items.\n     * let count: number = field.count;\n     * // Access the first item\n     * let item: PdfWidgetAnnotation = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.itemAt = function (index) {\n        var item;\n        if (index >= 0 && index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfWidgetAnnotation._load(dictionary, this._crossReference);\n                    item._ref = reference;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.fieldAt(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n    };\n    /**\n     * Gets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string} Value associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the value associated with the key 'Author'.\n     * let value: string = document.form.fieldAt(0).getValue('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.getValue = function (name) {\n        var value;\n        if (this._dictionary.has(name)) {\n            var element = this._dictionary.get(name); // eslint-disable-line\n            if (element instanceof _PdfName) {\n                value = element.name;\n            }\n            else if (typeof element === 'string') {\n                value = element;\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return value;\n    };\n    /**\n     * Sets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Set custom value\n     * field.setValue('Author', 'John');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setValue = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    /**\n     * Remove the form field item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItemAt = function (index) {\n        if (this._dictionary.has('Kids') && this.itemsCount > 0) {\n            var item = this.itemAt(index);\n            if (item && item._ref) {\n                var page = item._getPage();\n                if (page) {\n                    page._removeAnnotation(item._ref);\n                }\n                this._kids.splice(index, 1);\n                this._dictionary.set('Kids', this._kids);\n                this._dictionary._updated = true;\n                this._parsedItems.delete(index);\n                if (this._parsedItems.size > 0) {\n                    var parsedItems_1 = new Map();\n                    this._parsedItems.forEach(function (value, key) {\n                        if (key > index) {\n                            parsedItems_1.set(key - 1, value);\n                        }\n                        else {\n                            parsedItems_1.set(key, value);\n                        }\n                    });\n                    this._parsedItems = parsedItems_1;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified form field item.\n     *\n     * @param {PdfWidgetAnnotation} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    Object.defineProperty(PdfField.prototype, \"_fieldFlags\", {\n        get: function () {\n            if (typeof this._flags === 'undefined') {\n                this._flags = _getInheritableProperty(this._dictionary, 'Ff', false, true, 'Parent');\n                if (typeof this._flags === 'undefined') {\n                    this._flags = _FieldFlag.default;\n                }\n            }\n            return this._flags;\n        },\n        set: function (value) {\n            if (this._fieldFlags !== value) {\n                this._flags = value;\n                this._dictionary.update('Ff', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined') {\n                var da = _getInheritableProperty(this._dictionary, 'DA', false, true, 'Parent');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._updateBorder = function (dictionary, value) {\n        var bs;\n        var isNew = false;\n        if (dictionary.has('BS')) {\n            bs = dictionary.get('BS');\n        }\n        else {\n            bs = new _PdfDictionary(this._crossReference);\n            dictionary.update('BS', bs);\n            isNew = true;\n        }\n        if (typeof value.width !== 'undefined') {\n            bs.update('W', value.width);\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('W', 0);\n        }\n        if (typeof value.style !== 'undefined') {\n            bs.update('S', _mapBorderStyle(value.style));\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('S', _mapBorderStyle(PdfBorderStyle.solid));\n        }\n        if (typeof value.dash !== 'undefined') {\n            bs.update('D', value.dash);\n            dictionary._updated = true;\n        }\n    };\n    PdfField.prototype._checkFieldFlag = function (dictionary) {\n        var flag = dictionary.get('F');\n        return (typeof flag !== 'undefined' && flag === 6);\n    };\n    PdfField.prototype._initializeFont = function (font) {\n        this._font = font;\n        var document = this._crossReference._document;\n        var resource;\n        if (document) {\n            if (document.form._dictionary.has('DR')) {\n                resource = document.form._dictionary.get('DR');\n            }\n            else {\n                resource = new _PdfDictionary(this._crossReference);\n            }\n        }\n        var fontDict;\n        var isReference = false;\n        if (resource.has('Font')) {\n            var obj = resource.getRaw('Font'); // eslint-disable-line\n            if (obj && obj instanceof _PdfReference) {\n                isReference = true;\n                fontDict = this._crossReference._fetch(obj);\n            }\n            else if (obj instanceof _PdfDictionary) {\n                fontDict = obj;\n            }\n        }\n        if (!fontDict) {\n            fontDict = new _PdfDictionary(this._crossReference);\n            resource.update('Font', fontDict);\n        }\n        var keyName = _PdfName.get(_getNewGuidString());\n        var reference = this._crossReference._getNextReference();\n        if (font instanceof PdfTrueTypeFont) {\n            if (this._font._pdfFontInternals) {\n                this._crossReference._cacheMap.set(reference, this._font._pdfFontInternals);\n            }\n        }\n        else if (this._font._dictionary) {\n            this._crossReference._cacheMap.set(reference, this._font._dictionary);\n        }\n        fontDict.update(keyName.name, reference);\n        resource._updated = true;\n        document.form._dictionary.update('DR', resource);\n        document.form._dictionary._updated = true;\n        this._fontName = keyName.name;\n        var defaultAppearance = new _PdfDefaultAppearance();\n        defaultAppearance.fontName = this._fontName;\n        defaultAppearance.fontSize = this._font._size;\n        defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n        if (this._dictionary.has('Kids')) {\n            var widgetDictionary = this._dictionary.getArray('Kids');\n            for (var i = 0; i < widgetDictionary.length; i++) {\n                var dictionary = widgetDictionary[Number.parseInt(i.toString(), 10)];\n                dictionary.update('DA', defaultAppearance.toString());\n            }\n        }\n        else if (this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n            this._dictionary.update('DA', defaultAppearance.toString());\n        }\n        if (isReference) {\n            resource._updated = true;\n        }\n    };\n    PdfField.prototype._drawRectangularControl = function (g, parameter) {\n        g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    PdfField.prototype._drawBorder = function (g, bounds, borderPen, style, borderWidth) {\n        if (borderPen && borderWidth > 0) {\n            if (style === PdfBorderStyle.underline) {\n                g.drawLine(borderPen, bounds[0], bounds[0] + bounds[3] - borderWidth / 2, bounds[0] + bounds[2], bounds[1] + bounds[3] - borderWidth / 2);\n            }\n            else {\n                g.drawRectangle(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, bounds[2] - borderWidth, bounds[3] - borderWidth, borderPen);\n            }\n        }\n    };\n    PdfField.prototype._drawLeftTopShadow = function (g, bounds, width, brush) {\n        var path = new _PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, bounds[1] + width]);\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([bounds[0] + 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - width, bounds[1] + width]);\n        path._addPolygon(points);\n        g._drawPath(path, null, brush);\n    };\n    PdfField.prototype._drawRightBottomShadow = function (g, bounds, width, brush) {\n        var path = new _PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([bounds[0] + bounds[2] - width, bounds[1] + width]);\n        points.push([(bounds[0] + bounds[2]) - width, (bounds[1] + bounds[3]) - width]);\n        path._addPolygon(points);\n        g._drawPath(path, null, brush);\n    };\n    PdfField.prototype._drawRadioButton = function (graphics, parameter, checkSymbol, state) {\n        if (checkSymbol === 'l') {\n            var bounds = parameter.bounds;\n            switch (state) {\n                case _PdfCheckFieldState.checked:\n                case _PdfCheckFieldState.unchecked:\n                    graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.backBrush);\n                    break;\n                case _PdfCheckFieldState.pressedChecked:\n                case _PdfCheckFieldState.pressedUnchecked:\n                    if ((parameter.borderStyle === PdfBorderStyle.beveled) || (parameter.borderStyle === PdfBorderStyle.underline)) {\n                        graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.backBrush);\n                    }\n                    else {\n                        graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.shadowBrush);\n                    }\n                    break;\n            }\n            this._drawRoundBorder(graphics, bounds, parameter.borderPen, parameter.borderWidth);\n            this._drawRoundShadow(graphics, parameter, state);\n            if (state === _PdfCheckFieldState.checked || state === _PdfCheckFieldState.pressedChecked) {\n                var outward = [bounds[0] + parameter.borderWidth / 2,\n                    bounds[1] + parameter.borderWidth / 2,\n                    bounds[2] - parameter.borderWidth,\n                    bounds[3] - parameter.borderWidth];\n                graphics.drawEllipse(outward[0] + (outward[2] / 4), outward[1] + (outward[2] / 4), outward[2] - (outward[2] / 2), outward[3] - (outward[2] / 2), parameter.foreBrush);\n            }\n        }\n        else {\n            this._drawCheckBox(graphics, parameter, checkSymbol, state);\n        }\n    };\n    PdfField.prototype._drawRoundBorder = function (graphics, bounds, borderPen, borderWidth) {\n        if (bounds[0] !== 0 || bounds[1] !== 0 || bounds[2] !== 0 || bounds[3] !== 0) {\n            graphics.drawEllipse(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, bounds[2] - borderWidth, bounds[3] - borderWidth, borderPen);\n        }\n    };\n    PdfField.prototype._drawRoundShadow = function (graphics, parameter, state) {\n        var borderWidth = parameter.borderWidth;\n        var inflateValue = -1.5 * borderWidth;\n        var x = parameter.bounds[0] + inflateValue;\n        var y = parameter.bounds[1] + inflateValue;\n        var width = parameter.bounds[2] + (2 * inflateValue);\n        var height = parameter.bounds[3] + (2 * inflateValue);\n        var shadowBrush = parameter.shadowBrush;\n        if (shadowBrush) {\n            var shadowColor = shadowBrush._color;\n            var leftTop = void 0;\n            var rightBottom = void 0;\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.beveled:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen(shadowColor, borderWidth);\n                            rightBottom = new PdfPen([255, 255, 255], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([255, 255, 255], borderWidth);\n                            rightBottom = new PdfPen(shadowColor, borderWidth);\n                            break;\n                    }\n                    break;\n                case PdfBorderStyle.inset:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen([0, 0, 0], borderWidth);\n                            rightBottom = new PdfPen([0, 0, 0], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([128, 128, 128], borderWidth);\n                            rightBottom = new PdfPen([192, 192, 192], borderWidth);\n                            break;\n                    }\n                    break;\n            }\n            if (leftTop && rightBottom) {\n                graphics.drawArc(x, y, width, height, 135, 180, leftTop);\n                graphics.drawArc(x, y, width, height, -45, 180, rightBottom);\n            }\n        }\n    };\n    PdfField.prototype._drawCheckBox = function (graphics, parameter, checkSymbol, state, font) {\n        switch (state) {\n            case _PdfCheckFieldState.unchecked:\n            case _PdfCheckFieldState.checked:\n                if (parameter.borderPen || parameter.backBrush) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                }\n                break;\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.pressedUnchecked:\n                if ((parameter.borderStyle === PdfBorderStyle.beveled || parameter.backBrush) ||\n                    (parameter.borderStyle === PdfBorderStyle.underline)) {\n                    if (parameter.borderPen || parameter.backBrush) {\n                        graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                    }\n                }\n                else if (parameter.borderPen || parameter.shadowBrush) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                }\n                break;\n        }\n        var rectangle = parameter.bounds;\n        this._drawBorder(graphics, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        if ((state === _PdfCheckFieldState.pressedChecked) || (state === _PdfCheckFieldState.pressedUnchecked)) {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._blackBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n            }\n        }\n        else {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    break;\n            }\n        }\n        var yOffset = 0;\n        var size = 0;\n        switch (state) {\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.checked:\n                if (!font) {\n                    var extraBorder = parameter.borderStyle === PdfBorderStyle.beveled ||\n                        parameter.borderStyle === PdfBorderStyle.inset;\n                    var borderWidth = parameter.borderWidth;\n                    if (extraBorder) {\n                        borderWidth *= 2;\n                    }\n                    var xPosition = Math.max((extraBorder ? 2 * parameter.borderWidth : parameter.borderWidth), 1);\n                    var xOffset = Math.min(borderWidth, xPosition);\n                    size = (parameter.bounds[2] > parameter.bounds[3]) ? parameter.bounds[3] : parameter.bounds[2];\n                    var fontSize = size - 2 * xOffset;\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize);\n                    if (parameter.bounds[2] > parameter.bounds[3]) {\n                        yOffset = ((parameter.bounds[3] - font._metrics._getHeight()) / 2);\n                    }\n                }\n                else {\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, font._size);\n                }\n                if (size === 0) {\n                    size = parameter.bounds[3];\n                }\n                if (parameter.pageRotationAngle !== PdfRotationAngle.angle0 || parameter.rotationAngle > 0) {\n                    var state_1 = graphics.save();\n                    var size_1 = graphics._size;\n                    if (parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(size_1[1], 0);\n                            graphics.rotateTransform(90);\n                            var y = size_1[1] - (rectangle[0] + rectangle[2]);\n                            var x = rectangle[1];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(0, size_1[0]);\n                            graphics.rotateTransform(270);\n                            var x = size_1[0] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                    }\n                    if (parameter.rotationAngle > 0) {\n                        if (parameter.rotationAngle === 90) {\n                            if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                                graphics.translateTransform(0, size_1[1]);\n                                graphics.rotateTransform(-90);\n                                var x = size_1[1] - (rectangle[1] + rectangle[3]);\n                                var y = rectangle[0];\n                                rectangle = [x, y, rectangle[3], rectangle[2]];\n                            }\n                            else {\n                                if (rectangle[2] > rectangle[3]) {\n                                    graphics.translateTransform(0, size_1[1]);\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                                }\n                                else {\n                                    var z = rectangle[0];\n                                    rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                    rectangle[1] = z;\n                                    var height = rectangle[3];\n                                    rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                    rectangle[2] = height;\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n                                }\n                            }\n                        }\n                        else if (parameter.rotationAngle === 270) {\n                            graphics.translateTransform(size_1[0], 0);\n                            graphics.rotateTransform(-270);\n                            var x = rectangle[1];\n                            var y = size_1[0] - (rectangle[0] + rectangle[2]);\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.rotationAngle === 180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                        graphics.restore(state_1);\n                    }\n                    else {\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                    }\n                    break;\n                }\n        }\n    };\n    PdfField.prototype._addToKid = function (item) {\n        if (this._dictionary.has('Kids')) {\n            this._kids = this._dictionary.get('Kids');\n        }\n        else {\n            this._kids = [];\n            this._dictionary.update('Kids', this._kids);\n            this._parsedItems = new Map();\n        }\n        var currentIndex = this._kidsCount;\n        item._index = currentIndex;\n        this._kids.push(item._ref);\n        this._parsedItems.set(currentIndex, item);\n    };\n    PdfField.prototype._drawTemplate = function (template, page, bounds) {\n        if (template && page) {\n            var graphics = page.graphics;\n            graphics.save();\n            if (page.rotation === PdfRotationAngle.angle90) {\n                graphics.translateTransform(graphics._size[1], 0);\n                graphics.rotateTransform(90);\n            }\n            else if (page.rotation === PdfRotationAngle.angle180) {\n                graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                graphics.rotateTransform(-180);\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                graphics.translateTransform(0, graphics._size[0]);\n                graphics.rotateTransform(270);\n            }\n            graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n            graphics.drawTemplate(template, bounds);\n            graphics.restore();\n        }\n    };\n    PdfField.prototype._addToOptions = function (item, field) {\n        if (field instanceof PdfListBoxField) {\n            field._listValues.push(item._text);\n        }\n        field._options.push([item._value, item._text]);\n        field._dictionary.set('Opt', field._options);\n        field._dictionary._updated = true;\n        if (!item._isFont && item._pdfFont) {\n            this._initializeFont(item._pdfFont);\n        }\n    };\n    PdfField.prototype._addAppearance = function (dictionary, template, key) {\n        var appearance = new _PdfDictionary();\n        if (dictionary.has('AP')) {\n            appearance = dictionary.get('AP');\n            _removeDuplicateReference(dictionary.get('AP'), this._crossReference, key);\n        }\n        else {\n            appearance = new _PdfDictionary(this._crossReference);\n            dictionary.update('AP', appearance);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        appearance.update(key, reference);\n    };\n    PdfField.prototype._rotateTextBox = function (rect, size, angle) {\n        var rectangle = [0, 0, 0, 0];\n        if (angle === PdfRotationAngle.angle180) {\n            rectangle = [size[0] - (rect[0] + rect[2]), size[1] - (rect[1] + rect[3]), rect[2], rect[3]];\n        }\n        else if (angle === PdfRotationAngle.angle270) {\n            rectangle = [rect[1], size[0] - (rect[0] + rect[2]), rect[3], rect[2]];\n        }\n        else if (angle === PdfRotationAngle.angle90) {\n            rectangle = [size[1] - (rect[1] + rect[3]), rect[0], rect[3], rect[2]];\n        }\n        return rectangle;\n    };\n    PdfField.prototype._checkIndex = function (value, length) {\n        if (value < 0 || (value !== 0 && value >= length)) {\n            throw Error('Index out of range.');\n        }\n    };\n    PdfField.prototype._getAppearanceStateValue = function () {\n        var value;\n        if (this._dictionary.has('Kids')) {\n            for (var i = 0; i < this._kidsCount; i++) {\n                var item = this.itemAt(i);\n                if (item && item._dictionary && item._dictionary.has('AS')) {\n                    var state = item._dictionary.get('AS');\n                    if (state && state.name !== 'Off') {\n                        value = state.name;\n                        break;\n                    }\n                }\n            }\n        }\n        else if (this._dictionary.has('AS')) {\n            var state = this._dictionary.get('AS');\n            if (state && state.name !== 'Off') {\n                value = state.name;\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._getTextAlignment = function () {\n        if (this._textAlignment === null || typeof this._textAlignment === 'undefined') {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary && widget._dictionary.has('Q')) {\n                    this._textAlignment = widget._dictionary.get('Q');\n                }\n                else if (this._dictionary.has('Q')) {\n                    this._textAlignment = this._dictionary.get('Q');\n                }\n                else {\n                    this._textAlignment = PdfTextAlignment.left;\n                }\n            }\n            else {\n                this._textAlignment = PdfTextAlignment.left;\n            }\n        }\n        return this._textAlignment;\n    };\n    PdfField.prototype._setTextAlignment = function (value) {\n        var widget = this.itemAt(this._defaultIndex);\n        if (this._isLoaded && !this.readOnly) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else {\n                this._dictionary.update('Q', value);\n            }\n        }\n        if (!this._isLoaded && this._textAlignment !== value) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else if (this._dictionary) {\n                this._dictionary.update('Q', value);\n            }\n        }\n        this._textAlignment = value;\n        this._stringFormat = new PdfStringFormat(value, PdfVerticalAlignment.middle);\n    };\n    PdfField.prototype._parseItems = function () {\n        var collection = [];\n        for (var i = 0; i < this.itemsCount; i++) {\n            collection.push(this.itemAt(i));\n        }\n        return collection;\n    };\n    return PdfField;\n}());\nexport { PdfField };\n/**\n * `PdfTextBoxField` class represents the text box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextBoxField = /** @class */ (function (_super) {\n    __extends(PdfTextBoxField, _super);\n    function PdfTextBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._autoResizeText = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing text box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfTextBoxField} Text box field.\n     */\n    PdfTextBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfTextBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    Object.defineProperty(PdfTextBoxField.prototype, \"text\", {\n        /**\n         * Gets the value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text value from text box field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined') {\n                if (this._isLoaded) {\n                    var text = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (text) {\n                        this._text = text;\n                    }\n                    else {\n                        var widget = this.itemAt(this._defaultIndex);\n                        if (widget) {\n                            text = widget._dictionary.get('V');\n                            if (text) {\n                                this._text = text;\n                            }\n                        }\n                    }\n                }\n                else {\n                    this._text = '';\n                }\n            }\n            return this._text;\n        },\n        /**\n         * Sets the value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text value to text box field\n         * field.text = ‘Syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                if (!this.readOnly) {\n                    if (!(this._dictionary.has('V') && this._dictionary.get('V') === value)) {\n                        this._dictionary.update('V', value);\n                    }\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && !(widget._dictionary.has('V') && widget._dictionary.get('V') === value)) {\n                        widget._dictionary.update('V', value);\n                    }\n                }\n            }\n            else if (this._text !== value) {\n                this._dictionary.update('V', value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a text box.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text alignment from text box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a text box.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"defaultValue\", {\n        /**\n         * Gets the default value of the field.\n         *\n         * @returns {string} Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the default value from the text box field\n         * let value: string = field.defaultValue;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._defaultValue === 'undefined') {\n                var text = _getInheritableProperty(this._dictionary, 'DV', false, true, 'Parent');\n                if (text) {\n                    this._defaultValue = text;\n                }\n            }\n            return this._defaultValue;\n        },\n        /**\n         * Sets the default value of the field.\n         *\n         * @param {string} value Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the default value of the text box field\n         * field.defaultValue = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this.defaultValue) {\n                this._dictionary.update('DV', value);\n                this._defaultValue = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"multiLine\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @returns {boolean} multiline.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         * let multiLine: boolean = field.multiLine;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.multiLine) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @param {boolean} value multiLine or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         * field.multiLine = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.multiLine;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.multiLine;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"password\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @returns {boolean} password.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is password.\n         * let password: boolean = field.password;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.password) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @param {boolean} value password or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is password.\n         * field.password = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.password;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.password;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"scrollable\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @returns {boolean} scrollable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * let scrollable: boolean = field.scrollable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotScroll) !== 0);\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @param {boolean} value scrollable or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * field.scrollable = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotScroll;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotScroll;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"spellCheck\", {\n        /**\n         * Gets a value indicating whether to check spelling.\n         *\n         * @returns {boolean} spellCheck.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether to check spelling\n         * let spellCheck: boolean = field.spellCheck;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotSpellCheck) !== 0);\n        },\n        /**\n         * Sets a value indicating whether to check spelling.\n         *\n         * @param {boolean} value spellCheck or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether to check spelling\n         * field.spellCheck = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotSpellCheck;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"insertSpaces\", {\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @returns {boolean} insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * let insertSpaces: boolean = field.insertSpaces;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var flags = this._fieldFlags;\n            return ((_FieldFlag.comb & flags) !== 0) &&\n                ((flags & _FieldFlag.multiLine) === 0) &&\n                ((flags & _FieldFlag.password) === 0) &&\n                ((flags & _FieldFlag.fileSelect) === 0);\n        },\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @param {boolean} value insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * field.insertSpaces = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.comb;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.comb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the highlight mode of text box field\n         * let mode: PdfHighlightMode = field.highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary.has('H')) {\n                var name_4 = this._dictionary.get('H');\n                mode = _mapHighlightMode(name_4.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.noHighlighting;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the highlight mode of text box field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"maxLength\", {\n        /**\n         * Gets the maximum length of the field, in characters.\n         *\n         * @returns {number} maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the maximum length of the field, in characters.\n         * let maxLength: number = field.maxLength;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._maxLength === 'undefined') {\n                var length_1 = _getInheritableProperty(this._dictionary, 'MaxLen', false, true, 'Parent');\n                this._maxLength = (typeof length_1 !== 'undefined' && Number.isInteger(length_1)) ? length_1 : 0;\n            }\n            return this._maxLength;\n        },\n        /**\n         * Sets the maximum length of the field, in characters.\n         *\n         * @param {number} value maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the maximum length of the field, in characters.\n         * field.maxLength = 20;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.maxLength !== value) {\n                this._dictionary.update('MaxLen', value);\n                this._maxLength = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"isAutoResizeText\", {\n        /**\n         * Gets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @returns {boolean} Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the flag indicating whether the auto resize text enabled or not.\n         * let isAutoResize: boolean = field.isAutoResizeText;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._autoResizeText;\n        },\n        /**\n         * Sets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @param {boolean} value Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the flag indicating whether the auto resize text enabled or not.\n         * field.isAutoResizeText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._autoResizeText = value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._isAutoResize = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let firstName: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * firstName.backColor = [255, 0, 0];\n         * // Access the text box field at index 1\n         * let secondName: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * secondName.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._text = '';\n        this._defaultValue = '';\n        this._defaultIndex = 0;\n        this._spellCheck = false;\n        this._insertSpaces = false;\n        this._multiline = false;\n        this._password = false;\n        this._scrollable = false;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Tx'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfTextBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.left;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._mkDictionary.update('CA', this.actualName);\n        this._addToKid(widget);\n    };\n    PdfTextBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(isFlatten, item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._page, { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfTextBoxField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if (this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(isFlatten, source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics.drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfTextBoxField.prototype._createAppearance = function (isFlatten, widget) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (isFlatten && backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        parameter.insertSpaces = this.insertSpaces;\n        var text = this.text;\n        if (text === null || typeof text === 'undefined') {\n            text = '';\n        }\n        if (this.password) {\n            var password = '';\n            for (var i = 0; i < text.length; i++) {\n                password += '*';\n            }\n            text = password;\n        }\n        parameter.required = this.required;\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (typeof this._stringFormat === 'undefined' || this._stringFormat === null) {\n            if (typeof this.textAlignment === 'undefined' || this.textAlignment === null) {\n                this._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n            }\n            else {\n                this._stringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n            }\n        }\n        this._drawTextBox(graphics, parameter, text, this._font, this._stringFormat, this.multiLine, this.scrollable, this.maxLength);\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfTextBoxField.prototype._drawTextBox = function (g, parameter, text, font, format, multiline, scroll, maxLength) {\n        if (typeof maxLength !== 'undefined') {\n            if (parameter.insertSpaces) {\n                var width = 0;\n                if (typeof maxLength !== 'undefined' && maxLength > 0 && this.borderColor) {\n                    width = parameter.bounds[2] / maxLength;\n                    g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.borderPen, parameter.backBrush);\n                    var current = text;\n                    for (var i = 0; i < maxLength; i++) {\n                        if (format.alignment === PdfTextAlignment.right) {\n                            if (maxLength - current.length <= i) {\n                                text = current[i - (maxLength - current.length)];\n                            }\n                            else {\n                                text = '';\n                            }\n                        }\n                        else {\n                            if (format.alignment === PdfTextAlignment.center && current.length < maxLength) {\n                                var startlocation = maxLength / 2 - (Math.ceil(current.length / 2));\n                                if (i >= startlocation && i < startlocation + current.length) {\n                                    text = current[i - startlocation];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                            else {\n                                if (current.length > i) {\n                                    text = current[Number.parseInt(i.toString(), 10)];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                        }\n                        parameter.bounds[2] = width;\n                        this._drawTextBox(g, parameter, text, font, new PdfStringFormat(PdfTextAlignment.center), multiline, scroll);\n                        parameter.bounds[0] = parameter.bounds[0] + width;\n                        if (parameter.borderWidth) {\n                            g.drawLine(parameter.borderPen, parameter.bounds[0], parameter.bounds[1], parameter.bounds[0], parameter.bounds[1] + parameter.bounds[3]);\n                        }\n                    }\n                }\n                else {\n                    this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n                }\n            }\n            else {\n                this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n            }\n        }\n        else {\n            if (g._isTemplateGraphics && parameter.required) {\n                g.save();\n                g._initializeCoordinates();\n            }\n            if (!parameter.insertSpaces) {\n                this._drawRectangularControl(g, parameter);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g.restore();\n                g.save();\n                g._sw._beginMarkupSequence('Tx');\n                g._initializeCoordinates();\n            }\n            var rectangle = parameter.bounds;\n            if (parameter.borderStyle === PdfBorderStyle.beveled || parameter.borderStyle === PdfBorderStyle.inset) {\n                rectangle[0] = rectangle[0] + 4 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 8 * parameter.borderWidth;\n            }\n            else {\n                rectangle[0] = rectangle[0] + 2 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 4 * parameter.borderWidth;\n            }\n            if (multiline) {\n                var tempheight = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                    font._metrics._getHeight() :\n                    format.lineSpacing;\n                var ascent = font._metrics._getAscent(format);\n                var shift = tempheight - ascent;\n                if (text.indexOf('\\n') !== -1) {\n                    if (rectangle[0] === 0 && rectangle[1] === 1) {\n                        rectangle[1] = -(rectangle[1] - shift);\n                    }\n                }\n                else if (rectangle[0] === 0 && rectangle[1] === 1) {\n                    rectangle[1] = -(rectangle[1] - shift);\n                }\n                if (parameter.isAutoFontSize) {\n                    if (parameter.borderWidth !== 0) {\n                        rectangle[1] = rectangle[1] + 2.5 * parameter.borderWidth;\n                    }\n                }\n            }\n            if ((g._page &&\n                typeof g._page.rotation !== 'undefined' &&\n                g._page.rotation !== PdfRotationAngle.angle0) ||\n                parameter.rotationAngle > 0) {\n                var state = g.save();\n                if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(g._size[1], 0);\n                        g.rotateTransform(90);\n                        var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                        var x = rectangle[1];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                        g.translateTransform(0, g._size[0]);\n                        g.rotateTransform(270);\n                        var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                }\n                if (parameter.rotationAngle) {\n                    if (parameter.rotationAngle === 90) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else {\n                            if (rectangle[2] > rectangle[3]) {\n                                g.translateTransform(0, g._size[1]);\n                                g.rotateTransform(-90);\n                                rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                            }\n                            else {\n                                var z = rectangle[0];\n                                rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                rectangle[1] = z;\n                                var height = rectangle[3];\n                                rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                rectangle[2] = height;\n                                g.rotateTransform(-90);\n                            }\n                        }\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        g.translateTransform(g._size[0], 0);\n                        g.rotateTransform(-270);\n                        var x = rectangle[1];\n                        var y = g._size[0] - (rectangle[0] + rectangle[2]);\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                }\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n                g.restore(state);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g._sw._endMarkupSequence();\n                g.restore();\n            }\n        }\n    };\n    return PdfTextBoxField;\n}(PdfField));\nexport { PdfTextBoxField };\n/**\n * `PdfButtonField` class represents the button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new button field\n * let field: PdfButtonField = new PdfButtonField(page , 'Button1', {x: 100, y: 40, width: 100, height: 20});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfButtonField = /** @class */ (function (_super) {\n    __extends(PdfButtonField, _super);\n    function PdfButtonField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfButtonField.prototype, \"actions\", {\n        /**\n         * Gets the actions of the field. [Read-Only]\n         *\n         * @returns {PdfFieldActions} The actions.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action value from button field\n         * let action: PdfAction = field.actions.mouseEnter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._actions) {\n                this._actions = new PdfFieldActions(this);\n            }\n            return this._actions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"text\", {\n        /**\n         * Gets value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text value from button field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                if (typeof this._text === 'undefined') {\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && widget._mkDictionary && widget._mkDictionary.has('CA')) {\n                        this._text = widget._mkDictionary.get('CA');\n                    }\n                    else if (this._mkDictionary && this._mkDictionary.has('CA')) {\n                        this._text = this._mkDictionary.get('CA');\n                    }\n                }\n                if (typeof this._text === 'undefined') {\n                    var value = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (value) {\n                        this._text = value;\n                    }\n                }\n            }\n            if (typeof this._text === 'undefined') {\n                this._text = '';\n            }\n            return this._text;\n        },\n        /**\n         * Sets value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text value of form field\n         * field.text = ’Click to submit’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && !this.readOnly) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary) {\n                    this._assignText(widget._dictionary, value);\n                }\n                else {\n                    this._assignText(this._dictionary, value);\n                }\n            }\n            if (!this._isLoaded && this._text !== value) {\n                var widget = this.itemAt(this._defaultIndex);\n                this._assignText(widget._dictionary, value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a button field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text alignment from button field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a button field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the highlight mode from button field\n         * let highlightMode: PdfHighlightMode = field. highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary.has('H')) {\n                var highlight = this._dictionary.get('H');\n                mode = _mapHighlightMode(highlight.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.invert;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the highlight mode of button field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the button field at index 0\n         * let submitButton: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * submitButton.backColor = [255, 0, 0];\n         * // Access the button field at index 1\n         * let cancelButton: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * cancelButton.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfButtonField.prototype._assignText = function (fieldDictionary, value) {\n        var dictionary;\n        if (fieldDictionary.has('MK')) {\n            dictionary = fieldDictionary.get('MK');\n        }\n        else {\n            dictionary = new _PdfDictionary(this._crossReference);\n            fieldDictionary.set('MK', dictionary);\n        }\n        dictionary.update('CA', value);\n        fieldDictionary._updated = true;\n    };\n    /**\n     * Parse an existing button field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfButtonField} Button field.\n     */\n    PdfButtonField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfButtonField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfButtonField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.pushButton;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfButtonField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [.827451, .827451, .827451]);\n        widget._mkDictionary.update('CA', (typeof this._name !== 'undefined' && this._name !== null) ? this._name : this._actualName);\n        this._addToKid(widget);\n    };\n    PdfButtonField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._getPage(), { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                            var pressed = this._createAppearance(item, true);\n                            if (pressed) {\n                                this._addAppearance(item._dictionary, pressed, 'D');\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfButtonField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if (this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics.drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfButtonField.prototype._createAppearance = function (widget, isPressed) {\n        if (isPressed === void 0) { isPressed = false; }\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (isPressed) {\n            this._drawPressedButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n        }\n        else {\n            this._drawButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n        }\n        return template;\n    };\n    PdfButtonField.prototype._drawButton = function (g, parameter, text, font, format) {\n        this._drawRectangularControl(g, parameter);\n        var rectangle = parameter.bounds;\n        if ((g._page &&\n            typeof g._page.rotation !== 'undefined' &&\n            g._page.rotation !== PdfRotationAngle.angle0) ||\n            parameter.rotationAngle > 0) {\n            var state = g.save();\n            if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                    g.translateTransform(g._size[1], 0);\n                    g.rotateTransform(90);\n                    var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                    var x = rectangle[1];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                    g.translateTransform(0, g._size[0]);\n                    g.rotateTransform(270);\n                    var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n            }\n            if (parameter.rotationAngle) {\n                if (parameter.rotationAngle === 90) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(0, g._size[1]);\n                        g.rotateTransform(-90);\n                        var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else {\n                        if (rectangle[2] > rectangle[3]) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                        }\n                        else {\n                            var z = rectangle[0];\n                            rectangle[0] = -(rectangle[1] + rectangle[3]);\n                            rectangle[1] = z;\n                            var height = rectangle[3];\n                            rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                            rectangle[2] = height;\n                            g.rotateTransform(-90);\n                        }\n                    }\n                }\n                else if (parameter.rotationAngle === 270) {\n                    g.translateTransform(g._size[0], 0);\n                    g.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = g._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n            }\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            g.restore(state);\n        }\n        else {\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        }\n    };\n    PdfButtonField.prototype._drawPressedButton = function (g, parameter, text, font, format) {\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                break;\n            default:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                break;\n        }\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        var rectangle = [parameter.borderWidth,\n            parameter.borderWidth,\n            parameter.bounds[2] - parameter.borderWidth,\n            parameter.bounds[3] - parameter.borderWidth];\n        g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                break;\n            default:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    return PdfButtonField;\n}(PdfField));\nexport { PdfButtonField };\n/**\n * `PdfCheckBoxField` class represents the check box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new check box field\n * let field: PdfCheckBoxField = new PdfCheckBoxField('CheckBox1', {x: 100, y: 40, width: 20, height: 20}, page);\n * // Sets the checked flag as true.\n * field.checked = true;\n * // Sets the tool tip value\n * field.toolTip = 'Checked';\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCheckBoxField = /** @class */ (function (_super) {\n    __extends(PdfCheckBoxField, _super);\n    function PdfCheckBoxField(name, bounds, page) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing check box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfCheckBoxField} Check box field.\n     */\n    PdfCheckBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfCheckBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        else {\n            var item = PdfStateItem._load(dictionary, crossReference, field);\n            item._isLoaded = true;\n            item._ref = reference;\n            field._parsedItems.set(0, item);\n        }\n        return field;\n    };\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfStateItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the check box field\n     * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n     * // Gets the first list item.\n     * let item: PdfStateItem = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCheckBoxField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfStateItem._load(dictionary, this._crossReference, this);\n                    item._isLoaded = true;\n                    item._ref = ref;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    Object.defineProperty(PdfCheckBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not.\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: Boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._kidsCount > 0) ? this.itemAt(this._defaultIndex).checked : _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag indicating whether the field is checked or not.\n         *\n         * @param {boolean} value Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the flag indicating whether the field is checked or not.\n         * field.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                if (this._kidsCount > 0) {\n                    this.itemAt(this._defaultIndex).checked = value;\n                }\n                if (value) {\n                    if (this._isLoaded) {\n                        var entry = _getItemValue((this._kidsCount > 0) ?\n                            this.itemAt(this._defaultIndex)._dictionary : this._dictionary);\n                        this._dictionary.update('V', _PdfName.get(entry));\n                        this._dictionary.update('AS', _PdfName.get(entry));\n                    }\n                    else {\n                        this._dictionary.update('V', _PdfName.get('Yes'));\n                        this._dictionary.update('AS', _PdfName.get('Yes'));\n                    }\n                }\n                else {\n                    if (this._dictionary.has('V')) {\n                        delete this._dictionary._map.V;\n                    }\n                    if (this._dictionary.has('AS')) {\n                        delete this._dictionary._map.AS;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a check box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the text alignment from check box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a check box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the check box field at index 0\n         * let checkBox1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * checkBox1.backColor = [255, 0, 0];\n         * // Access the check box field at index 1\n         * let checkBox2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * checkBox2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(true);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n            if (this._isLoaded) {\n                this._setAppearance = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCheckBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._createItem(bounds);\n    };\n    PdfCheckBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfStateItem();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget.style = PdfCheckBoxStyle.check;\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        this._addToKid(widget);\n    };\n    PdfCheckBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (this._isLoaded) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item) {\n                        if (!this._checkFieldFlag(item._dictionary)) {\n                            if (isFlatten) {\n                                var template = void 0;\n                                var state = item.checked ?\n                                    _PdfCheckFieldState.checked :\n                                    _PdfCheckFieldState.unchecked;\n                                if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                    template = this._createAppearance(item, state);\n                                }\n                                else {\n                                    template = _getStateTemplate(state, item);\n                                }\n                                this._drawTemplate(template, item._getPage(), item.bounds);\n                            }\n                            else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                                item._postProcess(item.checked ? 'Yes' : 'Off');\n                                this._drawAppearance(item);\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.checked ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                if (item) {\n                    var state = item.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                    item._postProcess(item.checked ? 'Yes' : 'Off');\n                    if (isFlatten) {\n                        var template = this._createAppearance(item, state);\n                        this._drawTemplate(template, item._getPage(), item.bounds);\n                    }\n                    else {\n                        this._drawAppearance(item);\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfCheckBoxField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        this._drawCheckBox(graphics, parameter, _styleToString(widget._style), state);\n        return template;\n    };\n    PdfCheckBoxField.prototype._drawAppearance = function (item) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, 'Yes', 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, 'Yes', 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        normalDictionary.update('Yes', normalCheckedReference);\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        pressedDictionary.update('Yes', pressCheckedReference);\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfCheckBoxField;\n}(PdfField));\nexport { PdfCheckBoxField };\n/**\n * `PdfRadioButtonListField` class represents the radio button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListField = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListField, _super);\n    function PdfRadioButtonListField(page, name) {\n        var _this = _super.call(this) || this;\n        _this._selectedIndex = -1;\n        if (page && name) {\n            _this._initialize(page, name);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing radio button list field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfRadioButtonListField} Radio button list field.\n     */\n    PdfRadioButtonListField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfRadioButtonListField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not (Read only).\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var check = false;\n            if (this._kidsCount > 0) {\n                check = this.itemAt(this._defaultIndex).checked;\n            }\n            return check;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index.\n         *\n         * @returns {number} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the selected index.\n         * let index: number = field.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && this._selectedIndex === -1) {\n                this._selectedIndex = this._obtainSelectedIndex();\n            }\n            return this._selectedIndex;\n        },\n        /**\n         * Sets the selected item index.\n         *\n         * @param {number} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Create and add first item\n         * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n         * // Create and add second item\n         * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n         * field.add(second);\n         * // Sets selected index of the radio button list field\n         * field.selectedIndex = 0;\n         * // Add the field into PDF form\n         * form.add(field);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.selectedIndex !== value) {\n                this._selectedIndex = value;\n                for (var i = 0; i < this._kidsCount; i++) {\n                    var item = this.itemAt(i);\n                    if (i === value) {\n                        item._dictionary.update('AS', _PdfName.get(item.value));\n                        var name_5 = _PdfName.get(item.value);\n                        this._dictionary.update('V', name_5);\n                        this._dictionary.update('DV', name_5);\n                    }\n                    else {\n                        item._dictionary.update('AS', _PdfName.get('Off'));\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(!this._isLoaded);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfRadioButtonListItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the radio button list field\n     * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n     * // Gets the first list item.\n     * let item: PdfRadioButtonListField = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfRadioButtonListItem._load(dictionary, this._crossReference, this);\n                    item._ref = ref;\n                    item._index = index;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    PdfRadioButtonListField.prototype.add = function (value, bounds) {\n        if (value instanceof PdfRadioButtonListItem) {\n            value._field = this;\n            value._dictionary.update('Parent', this._ref);\n            value._setField(this);\n            return this._kidsCount;\n        }\n        else {\n            return new PdfRadioButtonListItem(value, bounds, this);\n        }\n    };\n    /**\n     * Remove the radio button list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            var page = item._getPage();\n            if (page) {\n                page._removeAnnotation(item._ref);\n            }\n            this._kids.splice(index, 1);\n            this._dictionary.set('Kids', this._kids);\n            this._dictionary._updated = true;\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_2 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_2.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_2.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_2;\n            }\n            if (this._dictionary.has('Opt')) {\n                var options = this._dictionary.getArray('Opt');\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified radio button list field item.\n     *\n     * @param {PdfRadioButtonListItem} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._initialize = function (page, name) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._fieldFlags |= _FieldFlag.radio;\n    };\n    PdfRadioButtonListField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    if (options[Number.parseInt(i.toString(), 10)]) {\n                        this.itemAt(i)._optionValue = options[Number.parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._obtainSelectedIndex = function () {\n        var index = -1;\n        for (var i = 0; i < this._kidsCount; ++i) {\n            var item = this.itemAt(i);\n            if (item) {\n                var checkName = _getInheritableProperty(item._dictionary, 'V', false, true, 'Parent');\n                if (checkName && item._dictionary.has('AS')) {\n                    var asName = item._dictionary.get('AS');\n                    if (asName && asName.name.toLowerCase() !== 'off') {\n                        if (checkName instanceof _PdfName && checkName.name.toLowerCase() !== 'off') {\n                            if (asName.name === checkName.name || item._optionValue === checkName.name) {\n                                index = i;\n                                break;\n                            }\n                        }\n                        else if (typeof checkName === 'string' && checkName.toLowerCase() !== 'off') {\n                            if (asName.name === checkName || item._optionValue === checkName) {\n                                index = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfRadioButtonListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (this._isLoaded) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        if (isFlatten) {\n                            var template = void 0;\n                            var state = this.selectedIndex === i ?\n                                _PdfCheckFieldState.checked :\n                                _PdfCheckFieldState.unchecked;\n                            if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                template = this._createAppearance(item, state);\n                            }\n                            else {\n                                template = _getStateTemplate(state, item);\n                            }\n                            this._drawTemplate(template, item._getPage(), item.bounds);\n                        }\n                        else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                            item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                            this._drawAppearance(item);\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.selectedIndex !== -1 ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                var state = this.selectedIndex === i ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                item._dictionary.update('AS', _PdfName.get(this.selectedIndex === i ? item.value : 'Off'));\n                if (isFlatten) {\n                    var template = this._createAppearance(item, state);\n                    this._drawTemplate(template, item._getPage(), item.bounds);\n                }\n                else {\n                    item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                    this._drawAppearance(item);\n                }\n                item._dictionary._updated = !isFlatten;\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfRadioButtonListField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        this._drawRadioButton(graphics, parameter, _styleToString(widget.style), state);\n        return template;\n    };\n    PdfRadioButtonListField.prototype._drawAppearance = function (item) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, item.value, 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, item.value, 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        normalDictionary.update(item.value, normalCheckedReference);\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        pressedDictionary.update(item.value, pressCheckedReference);\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfRadioButtonListField;\n}(PdfField));\nexport { PdfRadioButtonListField };\n/**\n * Represents the base class for list box and combo box fields.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Access the combo box field\n * let comboBoxField: PdfListField = form.fieldAt(0) as PdfListField;\n * // Gets the count of the loaded combo box field items.\n * let comboItemsCount: number = comboBoxField.itemsCount;\n * // Access the list box field\n * let listBoxField: PdfListField = form.fieldAt(1) as PdfListField;\n * // Gets the count of the loaded list box field items.\n * let ListItemsCount: number = listBoxField.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListField = /** @class */ (function (_super) {\n    __extends(PdfListField, _super);\n    function PdfListField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfListField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the count of the loaded combo box field items.\n         * let comboItemsCount: number = comboBoxField.itemsCount;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the count of the loaded list box field items.\n         * let ListItemsCount: number = listBoxField.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._options.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the bounds of combo box field.\n         * let comboBoxBounds: {x: number, y: number, width: number, height: number} = comboBoxField.bounds;\n         * // Access the combo box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the bounds of list box field.\n         * let listBoxBounds: {x: number, y: number, width: number, height: number} = listBoxField.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (value) {\n                return value;\n            }\n            else if (this._bounds) {\n                return this._bounds;\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the bounds of combo box field.\n         * comboBoxField.bounds = {x: 10, y: 10, width: 100, height: 30};\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Sets the bounds of list box field.\n         * listBoxField.bounds = {x: 10, y: 50, width: 100, height: 30};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                if (widget) {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n                else {\n                    this._bounds = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index or indexes.\n         *\n         * @returns {number | number[]} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxfield: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the selected item index or indexes from combo box field.\n         * let comboBoxIndex: number = comboBoxfield.selectedIndex;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the selected item index or indexes from list box field.\n         * let listBoxIndex: number = listBoxField.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = this._dictionary.get('I');\n            if (typeof value === 'undefined') {\n                return [];\n            }\n            else {\n                if (value.length === 1) {\n                    return value[0];\n                }\n                else {\n                    return value;\n                }\n            }\n        },\n        /**\n         * Sets the selected item index or indexes.\n         *\n         * @param {number | number[]} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            var length = this._options.length;\n            if (typeof value === 'number') {\n                this._checkIndex(value, length);\n                this._dictionary.update('I', [value]);\n                this._dictionary.update('V', [this._options[Number.parseInt(value.toString(), 10)][0]]);\n            }\n            else {\n                var values_1 = [];\n                value.forEach(function (entry) {\n                    _this._checkIndex(entry, length);\n                    values_1.push(_this._options[Number.parseInt(entry.toString(), 10)][0]);\n                });\n                this._dictionary.update('I', value);\n                this._dictionary.update('V', values_1);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedValue\", {\n        /**\n         * Gets the selected item value or values.\n         *\n         * @returns {string | string[]} Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Gets the selected item value or values from list box field.\n         * if (listBoxField.multiSelect) {\n         *     let listBoxValues: string[]; = listBoxField.selectedValue;\n         * } else {\n         *    let listBoxValues: string = listBoxField.selectedValue;\n         * }\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var _this = this;\n            var values = [];\n            if (this._dictionary.has('V')) {\n                var value = this._dictionary.getArray('V'); // eslint-disable-line\n                if (typeof value !== 'undefined') {\n                    if (Array.isArray(value)) {\n                        value.forEach(function (element) {\n                            values.push(element);\n                        });\n                    }\n                    else if (typeof value === 'string') {\n                        values.push(value);\n                    }\n                }\n            }\n            if (values.length === 0 && this._dictionary.has('I')) {\n                var value = this._dictionary.get('I');\n                if (value && value.length > 0) {\n                    value.forEach(function (index) {\n                        values.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                    });\n                }\n            }\n            if (values.length === 1) {\n                return values[0];\n            }\n            else {\n                return values;\n            }\n        },\n        /**\n         * Sets the selected item value or values.\n         *\n         * @param {string | string[]} value Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Sets the selected values\n         * listField.selectedValue = ['English', 'German'];\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected value\n         * comboField.selectedValue = ['French'];\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            if (typeof value === 'string') {\n                var index = this._tryGetIndex(value);\n                if (index !== -1) {\n                    this._dictionary.update('I', [index]);\n                    this._dictionary.update('V', [value]);\n                }\n            }\n            else {\n                var values_2 = [];\n                var indices_1 = [];\n                value.forEach(function (entry) {\n                    var index = _this._tryGetIndex(entry);\n                    if (index !== -1) {\n                        indices_1.push(index);\n                        values_2.push(entry);\n                    }\n                });\n                if (values_2.length > 0) {\n                    this._dictionary.update('I', indices_1);\n                    this._dictionary.update('V', values_2);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"multiSelect\", {\n        /**\n         * Gets the flag indicates whether the list field allows multiple selections.\n         *\n         * @returns {boolean} Value indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box allows multiple selections.\n         * let comboBoxFlag: Boolean = comboBoxField.multiSelect;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box allows multiple selections.\n         * let listBoxFlag: boolean = listBoxField.multiSelect;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.multiSelect) !== 0;\n            }\n            else {\n                return this._multiSelect;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field allows multiple selections.\n         *\n         * @param {boolean} value Indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.multiSelect !== value) {\n                this._multiSelect = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.multiSelect;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.multiSelect;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"editable\", {\n        /**\n         * Gets the flag indicates whether the list field is editable.\n         *\n         * @returns {boolean} Value indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box is editable.\n         * let comboBoxFlag: Boolean = comboBoxField.editable;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box is editable.\n         * let listBoxFlag: boolean = listBoxField.editable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.edit) !== 0;\n            }\n            else {\n                return this._editable;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field is editable.\n         *\n         * @param {boolean} value Indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box is editable.\n         * listField.editable = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box is editable.\n         * comboField.editable = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._editable !== value) {\n                this._editable = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.edit;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.edit;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a combo box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the text alignment from combo box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a combo box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the list field at index 0\n         * let list1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * list1.backColor = [255, 0, 0];\n         * // Access the list field at index 1\n         * let list2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * list2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"_options\", {\n        get: function () {\n            if (!this._optionArray) {\n                if (this._dictionary.has('Opt')) {\n                    this._optionArray = this._dictionary.getArray('Opt');\n                }\n                else {\n                    this._optionArray = [];\n                    this._dictionary.update('Opt', this._optionArray);\n                }\n            }\n            return this._optionArray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfListFieldItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBox: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Gets the first list item.\n     * let listBoxItem: PdfListFieldItem = listBox.itemAt(0);\n     * // Access the combo box field\n     * let comboBox: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Gets the first list item.\n     * let comboBoxItem: PdfListFieldItem = comboBox.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.itemAt = function (index) {\n        var item;\n        if (index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        else {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else if (this._kidsCount > 0 && this._kids && this._kids.length > 0) {\n                var dictionary = void 0;\n                var reference = void 0;\n                if (this._kidsCount === 1) {\n                    reference = this._kids[0];\n                }\n                else {\n                    reference = this._kids[Number.parseInt(index.toString(), 10)];\n                }\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Add list item.\n     *\n     * @param {PdfListFieldItem} item Item to add.\n     * @returns {number} Index of the field item.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Create a new list box field\n     * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n     * // Add list items to the field.\n     * listField.addItem(new PdfListFieldItem('English', 'English'));\n     * listField.addItem(new PdfListFieldItem('French', 'French'));\n     * listField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * listField.selectedIndex = 2;\n     * // Sets the flag indicates whether the list box allows multiple selections.\n     * listField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(listField);\n     * // Create a new combo box field\n     * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n     * // Add list items to the field.\n     * comboField.addItem(new PdfListFieldItem('English', 'English'));\n     * comboField.addItem(new PdfListFieldItem('French', 'French'));\n     * comboField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * comboField.selectedIndex = 2;\n     * // Sets the flag indicates whether the combo box allows multiple selections.\n     * comboField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(comboField);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.addItem = function (item) {\n        this._addToOptions(item, this);\n        return this._listValues.length - 1;\n    };\n    /**\n     * Remove the list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItemAt(1);\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_3 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_3.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_3.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_3;\n            }\n            if (this._dictionary.has('Opt')) {\n                var options = this._options;\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                    this._optionArray = options;\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the list item.\n     *\n     * @param {PdfListFieldItem} item Item to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItem(listBoxField.itemAt(1));\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItem(comboBoxField.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItem = function (item) {\n        if (item && item.text) {\n            var index = void 0;\n            for (var i = 0; i < this.itemsCount; i++) {\n                var fieldItem = this.itemAt(i);\n                if (fieldItem && item === fieldItem && fieldItem.text === item.text) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfListField.prototype._initialize = function (page, name, bounds) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Ch'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._listValues = [];\n        this._kids = [];\n        this.bounds = bounds;\n        this._addEmptyWidget();\n    };\n    PdfListField.prototype._obtainFont = function (item) {\n        var fontFamily = '';\n        var fontSize = 1;\n        if (item && (item._dictionary.has('DS') || item._dictionary.has('DA'))) {\n            if (item._dictionary.has('DS')) {\n                var collection = item._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') === -1 && collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_6 = entry[1];\n                        var split = name_6.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 2);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = item._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                    var height = 0.0;\n                    if (fontSize === 0) {\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, height);\n                        if (font !== null) {\n                            height = this._getFontHeight(font._fontFamily);\n                            if (Number.isNaN(height) || height === 0) {\n                                height = 12;\n                            }\n                            font._size = height;\n                            fontSize = height;\n                        }\n                    }\n                }\n            }\n            fontFamily = fontFamily.trim();\n            switch (fontFamily) {\n                case 'Helv':\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Courier':\n                case 'Cour':\n                    this._font = new PdfStandardFont(PdfFontFamily.courier, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Symb':\n                    this._font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'TiRo':\n                    this._font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'ZaDb':\n                    this._font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, PdfFontStyle.regular);\n                    break;\n                default:\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n            }\n        }\n        return this._font;\n    };\n    PdfListField.prototype._obtainSelectedValue = function () {\n        var _this = this;\n        var result = [];\n        if (this._dictionary.has('V')) {\n            var primitive = this._dictionary.get('V'); // eslint-disable-line\n            var array = this._dictionary.getArray('V'); // eslint-disable-line\n            if (primitive !== null && typeof primitive !== 'undefined') {\n                if (typeof primitive === 'string') {\n                    result.push(primitive);\n                }\n                else if (Array.isArray(primitive)) {\n                    array.forEach(function (element) {\n                        result.push(element);\n                    });\n                }\n            }\n        }\n        else {\n            var selectedIndexes = this._dictionary.get('I');\n            if (selectedIndexes !== null &&\n                typeof selectedIndexes !== 'undefined' &&\n                selectedIndexes.length > 0 &&\n                selectedIndexes[0] > -1 &&\n                this._options &&\n                this._options.length > 0) {\n                selectedIndexes.forEach(function (index) {\n                    result.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                });\n            }\n        }\n        return result;\n    };\n    PdfListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._kids && this._kids.length > 0) {\n                if (count > 1) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item && !this._checkFieldFlag(item._dictionary)) {\n                            var template = this._createAppearance(item);\n                            if (isFlatten) {\n                                var page = item._getPage();\n                                if (page) {\n                                    this._drawTemplate(template, page, item.bounds);\n                                }\n                            }\n                            else {\n                                this._addAppearance(item._dictionary, template, 'N');\n                            }\n                            item._dictionary._updated = !isFlatten;\n                        }\n                    }\n                }\n                else {\n                    var item = this.itemAt(0);\n                    var template = this._createAppearance();\n                    if (isFlatten) {\n                        var page = this.page;\n                        if (page) {\n                            this._drawTemplate(template, page, this.bounds);\n                        }\n                    }\n                    else {\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n            else if (this._dictionary) {\n                var template = this._createAppearance();\n                if (isFlatten) {\n                    var page = this.page;\n                    if (page) {\n                        this._drawTemplate(template, page, this.bounds);\n                    }\n                }\n                else {\n                    this._addAppearance(this._dictionary, template, 'N');\n                }\n            }\n            this._dictionary._updated = !isFlatten;\n        }\n    };\n    PdfListField.prototype._tryGetIndex = function (value) {\n        var index = -1;\n        if (this._options && this._options.length > 0) {\n            for (var i = 0; i < this._options.length; i++) {\n                if (value === this._options[Number.parseInt(i.toString(), 10)][0]) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    PdfListField.prototype._addEmptyWidget = function () {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, this.bounds, this);\n        this._addToKid(widget);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n    };\n    return PdfListField;\n}(PdfField));\nexport { PdfListField };\n/**\n * `PdfComboBoxField` class represents the combo box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new combo box field\n * let field: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the combo box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComboBoxField = /** @class */ (function (_super) {\n    __extends(PdfComboBoxField, _super);\n    function PdfComboBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n            _this._fieldFlags |= _FieldFlag.combo;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfComboBoxField.prototype, \"_isAutoFontSize\", {\n        /**\n         * Gets the boolean flag indicates whether the combo box field is auto size.\n         *\n         * @private\n         * @returns {boolean} Returns the boolean value to check auto size.\n         */\n        get: function () {\n            var isAutoFontSize = false;\n            if (this._isLoaded && this._form) {\n                var acroForm = this._form._dictionary;\n                if (acroForm && acroForm.has('DA')) {\n                    var fontString = acroForm.get('DA');\n                    if (fontString) {\n                        var defaultAppearance = new _PdfDefaultAppearance(fontString);\n                        if (defaultAppearance.fontSize === 0) {\n                            if (this._kids && this._kids.length > 0) {\n                                var fontSize = false;\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance && defaultAppearance.fontSize > 0) {\n                                            fontSize = true;\n                                        }\n                                    }\n                                }\n                                if (!fontSize) {\n                                    for (var i = 0; i < this._kids.length; i++) {\n                                        var dictionary = void 0;\n                                        var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                                        if (reference && reference instanceof _PdfReference) {\n                                            dictionary = this._crossReference._fetch(reference);\n                                        }\n                                        if (dictionary) {\n                                            if (dictionary.has('DA')) {\n                                                fontString = dictionary.get('DA');\n                                                var height = 0;\n                                                if (fontString) {\n                                                    defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                                    if (defaultAppearance) {\n                                                        height = defaultAppearance.fontSize;\n                                                    }\n                                                }\n                                                if (height === 0) {\n                                                    isAutoFontSize = true;\n                                                }\n                                            }\n                                            else {\n                                                isAutoFontSize = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    var height = 0;\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance) {\n                                            height = defaultAppearance.fontSize;\n                                        }\n                                    }\n                                    if (height === 0) {\n                                        isAutoFontSize = true;\n                                    }\n                                }\n                                else {\n                                    isAutoFontSize = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isAutoFontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Parse an existing combo box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfComboBoxField} Combo box field.\n     */\n    PdfComboBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfComboBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        var options = field._dictionary.getArray('Opt');\n        if (options !== null && typeof options !== 'undefined') {\n            field._listValues = new Array(options.length);\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfComboBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    var text = options[Number.parseInt(i.toString(), 10)][1];\n                    if (text) {\n                        this.itemAt(i)._text = text ? text : '';\n                    }\n                }\n            }\n        }\n    };\n    PdfComboBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            if (item.borderColor) {\n                parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = item.rotate;\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (bounds) {\n                if (this._isLoaded &&\n                    this.page &&\n                    typeof this.page.rotation !== 'undefined' &&\n                    this.page.rotation !== PdfRotationAngle.angle0) {\n                    parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n                }\n                else {\n                    parameter.bounds = [0, 0, bounds.width, bounds.height];\n                }\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            if (this.borderColor) {\n                parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        if (parameter.bounds === null || typeof parameter.bounds === 'undefined') {\n            parameter.bounds = [0, 0, 0, 0];\n        }\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = void 0;\n            if (item) {\n                font = this._obtainFont(item);\n            }\n            if (typeof font === 'undefined' || font === null) {\n                font = this._appearanceFont;\n            }\n            this._drawComboBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = new PdfStandardFont(PdfFontFamily.timesRoman, this._getFontHeight(PdfFontFamily.helvetica));\n            }\n            this._drawComboBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfComboBoxField.prototype._drawComboBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var selectedIndexes = this._dictionary.get('I');\n        var i = -1;\n        if (selectedIndexes && selectedIndexes.length > 0) {\n            i = selectedIndexes[0];\n        }\n        if (i >= 0 && i < options.length) {\n            var item = options[Number.parseInt(i.toString(), 10)]; // eslint-disable-line \n            var location_1 = [0, 0];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_1[0] = 2 * doubleBorderWidth;\n                location_1[1] = 2 * borderWidth;\n            }\n            else {\n                location_1[0] = doubleBorderWidth + defaultPadding;\n                location_1[1] = 1 * borderWidth + (defaultPadding - 1);\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            if (parameter.rotationAngle === 0) {\n                var x = rect[0] + borderWidth;\n                if (padding) {\n                    x += borderWidth;\n                    width -= doubleBorderWidth;\n                }\n                brush = new PdfBrush([153, 193, 218]);\n                graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                brush = new PdfBrush([0, 0, 0]);\n            }\n            var value = void 0;\n            if (item && Array.isArray(item)) {\n                value = item[1] ? item[1] : item[0];\n            }\n            else {\n                value = item;\n            }\n            if (value) {\n                var itemTextBound = [location_1[0], location_1[1], width - location_1[0], rect[3]];\n                if (parameter.rotationAngle > 0) {\n                    var state = graphics.save();\n                    if (parameter.rotationAngle === 90) {\n                        graphics.translateTransform(0, graphics._size[1]);\n                        graphics.rotateTransform(-90);\n                        var x_1 = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x_1, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        graphics.translateTransform(graphics._size[0], 0);\n                        graphics.rotateTransform(-270);\n                        var x_2 = rectangle[1];\n                        var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        rectangle = [x_2, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                        var x_3 = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x_3, y, rectangle[2], rectangle[3]];\n                    }\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                    graphics.restore(state);\n                }\n                else {\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                }\n            }\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfComboBoxField.prototype._getFontHeight = function (fontFamily) {\n        var values = this._dictionary.get('I');\n        var s;\n        var itemFont;\n        var format;\n        var options;\n        var bounds;\n        var borderWidth = this.border.width;\n        if (this._isLoaded) {\n            itemFont = new PdfStandardFont(fontFamily, 12);\n            format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            options = this._dictionary.getArray('Opt');\n            bounds = this.bounds;\n            var widths_1 = [];\n            if (values && values.length > 0) {\n                values.forEach(function (entry) {\n                    widths_1.push(itemFont.measureString(options[Number.parseInt(entry.toString(), 10)][1], [0, 0], format, 0, 0)[0]);\n                });\n            }\n            else if (options.length > 0) {\n                var max = itemFont.measureString(options[0][1], [0, 0], format, 0, 0)[0];\n                for (var i = 1; i < options.length; ++i) {\n                    var width = itemFont.measureString(options[Number.parseInt(i.toString(), 10)][1], [0, 0], format, 0, 0)[0];\n                    max = Math.max(max, width);\n                    widths_1.push(max);\n                }\n            }\n            s = (widths_1.length > 0) ? ((12 * (bounds.width - 4 * borderWidth)) / ((widths_1.sort())[widths_1.length - 1])) : 12;\n        }\n        else {\n            s = 0;\n            if (values && values.length > 0) {\n                itemFont = new PdfStandardFont(fontFamily, 12);\n                format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                options = this._dictionary.getArray('Opt');\n                var width = itemFont.measureString(options[values[0]][1], [0, 0], format, 0, 0)[0];\n                bounds = this.bounds;\n                if (width) {\n                    s = (12 * (bounds.width - 4 * borderWidth)) / width;\n                }\n                else {\n                    s = 12;\n                }\n            }\n            else {\n                return s;\n            }\n        }\n        var fontSize = 0;\n        if (values && values.length > 0) {\n            if (s !== 12) {\n                itemFont = new PdfStandardFont(fontFamily, s);\n                var text = options[values[0]][1];\n                var textSize = itemFont.measureString(text, [0, 0], format, 0, 0);\n                if (textSize[0] > bounds.width || textSize[1] > bounds.height) {\n                    var width = bounds.width - 4 * borderWidth;\n                    var h = bounds.height - 4 * borderWidth;\n                    var min = 0.248;\n                    for (var i = 1; i <= bounds.height; i++) {\n                        itemFont._size = i;\n                        var size = itemFont.measureString(text, [0, 0], format, 0, 0);\n                        if (size[0] > bounds.width || size[1] > h) {\n                            fontSize = i;\n                            do {\n                                fontSize = fontSize - 0.001;\n                                itemFont._size = fontSize;\n                                var textWidth = itemFont.getLineWidth(text, format);\n                                if (fontSize < min) {\n                                    itemFont._size = min;\n                                    break;\n                                }\n                                size = itemFont.measureString(text, [0, 0], format, 0, 0);\n                                if (textWidth < width && size[1] < h) {\n                                    itemFont._size = fontSize;\n                                    break;\n                                }\n                            } while (fontSize > min);\n                            s = fontSize;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else if (s > 12) {\n            s = 12;\n        }\n        return s;\n    };\n    return PdfComboBoxField;\n}(PdfListField));\nexport { PdfComboBoxField };\n/**\n * `PdfListBoxField` class represents the list box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListBoxField = /** @class */ (function (_super) {\n    __extends(PdfListBoxField, _super);\n    function PdfListBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing list box field of the PDF document.\n     *\n     * @private\n     * @param {number} form maximum length.\n     * @param {_PdfDictionary} dictionary maximum length.\n     * @param {_PdfCrossReference} crossReference maximum length.\n     * @param {_PdfReference} reference maximum length.\n     * @returns {PdfListBoxField} List box field.\n     */\n    PdfListBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfListBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        var options = field._dictionary.getArray('Opt');\n        if (options !== null && typeof options !== 'undefined') {\n            field._listValues = new Array(options.length);\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfListBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var index = this._dictionary.get('I');\n                for (var i = 0; i < options.length; i++) {\n                    if (typeof index !== 'undefined' && index !== null) {\n                        this._listValues[Number.parseInt(i.toString(), 10)] = options[Number.parseInt(i.toString(), 10)][1];\n                        if (i === index) {\n                            this.itemAt(i)._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                            this._selectedIndex = i;\n                        }\n                        else {\n                            this.itemAt(i)._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                        }\n                    }\n                    else {\n                        this.itemAt(i)._text = '';\n                    }\n                }\n            }\n        }\n    };\n    PdfListBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            if (item.borderColor) {\n                parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = item.rotate;\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (this._isLoaded &&\n                this.page &&\n                typeof this.page.rotation !== 'undefined' &&\n                this.page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            if (this.borderColor) {\n                parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = this._obtainFont(item);\n            if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n                font = this._appearanceFont;\n            }\n            this._drawListBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = this._defaultItemFont;\n            }\n            this._drawListBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfListBoxField.prototype._drawListBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var _loop_1 = function (index) {\n            var item = options[Number.parseInt(index.toString(), 10)];\n            var location_2 = [];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_2.push(2 * doubleBorderWidth);\n                location_2.push((index + 2) * borderWidth + font._metrics._getHeight() * index);\n            }\n            else {\n                location_2.push(doubleBorderWidth + defaultPadding);\n                location_2.push((index + 1) * borderWidth + font._metrics._getHeight() * index + (defaultPadding - 1));\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            var selected = false;\n            var selectedIndexes = this_1._dictionary.get('I');\n            if (selectedIndexes !== null && typeof selectedIndexes !== 'undefined' && selectedIndexes.length > 0) {\n                selectedIndexes.forEach(function (selectedIndex) {\n                    selected = selected || (selectedIndex === index);\n                });\n            }\n            if (parameter.rotationAngle === 0) {\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n            }\n            var value = item[1] ? item[1] : item[0];\n            var itemTextBound = [location_2[0], location_2[1], width - location_2[0], font._metrics._getHeight()];\n            if (parameter.rotationAngle > 0) {\n                var state = graphics.save();\n                if (parameter.rotationAngle === 90) {\n                    graphics.translateTransform(0, graphics._size[1]);\n                    graphics.rotateTransform(-90);\n                    var x = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 270) {\n                    graphics.translateTransform(graphics._size[0], 0);\n                    graphics.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                    var x = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                graphics.restore(state);\n            }\n            else {\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n            }\n        };\n        var this_1 = this;\n        for (var index = 0; index < options.length; ++index) {\n            _loop_1(index);\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfListBoxField.prototype._getFontHeight = function (fontFamily) {\n        var itemFont = new PdfStandardFont(fontFamily, 12, PdfFontStyle.regular);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var s = 0;\n        if (this._listValues.length > 0) {\n            var max = itemFont.measureString(this._listValues[0], [0, 0], format, 0, 0)[0];\n            for (var i = 1; i < this._listValues.length; ++i) {\n                var value = itemFont.measureString(this._listValues[Number.parseInt(i.toString(), 10)], [0, 0], format, 0, 0)[0];\n                max = (max > value) ? max : value;\n            }\n            s = ((12 * (this.bounds.width - 4 * this.border.width)) / max);\n            s = (s > 12) ? 12 : s;\n        }\n        return s;\n    };\n    return PdfListBoxField;\n}(PdfListField));\nexport { PdfListBoxField };\n/**\n * `PdfSignatureField` class represents the signature field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new signature field\n * let field: PdfSignatureField = new PdfSignatureField(page, 'Signature', {x: 10, y: 10, width: 100, height: 50});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSignatureField = /** @class */ (function (_super) {\n    __extends(PdfSignatureField, _super);\n    function PdfSignatureField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._isSigned = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfSignatureField.prototype, \"isSigned\", {\n        /**\n         * Gets the flag to indicate whether the field is signed or not.\n         *\n         * @returns {boolean} Returns true if the field is signed; otherwise, false.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the loaded signature field\n         * let field: PdfSignatureField = document.form.fieldAt(0) as PdfSignatureField;\n         * // Get the signed status of the field\n         * let isSigned: boolean = field.isSigned;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._isSigned) {\n                this._checkSigned();\n            }\n            return this._isSigned;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSignatureField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the signature field at index 0\n         * let field1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field1.backColor = [255, 0, 0];\n         * // Access the signature field at index 1\n         * let field2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * field2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSignatureField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfSignatureField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfSignatureField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Sig'));\n        this._dictionary.update('T', name);\n        this._defaultIndex = 0;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfSignatureField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', this._fontName + \" 8 Tf 0 0 0 rg\");\n        this._addToKid(widget);\n    };\n    PdfSignatureField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var needAppearance = this._setAppearance || this._form._setAppearance;\n        if (isFlatten || needAppearance) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary && (needAppearance || (isFlatten && !item._dictionary.has('AP')))) {\n                        var template = this._createAppearance(item, isFlatten);\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                }\n            }\n        }\n        if (isFlatten) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                var firstItemTemplate = void 0;\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary) {\n                        var page = item._getPage();\n                        if (page) {\n                            if (!firstItemTemplate && i === 0) {\n                                firstItemTemplate = this._getItemTemplate(item._dictionary);\n                            }\n                            this._flattenSignature(item._dictionary, page, item.bounds, firstItemTemplate);\n                        }\n                    }\n                }\n            }\n            else {\n                this._flattenSignature(this._dictionary, this.page, this.bounds);\n            }\n        }\n    };\n    PdfSignatureField.prototype._createAppearance = function (widget, isFlatten) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (isFlatten && backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        graphics.save();\n        graphics._initializeCoordinates();\n        this._drawRectangularControl(graphics, parameter);\n        graphics.restore();\n        return template;\n    };\n    PdfSignatureField.prototype._flattenSignature = function (dictionary, page, bounds, signatureTemplate) {\n        var template;\n        if (dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference && appearanceStream) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    if (signatureTemplate) {\n                        template = signatureTemplate;\n                    }\n                    else {\n                        template = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (template && page) {\n                        var graphics = page.graphics;\n                        var state = graphics.save();\n                        if (page.rotation !== PdfRotationAngle.angle0) {\n                            graphics.drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n                        }\n                        else {\n                            graphics.drawTemplate(template, bounds);\n                        }\n                        graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else if (signatureTemplate && page) {\n            template = signatureTemplate;\n            var graphics = page.graphics;\n            var state = graphics.save();\n            if (page.rotation !== PdfRotationAngle.angle0) {\n                graphics.drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n            }\n            else {\n                graphics.drawTemplate(template, bounds);\n            }\n            graphics.restore(state);\n        }\n    };\n    PdfSignatureField.prototype._calculateTemplateBounds = function (bounds, page, template, graphics) {\n        var x = bounds.x;\n        var y = bounds.y;\n        if (page) {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                x = bounds.x;\n                y = -(page._size[1] - bounds.y - bounds.height);\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                x = -(page._size[0] - (bounds.x + template._size[0]));\n                y = -(page._size[1] - bounds.y - template._size[1]);\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                x = -(page._size[0] - bounds.x - bounds.width);\n                y = bounds.y;\n            }\n        }\n        return { x: x, y: y, width: bounds.width, height: bounds.height };\n    };\n    PdfSignatureField.prototype._obtainGraphicsRotation = function (matrix) {\n        var angle = Math.round(Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]) * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfSignatureField.prototype._getItemTemplate = function (dictionary) {\n        var template;\n        if (dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        return template;\n    };\n    PdfSignatureField.prototype._checkSigned = function () {\n        if (this._dictionary && this._dictionary.has('V')) {\n            var dictionary = this._dictionary.get('V');\n            if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.size > 0) {\n                this._isSigned = true;\n            }\n        }\n    };\n    return PdfSignatureField;\n}(PdfField));\nexport { PdfSignatureField };\nvar _PdfDefaultAppearance = /** @class */ (function () {\n    function _PdfDefaultAppearance(da) {\n        var color;\n        var fontName = '';\n        var fontSize = 0;\n        if (da && typeof da === 'string' && da !== '') {\n            var sliced = da.split(' ');\n            for (var i = 0; i < sliced.length; i++) {\n                switch (sliced[Number.parseInt(i.toString(), 10)]) {\n                    case 'g':\n                        color = [Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'rg':\n                        color = [Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]), Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'k':\n                        color = [Number.parseFloat(sliced[i - 4]), Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]),\n                            Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'Tf':\n                        fontSize = Number.parseFloat(sliced[i - 1]);\n                        fontName = sliced[i - 2].substring(1);\n                        if (fontName.includes('#2C')) {\n                            fontName.replace('#2C', ',');\n                        }\n                        break;\n                }\n            }\n        }\n        this.fontName = fontName;\n        this.fontSize = fontSize;\n        this.color = (typeof color !== 'undefined') ? _parseColor(color) : [0, 0, 0];\n    }\n    _PdfDefaultAppearance.prototype.toString = function () {\n        var color = [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n            Number.parseFloat((this.color[1] / 255).toFixed(3)),\n            Number.parseFloat((this.color[2] / 255).toFixed(3))];\n        return '/' +\n            this.fontName +\n            ' ' +\n            this.fontSize +\n            ' Tf ' +\n            color[0].toString() +\n            ' ' +\n            color[1].toString() +\n            ' ' +\n            color[2].toString() +\n            ' rg';\n    };\n    return _PdfDefaultAppearance;\n}());\nexport { _PdfDefaultAppearance };\n","import { _PdfDictionary } from './../pdf-primitives';\nimport { PdfTemplate } from './../graphics/pdf-template';\n/**\n * `PdfAppearance` class represents the appearance of the annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the appearance of the annotation\n * let appearance: PdfAppearance = annotation.appearance;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * appearance.normal.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAppearance = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfAppearance` class.\n     *\n     * @param {PdfAnnotation} annot - The annotation.\n     * @param {number[]} bounds - The bounds.\n     * @private\n     */\n    function PdfAppearance(annot, bounds) {\n        this._dictionary = new _PdfDictionary();\n        this._annotations = annot;\n        this._crossReference = annot._crossReference;\n        if (typeof bounds !== 'undefined') {\n            this._bounds = bounds;\n        }\n        this._initialize();\n    }\n    Object.defineProperty(PdfAppearance.prototype, \"normal\", {\n        /**\n         * Get the normal appearance of the annotation.\n         *\n         * @returns {PdfTemplate} Returns the normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._templateNormal && this._dictionary.has('AP')) {\n                this._templateNormal = this._dictionary.get('N');\n            }\n            return this._templateNormal;\n        },\n        /**\n         * Set the normal appearance of the annotation.\n         *\n         * @param {PdfTemplate} value The normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Add a new rubber stamp annotation to the page\n         * const annotation2: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 200, 100, 50);\n         * // Set the normal appearance of the annotation\n         * annotation2.appearance.normal = annotation.appearance.normal;\n         * // Add annotation to the page\n         * page.annotations.add(annotation2);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._templateNormal = value;\n                this._dictionary.set('N', this._templateNormal);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAppearance.prototype._initialize = function () {\n        this.normal = new PdfTemplate(this._bounds, this._crossReference);\n    };\n    return PdfAppearance;\n}());\nexport { PdfAppearance };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestination } from './../pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfFormFieldVisibility, _PdfCheckFieldState, PdfAnnotationFlag, PdfBorderStyle, PdfLineCaptionType, PdfLineEndingStyle, PdfLineIntent, PdfRotationAngle, PdfTextAlignment, PdfBorderEffectStyle, PdfMeasurementUnit, _PdfGraphicsUnit, PdfCircleMeasurementType, PdfRubberStampAnnotationIcon, PdfCheckBoxStyle, PdfTextMarkupAnnotationType, PdfPopupIcon, PdfAnnotationState, PdfAnnotationStateModel, PdfAttachmentIcon, PdfAnnotationIntent, _PdfAnnotationType, PdfDestinationMode, PdfBlendMode, PdfDashStyle, PdfLineCap } from './../enumerator';\nimport { _checkField, _removeDuplicateReference, _updateVisibility, _getPageIndex, _checkComment, _checkReview, _mapAnnotationStateModel, _mapAnnotationState, _decode, _setMatrix, _convertToColor, _findPage, _getItemValue, _areNotEqual, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _getUpdatedBounds, _mapBorderStyle, _mapLineEndingStyle, _reverseMapEndingStyle, _toRectangle, _mapBorderEffectStyle, _getStateTemplate, _mapMeasurementUnit, _mapGraphicsUnit, _stringToStyle, _styleToString, _mapMarkupAnnotationType, _reverseMarkupAnnotationType, _reverseMapAnnotationState, _reverseMapAnnotationStateModel, _mapPopupIcon, _mapRubberStampIcon, _mapAttachmentIcon, _mapAnnotationIntent, _reverseMapPdfFontStyle, _fromRectangle, _getNewGuidString, _getFontStyle, _mapFont, _checkInkPoints, _updateBounds } from './../utils';\nimport { PdfField, _PdfDefaultAppearance, PdfListBoxField, PdfComboBoxField } from './../form/field';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { _TextRenderingMode, PdfBrush, PdfPen, _PdfTransformationMatrix, _PdfUnitConvertor } from './../graphics/pdf-graphics';\nimport { _PdfPath } from './../graphics/pdf-path';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _PdfStream } from './../base-stream';\nimport { PdfAppearance } from './pdf-appearance';\nimport { PdfPopupAnnotationCollection } from './annotation-collection';\n/**\n * Represents the base class for annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation() {\n        this._isImported = false;\n        this._isLoaded = false;\n        this._setAppearance = false;\n        this._isExport = false;\n        this._opacity = 1;\n        this._isAllRotation = true;\n        this._flatten = false;\n        this._hasData = false;\n        this._popUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5);\n        this._authorBoldFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5, PdfFontStyle.bold);\n        this._lineCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n        this._isTransparentColor = false;\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"author\", {\n        /**\n         * Gets the author of the annotation.\n         *\n         * @returns {string} Author.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the author of the annotation.\n         * let author: string = annotation.author;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._author === 'undefined' && this._dictionary.has('Author')) {\n                var author = this._dictionary.get('Author');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            if (typeof this._author === 'undefined' && this._dictionary.has('T')) {\n                var author = this._dictionary.get('T');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            return this._author;\n        },\n        /**\n         * Sets the author of the annotation.\n         *\n         * @param {string} value Author.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the author of the annotation.\n         * annotation.author = ‘Syncfusion’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && typeof value === 'string' && value !== this.author) {\n                var hasKey = false;\n                if (this._dictionary.has('T')) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (this._dictionary.has('Author')) {\n                    this._dictionary.update('Author', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (!hasKey) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                }\n            }\n            if (!this._isLoaded && typeof value === 'string') {\n                this._dictionary.update('T', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"border\", {\n        /**\n         * Gets the border of the annotation.\n         *\n         * @returns {PdfAnnotationBorder} Annotation border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the border of the annotation.\n         * let border: PdfAnnotationBorder = annotation.border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._border === 'undefined') {\n                var value = new PdfAnnotationBorder();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('Border')) {\n                    var border = this._dictionary.getArray('Border');\n                    if (border && border.length >= 3) {\n                        value._hRadius = border[0];\n                        value._vRadius = border[1];\n                        value._width = border[2];\n                    }\n                }\n                if (this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            var width = border.get('W');\n                            if (typeof width !== 'undefined' && !Number.isNaN(width)) {\n                                value._width = width;\n                            }\n                        }\n                        if (border.has('S')) {\n                            var style = border.get('S');\n                            if (style) {\n                                switch (style.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            var dash = border.getArray('D');\n                            if (dash) {\n                                value._dash = dash;\n                            }\n                        }\n                    }\n                }\n                this._border = value;\n            }\n            return this._border;\n        },\n        /**\n         * Sets the border of the annotation.\n         *\n         * @param {PdfAnnotationBorder} value Border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF annotation\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.border;\n            var width;\n            if (!this._isLoaded || (typeof value.width !== 'undefined' && current.width !== value.width)) {\n                width = value.width;\n            }\n            var hRadius;\n            if (!this._isLoaded || (typeof value.hRadius !== 'undefined' && current.hRadius !== value.hRadius)) {\n                hRadius = value.hRadius;\n            }\n            var vRadius;\n            if (!this._isLoaded || (typeof value.vRadius !== 'undefined' && current.vRadius !== value.vRadius)) {\n                vRadius = value.vRadius;\n            }\n            var style;\n            if (!this._isLoaded || (typeof value.style !== 'undefined' && current.style !== value.style)) {\n                style = value.style;\n            }\n            var dash;\n            if (typeof value.dash !== 'undefined' && current.dash !== value.dash) {\n                dash = value.dash;\n            }\n            if (!this._isWidget && (this._dictionary.has('Border') || (width || vRadius || hRadius))) {\n                this._border._hRadius = typeof hRadius !== 'undefined' ? hRadius : current.hRadius;\n                this._border._vRadius = typeof vRadius !== 'undefined' ? vRadius : current.vRadius;\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._dictionary.update('Border', [this._border.hRadius, this._border.vRadius, this._border.width]);\n            }\n            if (this._dictionary.has('BS') || (width || style || dash)) {\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._border._style = typeof style !== 'undefined' ? style : current.style;\n                this._border._dash = typeof dash !== 'undefined' ? dash : current.dash;\n                var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                bs.update('Type', _PdfName.get('Border'));\n                bs.update('W', this._border.width);\n                bs.update('S', _mapBorderStyle(this._border.style));\n                if (typeof this._border.dash !== 'undefined') {\n                    bs.update('D', this._border.dash);\n                }\n                this._dictionary.update('BS', bs);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flags\", {\n        /**\n         * Gets the flags of the annotation.\n         *\n         * @returns {PdfAnnotationFlag} Annotation flag.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flags of the annotation.\n         * let flag: PdfAnnotationFlag = annotation.flags;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotFlags === 'undefined') {\n                this._annotFlags = PdfAnnotationFlag.default;\n                if (this._dictionary.has('F')) {\n                    this._annotFlags = this._dictionary.get('F');\n                }\n            }\n            return this._annotFlags;\n        },\n        /**\n         * Sets the flags of the annotation.\n         *\n         * @param {PdfAnnotationFlag} value flag value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flags of the annotation.\n         * annotation.flags = PdfAnnotationFlag.print;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this._annotFlags) {\n                this._annotFlags = value;\n                this._dictionary.update('F', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._dictionary.has('C')) {\n                this._color = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the color of the annotation.\n         * annotation.color = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * Gets the inner color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the inner color of the annotation.\n         * let innerColor: number[] = annotation.innerColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._innerColor === 'undefined' && this._dictionary.has('IC')) {\n                this._innerColor = _parseColor(this._dictionary.getArray('IC'));\n            }\n            return this._innerColor;\n        },\n        /**\n         * Sets the inner color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the inner color of the annotation.\n         * annotation.innerColor = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.innerColor;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._innerColor = value;\n                    this._dictionary.update('IC', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"creationDate\", {\n        /**\n         * Gets the creation date of the annotation.\n         *\n         * @returns {Date} Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the creation date of the annotation.\n         * let creationDate: Date = annotation.creationDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._creationDate === 'undefined' || this._creationDate === null) && this._dictionary.has('CreationDate')) {\n                var value = this._dictionary.get('CreationDate'); // eslint-disable-line\n                if (value !== null && typeof value === 'string') {\n                    this._creationDate = this._stringToDate(value);\n                }\n            }\n            return this._creationDate;\n        },\n        /**\n         * Sets the creation date of the annotation.\n         *\n         * @param {Date} value Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the creation date of the annotation.\n         * annotation.creationDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._creationDate = value;\n            this._dictionary.update('CreationDate', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"modifiedDate\", {\n        /**\n         * Gets the modification date of the annotation.\n         *\n         * @returns {Date} Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the modified date of the annotation.\n         * let modifiedDate: Date = annotation.modifiedDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._modifiedDate === 'undefined' || this._modifiedDate === null)) {\n                var value = void 0; // eslint-disable-line\n                if (this._dictionary.has('ModDate')) {\n                    value = this._dictionary.get('ModDate');\n                }\n                else if (this._dictionary.has('M')) {\n                    value = this._dictionary.get('M');\n                }\n                if (value !== null && typeof value === 'string') {\n                    this._modifiedDate = this._stringToDate(value);\n                }\n            }\n            return this._modifiedDate;\n        },\n        /**\n         * Sets the modification date of the annotation.\n         *\n         * @param {Date} value Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the modified date of the annotation.\n         * annotation.modifiedDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._modifiedDate = value;\n            this._dictionary.update('M', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds: {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {x: 10, y: 10, width: 150, height: 5};\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._isBounds = true;\n                if (this._isLoaded) {\n                    if ((value.x !== this.bounds.x) || (value.y !== this.bounds.y) ||\n                        (value.width !== this.bounds.width) || (value.height !== this.bounds.height)) {\n                        var size = this._page.size;\n                        if (size) {\n                            var y = size[1] - (value.y + value.height);\n                            var height = y + value.height;\n                            this._dictionary.update('Rect', [value.x, y, value.x + value.width, height]);\n                            this._bounds = value;\n                        }\n                    }\n                }\n                else {\n                    this._bounds = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"caption\", {\n        /**\n         * Gets the caption of the annotation.\n         *\n         * @returns {PdfAnnotationCaption} Annotation caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption of the annotation.\n         * let caption: PdfAnnotationCaption = annotation.caption;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._caption === 'undefined') {\n                var value = new PdfAnnotationCaption();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('Cap')) {\n                    value._cap = this._dictionary.get('Cap');\n                }\n                if (this._dictionary.has('CP')) {\n                    var capType = this._dictionary.get('CP');\n                    if (capType) {\n                        value._type = capType.name === 'Top' ? PdfLineCaptionType.top : PdfLineCaptionType.inline;\n                    }\n                }\n                if (this._dictionary.has('CO')) {\n                    value._offset = this._dictionary.getArray('CO');\n                }\n                this._caption = value;\n            }\n            return this._caption;\n        },\n        /**\n         * Sets the caption of the annotation.\n         *\n         * @param {PdfAnnotationCaption} value Annottion caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Create and set annotation caption values\n         * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.caption;\n            if (value) {\n                if (!this._isLoaded || value.cap !== current.cap) {\n                    this._caption.cap = value.cap;\n                }\n                if (!this._isLoaded || value.type !== current.type) {\n                    this._caption.type = value.type;\n                }\n                if (!this._isLoaded || value.offset !== current.offset) {\n                    this._caption.offset = value.offset;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"opacity\", {\n        /**\n         * Gets the opacity of the annotation.\n         *\n         * @returns {number} Opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the opacity of the annotation.\n         * let opacity: number = annotation.opacity;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('CA')) {\n                var opacity = this._dictionary.get('CA');\n                if (typeof opacity !== 'undefined') {\n                    this._opacity = opacity;\n                }\n            }\n            return this._opacity;\n        },\n        /**\n         * Sets the opacity of the annotation.\n         *\n         * @param {number} value opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the opacity of the annotation.\n         * annotation.opacity = 0.5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && !Number.isNaN(value)) {\n                if (value >= 0 && value <= 1) {\n                    this._dictionary.update('CA', value);\n                    this._opacity = value;\n                }\n                else if (value < 0) {\n                    this._dictionary.update('CA', 0);\n                }\n                else {\n                    this._dictionary.update('CA', 1);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"subject\", {\n        /**\n         * Gets the subject of the annotation.\n         *\n         * @returns {string} Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the subject of the annotation.\n         * let subject: string = annotation.subject;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._subject === 'undefined') {\n                this._subject = this._dictionary.get('Subject', 'Subj');\n            }\n            return this._subject;\n        },\n        /**\n         * Sets the subject of the annotation.\n         *\n         * @param {string} value Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the subject of the annotation.\n         * annotation.subject = 'Line Annotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                var hasKey = false;\n                if (this._dictionary.has('Subj')) {\n                    this._dictionary.update('Subj', value);\n                    this._subject = value;\n                    hasKey = true;\n                }\n                if (!hasKey || this._dictionary.has('Subject')) {\n                    this._dictionary.update('Subject', value);\n                    this._subject = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"name\", {\n        /**\n         * Gets the name of the annotation.\n         *\n         * @returns {string} Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the name of the annotation.\n         * let name: string = annotation.name;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined' && this._dictionary.has('NM')) {\n                this._name = this._dictionary.get('NM');\n            }\n            return this._name;\n        },\n        /**\n         * Sets the name of the annotation.\n         *\n         * @param {string} value Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the name of the annotation.\n         * annotation.name = 'LineAnnotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('NM', value);\n                this._name = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the text of the annotation.\n         * let text: string = annotation.text;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' && this._dictionary.has('Contents')) {\n                this._text = this._dictionary.get('Contents');\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the text of the annotation.\n         * annotation.text = ‘LineAnnotation’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._text = this._dictionary.get('Contents');\n                if (value !== this._text) {\n                    this._dictionary.update('Contents', value);\n                    this._text = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the annotation.\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotationAngle: PdfRotationAngle = annotation.rotationAngle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotate === 'undefined' && this._dictionary.has('Rotate')) {\n                this._rotate = (this._dictionary.get('Rotate') / 90);\n            }\n            if (this._rotate === null || typeof this._rotate === 'undefined') {\n                this._rotate = PdfRotationAngle.angle0;\n            }\n            return this._rotate;\n        },\n        /**\n         * Sets the rotation of the annotation.\n         *\n         * @param {PdfRotationAngle} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotationAngle = PdfRotationAngle.angle180;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var prevRotate = this.rotationAngle;\n            if (typeof value !== 'undefined' && typeof prevRotate !== 'undefined') {\n                value = ((value + prevRotate) % 4);\n            }\n            this._dictionary.update('Rotate', value * 90);\n            this._rotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation (Read only).\n         *\n         * @returns {number} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = this._getRotationAngle();\n            if (angle < 0) {\n                angle = 360 + angle;\n            }\n            if (angle >= 360) {\n                angle = 360 - angle;\n            }\n            return angle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flattenPopups\", {\n        /**\n         * Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         *\n         * @returns {boolean} Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         * let flattenPopups: boolean = annotation.flattenPopups;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isFlattenPopups;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         *\n         * @param {boolean} value Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         * annotation.flattenPopups = false;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._isFlattenPopups = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether the annotation have been flattened or not.\n         * let flatten: boolean = annotation.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation have been flattened or not.\n         * annotation.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_hasFlags\", {\n        get: function () {\n            return this._dictionary.has('F');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_degreeToRadian\", {\n        get: function () {\n            if (typeof this._ratio === 'undefined') {\n                this._ratio = Math.PI / 180;\n            }\n            return this._ratio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set the boolean flag to create a new appearance stream for annotations.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set the boolean flag to create a new appearance stream for annotations.\n     * document.getPage(0).annotations.at(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n        if (value) {\n            this._dictionary._updated = true;\n        }\n    };\n    /**\n     * Gets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string[]} Values associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the values associated with the key 'Author'.\n     * let values: string[] = document.getPage(0).annotations.at(0).getValues('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.getValues = function (name) {\n        var values = [];\n        if (this._dictionary.has(name)) {\n            var value = this._dictionary.get(name); // eslint-disable-line\n            if (Array.isArray(value)) {\n                value = this._dictionary.getArray(name);\n                for (var i = 0; i < value.length; i++) {\n                    var element = value[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    if (element instanceof _PdfName) {\n                        values.push(element.name);\n                    }\n                    else if (typeof element === 'string') {\n                        values.push(element);\n                    }\n                    else if (typeof element === 'number') {\n                        values.push(element.toString());\n                    }\n                }\n            }\n            else if (value instanceof _PdfName) {\n                values.push(value.name);\n            }\n            else if (typeof value === 'string') {\n                values.push(value);\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return values;\n    };\n    /**\n     * Sets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = document.getPage(0).annotations.at(0);\n     * // Set Unknown state and model\n     * annotation.setValues('State', 'StateModel');\n     * annotation.setValues('StateModel', 'CustomState');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setValues = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    //Implementation\n    PdfAnnotation.prototype._initialize = function (page, dictionary) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (!this._isLoaded) {\n            this._dictionary.set('P', this._page._ref);\n            this._dictionary.assignXref(this._crossReference);\n        }\n    };\n    PdfAnnotation.prototype._getRotationAngle = function () {\n        var angle = 0;\n        if (this._dictionary.has('Rotate')) {\n            angle = this._dictionary.get('Rotate');\n        }\n        else if (this._dictionary.has('Rotation')) {\n            angle = this._dictionary.get('Rotation');\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getBoundsValue = function (linePoints) {\n        var count = linePoints.length;\n        var x = [];\n        var y = [];\n        if (linePoints && count > 0) {\n            var points = [];\n            for (var i = 0; i < linePoints.length; i++) {\n                var value = linePoints[Number.parseInt(i.toString(), 10)];\n                points.push(value);\n            }\n            var x1 = 0;\n            var y1 = 0;\n            for (var i = 0; i < points.length; i++) {\n                if (i % 2 === 0) {\n                    x[Number.parseInt(x1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    x1++;\n                }\n                else {\n                    y[Number.parseInt(y1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    y1++;\n                }\n            }\n        }\n        x.sort(function (a, b) { return a > b ? 1 : -1; });\n        y.sort(function (a, b) { return a > b ? 1 : -1; });\n        return { x: x[0], y: y[0], width: x[x.length - 1] - x[0], height: y[y.length - 1] - y[0] };\n    };\n    PdfAnnotation.prototype._validateTemplateMatrix = function (dictionary, template) {\n        var isRotatedMatrix = false;\n        var isValidMatrix = true;\n        if (template === null || typeof template === 'undefined') {\n            if (dictionary && dictionary.has('Matrix')) {\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && matrix.length > 3) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            isRotatedMatrix = true;\n                            var locationX = 0;\n                            var locationY = 0;\n                            var templateX = 0;\n                            var templateY = 0;\n                            if (matrix.length > 4) {\n                                templateX = -matrix[4];\n                                if (matrix.length > 5) {\n                                    templateY = -matrix[5];\n                                }\n                            }\n                            var annotationBounds = void 0;\n                            if (this._dictionary.has('Rect')) {\n                                annotationBounds = this._dictionary.getArray('Rect');\n                                if (annotationBounds && annotationBounds.length > 1) {\n                                    locationX = annotationBounds[0];\n                                    locationY = annotationBounds[1];\n                                }\n                            }\n                            if (!(locationX === templateX && locationY === templateY) && templateX === 0 && templateY === 0) {\n                                this._locationDisplaced = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                isRotatedMatrix = true;\n            }\n            return isRotatedMatrix;\n        }\n        else {\n            var point = this.bounds;\n            if (dictionary && dictionary.has('Matrix')) {\n                var box = dictionary.getArray('BBox');\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && box && matrix.length > 3 && box.length > 2) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            if (typeof box[0] !== 'undefined' &&\n                                typeof box[1] !== 'undefined' &&\n                                typeof box[2] !== 'undefined' &&\n                                typeof box[3] !== 'undefined') {\n                                if (box[0] !== -(matrix[4]) && box[1] !== -(matrix[5]) || (box[0] === 0 && -matrix[4] === 0)) {\n                                    var graphics = this._page.graphics;\n                                    var state = graphics.save();\n                                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                        graphics.setTransparency(this._opacity);\n                                    }\n                                    point.x -= box[0];\n                                    point.y += box[1];\n                                    graphics.drawTemplate(template, point);\n                                    graphics.restore(state);\n                                    this._removeAnnotationFromPage(this._page, this);\n                                    isValidMatrix = false;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isValidMatrix;\n        }\n    };\n    PdfAnnotation.prototype._flattenAnnotationTemplate = function (template, isNormalMatrix) {\n        var graphics = this._page.graphics;\n        var currentBounds = this.bounds;\n        if (this._type === _PdfAnnotationType.lineAnnotation && !this._dictionary.has('AP')) {\n            if (this._isLoaded) {\n                currentBounds = this._bounds;\n            }\n            else {\n                currentBounds = _toRectangle([this.bounds.x, this.bounds.y,\n                    this.bounds.width, this.bounds.height]);\n            }\n            if (this._page) {\n                var size = this._page.size;\n                var mBox = this._page.mediaBox;\n                var cropBox = this._page.cropBox;\n                if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && this._page._pageDictionary.has('CropBox') && !this._isLoaded) {\n                    if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                        size[1] === cropBox[3]) && (currentBounds.x !== cropBox[0])) {\n                        currentBounds.x -= cropBox[0];\n                        currentBounds.y = cropBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else if (mBox && Array.isArray(mBox) && mBox.length === 4 && this._page._pageDictionary.has('MediaBox') && !this._isLoaded) {\n                    if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                        currentBounds.x -= mBox[0];\n                        currentBounds.y = mBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else if (!this._isLoaded) {\n                    currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                }\n            }\n            else {\n                currentBounds.y = currentBounds.y + currentBounds.height;\n            }\n        }\n        if (typeof currentBounds !== 'undefined' && currentBounds !== null) {\n            var state = graphics.save();\n            this._page._needInitializeGraphics = true;\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var needScale = true;\n                if (this._dictionary.has('AP')) {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (this.rotate === PdfRotationAngle.angle270 && this._page.rotation === PdfRotationAngle.angle270\n                            && appearanceStream.dictionary.has('Matrix')) {\n                            var matrix = appearanceStream.dictionary.getArray('Matrix');\n                            if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                                needScale = false;\n                            }\n                        }\n                    }\n                    if (!isNormalMatrix && this.rotate !== PdfRotationAngle.angle180 && needScale) {\n                        template._isAnnotationTemplate = true;\n                        template._needScale = true;\n                    }\n                }\n            }\n            if (!isNormalMatrix && this._type !== _PdfAnnotationType.rubberStampAnnotation) {\n                template._isAnnotationTemplate = true;\n                template._needScale = true;\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.setTransparency(this._opacity);\n            }\n            var bounds = this._calculateTemplateBounds(currentBounds, this._page, template, isNormalMatrix, graphics);\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var size = void 0;\n                var location_1;\n                if (this.rotate === PdfRotationAngle.angle0) {\n                    size = [bounds.width, bounds.height];\n                    location_1 = [bounds.x, bounds.y];\n                }\n                else {\n                    size = template._size;\n                    location_1 = [bounds.x, bounds.y];\n                }\n                var isRotatedMatrix = false;\n                if (this.rotate !== PdfRotationAngle.angle0 && template._content) {\n                    if (template._content.dictionary.has('Matrix')) {\n                        var matrix = template._content.dictionary.getArray('Matrix');\n                        if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                            isRotatedMatrix = true;\n                        }\n                    }\n                }\n                var scaleX = (template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n                var scaleY = (template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n                var needScale = !(scaleX === 1 && scaleY === 1);\n                if (this.rotate !== PdfRotationAngle.angle0 && isRotatedMatrix) {\n                    if (this.rotate === PdfRotationAngle.angle90) {\n                        if (this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[0] += (size[0] - size[1]);\n                                location_1[1] += size[0];\n                            }\n                            else {\n                                location_1[0] += size[1];\n                                location_1[1] += (size[0] - size[1]) + (size[0] - size[1]);\n                            }\n                        }\n                        else if (!needScale) {\n                            location_1[0] += size[1];\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle270) {\n                        if (this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && template._isAnnotationTemplate) {\n                                location_1[1] = bounds.y - bounds.width;\n                            }\n                            else if (needScale) {\n                                location_1[1] += (size[0] - size[1]);\n                            }\n                        }\n                        else {\n                            if (!needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[1] += -(size[0]);\n                            }\n                            else {\n                                location_1[1] += -(size[0] - size[1]);\n                            }\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle180) {\n                        location_1[0] += size[0];\n                        location_1[1] += -(size[1]);\n                    }\n                }\n            }\n            graphics.drawTemplate(template, bounds);\n            graphics.restore(state);\n        }\n        this._removeAnnotationFromPage(this._page, this);\n    };\n    PdfAnnotation.prototype._calculateTemplateBounds = function (bounds, page, template, isNormalMatrix, graphics) {\n        var annotationBounds = bounds;\n        var x = bounds.x;\n        var y = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        if (!isNormalMatrix) {\n            var rect = this._dictionary.getArray('Rect');\n            if (rect) {\n                annotationBounds = _toRectangle(rect);\n            }\n        }\n        if (typeof page !== 'undefined') {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                if (isNormalMatrix || (typeof this._rotate !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = bounds.x;\n                    if (!this._locationDisplaced) {\n                        y = -(page.size[1] - bounds.y - bounds.height);\n                    }\n                    else if (page._origin && page._o[1] !== 0) {\n                        y = bounds.y + bounds.height;\n                    }\n                    else {\n                        y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.height - template._size[1]));\n                    }\n                }\n                else {\n                    x = bounds.x;\n                    y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.width - template._size[1]));\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                if (isNormalMatrix) {\n                    x = -(page.size[0] - (bounds.x + bounds.width));\n                    y = -(page.size[1] - bounds.y - bounds.height);\n                }\n                else {\n                    x = -(page.size[0] - (bounds.x + template._size[0]));\n                    y = -(page.size[1] - bounds.y - template._size[1]);\n                    if (typeof this.rotationAngle !== 'undefined' &&\n                        (this._rotate === PdfRotationAngle.angle90 ||\n                            this._rotate === PdfRotationAngle.angle270)) {\n                        y = (-(page.size[1] - bounds.y - template._size[1]) - (bounds.width - bounds.height));\n                        width = bounds.height;\n                        height = bounds.width;\n                    }\n                }\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                if (isNormalMatrix || (typeof this.rotationAngle !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = -(page.size[0] - bounds.x - bounds.width);\n                    y = bounds.y;\n                }\n                else {\n                    x = -(page.size[0] - annotationBounds.x - template._size[0]);\n                    var matrix = template._content.dictionary.getArray('Matrix');\n                    var box = template._content.dictionary.getArray('BBox');\n                    if (matrix && box && matrix[5] !== box[2]) {\n                        y = bounds.y - (bounds.height - bounds.width);\n                    }\n                    else {\n                        y = (bounds.y + bounds.height) - bounds.width;\n                    }\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 0) {\n                if (!isNormalMatrix &&\n                    (typeof this.rotationAngle !== 'undefined' &&\n                        (this.rotationAngle === PdfRotationAngle.angle90 ||\n                            this.rotationAngle === PdfRotationAngle.angle270))) {\n                    x = bounds.x;\n                    y = (bounds.y + bounds.height - bounds.width);\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    PdfAnnotation.prototype._obtainGraphicsRotation = function (matrix) {\n        var radians = Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]);\n        var angle = Math.round(radians * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._removeAnnotationFromPage = function (page, annotation) {\n        var annotations = [];\n        if (page._pageDictionary && page._pageDictionary.has('Annots')) {\n            annotations = page._pageDictionary.get('Annots');\n        }\n        annotation._dictionary.set('P', page._ref);\n        var index = annotations.indexOf(annotation._ref);\n        if (index !== -1) {\n            annotations.splice(index, 1);\n            if (this._crossReference._cacheMap.has(annotation._ref)) {\n                this._crossReference._cacheMap.delete(annotation._ref);\n            }\n        }\n        page._pageDictionary.set('Annots', annotations);\n    };\n    PdfAnnotation.prototype._removeAnnotation = function (page, annotation) {\n        if (page && annotation) {\n            this._removeAnnotationFromPage(page, annotation);\n            page._pageDictionary._updated = true;\n        }\n    };\n    PdfAnnotation.prototype._drawCloudStyle = function (graphics, brush, pen, radius, overlap, points, isAppearance) {\n        if (this._isClockWise(points)) {\n            var sortedPoints = [];\n            for (var i = points.length - 1; i >= 0; i--) {\n                sortedPoints.push(points[Number.parseInt(i.toString(), 10)]);\n            }\n            points = sortedPoints;\n        }\n        var circles = [];\n        var circleOverlap = 2 * radius * overlap;\n        var previousPoint = points[points.length - 1];\n        for (var i = 0; i < points.length; i++) {\n            var currentPoint = points[Number.parseInt(i.toString(), 10)];\n            var dx = currentPoint[0] - previousPoint[0];\n            var dy = currentPoint[1] - previousPoint[1];\n            var length_1 = Math.sqrt(dx * dx + dy * dy);\n            dx = dx / length_1;\n            dy = dy / length_1;\n            for (var a = 0; a + 0.1 * circleOverlap < length_1; a += circleOverlap) {\n                var cur = new _CloudStyleArc();\n                cur.point = [previousPoint[0] + a * dx, previousPoint[1] + a * dy];\n                circles.push(cur);\n            }\n            previousPoint = currentPoint;\n        }\n        var previousCurvedStyleArc = circles[circles.length - 1];\n        for (var i = 0; i < circles.length; i++) {\n            var currentCurvedStyleArc = circles[Number.parseInt(i.toString(), 10)];\n            var angle = this._getIntersectionDegrees(previousCurvedStyleArc.point, currentCurvedStyleArc.point, radius);\n            previousCurvedStyleArc.endAngle = angle[0];\n            currentCurvedStyleArc.startAngle = angle[1];\n            previousCurvedStyleArc = currentCurvedStyleArc;\n        }\n        var path = new _PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            var startAngle = current.startAngle % 360;\n            var endAngle = current.endAngle % 360;\n            var sweepAngel = 0;\n            if (startAngle > 0 && endAngle < 0) {\n                sweepAngel = (180 - startAngle) + (180 - (endAngle < 0 ? -endAngle : endAngle));\n            }\n            else if (startAngle < 0 && endAngle > 0) {\n                sweepAngel = -startAngle + endAngle;\n            }\n            else if (startAngle > 0 && endAngle > 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = endAngle - startAngle;\n                }\n            }\n            else if (startAngle < 0 && endAngle < 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = -(startAngle + (-endAngle));\n                }\n            }\n            if (sweepAngel < 0) {\n                sweepAngel = -sweepAngel;\n            }\n            current.endAngle = sweepAngel;\n            path._addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, startAngle, sweepAngel);\n        }\n        path._closeFigure();\n        var tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        var pdfpath;\n        if (isAppearance) {\n            pdfpath = new _PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new _PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        if (brush !== null) {\n            graphics._drawPath(pdfpath, null, brush);\n        }\n        var incise = 180 / (Math.PI * 3);\n        path = new _PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            path._addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, current.startAngle, current.endAngle + incise);\n        }\n        path._closeFigure();\n        tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        if (isAppearance) {\n            pdfpath = new _PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new _PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        graphics._drawPath(pdfpath, pen, null);\n    };\n    PdfAnnotation.prototype._isClockWise = function (points) {\n        var sum = 0;\n        for (var i = 0; i < points.length; i++) {\n            var first = points[Number.parseInt(i.toString(), 10)];\n            var second = points[(i + 1) % points.length];\n            sum += (second[0] - first[0]) * (second[1] + first[1]);\n        }\n        return sum > 0;\n    };\n    PdfAnnotation.prototype._getIntersectionDegrees = function (first, second, radius) {\n        var dx = second[0] - first[0];\n        var dy = second[1] - first[1];\n        var length = Math.sqrt(dx * dx + dy * dy);\n        var a = 0.5 * length / radius;\n        if (a < -1) {\n            a = -1;\n        }\n        else if (a > 1) {\n            a = 1;\n        }\n        var radian = Math.atan2(dy, dx);\n        var cosvalue = Math.acos(a);\n        return [(radian - cosvalue) * (180 / Math.PI), (Math.PI + radian + cosvalue) * (180 / Math.PI)];\n    };\n    PdfAnnotation.prototype._obtainStyle = function (borderPen, rectangle, borderWidth, parameter) {\n        var dash = this.border.dash;\n        if (dash && dash.length > 0) {\n            var dashPattern = [];\n            var isDash = false;\n            for (var i = 0; i < dash.length; i++) {\n                dashPattern[Number.parseInt(i.toString(), 10)] = dash[Number.parseInt(i.toString(), 10)];\n                if (dashPattern[Number.parseInt(i.toString(), 10)] > 0) {\n                    isDash = true;\n                }\n            }\n            if (isDash && this.border.style === PdfBorderStyle.dashed) {\n                borderPen._dashStyle = PdfDashStyle.dash;\n                borderPen._dashPattern = dashPattern;\n            }\n        }\n        if (parameter) {\n            if (parameter instanceof _PaintParameter) {\n                if (!this._isBounds && this._dictionary.has('RD')) {\n                    var array = this._dictionary.getArray('RD');\n                    if (array) {\n                        rectangle[0] = rectangle[0] + array[0];\n                        rectangle[1] = rectangle[1] + borderWidth + array[1];\n                        rectangle[2] = rectangle[2] - (array[0] + array[2]);\n                        rectangle[3] = rectangle[3] - (array[1] + array[3]);\n                    }\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = rectangle[3] - this.border.width;\n                }\n                parameter.bounds = rectangle;\n            }\n            else {\n                if (parameter.intensity !== 0 && parameter.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = parameter.intensity * 5;\n                    rectangle[0] = rectangle[0] + radius + borderWidth;\n                    rectangle[1] = rectangle[1] + radius + borderWidth;\n                    rectangle[2] = rectangle[2] - (2 * radius) - 2 * borderWidth;\n                    rectangle[3] = rectangle[3] - (2 * radius) - 2 * borderWidth;\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = this.bounds.height - this.border.width;\n                }\n            }\n        }\n        else {\n            if (!this._isBounds && this._dictionary.has('RD')) {\n                var array = this._dictionary.getArray('RD');\n                if (array) {\n                    rectangle[0] = rectangle[0] + array[0];\n                    rectangle[1] = rectangle[1] + borderWidth + array[1];\n                    rectangle[2] = rectangle[2] - (2 * array[2]);\n                    rectangle[3] = rectangle[3] - this.border.width;\n                    rectangle[3] = rectangle[3] - (2 * array[3]);\n                }\n            }\n            else {\n                rectangle[1] = rectangle[1] + borderWidth;\n                rectangle[3] = this.bounds.height - this.border.width;\n            }\n        }\n        return rectangle;\n    };\n    PdfAnnotation.prototype._createRectangleAppearance = function (borderEffect) {\n        var width = this.border.width;\n        var rdArray = this._dictionary.getArray('RD');\n        if (!rdArray && borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var cloudRectangle = { x: this.bounds.x - borderEffect.intensity * 5 - width / 2,\n                y: this.bounds.y - borderEffect.intensity * 5 - width / 2,\n                width: this.bounds.width + borderEffect.intensity * 10 + width,\n                height: this.bounds.height + borderEffect.intensity * 10 + width };\n            var radius = borderEffect.intensity * 5;\n            rdArray = [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2];\n            this._dictionary.set('RD', rdArray);\n            this.bounds = cloudRectangle;\n        }\n        if (!this._isBounds && rdArray) {\n            var cloudRectangle = { x: this.bounds.x + rdArray[0],\n                y: this.bounds.y + rdArray[1],\n                width: this.bounds.width - rdArray[2] * 2,\n                height: this.bounds.height - rdArray[3] * 2 };\n            if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                cloudRectangle.x = cloudRectangle.x - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.y = cloudRectangle.y - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.width = cloudRectangle.width + borderEffect.intensity * 10 + width;\n                cloudRectangle.height = cloudRectangle.height + borderEffect.intensity * 10 + width;\n                var radius = borderEffect.intensity * 5;\n                this._dictionary.set('RD', [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2]);\n            }\n            else {\n                delete this._dictionary._map.RD;\n            }\n            this.bounds = cloudRectangle;\n        }\n        var borderWidth = width / 2;\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            template._writeTransformation = false;\n        }\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0 && this.color) {\n            parameter.borderPen = new PdfPen(this._color, width);\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        var rectangle = this._obtainStyle(parameter.borderPen, nativeRectangle, borderWidth, borderEffect);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            this._drawRectangleAppearance(rectangle, graphics, parameter, borderEffect.intensity);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawRectangleAppearance = function (rectangle, graphics, parameter, intensity) {\n        var graphicsPath = new _PdfPath();\n        graphicsPath._addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        var radius = intensity * 4.25;\n        if (radius > 0) {\n            var points = [];\n            for (var i = 0; i < graphicsPath._points.length; i++) {\n                var sublist = [graphicsPath._points[Number.parseInt(i.toString(), 10)][0],\n                    -graphicsPath._points[Number.parseInt(i.toString(), 10)][1]];\n                points.push(sublist);\n            }\n            graphicsPath = new _PdfPath();\n            graphicsPath._addPolygon(points);\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createCircleAppearance = function () {\n        var nativeBounds = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeBounds, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (this._dictionary.has('BE')) {\n            template._writeTransformation = false;\n        }\n        if (typeof this.color === 'undefined') {\n            this._isTransparentColor = true;\n        }\n        var graphics = template.graphics;\n        var width = this.border.width;\n        var borderPen = new PdfPen(this.color, width);\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        parameter.borderWidth = width;\n        var borderWidth = width / 2;\n        var rectangle = this._obtainStyle(borderPen, nativeBounds, borderWidth);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this._dictionary.has('BE')) {\n            this._drawCircleAppearance(rectangle, borderWidth, graphics, parameter);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, rectangle[1], rectangle[2] - width, rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this._opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawCircleAppearance = function (rectangle, borderWidth, graphics, parameter) {\n        var radius = 0;\n        if (this._dictionary.has('RD')) {\n            var array = this._dictionary.getArray('RD');\n            if (array && array.length > 0) {\n                radius = array[0];\n            }\n        }\n        if (radius > 0) {\n            var rect = [rectangle[0] + borderWidth,\n                -rectangle[1] - rectangle[3],\n                rectangle[2] - this.border.width,\n                rectangle[3]];\n            var left = rect[0];\n            var top_1 = rect[1];\n            var right = rect[0] + rect[2];\n            var bottom = rect[1] + rect[3];\n            var controlPointList = [];\n            controlPointList.push([right, bottom]);\n            controlPointList.push([left, bottom]);\n            controlPointList.push([left, top_1]);\n            controlPointList.push([right, top_1]);\n            var startPointList = [];\n            startPointList.push([right, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + rect[2] / 2, bottom]);\n            startPointList.push([left, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + (rect[2] / 2), top_1]);\n            var endPointList = [];\n            endPointList.push([left + rect[2] / 2, bottom]);\n            endPointList.push([left, top_1 + (rect[3] / 2)]);\n            endPointList.push([left + (rect[2] / 2), top_1]);\n            endPointList.push([right, top_1 + (rect[3] / 2)]);\n            var points = [];\n            for (var i = 0; i < controlPointList.length; i++) {\n                this._createBezier(startPointList[Number.parseInt(i.toString(), 10)], controlPointList[Number.parseInt(i.toString(), 10)], endPointList[Number.parseInt(i.toString(), 10)], points);\n            }\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, points, false);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, -rectangle[1], rectangle[2] - this.border.width, -rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createBezier = function (first, second, third, bezierPoints) {\n        bezierPoints.push(first);\n        this._populateBezierPoints(first, second, third, 0, bezierPoints);\n        bezierPoints.push(third);\n    };\n    PdfAnnotation.prototype._populateBezierPoints = function (first, second, third, currentIteration, bezierPoints) {\n        if (currentIteration < 2) {\n            var midPoint1 = this._midPoint(first, second);\n            var midPoint2 = this._midPoint(second, third);\n            var midPoint3 = this._midPoint(midPoint1, midPoint2);\n            currentIteration++;\n            this._populateBezierPoints(first, midPoint1, midPoint3, currentIteration, bezierPoints);\n            bezierPoints.push(midPoint3);\n            this._populateBezierPoints(midPoint3, midPoint2, third, currentIteration, bezierPoints);\n        }\n    };\n    PdfAnnotation.prototype._midPoint = function (first, second) {\n        return [(first[0] + second[0]) / 2, (first[1] + second[1]) / 2];\n    };\n    PdfAnnotation.prototype._getAngle = function (linePoints) {\n        var x1 = linePoints[0];\n        var y1 = linePoints[1];\n        var x2 = linePoints[2];\n        var y2 = linePoints[3];\n        var angle = 0;\n        if (x2 - x1 === 0) {\n            angle = (y2 > y1) ? 90 : 270;\n        }\n        else {\n            var angleRatio = (y2 - y1) / (x2 - x1);\n            var radians = Math.atan(angleRatio);\n            angle = radians * (180 / Math.PI);\n            if ((x2 - x1) < 0 || (y2 - y1) < 0) {\n                angle += 180;\n            }\n            if ((x2 - x1) > 0 && (y2 - y1) < 0) {\n                angle -= 180;\n            }\n            if (angle < 0) {\n                angle += 360;\n            }\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getAxisValue = function (value, angle, length) {\n        return [value[0] + Math.cos(angle * this._degreeToRadian) * length,\n            value[1] + Math.sin(angle * this._degreeToRadian) * length];\n    };\n    PdfAnnotation.prototype._drawLineEndStyle = function (axisPoint, graphics, angle, pen, brush, style, length, isBegin) {\n        var arraowAngle;\n        var count;\n        var startPoint;\n        var first;\n        var second;\n        var third;\n        var fourth;\n        var path;\n        switch (style) {\n            case PdfLineEndingStyle.square:\n                graphics.drawRectangle(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.circle:\n                graphics.drawEllipse(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.openArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new _PdfPath();\n                path._pen = pen;\n                path._addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path._addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new _PdfPath();\n                path._pen = pen;\n                path._addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path._addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.slash:\n                count = 9 * length;\n                first = this._getAxisValue(startPoint, (angle + 60), count);\n                second = this._getAxisValue(startPoint, (angle - 120), count);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], first[0], -first[1]);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], second[0], -second[1]);\n                break;\n            case PdfLineEndingStyle.diamond:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, 180, count);\n                second = this._getAxisValue(axisPoint, 90, count);\n                third = this._getAxisValue(axisPoint, 0, count);\n                fourth = this._getAxisValue(axisPoint, -90, count);\n                graphics.drawPolygon([[first[0], -first[1]], [second[0], -second[1]], [third[0], -third[1]], [fourth[0], -fourth[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.butt:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, (angle + 90), count);\n                second = this._getAxisValue(axisPoint, (angle - 90), count);\n                graphics.drawLine(pen, first[0], -first[1], second[0], -second[1]);\n                break;\n        }\n    };\n    PdfAnnotation.prototype._drawLineStyle = function (start, end, graphics, angle, pen, brush, lineStyle, length) {\n        if (length === 0) {\n            length = 1;\n            pen = null;\n        }\n        this._drawLineEndStyle(start, graphics, angle, pen, brush, lineStyle.begin, length, true);\n        this._drawLineEndStyle(end, graphics, angle, pen, brush, lineStyle.end, length, false);\n    };\n    PdfAnnotation.prototype._obtainFontDetails = function () {\n        var fontFamily = '';\n        var fontSize;\n        var style = PdfFontStyle.regular;\n        if (this._dictionary.has('DS') || this._dictionary.has('DA')) {\n            var fontStyle = void 0;\n            if (this._dictionary.has('DS')) {\n                var collection = this._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') !== -1 || collection[Number.parseInt(i.toString(), 10)].indexOf('style') !== -1) {\n                        fontStyle = collection[Number.parseInt(i.toString(), 10)];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_1 = entry[1];\n                        var split = name_1.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 1);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = this._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                }\n            }\n            if (fontStyle && fontStyle !== '') {\n                var styleArray = void 0;\n                if (fontStyle.includes(':')) {\n                    styleArray = fontStyle.split(':');\n                }\n                else if (fontStyle.includes(',')) {\n                    styleArray = fontStyle.split(',');\n                }\n                if (styleArray) {\n                    styleArray.forEach(function (entry) {\n                        switch (entry.toLowerCase()) {\n                            case 'bold':\n                                style |= PdfFontStyle.bold;\n                                break;\n                            case 'italic':\n                                style |= PdfFontStyle.italic;\n                                break;\n                            case 'strikeout':\n                                style |= PdfFontStyle.strikeout;\n                                break;\n                            case 'underline':\n                                style |= PdfFontStyle.underline;\n                                break;\n                        }\n                    });\n                }\n            }\n            if (fontFamily) {\n                fontFamily = fontFamily.trim();\n            }\n        }\n        return { name: fontFamily, size: fontSize, style: style };\n    };\n    PdfAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfAnnotation.prototype._getEqualPdfGraphicsUnit = function (measurementUnit, unitString) {\n        var graphicsUnit;\n        switch (measurementUnit) {\n            case PdfMeasurementUnit.inch:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n            case PdfMeasurementUnit.centimeter:\n                graphicsUnit = _PdfGraphicsUnit.centimeter;\n                unitString = 'cm';\n                break;\n            case PdfMeasurementUnit.millimeter:\n                graphicsUnit = _PdfGraphicsUnit.millimeter;\n                unitString = 'mm';\n                break;\n            case PdfMeasurementUnit.pica:\n                graphicsUnit = _PdfGraphicsUnit.pica;\n                unitString = 'p';\n                break;\n            case PdfMeasurementUnit.point:\n                graphicsUnit = _PdfGraphicsUnit.point;\n                unitString = 'pt';\n                break;\n            default:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n        }\n        return { graphicsUnit: graphicsUnit, unitString: unitString };\n    };\n    PdfAnnotation.prototype._createMeasureDictionary = function (unitString) {\n        var d = new _PdfDictionary();\n        d.set('C', 1);\n        d.set('D', 100);\n        d.set('F', _PdfName.get('D'));\n        d.set('RD', '.');\n        d.set('RT', '');\n        d.set('SS', '');\n        d.set('U', unitString);\n        var a = new _PdfDictionary();\n        a.set('C', 1);\n        a.set('D', 100);\n        a.set('F', _PdfName.get('D'));\n        a.set('RD', '.');\n        a.set('RT', '');\n        a.set('SS', '');\n        a.set('U', 'sq ' + unitString);\n        var x = new _PdfDictionary();\n        if (unitString === 'in') {\n            x.set('C', 0.0138889);\n        }\n        else if (unitString === 'cm') {\n            x.set('C', 0.0352778);\n        }\n        else if (unitString === 'mm') {\n            x.set('C', 0.352778);\n        }\n        else if (unitString === 'pt') {\n            x.set('C', 1);\n        }\n        else if (unitString === 'p') {\n            x.set('C', 0.0833333);\n        }\n        x.set('D', 100);\n        x.set('F', _PdfName.get('D'));\n        x.set('RD', '.');\n        x.set('RT', '');\n        x.set('SS', '');\n        x.set('U', unitString);\n        var measureDictionary = new _PdfDictionary();\n        measureDictionary.set('A', [a]);\n        measureDictionary.set('D', [d]);\n        measureDictionary.set('R', '1 ' + unitString + ' = 1 ' + unitString);\n        measureDictionary.set('Type', _PdfName.get('Measure'));\n        measureDictionary.set('X', [x]);\n        return measureDictionary;\n    };\n    PdfAnnotation.prototype._colorToHex = function (col) {\n        if (col) {\n            return '#' + this._componentToHex(col[0]) + this._componentToHex(col[1]) + this._componentToHex(col[2]);\n        }\n        else {\n            return '#' + this._componentToHex(0) + this._componentToHex(0) + this._componentToHex(0);\n        }\n    };\n    PdfAnnotation.prototype._componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    PdfAnnotation.prototype._getRotatedBounds = function (bounds, rotateAngle) {\n        if (bounds.width > 0 && bounds.height > 0) {\n            var matrix = new _PdfTransformationMatrix();\n            matrix._rotate(rotateAngle);\n            var corners = [];\n            corners.push([bounds.x, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y + bounds.height]);\n            corners.push([bounds.x, bounds.y + bounds.height]);\n            for (var i = 0; i < corners.length; i++) {\n                corners[Number.parseInt(i.toString(), 10)] = matrix._matrix._transform(corners[Number.parseInt(i.toString(), 10)]);\n            }\n            var path = new _PdfPath();\n            path._addRectangle(bounds.x, bounds.y, bounds.width, bounds.height);\n            for (var i = 0; i < 4; i++) {\n                path._points[Number.parseInt(i.toString(), 10)] = corners[Number.parseInt(i.toString(), 10)];\n            }\n            var minX = corners[0][0];\n            var maxX = corners[3][0];\n            var minY = corners[0][1];\n            var maxY = corners[3][1];\n            for (var i = 0; i < 4; i++) {\n                if (corners[Number.parseInt(i.toString(), 10)][0] < minX) {\n                    minX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][0] > maxX) {\n                    maxX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] < minY) {\n                    minY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] > maxY) {\n                    maxY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n            }\n            return { x: bounds.x, y: bounds.y, width: maxX - minX, height: maxY - minY };\n        }\n        return bounds;\n    };\n    PdfAnnotation.prototype._flattenPopUp = function () {\n        this._flattenPop(this._page, this.color, this.bounds, this.border, this.author, this.subject, this.text);\n    };\n    PdfAnnotation.prototype._flattenPop = function (_page, color, boundsValue, border, author, subject, text) {\n        var clientSize = [0, 0];\n        clientSize = _page.size;\n        var x = clientSize[0] - 180;\n        var annotBounds = boundsValue;\n        var y = (annotBounds.y + 142) < clientSize[1] ? annotBounds.y : clientSize[1] - 142;\n        var bounds = [x, y, 180, 142];\n        if (this._dictionary.has('Popup')) {\n            var dictionary = this._dictionary.get('Popup');\n            if (dictionary) {\n                var rectValue = this._dictionary.getArray('Rect');\n                if (rectValue && rectValue.length === 4) {\n                    var left = rectValue[0];\n                    var top_2 = rectValue[1];\n                    var width = rectValue[2];\n                    var height = rectValue[3];\n                    bounds = [left, top_2, width - left, height - top_2];\n                }\n            }\n        }\n        if (typeof color === 'undefined') {\n            color = [0, 0, 0];\n        }\n        var backBrush = new PdfBrush(color);\n        var borderWidth = border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var track = 0;\n        var aBrush = new PdfBrush(this._getForeColor(color));\n        if (typeof author !== 'undefined' && author !== null && author !== '') {\n            track = this._drawAuthor(author, subject, bounds, backBrush, aBrush, _page, track, border);\n        }\n        else if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 40];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n            track = 40;\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            track = 20;\n            _page.graphics.restore();\n        }\n        var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n            bounds[2] - border.width, bounds[3] - (track + border.width)];\n        this._saveGraphics(_page, PdfBlendMode.hardLight);\n        _page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], new PdfPen([0, 0, 0], 1), new PdfBrush([255, 255, 255]));\n        rect[0] += 11;\n        rect[1] += 5;\n        rect[2] -= 22;\n        _page.graphics.restore();\n        this._saveGraphics(_page, PdfBlendMode.normal);\n        if (typeof text !== 'undefined' && text !== null && text !== '') {\n            _page.graphics.drawString(text, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n        }\n        _page.graphics.restore();\n    };\n    PdfAnnotation.prototype._flattenLoadedPopUp = function () {\n        var content = '';\n        if (this._dictionary.has('Contents')) {\n            content = this._dictionary.get('Contents');\n        }\n        var author = this.author;\n        var subject = this.subject;\n        var pen = new PdfPen([0, 0, 0], 1);\n        if (!this._dictionary.has('Popup')) {\n            this._flattenPop(this._page, this.color, this.bounds, this.border, author, subject, content);\n            this._removeAnnotationFromPage(this._page, this);\n        }\n        else {\n            var bounds = this._getRectangleBoundsValue();\n            if (typeof this.color === 'undefined') {\n                this.color = [0, 0, 0];\n            }\n            var backBrush = new PdfBrush(this.color);\n            var borderWidth = this.border.width / 2;\n            var track = 0;\n            var aBrush = new PdfBrush(this._getForeColor(this.color));\n            if (typeof this.author !== 'undefined' && this.author !== null && this.author !== '') {\n                track = this._drawAuthor(this.author, this.subject, bounds, backBrush, aBrush, this._page, track, this.border);\n            }\n            else if (typeof this.subject !== 'undefined' && this.subject !== null && this.subject !== '') {\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 40];\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                this._page.graphics.restore();\n                var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n                contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n                this._saveGraphics(this._page, PdfBlendMode.normal);\n                this._drawSubject(this.subject, contentRect, this._page);\n                track = 40;\n                this._page.graphics.restore();\n            }\n            else {\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 20];\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                track = 20;\n                this._page.graphics.restore();\n            }\n            this._saveGraphics(this._page, PdfBlendMode.hardLight);\n            var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n                bounds[2] - this.border.width, bounds[3] - (track + this.border.width)];\n            this._page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], pen, new PdfBrush([255, 255, 255]));\n            rect[0] += 11;\n            rect[1] += 5;\n            rect[2] -= 22;\n            this._page.graphics.restore();\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            this._page.graphics.restore();\n            //let xmlData: Array<any> = Array<any>();\n            // if (this._dictionary.has('RC')) {\n            //     //xmlData = this.parseXMLData();\n            // }\n            // if (xmlData !== null) {\n            //     // Need to add xml data code\n            // } else {\n            if (typeof content !== 'undefined' && content !== null && content !== '') {\n                this._page.graphics.drawString(content, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n            }\n            // }\n            this._page.graphics.restore();\n            this._removeAnnotationFromPage(this._page, this);\n        }\n    };\n    PdfAnnotation.prototype._getRectangleBoundsValue = function () {\n        if (this._dictionary.has('Popup')) {\n            var dic = this._dictionary.get('Popup');\n            var rect = dic.getArray('Rect');\n            if (rect !== null) {\n                if (this._page !== null) {\n                    if (rect[1] === 0 && rect[3] === 0) {\n                        rect[1] = rect[1] + rect[3];\n                    }\n                    else {\n                        rect[1] = this._page._size[1] - (rect[1] + rect[3]);\n                    }\n                }\n                else {\n                    rect[1] = (rect[1] - rect[3]);\n                }\n                return rect;\n            }\n            else {\n                return [0, 0, 0, 0];\n            }\n        }\n        else {\n            return [0, 0, 0, 0];\n        }\n    };\n    PdfAnnotation.prototype._getForeColor = function (color) {\n        var fore = (((color[0] + color[1] + color[2]) / 3) > 128) ? [0, 0, 0] : [255, 255, 255];\n        return fore;\n    };\n    PdfAnnotation.prototype._drawAuthor = function (author, subject, bounds, backBrush, aBrush, _page, trackingHeight, border) {\n        var borderWidth = this.border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n        if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            titleRect[3] += 20;\n            trackingHeight = titleRect[3];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._authorBoldFont, contentRect, null, aBrush, format);\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3]];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._popUpFont, contentRect, null, aBrush, format);\n            trackingHeight = titleRect[3];\n            _page.graphics.restore();\n        }\n        return trackingHeight;\n    };\n    PdfAnnotation.prototype._drawSubject = function (subject, contentRect, _page) {\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        _page.graphics.drawString(subject, this._authorBoldFont, contentRect, null, new PdfBrush([0, 0, 0]), format);\n    };\n    PdfAnnotation.prototype._saveGraphics = function (_page, blendMode) {\n        _page.graphics.save();\n        _page.graphics.setTransparency(0.8, 0.8, blendMode);\n    };\n    PdfAnnotation.prototype._getBorderColorString = function (color) {\n        return (color[0] / 255).toFixed(3) + ' ' + (color[1] / 255).toFixed(3) + ' ' + (color[2] / 255).toFixed(3) + ' rg ';\n    };\n    PdfAnnotation.prototype._stringToDate = function (date) {\n        var dateFormat = new Date();\n        if (date[0] === 'D' && date[1] === ':') {\n            var year = date.substring(2, 6);\n            var month = date.substring(6, 8);\n            var day = date.substring(8, 10);\n            var hour = date.substring(10, 12);\n            var minute = date.substring(12, 14);\n            var second = date.substring(14, 16);\n            var difference = 0;\n            if (date.length === 23) {\n                var timeZone = date.substring(16, 22);\n                if (timeZone !== '+05\\'30\\'') {\n                    var signature = timeZone[0];\n                    var timeZoneHour = timeZone.substring(1, 3);\n                    var timeZonMinute = timeZone.substring(4, 6);\n                    difference = 5.5 - (signature === '-' ? -1 : 1) * (parseInt(timeZoneHour, 10) + (parseInt(timeZonMinute, 10) / 60));\n                }\n            }\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n            if (difference !== 0) {\n                dateFormat.setTime(dateFormat.getTime() + (difference * 60 * 60 * 1000));\n            }\n        }\n        else if (date.indexOf('/') !== -1) {\n            var list = date.split('/');\n            var year = list[2].split(' ')[0];\n            var month = list[0];\n            if (month !== '10' && month !== '11' && month !== '12') {\n                month = '0' + month;\n            }\n            var day = list[1];\n            var hour = list[2].split(' ')[1].split(':')[0];\n            var minute = list[2].split(' ')[1].split(':')[1];\n            var second = list[2].split(' ')[1].split(':')[2];\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n        }\n        else {\n            dateFormat = new Date(date);\n        }\n        return dateFormat;\n    };\n    PdfAnnotation.prototype._dateToString = function (dateTime) {\n        var month = (dateTime.getMonth() + 1).toString();\n        if (month !== '10' && month !== '11' && month !== '12') {\n            month = '0' + month;\n        }\n        var date = (dateTime.getDate()).toString();\n        if (Number.parseInt(date) < 10) { // eslint-disable-line\n            date = '0' + date;\n        }\n        var hours = (dateTime.getHours()).toString();\n        if (Number.parseInt(hours) < 10) { // eslint-disable-line\n            hours = '0' + hours;\n        }\n        var minutes = (dateTime.getMinutes()).toString();\n        if (Number.parseInt(minutes) < 10) { // eslint-disable-line\n            minutes = '0' + minutes;\n        }\n        var seconds = (dateTime.getSeconds()).toString();\n        if (Number.parseInt(seconds) < 10) { // eslint-disable-line\n            seconds = '0' + seconds;\n        }\n        return 'D:' + dateTime.getFullYear().toString() + month + date + hours + minutes + seconds + '+05\\'30\\'';\n    };\n    PdfAnnotation.prototype._obtainNativeRectangle = function () {\n        var rect = [this._bounds.x, this._bounds.y, this.bounds.x + this._bounds.width, this.bounds.y + this._bounds.height];\n        var cropBoxOrMediaBox;\n        if (this._page) {\n            var size = this._page.size;\n            rect[1] = size[1] - rect[3];\n            var cropBox = this._page.cropBox;\n            if (cropBox && _areNotEqual(cropBox, [0, 0, 0, 0])) {\n                cropBoxOrMediaBox = cropBox;\n            }\n            else {\n                var mBox = this._page.mediaBox;\n                if (mBox && _areNotEqual(mBox, [0, 0, 0, 0])) {\n                    cropBoxOrMediaBox = mBox;\n                }\n            }\n            if (cropBoxOrMediaBox && cropBoxOrMediaBox.length > 2 && (cropBoxOrMediaBox[0] !== 0 || cropBoxOrMediaBox[1] !== 0)) {\n                rect[0] += cropBoxOrMediaBox[0];\n                rect[1] += cropBoxOrMediaBox[1];\n            }\n        }\n        return rect;\n    };\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n/**\n * Represents the annotations which have comments and review history.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfComment = page.annotations.at(0) as PdfComment;\n * // Gets the comments of annotation\n * let comment : PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComment = /** @class */ (function (_super) {\n    __extends(PdfComment, _super);\n    function PdfComment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfComment.prototype, \"comments\", {\n        /**\n         * Gets the comments of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation comments\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._comments) {\n                return this._comments;\n            }\n            else {\n                return this._comments = new PdfPopupAnnotationCollection(this, false);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfComment.prototype, \"reviewHistory\", {\n        /**\n         * Gets the review history of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation review history.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.reviewHistory;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._reviewHistory) {\n                return this._reviewHistory;\n            }\n            else {\n                return this._reviewHistory = new PdfPopupAnnotationCollection(this, true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfComment;\n}(PdfAnnotation));\nexport { PdfComment };\n/**\n * `PdfLineAnnotation` class represents the line annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new line annotation with line points\n * const annotation: PdfLineAnnotation = new PdfLineAnnotation([10, 50, 250, 50]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLineAnnotation, _super);\n    function PdfLineAnnotation(linePoints) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Line'));\n        if (typeof linePoints !== 'undefined') {\n            _this.linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.lineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfLineAnnotation.prototype, \"linePoints\", {\n        /**\n         * Gets the line points of the line annotation.\n         *\n         * @returns {number[]} Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line points of the line annotation.\n         * let linePoints : number[] = annotation.linePoints;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._linePoints === 'undefined' && this._dictionary.has('L')) {\n                var points = this._dictionary.getArray('L');\n                if (points) {\n                    this._linePoints = points;\n                }\n            }\n            return this._linePoints;\n        },\n        /**\n         * Sets the line points of the line annotation.\n         *\n         * @param {number[]} value Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line points of the line annotation.\n         * annotation.linePoints = [10, 50, 250, 50];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && (typeof this._linePoints === 'undefined' || _areNotEqual(value, this._linePoints))) {\n                if (value.length === 4) {\n                    this._dictionary.update('L', value);\n                    this._linePoints = value;\n                }\n                else {\n                    throw new Error('Line points length should be 4.');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderExt\", {\n        /**\n         * Gets the line extension of the line annotation.\n         *\n         * @returns {number} Leader line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line extension of the line annotation.\n         * let leaderExt: number = annotation.leaderExt;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderExt === 'undefined' && this._dictionary.has('LLE')) {\n                var leaderExt = this._dictionary.get('LLE');\n                if (typeof leaderExt !== 'undefined') {\n                    this._leaderExt = leaderExt;\n                }\n            }\n            return this._leaderExt;\n        },\n        /**\n         * Sets the line extension of the line annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line extension of the line annotation.\n         * annotation.leaderExt = 4;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLE', value);\n                this._leaderExt = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderLine\", {\n        /**\n         * Gets the leader line of the line annotation.\n         *\n         * @returns {number} Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader line of the line annotation.\n         * let leaderLine: number = annotation.leaderLine;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderLine === 'undefined' && this._dictionary.has('LL')) {\n                var leaderLine = this._dictionary.get('LL');\n                if (typeof leaderLine !== 'undefined') {\n                    this._leaderLine = leaderLine;\n                }\n            }\n            return this._leaderLine;\n        },\n        /**\n         * Sets the leader line of the line annotation.\n         *\n         * @param {number} value Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader line of the line annotation.\n         * annotation.leaderLine = 5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value) && this.leaderExt !== 0) {\n                this._dictionary.update('LL', value);\n                this._leaderLine = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the line annotation.\n         *\n         * @returns {PdfAnnotationLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line ending style of the line annotation.\n         * let lineEndingStyle: PdfAnnotationLineEndingStyle = annotation.lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineEndingStyle === 'undefined') {\n                var value = new PdfAnnotationLineEndingStyle();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('LE')) {\n                    var lineStyles = this._dictionary.getArray('LE');\n                    if (lineStyles && Array.isArray(lineStyles)) {\n                        value._begin = _mapLineEndingStyle(lineStyles[0].name);\n                        value._end = _mapLineEndingStyle(lineStyles[1].name);\n                    }\n                }\n                this._lineEndingStyle = value;\n            }\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfAnnotationLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var style = this.lineEndingStyle;\n            if (style.begin !== value.begin || style.end !== value.end) {\n                style.begin = value.begin;\n                style.end = value.end;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderOffset\", {\n        /**\n         * Gets the leader offset of the line annotation.\n         *\n         * @returns {number} Leader offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader offset value of the line annotation\n         * let leaderOffset: number = annotation.leaderOffset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderOffset === 'undefined' && this._dictionary.has('LLO')) {\n                var leaderOffset = this._dictionary.get('LLO');\n                if (typeof leaderOffset !== 'undefined' && leaderOffset >= 0) {\n                    this._leaderOffset = leaderOffset;\n                }\n            }\n            return this._leaderOffset;\n        },\n        /**\n         * Sets the leader offset of the line annotation.\n         *\n         * @param {number} value Leader line offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader offset of the line annotation.\n         * annotation.leaderOffset = 1;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLO', value);\n                this._leaderOffset = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineIntent\", {\n        /**\n         * Gets the line intent of the line annotation.\n         *\n         * @returns {PdfLineIntent} Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line intent value of the line annotation\n         * let lineIntent: PdfLineIntent = annotation.lineIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineIntent === 'undefined' && this._dictionary.has('IT')) {\n                var lineIntent = this._dictionary.get('IT');\n                if (lineIntent) {\n                    this._lineIntent = lineIntent.name === 'LineDimension' ? PdfLineIntent.lineDimension : PdfLineIntent.lineArrow;\n                }\n            }\n            return this._lineIntent;\n        },\n        /**\n         * Sets the line intent of the line annotation.\n         *\n         * @param {PdfLineIntent} value Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line intent of the line annotation.\n         * annotation.lineIntent = PdfLineIntent.lineDimension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this.lineIntent) {\n                this._lineIntent = value;\n                this._dictionary.update('IT', _PdfName.get(value === PdfLineIntent.lineDimension ? 'LineDimension' : 'LineArrow'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the line annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flag to have measurement dictionary of the line annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined') {\n                this._measure = this._dictionary.has('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the line annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flag to have measurement dictionary of the line annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                    this.caption.cap = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined' || this._isLoaded) {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the line annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfLineAnnotation.prototype._postProcess = function (flatten) {\n        if (typeof this.linePoints === 'undefined' || this.linePoints === null) {\n            throw new Error('Line points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('Cap')) {\n            this._dictionary.set('Cap', false);\n        }\n        if (!this._dictionary.has('CP')) {\n            this._dictionary.set('CP', _PdfName.get('Inline'));\n        }\n        if (!this._dictionary.has('LE')) {\n            this.lineEndingStyle = new PdfAnnotationLineEndingStyle();\n        }\n        if (!this._dictionary.has('LL')) {\n            this.leaderLine = 0;\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.leaderExt = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createLineMeasureAppearance(flatten);\n        }\n        else {\n            if (this._setAppearance) {\n                this._appearanceTemplate = this._createAppearance();\n            }\n            var boundsArray = this._obtainLineBounds();\n            var bounds = { x: boundsArray[0],\n                y: boundsArray[1], width: boundsArray[2], height: boundsArray[3] };\n            this._bounds = bounds;\n            var updatedBounds = void 0;\n            if (this._page && this._page._isNew && this._page._pageSettings && !this._setAppearance && !this.flatten) {\n                updatedBounds = _updateBounds(this);\n            }\n            else {\n                updatedBounds = [this._bounds.x,\n                    this._bounds.y,\n                    this._bounds.x + this._bounds.width,\n                    this._bounds.y + this._bounds.height];\n            }\n            this._dictionary.update('Rect', updatedBounds);\n        }\n    };\n    PdfLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createLineMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && isFlatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var appearanceDictionary = this._appearanceTemplate._content.dictionary;\n            var isValid = appearanceDictionary && appearanceDictionary.has('BBox') && !appearanceDictionary.has('CropBox') && !appearanceDictionary.has('MediaBox') && !appearanceDictionary.has('Matrix');\n            if (this._isLoaded && isValid && this.measure && !this._setAppearance) {\n                var graphics = this._page.graphics;\n                var state = graphics.save();\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.setTransparency(this._opacity);\n                }\n                var point = this.bounds;\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                point.x -= box[0];\n                point.y += box[1];\n                graphics.drawTemplate(this._appearanceTemplate, point);\n                graphics.restore(state);\n                this._removeAnnotationFromPage(this._page, this);\n            }\n            else {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_1 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_1, appearance);\n                this._dictionary.update('AP', reference_1);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfLineAnnotation.prototype._createLineMeasureAppearance = function (_isFlatten) {\n        var nativeRectangle = [0, 0, 0, 0];\n        var area = this._convertToUnit();\n        var linePoints1 = this._obtainLinePoints();\n        var points = [];\n        for (var j = 0; j < linePoints1.length; j = j + 2) {\n            points.push([linePoints1[Number.parseInt(j.toString(), 10)], (linePoints1[j + 1])]);\n        }\n        var graphicsPath = new _PdfPath();\n        graphicsPath._points = points;\n        graphicsPath._pathTypes = [0, 1];\n        var rectPath = graphicsPath._getBounds();\n        this._bounds = { x: rectPath[0], y: rectPath[1], width: rectPath[2], height: rectPath[3] };\n        var borderPen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        nativeRectangle = this._obtainLineBounds();\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        parameter.borderPen = borderPen;\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var linePoints = this._obtainLinePoints();\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (typeof linePoints !== 'undefined' && linePoints.length === 4) {\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var fontSize = font.measureString(area.toFixed(2) + ' ' + this._unitString, [0, 0], format, 0, 0);\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            if (this.leaderLine < 0) {\n                leaderLine = -(this.leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = this.leaderLine;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((fontSize[0] / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            var state = void 0;\n            if (this.opacity && this._opacity < 1) {\n                state = graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            if (this.caption.type === PdfLineCaptionType.top || (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n                graphics.drawLine(borderPen, start[0], -start[1], end[0], -end[1]);\n            }\n            else {\n                graphics.drawLine(borderPen, start[0], -start[1], first[0], -first[1]);\n                graphics.drawLine(borderPen, end[0], -end[1], second[0], -second[1]);\n            }\n            if (this.opacity && this._opacity < 1) {\n                graphics.restore(state);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, borderPen, backBrush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n            }\n            else {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [(-fontSize[0] / 2), 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, template._content);\n            template._content.reference = ref;\n            var nativeRectangle1 = [this.bounds.x,\n                this.bounds.y + this.bounds.height,\n                this.bounds.width,\n                this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            if (this._isBounds && !this.measure) {\n                nativeRectangle = nativeRectangle1;\n                this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            }\n            else {\n                this._dictionary.update('Rect', [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]]);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (typeof _isFlatten !== 'undefined' && !_isFlatten) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dic = new _PdfDictionary();\n                dic.set('N', ref);\n                dic._updated = true;\n                this._dictionary.set('AP', dic);\n                var measureDictionary = this._createMeasureDictionary(this._unitString);\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, measureDictionary);\n                measureDictionary._updated = true;\n                if (this._dictionary.has('Measure')) {\n                    _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n                }\n                this._dictionary.update('Measure', reference);\n            }\n            var lineStyles = [];\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.begin)));\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.end)));\n            this._dictionary.update('LE', lineStyles);\n            if (this._linePoints !== null) {\n                this._dictionary.update('L', this._linePoints);\n            }\n            else {\n                throw new Error('LinePoints cannot be null');\n            }\n            this._dictionary.update('C', [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n                Number.parseFloat((this.color[1] / 255).toFixed(3)),\n                Number.parseFloat((this.color[2] / 255).toFixed(3))]);\n            var offset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            this._dictionary.update('Subtype', new _PdfName('Line'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            this._dictionary.update('IT', new _PdfName('LineDimension'));\n            this._dictionary.update('LLE', this.leaderExt);\n            this._dictionary.update('LLO', offset);\n            this._dictionary.update('LL', this.leaderLine);\n            this._dictionary.update('CP', _PdfName.get(this.caption.type === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n            this._dictionary.update('Cap', this.caption.cap);\n            var bounds = [nativeRectangle[0],\n                nativeRectangle[1],\n                nativeRectangle[0] + nativeRectangle[2],\n                nativeRectangle[1] + nativeRectangle[3]];\n            this._dictionary.update('Rect', bounds);\n            this._bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._calculateAngle = function (startPointX, startPointY, endPointX, endPointY) {\n        return -(Math.atan2((endPointY - startPointY), (endPointX - startPointX)) * (180 / Math.PI));\n    };\n    PdfLineAnnotation.prototype._calculateLineBounds = function (linePoints, leaderLineExt, leaderLine, leaderOffset, lineStyle, borderWidth) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (linePoints && linePoints.length === 4) {\n            var angle = this._getAngle(linePoints);\n            var leaderLines = 0;\n            var lineAngle = 0;\n            if (leaderLine < 0) {\n                leaderLines = -(leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLines = leaderLine;\n                lineAngle = angle;\n            }\n            var x1y1 = [linePoints[0], linePoints[1]];\n            var x2y2 = [linePoints[2], linePoints[3]];\n            if (leaderOffset !== 0) {\n                var offsetPoint1 = this._getAxisValue(x1y1, (lineAngle + 90), leaderOffset);\n                var offsetPoint2 = this._getAxisValue(x2y2, (lineAngle + 90), leaderOffset);\n                linePoints[0] = offsetPoint1[0];\n                linePoints[1] = offsetPoint1[1];\n                linePoints[2] = offsetPoint2[0];\n                linePoints[3] = offsetPoint2[1];\n            }\n            var startingPoint = this._getAxisValue(x1y1, (lineAngle + 90), leaderLines + leaderOffset);\n            var endingPoint = this._getAxisValue(x2y2, (lineAngle + 90), leaderLines + leaderOffset);\n            var beginLineLeader = this._getAxisValue(x1y1, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var endLineLeader = this._getAxisValue(x2y2, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var beginLinePoint = this._getLinePoint(lineStyle.begin, borderWidth);\n            var endLinePoint = this._getLinePoint(lineStyle.end, borderWidth);\n            var widthX = [];\n            var heightY = [];\n            if ((lineAngle >= 45 && lineAngle <= 135) || (lineAngle >= 225 && lineAngle <= 315)) {\n                widthX[0] = beginLinePoint.y;\n                heightY[0] = beginLinePoint.x;\n                widthX[1] = endLinePoint.y;\n                heightY[1] = endLinePoint.x;\n            }\n            else {\n                widthX[0] = beginLinePoint.x;\n                heightY[0] = beginLinePoint.y;\n                widthX[1] = endLinePoint.x;\n                heightY[1] = endLinePoint.y;\n            }\n            var width = Math.max(widthX[0], widthX[1]);\n            var height = Math.max(heightY[0], heightY[1]);\n            if (width === 0) {\n                width = 1;\n            }\n            if (height === 0) {\n                height = 1;\n            }\n            if (startingPoint[0] === Math.min(startingPoint[0], endingPoint[0])) {\n                startingPoint[0] -= width * borderWidth;\n                endingPoint[0] += width * borderWidth;\n                startingPoint[0] = Math.min(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.min(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.max(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.max(endingPoint[0], endLineLeader[0]);\n            }\n            else {\n                startingPoint[0] += width * borderWidth;\n                endingPoint[0] -= width * borderWidth;\n                startingPoint[0] = Math.max(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.max(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.min(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.min(endingPoint[0], endLineLeader[0]);\n            }\n            if (startingPoint[1] === Math.min(startingPoint[1], endingPoint[1])) {\n                startingPoint[1] -= height * borderWidth;\n                endingPoint[1] += height * borderWidth;\n                startingPoint[1] = Math.min(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.min(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.max(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.max(endingPoint[1], endLineLeader[1]);\n            }\n            else {\n                startingPoint[1] += height * borderWidth;\n                endingPoint[1] -= height * borderWidth;\n                startingPoint[1] = Math.max(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.max(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.min(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.min(endingPoint[1], endLineLeader[1]);\n            }\n            bounds = this._getBounds([{ x: startingPoint[0], y: startingPoint[1] }, { x: endingPoint[0], y: endingPoint[1] }]);\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._getLinePoint = function (style, borderWidth) {\n        var point = { x: 0, y: 0 };\n        if (style) {\n            switch (style) {\n                case PdfLineEndingStyle.square:\n                case PdfLineEndingStyle.circle:\n                case PdfLineEndingStyle.diamond:\n                    point.x = 3;\n                    point.y = 3;\n                    break;\n                case PdfLineEndingStyle.openArrow:\n                case PdfLineEndingStyle.closedArrow:\n                    point.x = 1;\n                    point.y = 5;\n                    break;\n                case PdfLineEndingStyle.rOpenArrow:\n                case PdfLineEndingStyle.rClosedArrow:\n                    point.x = 9 + (borderWidth / 2);\n                    point.y = 5 + (borderWidth / 2);\n                    break;\n                case PdfLineEndingStyle.slash:\n                    point.x = 5;\n                    point.y = 9;\n                    break;\n                case PdfLineEndingStyle.butt:\n                    point.x = 1;\n                    point.y = 3;\n                    break;\n                default:\n                    point.x = 0;\n                    point.y = 0;\n                    break;\n            }\n        }\n        return point;\n    };\n    PdfLineAnnotation.prototype._getBounds = function (points) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (points.length > 0) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; ++i) {\n                var point = points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds.x = xmin;\n            bounds.y = ymin;\n            bounds.width = xmax - xmin;\n            bounds.height = ymax - ymin;\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._obtainLineBounds = function () {\n        var bounds = this.bounds;\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var leaderOffset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            var leaderExt = this._dictionary.has('LLE') ? this.leaderExt : 0;\n            var leaderLine = this._dictionary.has('LL') ? this.leaderLine : 0;\n            bounds = this._calculateLineBounds(this._linePoints, leaderExt, leaderLine, leaderOffset, this.lineEndingStyle, this.border.width);\n            bounds = { x: bounds.x - 8, y: bounds.y - 8, width: (bounds.width + 2 * 8), height: (bounds.height + 2 * 8) };\n        }\n        return [bounds.x, bounds.y, bounds.width, bounds.height];\n    };\n    PdfLineAnnotation.prototype._createAppearance = function () {\n        var template = new PdfTemplate(this._obtainLineBounds(), this._crossReference);\n        var parameter = new _PaintParameter();\n        _setMatrix(template, this._getRotationAngle());\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var pen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n        }\n        else if (this.border.style === PdfBorderStyle.dot) {\n            pen._dashStyle = PdfDashStyle.dot;\n        }\n        parameter.borderPen = pen;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var brush = new PdfBrush(typeof this.innerColor !== 'undefined' ? this._innerColor : [0, 0, 0]);\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (!this.text && !this._dictionary.has('Contents')) {\n            this.text = this.subject;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var lineWidth = font.measureString(this.text ? this.text : '', [0, 0], format, 0, 0)[0]; //66.71001;\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            if (this.leaderLine < 0) {\n                leaderLine = -(this.leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = this.leaderLine;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((lineWidth / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            if (this.opacity && this._opacity < 1) {\n                var state = graphics.save();\n                graphics.setTransparency(this._opacity);\n                this._drawLine(graphics, pen, start, end, first, second);\n                graphics.restore(state);\n            }\n            else {\n                this._drawLine(graphics, pen, start, end, first, second);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, pen, brush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 2 * height);\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n                }\n            }\n            else {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 3 * (height / 2));\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n                }\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            if (this.caption.cap) {\n                graphics.drawString(this.text, font, [(-lineWidth / 2), 0, 0, 0], null, parameter.foreBrush);\n            }\n            graphics.restore();\n            var bounds = this._obtainLineBounds();\n            var rectangleBounds = _fromRectangle({ x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] });\n            if (this._page._isNew && this._page._pageSettings && this._setAppearance && !this.flatten) {\n                rectangleBounds = _updateBounds(this, bounds);\n            }\n            this.bounds = { x: rectangleBounds[0], y: rectangleBounds[1], width: rectangleBounds[2], height: rectangleBounds[3] };\n            if ((!this.measure) && (!this._dictionary.has('Measure'))) {\n                this._dictionary.update('Rect', [rectangleBounds[0], rectangleBounds[1], rectangleBounds[2], rectangleBounds[3]]);\n            }\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._drawLine = function (graphics, pen, start, end, first, second) {\n        if (typeof this.text === 'undefined' ||\n            this._text === '' ||\n            this.caption.type === PdfLineCaptionType.top ||\n            (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n            graphics.drawLine(pen, start[0], -start[1], end[0], -end[1]);\n        }\n        else {\n            graphics.drawLine(pen, start[0], -start[1], first[0], -first[1]);\n            graphics.drawLine(pen, end[0], -end[1], second[0], -second[1]);\n        }\n    };\n    PdfLineAnnotation.prototype._convertToUnit = function () {\n        var points = this._obtainLinePoints();\n        var data = new Array(points.length / 2);\n        var count = 0;\n        for (var j = 0; j < points.length; j = j + 2) {\n            data[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], (points[j + 1])];\n            count++;\n        }\n        var distance = Math.sqrt(Math.pow((data[1][0] - data[0][0]), 2) + Math.pow((data[1][1] - data[0][1]), 2));\n        var value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n        this._unitString = value.unitString;\n        return (new _PdfUnitConvertor())._convertUnits(distance, _PdfGraphicsUnit.point, value.graphicsUnit);\n    };\n    PdfLineAnnotation.prototype._obtainLinePoints = function () {\n        var points = [];\n        if (this.linePoints) {\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return points;\n    };\n    return PdfLineAnnotation;\n}(PdfComment));\nexport { PdfLineAnnotation };\n/**\n * `PdfCircleAnnotation` class represents the circle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new circle annotation with circle bounds\n * const annotation: PdfCircleAnnotation = new PdfCircleAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCircleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfCircleAnnotation, _super);\n    function PdfCircleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._measureType = PdfCircleMeasurementType.diameter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.circleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the circle annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the flag to have measurement dictionary of the circle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the flag to have measurement dictionary of the circle annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined' || this._isLoaded) {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measureType\", {\n        /**\n         * Gets the measurement type of the annotation.\n         *\n         * @returns {PdfCircleMeasurementType} Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement type of the annotation.\n         * let type: PdfCircleMeasurementType = annotation.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Contents')) {\n                var text = this._dictionary.get('Contents');\n                this._unitString = text.substring(text.length - 2);\n                this._unit = _mapMeasurementUnit(this._unitString);\n                var value = text.substring(0, text.length - 2);\n                var converter = new _PdfUnitConvertor();\n                var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, _mapGraphicsUnit(this._unitString));\n                if (radius.toString() === value) {\n                    this._measureType = PdfCircleMeasurementType.radius;\n                }\n                else {\n                    this._measureType = PdfCircleMeasurementType.diameter;\n                }\n            }\n            return this._measureType;\n        },\n        /**\n         * Sets the measurement type of the annotation.\n         *\n         * @param {PdfCircleMeasurementType} value Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement type of the annotation.\n         * annotation.type = PdfCircleMeasurementType.diameter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._measureType = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCircleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfCircleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfCircleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfCircleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n        }\n        else {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n            this._dictionary.update('Rect', _updateBounds(this));\n        }\n    };\n    PdfCircleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && isFlatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var appearanceDictionary = this._appearanceTemplate._content.dictionary;\n            var isValid = appearanceDictionary && appearanceDictionary.has('BBox') && !appearanceDictionary.has('CropBox') && !appearanceDictionary.has('MediaBox');\n            if (isValid && this.measure) {\n                var graphics = this._page.graphics;\n                var state = graphics.save();\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.setTransparency(this._opacity);\n                }\n                var point = this.bounds;\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                point.x -= box[0];\n                point.y += box[1];\n                graphics.drawTemplate(this._appearanceTemplate, point);\n                graphics.restore(state);\n                this._removeAnnotationFromPage(this._page, this);\n            }\n            else {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_2 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_2, appearance);\n                this._dictionary.update('AP', reference_2);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfCircleAnnotation.prototype._createCircleMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._convertToUnit();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var color = this.color ? this.color : [0, 0, 0];\n        var borderPen = new PdfPen(color, borderWidth);\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        parameter.foreBrush = new PdfBrush(color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.save();\n        graphics.drawEllipse(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(color, this.border.width));\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[3] / 2) - (fontsize[0] / 2);\n            graphics.drawLine(parameter.borderPen, 0, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        else {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[2] / 2) + ((nativeRectangle[2] / 4) - (fontsize[0] / 2));\n            graphics.drawLine(parameter.borderPen, nativeRectangle[2] / 2, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            graphics._template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, graphics._template._content);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            this._dictionary.update('Subtype', new _PdfName('Circle'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n        }\n        return template;\n    };\n    PdfCircleAnnotation.prototype._convertToUnit = function () {\n        var converter = new _PdfUnitConvertor();\n        var value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n        this._unitString = value.unitString;\n        var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, value.graphicsUnit);\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            radius = 2 * radius;\n        }\n        return radius;\n    };\n    return PdfCircleAnnotation;\n}(PdfComment));\nexport { PdfCircleAnnotation };\n/**\n * `PdfEllipseAnnotation` class represents the ellipse annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ellipse annotation with bounds\n * const annotation: PdfEllipseAnnotation = new PdfEllipseAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfEllipseAnnotation = /** @class */ (function (_super) {\n    __extends(PdfEllipseAnnotation, _super);\n    function PdfEllipseAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.ellipseAnnotation;\n        return _this;\n    }\n    PdfEllipseAnnotation._load = function (page, dictionary) {\n        var annot = new PdfEllipseAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfEllipseAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfEllipseAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createCircleAppearance();\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfEllipseAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_3 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_3, appearance);\n                this._dictionary.update('AP', reference_3);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    return PdfEllipseAnnotation;\n}(PdfComment));\nexport { PdfEllipseAnnotation };\n/**\n * `PdfSquareAnnotation` class represents the square annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfSquareAnnotation = new PdfSquareAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSquareAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSquareAnnotation, _super);\n    function PdfSquareAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.squareAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the square annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the border effect of the square annotation.\n         * let borderEffect : PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the square annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the border effect of the square annotation.\n         * annotation.borderEffect.intensity = 1;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the Square annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the flag to have measurement dictionary of the square annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the flag to have measurement dictionary of the square annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined') {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSquareAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSquareAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSquareAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSquareAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n        }\n        else {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (typeof this._intensity === 'undefined' &&\n                typeof this._borderEffect !== 'undefined' &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.set('I', this.borderEffect._intensity);\n                if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                    dictionary.set('S', _PdfName.get('C'));\n                }\n                this._dictionary.update('BE', dictionary);\n            }\n        }\n    };\n    PdfSquareAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n            if (this._isLoaded && !this._dictionary.has('Measure')) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var appearanceDictionary = this._appearanceTemplate._content.dictionary;\n            var isValid = appearanceDictionary && appearanceDictionary.has('BBox') && !appearanceDictionary.has('CropBox') && !appearanceDictionary.has('MediaBox');\n            if (isValid && this.measure) {\n                var graphics = this._page.graphics;\n                var state = graphics.save();\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.setTransparency(this._opacity);\n                }\n                var point = this.bounds;\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                point.x -= box[0];\n                point.y += box[1];\n                graphics.drawTemplate(this._appearanceTemplate, point);\n                graphics.restore(state);\n                this._removeAnnotationFromPage(this._page, this);\n            }\n            else {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_4 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_4, appearance);\n                this._dictionary.update('AP', reference_4);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfSquareAnnotation.prototype._createSquareMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._calculateAreaOfSquare();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' sq ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var borderPen = new PdfPen(this.color, borderWidth);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        var appearanceBounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, appearanceBounds);\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(this.color, this.border.width));\n        graphics.save();\n        graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n        var x = (nativeRectangle[2] / 2) - (fontsize[0] / 2);\n        var y = (nativeRectangle[3] / 2) - (fontsize[1] / 2);\n        graphics.translateTransform(x, -y - font._metrics._getHeight());\n        graphics.drawString((area.toFixed(2) + ' sq ' + this._unitString), font, [0, 0, 0, 0], null, parameter.foreBrush);\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            var tem = graphics._template._content;\n            tem.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, tem);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            var nativeRectangle1 = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            nativeRectangle1[2] = (this.bounds.x + this.bounds.width);\n            nativeRectangle1[3] = size[1] - this.bounds.y;\n            if (this._isBounds) {\n                nativeRectangle = nativeRectangle1;\n            }\n            if (this._page._isNew && this._page._pageSettings) {\n                nativeRectangle1 = _updateBounds(this);\n            }\n            this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var reference = this._crossReference._getNextReference();\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            this._dictionary.update('Subject', ('Area Measurement'));\n            if (typeof this.subject === 'undefined') {\n                this._dictionary.update('Subject', ('Area Measurement'));\n            }\n            this._dictionary.update('MeasurementTypes', 129);\n            this._dictionary.update('Subtype', new _PdfName('Square'));\n            this._dictionary.update('IT', new _PdfName('SquareDimension'));\n            var elements = this._dictionary.getArray('Rect');\n            var vertices = new Array(elements.length * 2);\n            vertices[0] = elements[0];\n            vertices[1] = elements[3];\n            vertices[2] = elements[0];\n            vertices[3] = elements[1];\n            vertices[4] = elements[2];\n            vertices[5] = elements[1];\n            vertices[6] = elements[2];\n            vertices[7] = elements[3];\n            this._dictionary.update('Vertices', vertices);\n        }\n        return template;\n    };\n    PdfSquareAnnotation.prototype._calculateAreaOfSquare = function () {\n        var area;\n        var converter = new _PdfUnitConvertor();\n        var value;\n        if (this.bounds.width === this.bounds.height) {\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * width;\n        }\n        else {\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var height = converter._convertUnits(this.bounds.height, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * height;\n        }\n        return area;\n    };\n    return PdfSquareAnnotation;\n}(PdfComment));\nexport { PdfSquareAnnotation };\n/**\n * `PdfRectangleAnnotation` class represents the rectangle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfRectangleAnnotation = new PdfRectangleAnnotation(10, 10, 200, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRectangleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRectangleAnnotation, _super);\n    function PdfRectangleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rectangleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the rectangle annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the border effect of the rectangle annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the rectangle annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Sets the border effect of rectangle annotation.\n         * annotation. borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRectangleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRectangleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRectangleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRectangleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfRectangleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (isNormalMatrix && this._page.rotation !== PdfRotationAngle.angle0 ||\n                this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_5 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_5, appearance);\n                this._dictionary.update('AP', reference_5);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfRectangleAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics.drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._removeAnnotationFromPage(this._page, this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    return PdfRectangleAnnotation;\n}(PdfComment));\nexport { PdfRectangleAnnotation };\n/**\n * `PdfPolygonAnnotation` class represents the polygon annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new polygon annotation with bounds\n * const annotation: PdfPolygonAnnotation = new PdfPolygonAnnotation([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolygonAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolygonAnnotation, _super);\n    function PdfPolygonAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Polygon'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        _this._type = _PdfAnnotationType.polygonAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the polygon annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the border effect of the polygon annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the polygon annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the border effect of the polygon annotation\n         * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy ;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the polygon annotation.\n         *\n         * @returns {number} Line extension.\n         *  ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the line extension of the polygon annotation\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the polygon annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the line extension of the polygon annotation\n         * annotation.lineExtension = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfPolygonAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolygonAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolygonAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolygonAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var array = [];\n        for (var i = 0; i < this._points.length; i++) {\n            var value = this._points[Number.parseInt(i.toString(), 10)];\n            array.push(value);\n        }\n        if (array[0] !== array[array.length - 2] || array[1] !== array[array.length - 1]) {\n            array[array.length] = this._points[0];\n            array[array.length] = this._points[1];\n        }\n        this._points = array;\n        var polygonBounds = this._getBoundsValue(this._points);\n        var bounds = [polygonBounds.x,\n            polygonBounds.y,\n            polygonBounds.x + polygonBounds.width,\n            polygonBounds.y + polygonBounds.height];\n        this._dictionary.update('Rect', bounds);\n        this._dictionary.update('LLE', this._lineExtension);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n        }\n        this._dictionary.update('Vertices', this._points);\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfPolygonAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._flatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (this._dictionary.has('AP')) {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box && box.length >= 2) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotationFromPage(this._page, this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_6 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_6, appearance);\n                this._dictionary.update('AP', reference_6);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolygonAnnotation.prototype._createPolygonAppearance = function (flatten) {\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.color && this.border.width > 0) {\n                borderPen = new PdfPen(this.color, this.border.width);\n            }\n            var backgroundBrush = void 0;\n            if (this.innerColor) {\n                backgroundBrush = new PdfBrush(this.innerColor);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen || backgroundBrush) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                    var graphicsPath = new _PdfPath();\n                    graphicsPath._addPolygon(this._getLinePoints());\n                    this._drawCloudStyle(graphics, backgroundBrush, borderPen, radius, 0.833, graphicsPath._points, false);\n                }\n                else {\n                    graphics.drawPolygon(this._getLinePoints(), borderPen, backgroundBrush);\n                }\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.restore(state);\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            if (typeof this._borderEffect !== 'undefined' &&\n                typeof this.borderEffect.intensity !== 'undefined' && this.borderEffect.intensity !== 0 &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                rect.x = boundsValue.x - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.y = boundsValue.y - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.width = boundsValue.width + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n                rect.height = boundsValue.height + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n            }\n            else {\n                rect.x = boundsValue.x - this.border.width;\n                rect.y = boundsValue.y - this.border.width;\n                rect.width = boundsValue.width + (2 * this.border.width);\n                rect.height = boundsValue.height + (2 * this.border.width);\n            }\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && this.color) {\n                parameter.borderPen = new PdfPen(this._color, this.border.width);\n            }\n            if (this.color) {\n                parameter.foreBrush = new PdfBrush(this._color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                var graphicsPath = new _PdfPath();\n                graphicsPath._addPolygon(this._getLinePoints());\n                this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n            }\n            else {\n                graphics.drawPolygon(this._getLinePoints(), parameter.borderPen, parameter.backBrush);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolygonAnnotation.prototype._getLinePoints = function () {\n        var polygonPoints;\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var pageWidth = pageSize[0];\n        if (this._dictionary.has('Vertices') && !this._isBounds) {\n            var rotation = void 0;\n            if (this._page._pageDictionary.has('Rotate')) {\n                rotation = this._page._pageDictionary.get('Rotate');\n            }\n            if (this._page.rotation) {\n                if (this._page.rotation === PdfRotationAngle.angle90) {\n                    rotation = 90;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle180) {\n                    rotation = 180;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle270) {\n                    rotation = 270;\n                }\n            }\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                var points_1 = [];\n                linePoints.forEach(function (value) {\n                    points_1.push(value);\n                });\n                polygonPoints = [];\n                for (var j = 0; j < points_1.length; j = j + 2) {\n                    if (this.flatten) {\n                        polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], (pageHeight - points_1[j + 1])]);\n                    }\n                    else {\n                        polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], -points_1[j + 1]]);\n                    }\n                }\n                if (rotation) {\n                    if (rotation === 270) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageWidth - x;\n                        }\n                    }\n                    else if (rotation === 90) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            if (this._page._origin[1] !== 0) {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    (polygonPoints[Number.parseInt(k.toString(), 10)][1] - pageHeight);\n                            }\n                            else {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            }\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = x;\n                        }\n                    }\n                    else if (rotation === 180) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageWidth - x;\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageHeight -\n                                polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                        }\n                    }\n                }\n            }\n        }\n        else if (this._points !== null) {\n            var points_2 = [];\n            this._points.forEach(function (value) {\n                points_2.push(value);\n            });\n            polygonPoints = [];\n            for (var j = 0; j < this._points.length; j = j + 2) {\n                if (this.flatten) {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], (pageHeight - points_2[j + 1])]);\n                }\n                else {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], -points_2[j + 1]]);\n                }\n            }\n        }\n        return polygonPoints;\n    };\n    return PdfPolygonAnnotation;\n}(PdfComment));\nexport { PdfPolygonAnnotation };\n/**\n * `PdfPolyLineAnnotation` class represents the polyline annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new poly line annotation with bounds\n * const annotation: PdfPolyLineAnnotation = new PdfPolyLineAnnotation ([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolyLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolyLineAnnotation, _super);\n    function PdfPolyLineAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._beginLine = PdfLineEndingStyle.none;\n        _this._endLine = PdfLineEndingStyle.none;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        _this._type = _PdfAnnotationType.polyLineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"beginLineStyle\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let beginLineStyle: PdfLineEndingStyle = annotation.beginLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._beginLine = _mapLineEndingStyle(lineStyles[0].name);\n                }\n            }\n            return this._beginLine;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the begin line ending style of the annotation.\n         * annotation.beginLineStyle = PdfLineEndingStyle.slash;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._beginLine) {\n                this._beginLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"endLineStyle\", {\n        /**\n         * Gets the end line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let endLineStyle: PdfLineEndingStyle = annotation.endLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._endLine = _mapLineEndingStyle(lineStyles[1].name);\n                }\n            }\n            return this._endLine;\n        },\n        /**\n         * Sets the end line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the end line ending style of the annotation.\n         * annotation.endLineStyle = PdfLineEndingStyle.square;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._endLine) {\n                this._endLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the square annotation.\n         *\n         * @returns {number} Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the line extension of annotation.\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the square annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the line extension of the annotation.\n         * annotation.lineExtension = 3;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPolyLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolyLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolyLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolyLineAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var points = this._getLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        this._polylinePoints = points;\n        this._pathTypes = pathTypes;\n        var path = new _PdfPath();\n        path._points = points;\n        path._pathTypes = pathTypes;\n        this._dictionary.update('Vertices', this._points);\n        var lineStyle = [];\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n        this._dictionary.update('LE', lineStyle);\n        this._dictionary.update('LLE', this._lineExtension);\n        var polyLineBounds = this._getBoundsValue(this._points);\n        var rectangle = [polyLineBounds.x,\n            polyLineBounds.y,\n            polyLineBounds.x + polyLineBounds.width,\n            polyLineBounds.y + polyLineBounds.height];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._flatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotationFromPage(this._page, this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_7 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_7, appearance);\n                this._dictionary.update('AP', reference_7);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._createPolyLineAppearance = function (flatten) {\n        var color = this.color ? this.color : [0, 0, 0];\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.border.width > 0) {\n                borderPen = new PdfPen(color, this.border.width);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                var points = this._getLinePoints();\n                var pathTypes = [];\n                pathTypes.push(0);\n                if (points && points.length > 0) {\n                    for (var i = 1; i < points.length; i++) {\n                        pathTypes.push(1);\n                    }\n                    var path = new _PdfPath();\n                    path._points = points;\n                    path._pathTypes = pathTypes;\n                    graphics._drawPath(path, borderPen);\n                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                        graphics.restore(state);\n                    }\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            rect.x = boundsValue.x - this.border.width;\n            rect.y = boundsValue.y - this.border.width;\n            rect.width = boundsValue.width + (2 * this.border.width);\n            rect.height = boundsValue.height + (2 * this.border.width);\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && color) {\n                parameter.borderPen = new PdfPen(color, this.border.width);\n            }\n            if (color) {\n                parameter.foreBrush = new PdfBrush(color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            var path = new _PdfPath();\n            if (typeof this._polylinePoints !== 'undefined' && this._polylinePoints !== null) {\n                path._points = this._polylinePoints;\n            }\n            else {\n                path._points = this._getLinePoints();\n            }\n            if (typeof this._pathTypes !== 'undefined' && this._polylinePoints !== null) {\n                path._pathTypes = this._pathTypes;\n            }\n            else {\n                this._pathTypes = [];\n                this._pathTypes.push(0);\n                for (var i = 1; i < path._points.length; i++) {\n                    this._pathTypes.push(1);\n                }\n                path._pathTypes = this._pathTypes;\n            }\n            graphics._drawPath(path, parameter.borderPen, parameter.backBrush);\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                var lineStyle = [];\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                this._dictionary.update('LE', lineStyle);\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolyLineAnnotation.prototype._getLinePoints = function () {\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var points;\n        if (this._dictionary.has('Vertices') && !this._isBounds && (!this._setAppearance || (this._setAppearance && this.flatten))) {\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                points = [];\n                for (var j = 0; j < linePoints.length; j = j + 2) {\n                    points.push([linePoints[Number.parseInt(j.toString(), 10)], (pageHeight - linePoints[j + 1])]);\n                }\n            }\n        }\n        else if (this._points) {\n            var polyLinepoints_1 = [];\n            this._points.forEach(function (value) {\n                polyLinepoints_1.push(value);\n            });\n            points = [];\n            for (var j = 0; j < polyLinepoints_1.length; j = j + 2) {\n                if (this.flatten) {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], (pageHeight - polyLinepoints_1[j + 1])]);\n                }\n                else {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], -polyLinepoints_1[j + 1]]);\n                }\n            }\n        }\n        return points;\n    };\n    return PdfPolyLineAnnotation;\n}(PdfComment));\nexport { PdfPolyLineAnnotation };\n/**\n * `PdfAngleMeasurementAnnotation` class represents the angle measurement annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new angle measurement annotation\n * const annotation: PdfAngleMeasurementAnnotation = new PdfAngleMeasurementAnnotation([[100, 700], [150, 650], [100, 600]]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAngleMeasurementAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAngleMeasurementAnnotation, _super);\n    function PdfAngleMeasurementAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._linePoints = [];\n        _this._firstIntersectionPoint = [0, 0];\n        _this._secondIntersectionPoint = [0, 0];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined' && points.length > 0) {\n            if (points.length > 6) {\n                throw new Error('Points length should not be greater than 3');\n            }\n            _this._pointArray = points;\n            for (var i = 0; i < points.length; i++) {\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][0]);\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][1]);\n            }\n        }\n        _this._type = _PdfAnnotationType.angleMeasurementAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAngleMeasurementAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the angle measurement annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Gets the flag to have measurement dictionary of the angle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Sets the flag to add measurement dictionary to the annotation.\n         * annotation.measure = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && !this._isLoaded) {\n                this._measure = value;\n                this.caption.cap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAngleMeasurementAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAngleMeasurementAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAngleMeasurementAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAngleMeasurementAnnotation.prototype._postProcess = function () {\n        if (!this._pointArray) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._appearanceTemplate = this._createAngleMeasureAppearance();\n    };\n    PdfAngleMeasurementAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten && this._setAppearance) {\n                this._appearanceTemplate = this._createAngleMeasureAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAngleMeasureAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    PdfAngleMeasurementAnnotation.prototype._createAngleMeasureAppearance = function () {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var angle = (this._calculateAngle() * (180.0 / Math.PI));\n        if (angle < 0) {\n            angle = -angle;\n        }\n        if (angle > 180) {\n            angle = 360 - angle;\n        }\n        this._dictionary.update('Vertices', this._linePoints);\n        var ds = 'font:' +\n            font._metrics._postScriptName +\n            ' ' +\n            font._size +\n            'pt; color:' +\n            this._colorToHex(this.color);\n        this._dictionary.update('DS', ds);\n        if (this.text === (' ' + angle.toFixed(2) + '°')) {\n            this._dictionary.update('Contents', this.text);\n        }\n        else if (this.text) {\n            this._dictionary.update('Contents', this.text);\n        }\n        if (typeof this.subject === 'undefined') {\n            this._dictionary.update('Subject', 'Angle Measurement');\n        }\n        this._dictionary.update('MeasurementTypes', 1152);\n        this._dictionary.update('Subtype', new _PdfName('PolyLine'));\n        this._dictionary.update('IT', new _PdfName('PolyLineAngle'));\n        var measureDictionary = new _PdfDictionary();\n        var d = [];\n        var t = [];\n        var a = [];\n        var x = [];\n        var v = [];\n        measureDictionary.set('Type', _PdfName.get('measureDictionary'));\n        measureDictionary.set('R', '1 in = 1 in');\n        measureDictionary.set('Subtype', 'RL');\n        measureDictionary.set('TargetUnitConversion', 0.1388889);\n        var dDictionary = new _PdfDictionary();\n        dDictionary.set('U', 'in');\n        dDictionary.set('Type', 'NumberFormat');\n        dDictionary.set('C', 1);\n        dDictionary.set('D', 1);\n        dDictionary.set('SS', '');\n        d.push(dDictionary);\n        var tDictionary = new _PdfDictionary();\n        tDictionary.set('U', '°');\n        tDictionary.set('Type', 'NumberFormat');\n        tDictionary.set('C', 1);\n        tDictionary.set('D', 1);\n        tDictionary.set('FD', true);\n        tDictionary.set('SS', '');\n        t.push(tDictionary);\n        var aDictionary = new _PdfDictionary();\n        aDictionary.set('U', 'sq in');\n        aDictionary.set('Type', 'NumberFormat');\n        aDictionary.set('C', 1);\n        aDictionary.set('D', 1);\n        aDictionary.set('FD', true);\n        aDictionary.set('SS', '');\n        a.push(aDictionary);\n        var vDictionary = new _PdfDictionary();\n        vDictionary.set('U', 'cu in');\n        vDictionary.set('Type', 'NumberFormat');\n        vDictionary.set('C', 1);\n        vDictionary.set('D', 1);\n        vDictionary.set('FD', true);\n        vDictionary.set('SS', '');\n        v.push(vDictionary);\n        var xDictionary = new _PdfDictionary();\n        xDictionary.set('U', 'in');\n        xDictionary.set('Type', 'NumberFormat');\n        xDictionary.set('C', 1);\n        xDictionary.set('D', 1);\n        xDictionary.set('SS', '');\n        x.push(xDictionary);\n        measureDictionary.set('D', d);\n        measureDictionary.set('T', t);\n        measureDictionary.set('A', a);\n        measureDictionary.set('X', x);\n        measureDictionary.set('V', v);\n        if (this._dictionary.has('Measure')) {\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, measureDictionary);\n        measureDictionary._updated = true;\n        this._dictionary.update('Measure', reference);\n        var rectValue = [0, 0, 0, 0];\n        var boundsValue = this._getAngleBoundsValue();\n        var points = this._obtainLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        var graphicspath = new _PdfPath();\n        graphicspath._addRectangle(points[1][0] - this._radius, -(points[1][1] + this._radius), 2 * this._radius, 2 * this._radius);\n        var size = font.measureString(angle.toString() + '°', [0, 0], format, 0, 0);\n        var midPoint = [(this._firstIntersectionPoint[0] + this._secondIntersectionPoint[0]) / 2,\n            ((this._firstIntersectionPoint[1] + this._secondIntersectionPoint[1]) / 2)];\n        var center = [points[1][0], -points[1][1]];\n        var x1 = points[1][0] + this._radius * Math.cos((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var y = points[1][1] + this._radius * Math.sin((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var start = [midPoint[0], midPoint[1]];\n        var xDiff = start[0] - center[0];\n        var yDiff = start[1] - center[1];\n        var midpointAngle = ((Math.atan2(yDiff, xDiff)) * (180.0 / Math.PI));\n        var left = false;\n        var right = false;\n        var up = false;\n        var down = false;\n        if (midpointAngle > 0) {\n            if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                up = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        else {\n            midpointAngle = -midpointAngle;\n            if (midpointAngle === 0) {\n                (new _PdfPath())._addRectangle(boundsValue[0], boundsValue[1], boundsValue[2], boundsValue[3]);\n            }\n            else if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                down = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        if (rectValue[0] === 0 && rectValue[1] === 0 && rectValue[2] === 0 && rectValue[3] === 0) {\n            rectValue = boundsValue;\n            this.bounds = { x: boundsValue[0], y: boundsValue[1], width: boundsValue[2], height: boundsValue[3] };\n        }\n        var path = new _PdfPath();\n        path._pathTypes = pathTypes;\n        path._points = points;\n        this._dictionary.set('Rect', [rectValue[0], rectValue[1], rectValue[0] + rectValue[2], rectValue[1] + rectValue[3]]);\n        var appearance = new PdfAppearance(this, boundsValue);\n        appearance.normal = new PdfTemplate(rectValue, this._crossReference);\n        var template = appearance.normal;\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        var pen = new PdfPen(this._color, width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n        }\n        var brush = new PdfBrush(this._color);\n        graphics.save();\n        path._addArc(points[1][0] - this._radius, points[1][1] - this._radius, 2 * this._radius, 2 * this._radius, this._startAngle, this._sweepAngle);\n        graphics._drawPath(path, pen);\n        if (up) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), -(-y + font._metrics._getHeight() + 2), 0, 0], null, brush);\n        }\n        else if (right) {\n            graphics.drawString(angle.toString() + '°', font, [x1 + 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (left) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - size[0] - 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (down) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), (y + 2), 0, 0], null, brush);\n        }\n        graphics.restore();\n        graphics._template._content.dictionary._updated = true;\n        var reference1 = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference1, graphics._template._content);\n        graphics._template._content.reference = reference1;\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var appearanceDictionary = new _PdfDictionary();\n        appearanceDictionary.set('N', reference1);\n        appearanceDictionary._updated = true;\n        this._dictionary.set('AP', appearanceDictionary);\n        return template;\n    };\n    PdfAngleMeasurementAnnotation.prototype._getAngleBoundsValue = function () {\n        var points = this._obtainLinePoints();\n        for (var i = 0; i < points.length; i++) {\n            points[Number.parseInt(i.toString(), 10)][1] = -points[Number.parseInt(i.toString(), 10)][1];\n        }\n        var path = new _PdfPath();\n        path._points = points;\n        path._pathTypes = [0, 1, 1];\n        return path._getBounds();\n    };\n    PdfAngleMeasurementAnnotation.prototype._obtainLinePoints = function () {\n        var points;\n        var collection;\n        if (this._linePoints) {\n            points = new Array(this._linePoints.length);\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n            collection = new Array(points.length / 2);\n            var count = 0;\n            for (var j = 0; j < points.length; j = j + 2) {\n                collection[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], -points[j + 1]];\n                count++;\n            }\n        }\n        return collection;\n    };\n    PdfAngleMeasurementAnnotation.prototype._calculateAngle = function () {\n        var points = [0, 0];\n        if (typeof this._linePoints !== 'undefined' && this._linePoints.length === 0 && this._isLoaded) {\n            if (this._dictionary.has('Vertices')) {\n                this._linePoints = this._dictionary.get('Vertices');\n            }\n        }\n        for (var i = 0; i < this._linePoints.length; i++) {\n            points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n        }\n        var collection = [];\n        for (var j = 0; j < points.length; j = j + 2) {\n            collection.push([points[Number.parseInt(j.toString(), 10)], points[j + 1]]);\n        }\n        var point1 = collection[0];\n        var point2 = collection[1];\n        var point3 = collection[2];\n        var firstLineDistance = Math.sqrt(Math.pow((point2[0] - point1[0]), 2) + Math.pow((point2[1] - point1[1]), 2));\n        var secondLineDistance = Math.sqrt(Math.pow((point2[0] - point3[0]), 2) + Math.pow((point2[1] - point3[1]), 2));\n        this._radius = Math.min(firstLineDistance, secondLineDistance) / 4;\n        var graphicsPath = new _PdfPath();\n        graphicsPath._points = collection;\n        graphicsPath._pathTypes = [0, 1, 1];\n        var intersectionPoint1;\n        var intersectionPoint2;\n        var value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point1, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._firstIntersectionPoint[0] === 0 && this._firstIntersectionPoint[1] === 0) {\n            this._firstIntersectionPoint = intersectionPoint2;\n        }\n        intersectionPoint1 = [0, 0];\n        intersectionPoint2 = [0, 0];\n        value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point3, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._secondIntersectionPoint[0] === 0 && this._secondIntersectionPoint[1] === 0) {\n            this._secondIntersectionPoint = intersectionPoint2;\n        }\n        var xDiff = this._firstIntersectionPoint[0] - point2[0];\n        var yDiff = this._firstIntersectionPoint[1] - point2[1];\n        var startAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        xDiff = this._secondIntersectionPoint[0] - point2[0];\n        yDiff = this._secondIntersectionPoint[1] - point2[1];\n        var sweepAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        startAngle = startAngle > 0 ? startAngle = 360 - startAngle : -startAngle;\n        sweepAngle = sweepAngle > 0 ? sweepAngle = 360 - sweepAngle : -sweepAngle;\n        if (startAngle === 180 && sweepAngle === 0) {\n            this._startAngle = startAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle === 0 && sweepAngle === 180) {\n            this._startAngle = sweepAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle < 180) {\n            if (startAngle > sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n            else if (startAngle + 180 < sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = (360 - sweepAngle) + startAngle;\n            }\n            else {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n        }\n        else {\n            if (startAngle < sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n            else if (startAngle - 180 > sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = (360 - startAngle) + sweepAngle;\n            }\n            else {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n        }\n        return (Math.atan2((point3[0] - point2[0]), (point3[1] - point2[1])) -\n            Math.atan2((point1[0] - point2[0]), (point1[1] - point2[1])));\n    };\n    PdfAngleMeasurementAnnotation.prototype._findLineCircleIntersectionPoints = function (centerX, centerY, radius, point1, point2, intersection1, intersection2) {\n        var dx = point2[0] - point1[0];\n        var dy = point2[1] - point1[1];\n        var a = dx * dx + dy * dy;\n        var b = 2 * (dx * (point1[0] - centerX) + dy * (point1[1] - centerY));\n        var c = (point1[0] - centerX) * (point1[0] - centerX) + (point1[1] - centerY) * (point1[1] - centerY) - radius * radius;\n        var e = b * b - 4 * a * c;\n        if ((a <= 0.0000001) || (e < 0)) {\n            intersection1 = [Number.NaN, Number.NaN];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else if (e === 0) {\n            var t = -b / (2 * a);\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else {\n            var t = ((-b + Math.sqrt(e)) / (2 * a));\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            t = ((-b - Math.sqrt(e)) / (2 * a));\n            intersection2 = [point1[0] + t * dx, point1[1] + t * dy];\n        }\n        return { first: intersection1, second: intersection2 };\n    };\n    return PdfAngleMeasurementAnnotation;\n}(PdfComment));\nexport { PdfAngleMeasurementAnnotation };\n/**\n * `PdfInkAnnotation` class represents the ink annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ink annotation with the bounds and ink points\n * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfInkAnnotation, _super);\n    function PdfInkAnnotation(points, linePoints) {\n        var _this = _super.call(this) || this;\n        _this._inkPointsCollection = [];\n        _this._previousCollection = [];\n        _this._isModified = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Ink'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n            _this.bounds = { x: points[0], y: points[1], width: points[2], height: points[3] };\n        }\n        if (typeof linePoints !== 'undefined') {\n            _this._linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.inkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfInkAnnotation.prototype, \"inkPointsCollection\", {\n        /**\n         * Gets the ink points collection of the annotation.\n         *\n         * @returns {Array<number[]>} Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfInkAnnotation = page.annotations.at(0) as PdfInkAnnotation;\n         * // Get the ink points collection of the annotation\n         * let inkPointsCollection: Array<number[]> = annotation.inkPointsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._inkPointsCollection.length === 0 && this._dictionary.has('InkList')) {\n                var inkList = this._dictionary.get('InkList');\n                if (Array.isArray(inkList) && inkList.length > 0) {\n                    this._inkPointsCollection = inkList;\n                }\n            }\n            return this._inkPointsCollection;\n        },\n        /**\n         * Sets the ink points collection of the annotation.\n         *\n         * @param {Array<number[]>} value Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * // Create a new ink annotation\n         * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n         * // Set the ink points collection of the annotation\n         * annotation.inkPointsCollection = [[422, 690, 412, 708, 408, 715, 403, 720, 400, 725], [420, 725, 420, 715, 415, 705, 400, 690, 405, 695]];\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && value.length > 0 && value !== this._inkPointsCollection) {\n                this._inkPointsCollection = value;\n                this._isModified = true;\n                if (this._isLoaded) {\n                    this._dictionary.update('InkList', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfInkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfInkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfInkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfInkAnnotation.prototype._postProcess = function () {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var nativeRectangle = this._addInkPoints();\n        var bounds = [nativeRectangle[0],\n            nativeRectangle[1],\n            nativeRectangle[0] + nativeRectangle[2],\n            nativeRectangle[1] + nativeRectangle[3]];\n        this._dictionary.update('Rect', bounds);\n        if (this._setAppearance) {\n            var appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            this._appearanceTemplate = this._createInkAppearance(template);\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n    };\n    PdfInkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._isFlatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._inkPointsCollection.length === 0) {\n                    this._inkPointsCollection = this._obtainInkListCollection();\n                }\n                var rect = this._getInkBoundsValue();\n                var template = new PdfTemplate(rect, this._crossReference);\n                _setMatrix(template, this._getRotationAngle());\n                template._writeTransformation = false;\n                this._appearanceTemplate = this._createInkAppearance(template);\n                this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        if (this._inkPointsCollection.length === 0) {\n                            this._inkPointsCollection = this._obtainInkListCollection();\n                        }\n                        var rect = this._getInkBoundsValue();\n                        var template = new PdfTemplate(rect, this._crossReference);\n                        _setMatrix(template, this._getRotationAngle());\n                        template._writeTransformation = false;\n                        this._appearanceTemplate = this._createInkAppearance(template);\n                        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten &&\n            this._appearanceTemplate &&\n            this._appearanceTemplate._size !== null &&\n            typeof this._appearanceTemplate._size !== 'undefined') {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    PdfInkAnnotation.prototype._createInkAppearance = function (template) {\n        var graphics = template.graphics;\n        if (this._inkPointsCollection !== null &&\n            this._inkPointsCollection.length > 0 &&\n            this.color !== null &&\n            typeof this._color !== 'undefined') {\n            for (var l = 0; l < this._inkPointsCollection.length; l++) {\n                if (this._inkPointsCollection[Number.parseInt(l.toString(), 10)].length % 2 === 0) {\n                    var inkPoints = this._inkPointsCollection[Number.parseInt(l.toString(), 10)];\n                    if (inkPoints.length === 2) {\n                        var locx = inkPoints[0] - 0.5;\n                        var locy = inkPoints[1] - 0.5;\n                        var locw = inkPoints[0] + 0.5;\n                        var loch = inkPoints[1] + 0.5;\n                        inkPoints = [locx, locy, locw, loch];\n                    }\n                    var point = new Array(inkPoints.length / 2);\n                    var count = 0;\n                    for (var j = 0; j < inkPoints.length; j = j + 2) {\n                        point[Number.parseInt(count.toString(), 10)] = [inkPoints[Number.parseInt(j.toString(), 10)], inkPoints[j + 1]];\n                        count++;\n                    }\n                    var pathPointCont = count + (count * 2) - 2;\n                    var pathPoints = new Array(pathPointCont);\n                    var p1 = [];\n                    var p2 = [];\n                    var value = this._getControlPoints(point, p1, p2);\n                    p1 = value.controlP1;\n                    p2 = value.controlP2;\n                    var index = 0;\n                    for (var i = 0; i < pathPointCont - 1; i = i + 3) {\n                        pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(index.toString(), 10)];\n                        pathPoints[i + 1] = p1[Number.parseInt(index.toString(), 10)];\n                        pathPoints[i + 2] = p2[Number.parseInt(index.toString(), 10)];\n                        index++;\n                    }\n                    pathPoints[pathPointCont - 1] = point[point.length - 1];\n                    if (pathPoints !== null) {\n                        var pointsCollection = pathPoints;\n                        for (var k = 0; k < pointsCollection.length; k++) {\n                            var point_1 = pointsCollection[Number.parseInt(k.toString(), 10)];\n                            pointsCollection[Number.parseInt(k.toString(), 10)] = [point_1[0], (-point_1[1])];\n                        }\n                        var path1 = new _PdfPath();\n                        var path2 = null;\n                        if (point.length === 2) {\n                            var width = point[1][0] - point[0][0];\n                            var height = point[1][1] - point[0][1];\n                            path1._addEllipse(point[0][0] + (0.5), -(point[0][1] + height + (0.5)), width, height);\n                            path2 = new _PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = path1._points;\n                        }\n                        else {\n                            path1._addBezierPoints(pointsCollection);\n                            path2 = new _PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = pointsCollection;\n                        }\n                        var borderPen = new PdfPen(this.color, this.border.width);\n                        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                            var state = graphics.save();\n                            graphics.setTransparency(this._opacity);\n                            if (this._isLoaded) {\n                                borderPen._lineCap = PdfLineCap.round;\n                            }\n                            graphics._drawPath(path2, borderPen);\n                            graphics.restore(state);\n                        }\n                        else {\n                            graphics._drawPath(path2, borderPen);\n                        }\n                    }\n                }\n            }\n            if (this._isFlatten) {\n                this.bounds = { x: this.bounds.x,\n                    y: (this._page.size[1] - (this.bounds.y + this.bounds.height)),\n                    width: this.bounds.width,\n                    height: this.bounds.height };\n            }\n        }\n        return template;\n    };\n    PdfInkAnnotation.prototype._getControlPoints = function (point, p1, p2) {\n        if (point === null) {\n            throw new Error('pointCollection');\n        }\n        var pointCount = point.length - 1;\n        if (pointCount < 1) {\n            throw new Error('At least two knot PointFs required pointCollection');\n        }\n        if (pointCount === 1) {\n            p1 = [[((2 * point[0][0] + point[1][0]) / 3), ((2 * point[0][1] + point[1][1]) / 3)]];\n            p2 = [[(2 * p1[0][0] - point[0][0]), (2 * p1[0][1] - point[0][1])]];\n        }\n        var rightVector = [];\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][0] + 2 * point[i + 1][0];\n        }\n        rightVector[0] = point[0][0] + 2 * point[1][0];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][0] + point[Number.parseInt(pointCount.toString(), 10)][0]) / 2.0;\n        var xValue = this._getSingleControlPoint(rightVector);\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][1] + 2 * point[i + 1][1];\n        }\n        rightVector[0] = point[0][1] + 2 * point[1][1];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][1] + point[Number.parseInt(pointCount.toString(), 10)][1]) / 2.0;\n        var yValue = this._getSingleControlPoint(rightVector);\n        p1 = new Array(pointCount);\n        p2 = new Array(pointCount);\n        for (var i = 0; i < pointCount; ++i) {\n            p1[Number.parseInt(i.toString(), 10)] = [xValue[Number.parseInt(i.toString(), 10)], yValue[Number.parseInt(i.toString(), 10)]];\n            if (i < pointCount - 1) {\n                p2[Number.parseInt(i.toString(), 10)] = [2 * point[i + 1][0] - xValue[i + 1], 2 * point[i + 1][1] - yValue[i + 1]];\n            }\n            else {\n                var x = (point[Number.parseInt(pointCount.toString(), 10)][0] + xValue[pointCount - 1]) / 2;\n                var y = (point[Number.parseInt(pointCount.toString(), 10)][1] + yValue[pointCount - 1]) / 2;\n                p2[Number.parseInt(i.toString(), 10)] = [x, y];\n            }\n        }\n        return { controlP1: p1, controlP2: p2 };\n    };\n    PdfInkAnnotation.prototype._getSingleControlPoint = function (rightVector) {\n        var count = rightVector.length;\n        var vector = [];\n        var tmpVector = [];\n        var divisor = 2.0;\n        vector[0] = rightVector[0] / divisor;\n        for (var i = 1; i < count; i++) {\n            tmpVector[Number.parseInt(i.toString(), 10)] = 1 / divisor;\n            divisor = (i < count - 1 ? 4.0 : 3.5) - tmpVector[Number.parseInt(i.toString(), 10)];\n            vector[Number.parseInt(i.toString(), 10)] = (rightVector[Number.parseInt(i.toString(), 10)] - vector[i - 1]) / divisor;\n        }\n        for (var i = 1; i < count; i++) {\n            vector[count - i - 1] -= tmpVector[count - i] * vector[count - i];\n        }\n        return vector;\n    };\n    PdfInkAnnotation.prototype._addInkPoints = function () {\n        var _this = this;\n        var inkCollection = [];\n        if (this._linePoints !== null && (this._previousCollection.length === 0 || this._isModified)) {\n            this._inkPointsCollection.unshift(this._linePoints);\n            this._isModified = false;\n        }\n        var isEqual = _checkInkPoints(this._inkPointsCollection, this._previousCollection);\n        if (this._inkPointsCollection !== null && !isEqual) {\n            for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                var inkList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n                inkCollection.push(inkList);\n            }\n            this._dictionary.update('InkList', inkCollection);\n        }\n        if (this._inkPointsCollection.length > 0) {\n            this._inkPointsCollection.forEach(function (inkList) {\n                _this._previousCollection.push(inkList);\n            });\n        }\n        return this._getInkBoundsValue();\n    };\n    PdfInkAnnotation.prototype._getInkBoundsValue = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this._points) {\n            this.bounds = { x: this._points[0], y: this._points[1], width: this._points[2], height: this._points[3] };\n        }\n        bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var borderWidth = this.border.width;\n        if (this._inkPointsCollection !== null) {\n            if (this._inkPointsCollection.length > 0) {\n                var termsList = [];\n                for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                    var subList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n                    if (subList !== null) {\n                        if (subList.length % 2 === 0) {\n                            for (var j = 0; j < subList.length; j++) {\n                                termsList.push(subList[Number.parseInt(j.toString(), 10)]);\n                            }\n                        }\n                    }\n                }\n                var isTwoPoints = false;\n                if (!this._isLoaded && termsList.length === 2) {\n                    isTwoPoints = true;\n                    termsList.push((termsList[0] + 1));\n                    termsList.push((termsList[1] + 1));\n                }\n                var pointCollection = new Array(termsList.length / 2);\n                var count = 0;\n                for (var j = 0; j < termsList.length; j = j + 2) {\n                    pointCollection[Number.parseInt(count.toString(), 10)] = [termsList[Number.parseInt(j.toString(), 10)],\n                        termsList[j + 1]];\n                    count++;\n                }\n                if (this._isLoaded) {\n                    if (pointCollection.length > 0) {\n                        var xMin = 0;\n                        var yMin = 0;\n                        var xMax = 0;\n                        var yMax = 0;\n                        var first = true;\n                        for (var i = 0; i < pointCollection.length; i++) {\n                            var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                            if (first) {\n                                xMin = point[0];\n                                yMin = point[1];\n                                first = false;\n                            }\n                            else {\n                                if (point[0] < xMin) {\n                                    xMin = point[0];\n                                }\n                                else if (point[0] > xMax) {\n                                    xMax = point[0];\n                                }\n                                if (point[1] < yMin) {\n                                    yMin = point[1];\n                                }\n                                else if (point[1] > yMax) {\n                                    yMax = point[1];\n                                }\n                            }\n                        }\n                        bounds = [xMin, yMin, xMax - xMin, yMax - yMin];\n                        this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n                        if (this._isFlatten || this._setAppearance) {\n                            bounds[0] = this.bounds.x - borderWidth;\n                            bounds[1] = this.bounds.y - borderWidth;\n                            bounds[2] = this.bounds.width + (2 * borderWidth);\n                            bounds[3] = this.bounds.height + (2 * borderWidth);\n                        }\n                    }\n                    else {\n                        if (this._points) {\n                            bounds = this._points;\n                        }\n                        else if (pointCollection.length > 0) {\n                            bounds = this._dictionary.get('Rect');\n                        }\n                        else {\n                            bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n                        }\n                    }\n                }\n                else {\n                    bounds = this._calculateInkBounds(pointCollection, bounds, borderWidth, isTwoPoints);\n                }\n                this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n            }\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._calculateInkBounds = function (pointCollection, bounds, borderWidth, isTwoPoints) {\n        if (pointCollection.length > 5) {\n            var xMin = 0;\n            var yMin = 0;\n            var xMax = 0;\n            var yMax = 0;\n            var first = true;\n            for (var i = 0; i < pointCollection.length; i++) {\n                var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                if (first) {\n                    xMin = point[0];\n                    yMin = point[1];\n                    xMax = point[0];\n                    yMax = point[1];\n                    first = false;\n                }\n                else {\n                    if (point[0] < xMin) {\n                        xMin = point[0];\n                    }\n                    else if (point[0] > xMax) {\n                        xMax = point[0];\n                    }\n                    if (point[1] < yMin) {\n                        yMin = point[1];\n                    }\n                    else if (point[1] > yMax) {\n                        yMax = point[1];\n                    }\n                }\n            }\n            if (bounds[2] < xMax) {\n                xMax = bounds[2];\n            }\n            if (bounds[3] < yMax) {\n                yMax = bounds[3];\n            }\n            bounds = [xMin, yMin, xMax, yMax];\n            if (this._isFlatten || this._setAppearance) {\n                var factor = isTwoPoints ? 2 : 3;\n                bounds[0] = bounds[0] - borderWidth;\n                bounds[1] = bounds[1] - borderWidth;\n                bounds[2] = bounds[2] + (factor * borderWidth);\n                bounds[3] = bounds[3] + (factor * borderWidth);\n            }\n        }\n        else {\n            if (typeof this._points === 'undefined' && pointCollection.length > 0) {\n                bounds = this._dictionary.get('Rect');\n            }\n            else {\n                bounds = this._points;\n            }\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._obtainInkListCollection = function () {\n        var path = [];\n        if (this._dictionary.has('InkList')) {\n            var inkList = this._dictionary.getArray('InkList');\n            var list = [];\n            for (var i = 0; i < inkList.length; i++) {\n                var innerList = inkList[Number.parseInt(i.toString(), 10)];\n                for (var j = 0; j < innerList.length; j++) {\n                    list.push(innerList[Number.parseInt(j.toString(), 10)]);\n                }\n                path.push(list);\n            }\n        }\n        return path;\n    };\n    return PdfInkAnnotation;\n}(PdfComment));\nexport { PdfInkAnnotation };\n/**\n * `PdfPopupAnnotation` class represents the popup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new popup annotation\n * const annotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPopupAnnotation, _super);\n    function PdfPopupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfPopupIcon.note;\n        _this._iconString = '';\n        _this._stateModel = PdfAnnotationStateModel.none;\n        _this._state = PdfAnnotationState.none;\n        _this._open = false;\n        _this._isReview = false;\n        _this._isComment = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Text'));\n        if (typeof text !== 'undefined') {\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.popupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"open\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has open or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the boolean flag indicating whether annotation has open or not.\n         * let open: boolean =  annotation.open;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Open')) {\n                this._open = this._dictionary.get('Open');\n            }\n            return this._open;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has open or not.\n         *\n         * @param {boolean} value Open.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the boolean flag indicating whether annotation has open or not.\n         * annotation.open = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._open = value;\n                this._dictionary.update('Open', this._open);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the popup annotation.\n         *\n         * @returns {PdfPopupIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the icon type of the popup annotation.\n         * let icon: PdfPopupIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapPopupIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the popup annotation.\n         *\n         * @param {PdfPopupIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the icon type of the popup annotation.\n         * annotation.icon = PdfPopupIcon.newParagraph;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"stateModel\", {\n        /**\n         * Gets the state model of the popup annotation.\n         *\n         * @returns {PdfAnnotationStateModel} Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state model of the popup annotation.\n         * let stateModel: PdfAnnotationStateModel = annotation.stateModel;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('StateModel')) {\n                this._stateModel = _mapAnnotationStateModel(this._dictionary.get('StateModel'));\n            }\n            return this._stateModel;\n        },\n        /**\n         * Sets the state model of the popup annotation.\n         *\n         * @param {PdfAnnotationStateModel} value Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state model of the popup annotation.\n         * annotation.stateModel = PdfAnnotationStateModel.marked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._stateModel = value;\n                this._dictionary.update('StateModel', _reverseMapAnnotationStateModel(this._stateModel));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"state\", {\n        /**\n         * Gets the state of the popup annotation.\n         *\n         * @returns {PdfAnnotationState} Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state of the popup annotation.\n         * let state: PdfAnnotationState = annotation.state;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('State')) {\n                this._state = _mapAnnotationState(this._dictionary.get('State'));\n            }\n            return this._state;\n        },\n        /**\n         * Sets the state of the popup annotation.\n         *\n         * @param {PdfAnnotationState} value Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state of the popup annotation.\n         * annotation.state = PdfAnnotationState.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._state = value;\n                this._dictionary.update('State', _reverseMapAnnotationState(this._state));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPopupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPopupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        if (dictionary.has('IRT')) {\n            annot._isReview = _checkReview(dictionary);\n            if (!annot._isReview) {\n                annot._isComment = _checkComment(dictionary);\n            }\n        }\n        return annot;\n    };\n    PdfPopupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPopupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var rectangle = [this.bounds.x, this.bounds.y, (this.bounds.x + this.bounds.width),\n            (this.bounds.y + this.bounds.height)];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createPopupAppearance();\n            if (this._appearanceTemplate) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dictionary = new _PdfDictionary();\n                this._appearanceTemplate._content.dictionary._updated = true;\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                this._appearanceTemplate._content.reference = reference;\n                dictionary.set('N', reference);\n                dictionary._updated = true;\n                this._dictionary.set('AP', dictionary);\n            }\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfPopupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!this._appearanceTemplate && this._isFlattenPopups && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (this._appearanceTemplate !== null) {\n                        var state = this._page.graphics.save();\n                        if (this.opacity < 1) {\n                            this._page.graphics.setTransparency(this.opacity);\n                        }\n                        this._page.graphics.drawTemplate(this._appearanceTemplate, this.bounds);\n                        this._page.graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createPopupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && this.flatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten) {\n            this._removeAnnotation(this._page, this);\n        }\n    };\n    PdfPopupAnnotation.prototype._createPopupAppearance = function () {\n        var template;\n        if (this._dictionary.has('Name')) {\n            if (this._dictionary.get('Name').name === 'Comment') {\n                if (this._dictionary.has('Rect')) {\n                    var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n                    template = new PdfTemplate(nativeRectangle, this._crossReference);\n                    _setMatrix(template, this._getRotationAngle());\n                    var graphics = template.graphics;\n                    var rectValue = this._dictionary.getArray('Rect');\n                    if (rectValue !== null) {\n                        var pen = new PdfPen([0, 0, 0], 0.3);\n                        var brush = new PdfBrush(this.color);\n                        var pen1 = new PdfPen([255, 255, 255], 1);\n                        var points = new Array();\n                        points.push([6, 8]);\n                        points.push([9, 8]);\n                        points.push([4, 12]);\n                        var path = new _PdfPath();\n                        if (this.color[0] === 0 && this.color[0] === 0 && this.color[0] === 0) {\n                            brush = new PdfBrush([255, 215, 0]);\n                        }\n                        graphics.save();\n                        var template_1 = new PdfTemplate([0, 0, 15, 14], this._crossReference);\n                        template_1.graphics.drawRectangle(0, 0, 15, 14, pen, brush);\n                        template_1.graphics.drawPolygon(points, pen, new PdfBrush([255, 255, 255]));\n                        path._addEllipse(2, 2, 11, 8);\n                        template_1.graphics._drawPath(path, pen, new PdfBrush([255, 255, 255]));\n                        template_1.graphics.drawArc(2, 2, 11, 8, 108, 12.7, pen1);\n                        template_1.graphics.drawLine(pen, 4, 12, 6.5, 10);\n                        graphics.drawTemplate(template_1, { x: 0, y: 0, width: this.bounds.width, height: this.bounds.height });\n                        graphics.restore();\n                    }\n                }\n            }\n        }\n        return template;\n    };\n    PdfPopupAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfPopupIcon.note:\n                this._iconString = 'Note';\n                break;\n            case PdfPopupIcon.comment:\n                this._iconString = 'Comment';\n                break;\n            case PdfPopupIcon.help:\n                this._iconString = 'Help';\n                break;\n            case PdfPopupIcon.insert:\n                this._iconString = 'Insert';\n                break;\n            case PdfPopupIcon.key:\n                this._iconString = 'Key';\n                break;\n            case PdfPopupIcon.newParagraph:\n                this._iconString = 'NewParagraph';\n                break;\n            case PdfPopupIcon.paragraph:\n                this._iconString = 'Paragraph';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfPopupAnnotation;\n}(PdfComment));\nexport { PdfPopupAnnotation };\n/**\n * `PdfFileLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new file link annotation\n * let annotation: PdfFileLinkAnnotation = new PdfFileLinkAnnotation(10, 40, 30, 30, \"image.png\");\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFileLinkAnnotation, _super);\n    function PdfFileLinkAnnotation(x, y, width, height, fileName) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined' && fileName !== null) {\n            _this._fileName = fileName;\n        }\n        _this._type = _PdfAnnotationType.fileLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfFileLinkAnnotation.prototype, \"action\", {\n        /**\n         * Gets the action of the annotation.\n         *\n         * @returns {string} Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Gets the action of the annotation.\n         * let action: string = annotation.action;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._action === 'undefined' && this._dictionary.has('A')) {\n                var dictionary = this._dictionary.get('A');\n                if (dictionary && dictionary.has('Next')) {\n                    var action = dictionary.get('Next');\n                    if (Array.isArray(action)) {\n                        for (var i = 0; i < action.length; i++) {\n                            var reference = action[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var actionDictionary = this._crossReference._fetch(reference);\n                                if (actionDictionary.has('JS')) {\n                                    this._action = actionDictionary.get('JS');\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return this._action;\n        },\n        /**\n         * Sets the action of the annotation.\n         *\n         * @param {string} value Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Sets the action of the annotation.\n         * annotation.action = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value === 'string') {\n                this._action = value;\n            }\n            if (this._isLoaded && typeof value === 'string') {\n                if (this.action !== value && this._dictionary.has('A')) {\n                    var dictionary = this._dictionary.get('A');\n                    if (dictionary && dictionary.has('Next')) {\n                        var action = dictionary.get('Next');\n                        if (Array.isArray(action)) {\n                            for (var i = 0; i < action.length; i++) {\n                                var reference = action[Number.parseInt(i.toString(), 10)];\n                                if (reference && reference instanceof _PdfReference) {\n                                    var actionDictionary = this._crossReference._fetch(reference);\n                                    if (actionDictionary.has('JS')) {\n                                        actionDictionary.update('JS', value);\n                                        this._action = value;\n                                        this._dictionary._updated = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFileLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFileLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfFileLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfFileLinkAnnotation.prototype._addAction = function () {\n        var _this = this;\n        if (this._dictionary.has('A')) {\n            var action = this._dictionary.get('A');\n            if (action) {\n                if (typeof this._action !== 'undefined' && this._action !== null && action.has('Next')) {\n                    var nextAction = action.get('Next');\n                    if (Array.isArray(nextAction) && nextAction.length > 0) {\n                        nextAction.forEach(function (reference) {\n                            if (reference && reference instanceof _PdfReference && reference._isNew) {\n                                _this._crossReference._cacheMap.delete(reference);\n                            }\n                        });\n                    }\n                }\n                if (action.has('F')) {\n                    _removeDuplicateReference(action, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'A');\n        }\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('Launch'));\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('Filespec'));\n        fileDictionary.set('UF', this._fileName);\n        if (typeof this._action !== 'undefined' && this._action !== null) {\n            var actionDictionary = new _PdfDictionary();\n            actionDictionary.set('Type', _PdfName.get('Action'));\n            actionDictionary.set('S', _PdfName.get('JavaScript'));\n            actionDictionary.set('JS', this._action);\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, actionDictionary);\n            actionDictionary._updated = true;\n            dictionary.set('Next', [ref]);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileDictionary);\n        fileDictionary._updated = true;\n        dictionary.set('F', reference);\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfFileLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfFileLinkAnnotation };\n/**\n * `PdfUriAnnotation` class represents the URI annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new URI annotation\n * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100, ‘http://www.google.com’);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(x, y, width, height, uri) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof uri !== 'undefined' && uri !== null) {\n            _this._uri = uri;\n        }\n        _this._type = _PdfAnnotationType.uriAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        /**\n         * Gets the uri of the annotation.\n         *\n         * @returns {string} Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfUriAnnotation = page.annotations.at(0) as PdfUriAnnotation;\n         * // Gets the uri of the annotation.\n         * let uri: string = annotation.uri;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._uri === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._uri = linkDict.get('URI');\n                }\n            }\n            return this._uri;\n        },\n        /**\n         * Sets the uri of the annotation.\n         *\n         * @param {string} value Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new URI annotation\n         * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100);\n         * // Sets the uri of the annotation\n         * annotation.uri = ‘http://www.google.com’;\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A') && value !== this.uri) {\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict.has('URI')) {\n                        this._uri = value;\n                        linkDict.update('URI', value);\n                        this._dictionary._updated = true;\n                    }\n                }\n                else {\n                    this._uri = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfUriAnnotation._load = function (page, dictionary) {\n        var annot = new PdfUriAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfUriAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfUriAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfUriAnnotation.prototype._addAction = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._uri !== 'undefined') {\n            dictionary.set('URI', this._uri);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n    };\n    PdfUriAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfUriAnnotation;\n}(PdfAnnotation));\nexport { PdfUriAnnotation };\n/**\n * `PdfDocumentLinkAnnotation` class represents the document link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new document link annotation\n * let annotation: PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(100, 150, 40, 60);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.documentLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        /**\n         * Gets the destination of the annotation.\n         *\n         * @returns {PdfDestination} Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the destination of the annotation.\n         * let destination: PdfDestination =annotation.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this.destination = this._obtainDestination();\n            }\n            return this._destination;\n        },\n        /**\n         * Sets the destination of the annotation.\n         *\n         * @param {PdfDestination} value Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== null) {\n                this._destination = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfDocumentLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfDocumentLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfDocumentLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        this._addDocument();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfDocumentLinkAnnotation.prototype._obtainDestination = function () {\n        if (this._dictionary.has('Dest')) {\n            var array = this._dictionary.get('Dest'); // eslint-disable-line\n            var holder = void 0;\n            if (array[0] instanceof _PdfReference) {\n                holder = array[0];\n            }\n            if ((typeof holder === 'undefined' || holder === null) && typeof array[0] === 'number') {\n                var pageNumber = array[0];\n                var page = this._crossReference._document.getPage(pageNumber);\n                if (page) {\n                    var mode = array[1];\n                    if (mode.name === 'XYZ') {\n                        var left = array[2];\n                        var top_3 = array[3];\n                        var zoom = array[4];\n                        var topValue = (typeof top_3 !== 'undefined' && top_3 !== null) ? (page.size[1] - top_3) : 0;\n                        var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                        this._destination = new PdfDestination(page, [leftValue, topValue]);\n                        if (typeof zoom !== 'undefined' && zoom !== null) {\n                            this._destination.zoom = zoom;\n                        }\n                        if ((typeof left === 'undefined' && left === null) || (typeof top_3 === 'undefined' && top_3 === null)\n                            || (typeof zoom === 'undefined' && zoom === null)) {\n                            this._destination._setValidation(false);\n                        }\n                    }\n                    else {\n                        this._destination = new PdfDestination(page);\n                        this._destination.mode = PdfDestinationMode.fitToPage;\n                    }\n                }\n            }\n            if (holder) {\n                var index = _getPageIndex(this._crossReference._document, this._crossReference._fetch(holder));\n                if (index >= 0) {\n                    var page = this._crossReference._document.getPage(index);\n                    if (page && array[1] instanceof _PdfName) {\n                        var mode = array[1];\n                        if (mode) {\n                            if (mode.name === 'XYZ') {\n                                var left = array[2];\n                                var top_4 = array[3];\n                                var zoom = array[4];\n                                var topValue = (typeof top_4 !== 'undefined' && top_4 !== null) ? (page.size[1] - top_4) : 0;\n                                var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                if (typeof zoom !== 'undefined' && zoom !== null) {\n                                    this._destination.zoom = zoom;\n                                }\n                                if ((typeof left === 'undefined' && left === null) || (typeof top_4 === 'undefined' && top_4 === null)\n                                    || (typeof zoom === 'undefined' && zoom === null)) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n                else {\n                    this._destination = new PdfDestination();\n                    var zoom = array[4];\n                    var mode = array[1];\n                    if (typeof zoom !== 'undefined' && zoom !== null) {\n                        this._destination.zoom = zoom;\n                    }\n                    if (mode.name === 'Fit') {\n                        this._destination.mode = PdfDestinationMode.fitToPage;\n                    }\n                    else if (mode.name === 'XYZ') {\n                        var left = array[2];\n                        var topValue = array[3];\n                        if ((typeof left === 'undefined' && left === null) || (typeof topValue === 'undefined' && topValue === null)\n                            || (typeof zoom === 'undefined' && zoom === null)) {\n                            this._destination._setValidation(false);\n                        }\n                    }\n                    this._destination._index = index;\n                }\n            }\n        }\n        else if (this._dictionary.has('A') && !this._destination) {\n            var action = this._dictionary.get('A');\n            if (action.has('D')) {\n                var reference = action.get('D'); // eslint-disable-line\n                if (reference !== null && typeof reference !== 'undefined') {\n                    var referenceArray = void 0; // eslint-disable-line\n                    if (Array.isArray(reference)) {\n                        referenceArray = reference;\n                    }\n                    else if (reference instanceof _PdfReference) {\n                        var referenceValue = this._crossReference._fetch(reference); // eslint-disable-line\n                        if (Array.isArray(referenceValue)) {\n                            referenceArray = referenceValue;\n                        }\n                    }\n                    if (referenceArray && (referenceArray[0] instanceof _PdfReference || typeof referenceArray[0] === 'number')) {\n                        var document_1 = this._crossReference._document;\n                        var index = void 0;\n                        if (referenceArray[0] instanceof _PdfReference) {\n                            index = _getPageIndex(document_1, this._crossReference._fetch(referenceArray[0]));\n                        }\n                        else {\n                            index = referenceArray[0];\n                        }\n                        var page = document_1.getPage(index);\n                        if (page) {\n                            var mode = referenceArray[1];\n                            if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                                var top_5 = referenceArray[2];\n                                var topValue = (typeof top_5 !== 'undefined' && top_5 !== null) ? (page.size[1] - top_5) : 0;\n                                this._destination = new PdfDestination(page, [0, topValue]);\n                                if (typeof top_5 === 'undefined' || top_5 === null) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'XYZ') {\n                                var left = referenceArray[2];\n                                var top_6 = referenceArray[3];\n                                var zoom = referenceArray[4];\n                                var topValue = (typeof top_6 !== 'undefined' && top_6 !== null) ? (page.size[1] - top_6) : 0;\n                                var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                if (typeof zoom !== 'undefined' && zoom !== null) {\n                                    this._destination.zoom = zoom;\n                                }\n                                if ((typeof left !== 'undefined' && left !== null) || (typeof top_6 !== 'undefined' && top_6 !== null)\n                                    || (typeof zoom !== 'undefined' && zoom !== null)) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'FitR') {\n                                if (referenceArray.length === 6) {\n                                    var left = referenceArray[2];\n                                    var bottom = referenceArray[3];\n                                    var right = referenceArray[4];\n                                    var top_7 = referenceArray[5];\n                                    this._destination = new PdfDestination(page, [left, bottom, right, top_7]);\n                                }\n                            }\n                            else if (mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return this._destination;\n    };\n    PdfDocumentLinkAnnotation.prototype._addDocument = function () {\n        if (this.destination) {\n            this._dictionary.set('Dest', this.destination._array);\n        }\n    };\n    PdfDocumentLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfDocumentLinkAnnotation };\n/**\n * `PdfTextWebLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF string format\n * const format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n * // Create a new standard font\n * const font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n * // Get the text size\n * let size: number[] = font.measureString(\"Syncfusion Site\", format, [0, 0], 0, 0);\n * // Create a new text web link annotation\n * let annot: PdfTextWebLinkAnnotation = new PdfTextWebLinkAnnotation(50, 40, size[0], size[1], [0, 0, 0], [165, 42, 42], 1);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextWebLinkAnnotation, _super);\n    function PdfTextWebLinkAnnotation(x, y, width, height, brushColor, penColor, penWidth, text) {\n        var _this = _super.call(this) || this;\n        _this._isActionAdded = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._textWebLink = typeof text !== 'undefined' && text !== null ? text : '';\n        if (typeof brushColor !== 'undefined' && brushColor !== null) {\n            _this._brush = new PdfBrush(brushColor);\n        }\n        if (typeof penColor !== 'undefined' && penColor !== null) {\n            _this._pen = new PdfPen(penColor, penWidth ? penWidth : 1);\n        }\n        _this._type = _PdfAnnotationType.textWebLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"url\", {\n        /**\n         * Gets the url of the annotation.\n         *\n         * @returns {string} Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the URL of the annotation.\n         * let url: string = annotation.url;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._url === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._url = linkDict.get('URI');\n                }\n            }\n            return this._url;\n        },\n        /**\n         * Sets the url of the annotation.\n         *\n         * @param {string} value Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the URL of the annotation.\n         * annotation.url = ‘http://www.syncfusion.com’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A')) {\n                    var linkSource = this._dictionary._get('A'); // eslint-disable-line\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict && linkDict.has('URI')) {\n                        this._url = value;\n                        linkDict.update('URI', value);\n                        if (!(linkSource instanceof _PdfReference)) {\n                            this._dictionary._updated = linkDict._updated;\n                        }\n                    }\n                }\n                else {\n                    this._url = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextWebLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextWebLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextWebLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        if (!this._isActionAdded) {\n            this._addAction();\n            this._isActionAdded = true;\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfTextWebLinkAnnotation.prototype._addAction = function () {\n        var rect = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        if (typeof this.font === 'undefined' || this.font === null) {\n            this.font = this._lineCaptionFont;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        this._page.graphics.drawString(this._textWebLink, this.font, rect, this._pen, this._brush, format);\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._url !== 'undefined') {\n            dictionary.set('URI', this._url);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [0, 0, 0]);\n    };\n    PdfTextWebLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfTextWebLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfTextWebLinkAnnotation };\n/**\n * `PdfAttachmentAnnotation` class represents the attachment annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new attachment annotation\n * const annotation: PdfAttachmentAnnotation = new PdfAttachmentAnnotation(300, 200, 30, 30, \"Nature.jpg\", imageData);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAttachmentAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAttachmentAnnotation, _super);\n    function PdfAttachmentAnnotation(x, y, width, height, fileName, data) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfAttachmentIcon.pushPin;\n        _this._iconString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        _this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        _this._type = _PdfAnnotationType.fileAttachmentAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAttachmentAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the attachment annotation.\n         *\n         * @returns {PdfAttachmentIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Gets the icon type of the attachment annotation.\n         * let icon: PdfAttachmentIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapAttachmentIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the attachment annotation.\n         *\n         * @param {PdfAttachmentIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Sets the icon type of the attachment annotation.\n         * annotation.icon = PdfAttachmentIcon.pushPin;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAttachmentAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAttachmentAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAttachmentAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAttachmentAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n        this._addAttachment();\n    };\n    PdfAttachmentAnnotation.prototype._addAttachment = function () {\n        if (this._dictionary.has('FS')) {\n            var fileSpecification = this._dictionary.get('FS');\n            if (fileSpecification && fileSpecification.has('EF')) {\n                var embeddedFile = fileSpecification.get('EF');\n                if (embeddedFile && embeddedFile.has('F')) {\n                    _removeDuplicateReference(embeddedFile, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'FS');\n        }\n        var fileSpectDictionary = new _PdfDictionary();\n        fileSpectDictionary.set('Type', _PdfName.get('Filespec'));\n        fileSpectDictionary.set('Desc', this._fileName);\n        fileSpectDictionary.set('F', this._fileName);\n        fileSpectDictionary.set('UF', this._fileName);\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('EmbeddedFile'));\n        var paramsDictionary = new _PdfDictionary();\n        var dateTime = new Date();\n        paramsDictionary.set('CreationDate', dateTime.toTimeString());\n        paramsDictionary.set('ModDate', new Date().toTimeString());\n        paramsDictionary.set('Size', this._stream.length);\n        fileDictionary.set('Params', paramsDictionary);\n        this._stream.dictionary = new _PdfDictionary();\n        this._stream.dictionary = fileDictionary;\n        fileDictionary._crossReference = this._crossReference;\n        var char1 = this._crossReference._newLine.charCodeAt(0);\n        var char2 = this._crossReference._newLine.charCodeAt(1);\n        var buffer = [char1, char2, 37, 80, 68, 70, 45];\n        fileDictionary._crossReference._writeObject(this._stream, buffer);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, this._stream);\n        fileDictionary._updated = true;\n        var efileDictionary = new _PdfDictionary();\n        efileDictionary.set('F', reference);\n        fileSpectDictionary.set('EF', efileDictionary);\n        var fsReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fsReference, fileSpectDictionary);\n        fileSpectDictionary._updated = true;\n        this._dictionary.update('FS', fsReference);\n    };\n    PdfAttachmentAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    PdfAttachmentAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfAttachmentIcon.pushPin:\n                this._iconString = 'PushPin';\n                break;\n            case PdfAttachmentIcon.tag:\n                this._iconString = 'Tag';\n                break;\n            case PdfAttachmentIcon.graph:\n                this._iconString = 'Graph';\n                break;\n            case PdfAttachmentIcon.paperClip:\n                this._iconString = 'Paperclip';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfAttachmentAnnotation;\n}(PdfComment));\nexport { PdfAttachmentAnnotation };\n/**\n * `Pdf3DAnnotation` class represents the 3D annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: Pdf3DAnnotation = page.annotations.at(0) as Pdf3DAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar Pdf3DAnnotation = /** @class */ (function (_super) {\n    __extends(Pdf3DAnnotation, _super);\n    /**\n     * Initializes a new instance of the `Pdf3DAnnotation` class.\n     *\n     * @private\n     */\n    function Pdf3DAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.movieAnnotation;\n        return _this;\n    }\n    Pdf3DAnnotation._load = function (page, dictionary) {\n        var annot = new Pdf3DAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    Pdf3DAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    Pdf3DAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return Pdf3DAnnotation;\n}(PdfAnnotation));\nexport { Pdf3DAnnotation };\n/**\n * `PdfTextMarkupAnnotation` class represents the text markup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new text markup annotation\n * let annotation: PdfTextMarkupAnnotation = new PdfTextMarkupAnnotation('Text markup', 50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextMarkupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextMarkupAnnotation, _super);\n    function PdfTextMarkupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textMarkupType = PdfTextMarkupAnnotationType.highlight;\n        _this._quadPoints = new Array(8);\n        _this._boundsCollection = [];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        if (typeof text !== 'undefined') {\n            _this._text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n            _this._boundsCollection.push([_this.bounds.x, _this.bounds.y, _this.bounds.width, _this.bounds.height]);\n        }\n        _this._type = _PdfAnnotationType.textMarkupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the textMarkUp Color type of the attachment annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined' && this._dictionary.has('C')) {\n                this._textMarkUpColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the textMarkUp Color type of the attachment annotation.\n         * annotation.textMarkUpColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._textMarkUpColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkupType\", {\n        /**\n         * Gets the markup type of the annotation.\n         *\n         * @returns {PdfTextMarkupAnnotationType} Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup type of the annotation.\n         * let textMarkupType: PdfTextMarkupAnnotationType = annotation.textMarkupType;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Subtype')) {\n                var text = this._dictionary.get('Subtype');\n                this._textMarkupType = _mapMarkupAnnotationType(text.name);\n            }\n            return this._textMarkupType;\n        },\n        /**\n         * Sets the markup type of the annotation.\n         *\n         * @param {PdfTextMarkupAnnotationType} value Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup type of the annotation.\n         * annotation.textMarkupType = PdfTextMarkupAnnotationType.squiggly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._textMarkupType = value;\n                this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(value)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"boundsCollection\", {\n        /**\n         * Gets the markup bounds collection of the annotation.\n         *\n         * @returns {Array<number[]>} Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation =  page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup bounds collection of the annotation.\n         * let boundsCollection : Array<number[]> = annotation.boundsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var collection = [];\n                if (this._dictionary.has('QuadPoints')) {\n                    var points = this._dictionary.getArray('QuadPoints');\n                    if (points && points.length > 0) {\n                        var count = points.length / 8;\n                        for (var i = 0; i < count; i++) {\n                            var x = points[4 + (i * 8)] - points[i * 8];\n                            var y = points[5 + (i * 8)] - points[1 + (i * 8)];\n                            var height = Math.sqrt((x * x) + (y * y));\n                            x = points[6 + (i * 8)] - points[4 + (i * 8)];\n                            y = points[7 + (i * 8)] - points[5 + (i * 8)];\n                            var width = Math.sqrt((x * x) + (y * y));\n                            var rect = [points[i * 8], this._page.size[1] - points[1 + (i * 8)], width, height];\n                            collection.push(rect);\n                        }\n                    }\n                }\n                return collection;\n            }\n            return this._boundsCollection;\n        },\n        /**\n         * Sets the markup bounds collection of the annotation.\n         *\n         * @param {Array<number[]>} value Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup bounds collection of the  annotation.\n         * annotation.boundsCollection = [[50, 50, 100, 100], [201, 101, 61, 31], [101, 401, 61, 31]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value !== 'undefined') {\n                if (this._boundsCollection.length > 0) {\n                    this._quadPoints = new Array(8 + (value.length * 8));\n                    for (var i = 0; i < value.length; i++) {\n                        this._boundsCollection.push(value[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n                else {\n                    this._quadPoints = new Array(8);\n                    this._boundsCollection = value;\n                }\n            }\n            if (this._isLoaded && typeof value !== 'undefined') {\n                var isChanged = false;\n                if (this.boundsCollection.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this.boundsCollection[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n                if (isChanged) {\n                    this._quadPoints = new Array((value.length * 8));\n                    var pageHeight = this._page.size[1];\n                    for (var i = 0; i < value.length; i++) {\n                        this._quadPoints[0 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[1 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[2 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[3 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[4 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[5 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[1 + (i * 8)] -\n                            value[Number.parseInt(i.toString(), 10)][3];\n                        this._quadPoints[6 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[7 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[5 +\n                            (Number.parseInt(i.toString(), 10) * 8)];\n                    }\n                    this._dictionary.update('QuadPoints', this._quadPoints);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextMarkupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextMarkupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextMarkupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextMarkupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            dictionary.set('W', this.border.width);\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        var size = this._page.size;\n        this._setQuadPoints(size);\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(this._textMarkupType)));\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createMarkupAppearance();\n            if (!this._isLoaded && this._boundsCollection.length > 1) {\n                var native = this._obtainNativeRectangle();\n                this._dictionary.update('Rect', [native[0], native[1], native[0] + native[2], native[1] + native[3]]);\n            }\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        if (typeof this._text !== 'undefined' && this._text !== null) {\n            this._dictionary.set('Contents', this._text);\n        }\n    };\n    PdfTextMarkupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createMarkupAppearance();\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createMarkupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (isNormalMatrix && this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (!this._dictionary.has('AP') && this._appearanceTemplate) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfTextMarkupAnnotation.prototype._createMarkupAppearance = function () {\n        var width;\n        var height = 0;\n        var rectangle;\n        if (this.boundsCollection.length > 1) {\n            var pdfPath = new _PdfPath();\n            for (var i = 0; i < this.boundsCollection.length; i++) {\n                var bounds = [];\n                bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                pdfPath._addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            }\n            var rect = pdfPath._getBounds();\n            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n            this.bounds = rectangle;\n            width = rectangle.width;\n            height = rectangle.height;\n        }\n        else {\n            if (this._dictionary.has('QuadPoints')) {\n                var quadPoints = this._dictionary.get('QuadPoints');\n                if (this._quadPoints !== null) {\n                    for (var i = 0; i < (quadPoints.length / 8); i++) {\n                        if (this._isLoaded) {\n                            var point = new Array();\n                            var j = 0;\n                            for (var k = 0; k < quadPoints.length;) {\n                                var x1 = quadPoints[Number.parseInt(k.toString(), 10)];\n                                var y1 = quadPoints[k + 1];\n                                point[Number.parseInt(j.toString(), 10)] = [x1, y1];\n                                k = k + 2;\n                                j++;\n                            }\n                            var path = new _PdfPath();\n                            path._addLines(point);\n                            var rect = path._getBounds();\n                            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n                            width = rectangle.width;\n                            height = rectangle.height;\n                        }\n                        else {\n                            var x = Math.floor(quadPoints[4 + (i * 8)]) - Math.floor(quadPoints[0 + (i * 8)]);\n                            var y = Math.floor(quadPoints[5 + (i * 8)]) - Math.floor(quadPoints[1 + (i * 8)]);\n                            height = Math.sqrt((x * x) + (y * y));\n                            x = Math.floor(quadPoints[6 + (i * 8)]) - Math.floor(quadPoints[4 + (i * 8)]);\n                            y = Math.floor(quadPoints[7 + (i * 8)]) - Math.floor(quadPoints[5 + (i * 8)]);\n                            width = Math.sqrt((x * x) + (y * y));\n                            this.bounds = { x: this.bounds.x, y: this.bounds.y, width: width, height: height };\n                        }\n                    }\n                }\n            }\n        }\n        var nativeRectangle = [0, 0, width, height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var graphics = template.graphics;\n        if (typeof this.opacity !== 'undefined') {\n            graphics.setTransparency(this.opacity, this.opacity, PdfBlendMode.multiply);\n        }\n        if (this.textMarkUpColor) {\n            var pdfPen = new PdfPen(this.textMarkUpColor, this.border.width);\n            var brush = new PdfBrush(this.textMarkUpColor);\n            var x1 = 0;\n            var y1 = 0;\n            var w1 = 0;\n            var h1 = 0;\n            if (this.boundsCollection.length > 1) {\n                for (var i = 0; i < this.boundsCollection.length; i++) {\n                    var bounds = [];\n                    bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                    bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                    bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                    if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                        graphics.drawRectangle(bounds[0] - rectangle.x, bounds[1] - rectangle.y, bounds[2], bounds[3], brush);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                        pdfPen._width = bounds[3] * 0.02;\n                        graphics.save();\n                        graphics.translateTransform(bounds[0] - rectangle.x, (bounds[1] - rectangle.y));\n                        graphics.setClip([0, 0, bounds[2], bounds[3]]);\n                        graphics._drawPath(this._drawSquiggly(bounds[2], bounds[3]), pdfPen);\n                        graphics.restore();\n                    }\n                }\n            }\n            else {\n                if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                    graphics.drawRectangle(0, 0, width, height, brush);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                    graphics.drawLine(pdfPen, 0, height - ((height / 2) / 3), width, height - ((height / 2) / 3));\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                    graphics.drawLine(pdfPen, 0, height / 2, width, height / 2);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                    pdfPen._width = height * 0.02;\n                    graphics._drawPath(this._drawSquiggly(Math.round(width), Math.round(height)), pdfPen);\n                }\n                if (this._isLoaded) {\n                    this._dictionary.update('Rect', [rectangle.x, rectangle.y, rectangle.x + rectangle.width, rectangle.y + rectangle.height]);\n                }\n            }\n        }\n        return template;\n    };\n    PdfTextMarkupAnnotation.prototype._drawSquiggly = function (width, height) {\n        if (Math.floor(width) % 2 !== 0 || Math.round(width) > width) {\n            width = Math.floor(width) + 1;\n        }\n        var path = new _PdfPath();\n        var pathPoints = new Array();\n        var pathPointsCount = Math.ceil((width / height) * 16);\n        var length = width / (pathPointsCount / 2);\n        var location = parseFloat(((length + length) * 0.6).toFixed(2));\n        var zigZag = location;\n        var x = 0;\n        for (var i = 0; i < pathPointsCount; i++) {\n            var y = ((height - location) + zigZag) - (height * 0.02);\n            var temp = [x, parseFloat(y.toFixed(2))];\n            pathPoints.push(temp);\n            if (zigZag === 0) {\n                zigZag = location;\n            }\n            else {\n                zigZag = 0;\n            }\n            x = x + length;\n        }\n        path._addLines(pathPoints);\n        return path;\n    };\n    PdfTextMarkupAnnotation.prototype._setQuadPoints = function (pageSize) {\n        var textQuadLocation = [];\n        var pageHeight = pageSize[1];\n        this._boundsCollection[0] = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var noofRect = this._quadPoints.length / 8;\n        for (var i = 0; i < noofRect; i++) {\n            var locationX = this._boundsCollection[Number.parseInt(i.toString(), 10)][0];\n            var locationY = this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n            textQuadLocation[0 + (i * 8)] = locationX;\n            textQuadLocation[1 + (i * 8)] = (pageHeight - locationY);\n            textQuadLocation[2 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]);\n            textQuadLocation[3 + (i * 8)] = (pageHeight - locationY);\n            textQuadLocation[4 + (i * 8)] = locationX;\n            textQuadLocation[5 + (i * 8)] = (textQuadLocation[1 + (i * 8)] - this._boundsCollection[Number.parseInt(i.toString(), 10)][3]);\n            textQuadLocation[6 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]);\n            textQuadLocation[7 + (i * 8)] = textQuadLocation[5 + (i * 8)];\n        }\n        this._points = textQuadLocation;\n        this._dictionary.set('QuadPoints', this._points);\n    };\n    return PdfTextMarkupAnnotation;\n}(PdfComment));\nexport { PdfTextMarkupAnnotation };\n/**\n * `PdfWatermarkAnnotation` class represents the watermark annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new water mark annotation\n * const annotation: PdfWatermarkAnnotation = new PdfWatermarkAnnotation('Water Mark', 50, 100, 100, 50);\n * // Set the color of the annotation\n * annotation.color = [0, 0, 0];\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWatermarkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWatermarkAnnotation, _super);\n    function PdfWatermarkAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._watermarkText = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Watermark'));\n        if (typeof text !== 'undefined') {\n            _this._watermarkText = text;\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.watermarkAnnotation;\n        return _this;\n    }\n    PdfWatermarkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfWatermarkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfWatermarkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfWatermarkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (typeof this.color === 'undefined') {\n            this.color = [0, 0, 0];\n        }\n        this._appearanceTemplate = this._createWatermarkAppearance();\n        this._dictionary.update('Rect', _updateBounds(this));\n        if (typeof this.opacity !== 'undefined' && this._opacity !== 1.0) {\n            this._dictionary.set('CA', this._opacity);\n        }\n    };\n    PdfWatermarkAnnotation.prototype._createWatermarkAppearance = function () {\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        this._rotateAngle = this._getRotationAngle();\n        if (typeof this.rotationAngle !== 'undefined' && this._rotate !== PdfRotationAngle.angle0 || this._rotateAngle !== PdfRotationAngle.angle0) {\n            if (this._rotateAngle === 0) {\n                this._rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this._rotateAngle);\n        }\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, nativeRectangle);\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        _setMatrix(template, this._rotateAngle);\n        var graphics = appearance.normal.graphics;\n        var width = this.border.width / 2;\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        var borderPen = new PdfPen(this.color, width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        if (this._isLoaded) {\n            if (this._dictionary.has('Contents')) {\n                this._watermarkText = this._dictionary.get('Contents');\n            }\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        else {\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        if (typeof this._watermarkText !== 'undefined') {\n            graphics.drawString(this._watermarkText, font, [0, 0, 0, 0], borderPen, backBrush, format);\n        }\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dictionary = new _PdfDictionary();\n        graphics._template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, graphics._template._content);\n        graphics._template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        return template;\n    };\n    PdfWatermarkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten) {\n                this._appearanceTemplate = this._createWatermarkAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createWatermarkAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    return PdfWatermarkAnnotation;\n}(PdfAnnotation));\nexport { PdfWatermarkAnnotation };\n/**\n * `PdfRubberStampAnnotation` class represents the rubber stamp annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRubberStampAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRubberStampAnnotation, _super);\n    function PdfRubberStampAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfRubberStampAnnotationIcon.draft;\n        _this._stampWidth = 0;\n        _this._iconString = '';\n        _this.rotateAngle = 0;\n        _this._stampAppearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 20, PdfFontStyle.italic | PdfFontStyle.bold);\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Stamp'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rubberStampAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the rubber stamp annotation.\n         *\n         * @returns {PdfRubberStampAnnotationIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n         * // Gets the icon type of the rubber stamp annotation.\n         * let icon: PdfRubberStampAnnotationIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapRubberStampIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the rubber stamp annotation.\n         *\n         * @param {PdfRubberStampAnnotationIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n         * // Sets the icon type of the rubber stamp annotation.\n         * annotation.icon = PdfRubberStampAnnotationIcon.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get('#' + this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"appearance\", {\n        /**\n         * Get the appearance of the rubber stamp annotation. (Read only)\n         *\n         * @returns {PdfAppearance} Returns the appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return null;\n            }\n            if (typeof this._appearance === 'undefined') {\n                var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n                this._appearance = new PdfAppearance(this, nativeRectangle);\n                this._appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            }\n            return this._appearance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Create an appearance template for a rubber stamp annotation.\n     *\n     * @returns {PdfTemplate} Returns the appearance template of the annotation.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n     * // Gets the appearance template of the annotation.\n     * let template: PdfTemplate = annotation.createTemplate();\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRubberStampAnnotation.prototype.createTemplate = function () {\n        var template;\n        if (this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        template = new PdfTemplate();\n                        template._isExported = true;\n                        var templateDictionary = appearanceStream.dictionary;\n                        var matrix = templateDictionary.getArray('Matrix');\n                        var bounds = templateDictionary.getArray('BBox');\n                        if (matrix) {\n                            var mMatrix = [];\n                            for (var i = 0; i < matrix.length; i++) {\n                                var value = matrix[Number.parseInt(i.toString(), 10)];\n                                mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                            }\n                            if (bounds && bounds.length > 3) {\n                                var rect = _toRectangle(bounds);\n                                var rectangle = this._transformBBox(rect, mMatrix);\n                                template._size = [rectangle[2], rectangle[3]];\n                            }\n                        }\n                        else if (bounds) {\n                            templateDictionary.update('Matrix', [1, 0, 0, 1, -bounds[0], -bounds[1]]);\n                            template._size = [bounds[2], bounds[3]];\n                        }\n                        template._exportStream(dictionary, this._crossReference);\n                    }\n                }\n            }\n            else {\n                template = this._createRubberStampAppearance();\n            }\n        }\n        return template;\n    };\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"_innerTemplateBounds\", {\n        get: function () {\n            var innerBounds;\n            if (this._isLoaded) {\n                innerBounds = this._obtainInnerBounds();\n                innerBounds.x = this.bounds.x;\n                innerBounds.y = this.bounds.y;\n            }\n            return innerBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRubberStampAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRubberStampAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRubberStampAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRubberStampAnnotation.prototype._postProcess = function () {\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        this._appearanceTemplate = this._createRubberStampAppearance();\n    };\n    PdfRubberStampAnnotation.prototype._transformBBox = function (bBoxValue, matrix) {\n        var xCoordinate = [];\n        var yCoordinate = [];\n        var point1 = this._transformPoint(bBoxValue.x, bBoxValue.height, matrix);\n        xCoordinate[0] = point1[0];\n        yCoordinate[0] = point1[1];\n        var point2 = this._transformPoint(bBoxValue.width, bBoxValue.y, matrix);\n        xCoordinate[1] = point2[0];\n        yCoordinate[1] = point2[1];\n        var point3 = this._transformPoint(bBoxValue.x, bBoxValue.y, matrix);\n        xCoordinate[2] = point3[0];\n        yCoordinate[2] = point3[1];\n        var point4 = this._transformPoint(bBoxValue.width, bBoxValue.height, matrix);\n        xCoordinate[3] = point4[0];\n        yCoordinate[3] = point4[1];\n        var rect = [this._minValue(xCoordinate), this._minValue(yCoordinate),\n            this._maxValue(xCoordinate), this._maxValue(yCoordinate)];\n        return rect;\n    };\n    PdfRubberStampAnnotation.prototype._transformPoint = function (x, y, matrix) {\n        var point = [];\n        point[0] = x * matrix[0] + y * matrix[2] + matrix[4];\n        point[1] = x * matrix[1] + y * matrix[3] + matrix[5];\n        return point;\n    };\n    PdfRubberStampAnnotation.prototype._minValue = function (values) {\n        var minimum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] < minimum) {\n                minimum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return minimum;\n    };\n    PdfRubberStampAnnotation.prototype._maxValue = function (values) {\n        var maximum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] > maximum) {\n                maximum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return maximum;\n    };\n    PdfRubberStampAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var isTransformBBox = false;\n        if (this._isLoaded && (this._setAppearance || isFlatten || this._isExport)) {\n            if ((!isFlatten && !this._isExport) || this._setAppearance) {\n                this._appearanceTemplate = this._createRubberStampAppearance();\n            }\n            if (!this._appearanceTemplate && (this._isExport || isFlatten) && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        var isStamp = false;\n                        if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                            var isRotated = false;\n                            var size = void 0;\n                            var rect = void 0;\n                            if (appearanceStream) {\n                                isRotated = (this._page.rotation === PdfRotationAngle.angle0 &&\n                                    this.rotateAngle === PdfRotationAngle.angle0);\n                                if (!isRotated) {\n                                    isRotated = (this._page.rotation !== PdfRotationAngle.angle0 &&\n                                        this.rotateAngle === PdfRotationAngle.angle0);\n                                }\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            isStamp = true;\n                            isTransformBBox = isRotated ? true : false;\n                            if (isTransformBBox) {\n                                var matrix = appearanceStream.dictionary.getArray('Matrix');\n                                if (matrix) {\n                                    var mMatrix = [];\n                                    for (var i = 0; i < matrix.length; i++) {\n                                        var value = matrix[Number.parseInt(i.toString(), 10)];\n                                        mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                                    }\n                                    var bounds = appearanceStream.dictionary.getArray('BBox');\n                                    if (bounds && bounds.length > 3) {\n                                        rect = _toRectangle(bounds);\n                                        var rectangle = this._transformBBox(rect, mMatrix);\n                                        size = [rectangle[2], rectangle[3]];\n                                        this._appearanceTemplate._size = size;\n                                    }\n                                    else {\n                                        size = [rect.width, rect.height];\n                                    }\n                                }\n                            }\n                            else {\n                                size = [rect.width, rect.height];\n                            }\n                        }\n                        if (!isStamp) {\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (!(this._isImported && this._dictionary.has('AP'))) {\n                this._postProcess();\n            }\n            if ((!this._appearanceTemplate) && (isFlatten || this._isImported)) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRubberStampAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isTransformBBox) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isTransformBBox);\n            }\n            else {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRubberStampAnnotation.prototype._createRubberStampAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance;\n        if (this._appearance) {\n            appearance = this._appearance;\n            if (!this._dictionary.has('Name')) {\n                this._dictionary.update('Name', _PdfName.get('#23CustomStamp'));\n            }\n        }\n        else {\n            this._iconString = this._obtainIconName(this.icon);\n            this._dictionary.update('Name', _PdfName.get('#23' + this._iconString));\n            appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        var template = appearance.normal;\n        if (typeof this._rotate !== 'undefined' && (this._rotate !== PdfRotationAngle.angle0 || this._getRotationAngle() !== 0)) {\n            this.rotateAngle = this._getRotationAngle();\n            if (this.rotateAngle === 0) {\n                this.rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this.rotateAngle);\n        }\n        _setMatrix(template, this.rotateAngle);\n        if (!this._appearance) {\n            this._drawStampAppearance(template);\n        }\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dictionary = new _PdfDictionary();\n        template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        this._dictionary.set('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n        this._dictionary.update('Rect', _updateBounds(this));\n        return template;\n    };\n    PdfRubberStampAnnotation.prototype._drawStampAppearance = function (template) {\n        var stringFormat = new PdfStringFormat();\n        stringFormat.alignment = PdfTextAlignment.center;\n        stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n        var backBrush = new PdfBrush(this._obtainBackGroundColor());\n        var borderPen = new PdfPen(this._obtainBorderColor(), this.border.width);\n        var graphics = template.graphics;\n        graphics.save();\n        graphics.scaleTransform(template._size[0] / (this._stampWidth + 4), (template._size[1] / 28));\n        var rubberFont = this._stampAppearanceFont;\n        this._drawRubberStamp(graphics, borderPen, backBrush, rubberFont, stringFormat);\n        graphics.restore();\n    };\n    PdfRubberStampAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfRubberStampAnnotationIcon.approved:\n                this._iconString = 'Approved';\n                this._stampWidth = 126;\n                break;\n            case PdfRubberStampAnnotationIcon.asIs:\n                this._iconString = 'AsIs';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.confidential:\n                this._iconString = 'Confidential';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.departmental:\n                this._iconString = 'Departmental';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.draft:\n                this._iconString = 'Draft';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.experimental:\n                this._iconString = 'Experimental';\n                this._stampWidth = 176;\n                break;\n            case PdfRubberStampAnnotationIcon.expired:\n                this._iconString = 'Expired';\n                this._stampWidth = 116;\n                break;\n            case PdfRubberStampAnnotationIcon.final:\n                this._iconString = 'Final';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.forComment:\n                this._iconString = 'ForComment';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.forPublicRelease:\n                this._iconString = 'ForPublicRelease';\n                this._stampWidth = 240;\n                break;\n            case PdfRubberStampAnnotationIcon.notApproved:\n                this._iconString = 'NotApproved';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.notForPublicRelease:\n                this._iconString = 'NotForPublicRelease';\n                this._stampWidth = 290;\n                break;\n            case PdfRubberStampAnnotationIcon.sold:\n                this._iconString = 'Sold';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.topSecret:\n                this._iconString = 'TopSecret';\n                this._stampWidth = 146;\n                break;\n            case PdfRubberStampAnnotationIcon.completed:\n                this._iconString = 'Completed';\n                this._stampWidth = 136;\n                break;\n            case PdfRubberStampAnnotationIcon.void:\n                this._iconString = 'Void';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.informationOnly:\n                this._iconString = 'InformationOnly';\n                this._stampWidth = 230;\n                break;\n            case PdfRubberStampAnnotationIcon.preliminaryResults:\n                this._iconString = 'PreliminaryResults';\n                this._stampWidth = 260;\n                break;\n        }\n        return this._iconString;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBackGroundColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 251;\n            green = 222;\n            blue = 221;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 229;\n            green = 238;\n            blue = 222;\n            color = [red, green, blue];\n        }\n        else {\n            red = 219;\n            green = 227;\n            blue = 240;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBorderColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 151;\n            green = 23;\n            blue = 15;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 73;\n            green = 110;\n            blue = 38;\n            color = [red, green, blue];\n        }\n        else {\n            red = 24;\n            green = 37;\n            blue = 100;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._drawRubberStamp = function (graphics, pen, brush, font, format) {\n        graphics.drawRoundedRectangle(2, 1, this._stampWidth, 26, 3, pen, brush);\n        var pdfBrush = new PdfBrush(this._obtainBorderColor());\n        graphics.drawString(this._iconString.toUpperCase(), font, [(this._stampWidth / 2) + 1, 15, 0, 0], null, pdfBrush, format);\n    };\n    PdfRubberStampAnnotation.prototype._obtainInnerBounds = function () {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (this._dictionary && this._dictionary.has('AP')) {\n            var appearanceDictionary = this._dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var normalAppearance = appearanceDictionary.get('N');\n                if (normalAppearance && typeof normalAppearance.dictionary !== 'undefined') {\n                    var normalAppearanceDictionary = normalAppearance.dictionary;\n                    if (normalAppearanceDictionary.has('BBox')) {\n                        var values = normalAppearanceDictionary.getArray('BBox');\n                        if (values && values.length === 4) {\n                            bounds = _toRectangle(values);\n                        }\n                    }\n                }\n            }\n        }\n        return bounds;\n    };\n    return PdfRubberStampAnnotation;\n}(PdfComment));\nexport { PdfRubberStampAnnotation };\n/**\n * `PdfSoundAnnotation` class represents the sound annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfSoundAnnotation = page.annotations.at(0) as PdfSoundAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSoundAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSoundAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfSoundAnnotation` class.\n     *\n     * @private\n     */\n    function PdfSoundAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.soundAnnotation;\n        return _this;\n    }\n    PdfSoundAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSoundAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSoundAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSoundAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfSoundAnnotation;\n}(PdfComment));\nexport { PdfSoundAnnotation };\n/**\n * `PdfFreeTextAnnotation` class represents the free text annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new free text annotation\n * const annotation: PdfFreeTextAnnotation = new PdfFreeTextAnnotation(50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFreeTextAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFreeTextAnnotation, _super);\n    function PdfFreeTextAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._intentString = '';\n        _this._markUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 7, PdfFontStyle.regular);\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._cropBoxValueX = 0;\n        _this._cropBoxValueY = 0;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FreeText'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.freeTextAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"calloutLines\", {\n        /**\n         * Gets the callout lines of the free text annotation.\n         *\n         * @returns {Array<number[]>} Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation= page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the callout lines of the free text annotation.\n         * let calloutLines: Array<number[]> = annotation.calloutLines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._calloutLines === 'undefined') {\n                this._calloutLines = this._getCalloutLinePoints();\n            }\n            return this._calloutLines;\n        },\n        /**\n         * Sets the callout lines of the free text annotation.\n         *\n         * @param {Array<number[]>} value Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the callout lines of the free text annotation.\n         * annotation.calloutLines = [[100, 450], [100, 200], [100, 150]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded) {\n                this._calloutLines = value;\n            }\n            var isChanged = false;\n            if (this._isLoaded && value.length >= 2) {\n                if (this._calloutLines.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this._calloutLines[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n            }\n            if (isChanged) {\n                var pageHeight = this._page.size[1];\n                var lines = [];\n                for (var i = 0; i < value.length; i++) {\n                    if (i < value.length) {\n                        lines.push(value[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                        lines.push((pageHeight + this._cropBoxValueY) - value[Number.parseInt(i.toString(), 10)][1]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                this._calloutLines = value;\n                this._dictionary.update('CL', lines);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the Line ending style of the annotation.\n         * let lineEndingStyle: PdfLineEndingStyle = annotation.lineEndingStyle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            this._lineEndingStyle = this._obtainLineEndingStyle();\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = PdfLineEndingStyle.closedArrow;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._dictionary.update('LE', _PdfName.get(_reverseMapEndingStyle(value)));\n            }\n            this._lineEndingStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text markup color of the annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined') {\n                var color = void 0;\n                if (this._dictionary.has('TextColor')) {\n                    this._textMarkUpColor = _parseColor(this._dictionary.getArray('TextColor'));\n                    return this._textMarkUpColor;\n                }\n                if (this._dictionary.has('DS')) {\n                    var collections = this._dictionary.get('DS').split(';');\n                    for (var i = 0; i < collections.length; i++) {\n                        if (collections[Number.parseInt(i.toString(), 10)].indexOf('color') !== -1) {\n                            color = collections[Number.parseInt(i.toString(), 10)].split(':')[1];\n                            if (color.startsWith('#')) {\n                                color = color.substring(1);\n                            }\n                            this._textMarkUpColor = _convertToColor(color);\n                            return this._textMarkUpColor;\n                        }\n                    }\n                }\n                if (!this._textMarkUpColor && this._dictionary.has('RC')) {\n                    //Need to code\n                }\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text markup color of the annotation.\n         * annotation.textMarkUpColor = [200, 200, 200];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._textMarkUpColor = value;\n                var ds = 'font:' +\n                    this.font._metrics._postScriptName +\n                    ' ' +\n                    this.font._size +\n                    'pt;style:' + _reverseMapPdfFontStyle(this.font._style) +\n                    ';color:' +\n                    this._colorToHex(value);\n                this._dictionary.update('DS', ds);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._font) {\n                this._font = this._obtainFont();\n                if ((this._font === null || typeof this._font === 'undefined') || (!this._isLoaded && this._font.size === 1)) {\n                    this._font = this._markUpFont;\n                }\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('DA')) {\n                this._borderColor = this._obtainColor();\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [150, 150, 150];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._borderColor = value;\n                this._dictionary.update('DA', this._getBorderColorString(this.borderColor));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"annotationIntent\", {\n        /**\n         * Gets the intent of the annotation.\n         *\n         * @returns {PdfAnnotationIntent} Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the intent of the annotation.\n         * let annotationIntent: PdfAnnotationIntent = annotation.annotationIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('IT')) {\n                this._annotationIntent = _mapAnnotationIntent(this._dictionary.get('IT').name);\n            }\n            else {\n                this._annotationIntent = PdfAnnotationIntent.none;\n            }\n            return this._annotationIntent;\n        },\n        /**\n         * Sets the intent of the annotation.\n         *\n         * @param {PdfAnnotationIntent} value Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the intent of the annotation.\n         * annotation.annotationIntent = PdfAnnotationIntent.freeTextTypeWriter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._annotationIntent = value;\n                if (value === PdfAnnotationIntent.none) {\n                    this._dictionary.update('Subj', 'Text Box');\n                }\n                else {\n                    this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFreeTextAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFreeTextAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfFreeTextAnnotation.prototype._setPaddings = function (paddings) {\n        this._paddings = paddings;\n    };\n    PdfFreeTextAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFreeTextAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        this._updateCropBoxValues();\n        if (isFlatten || this._setAppearance) {\n            this._appearanceTemplate = this._createAppearance();\n        }\n        if (!isFlatten) {\n            this._dictionary.update('Rect', _updateBounds(this));\n            this._saveFreeTextDictionary();\n        }\n    };\n    PdfFreeTextAnnotation.prototype._updateCropBoxValues = function () {\n        if (this._page) {\n            var cropOrMediaBox = void 0;\n            if (this._page._pageDictionary.has('CropBox')) {\n                cropOrMediaBox = this._page._pageDictionary.getArray('CropBox');\n            }\n            else if (this._page._pageDictionary.has('MediaBox')) {\n                cropOrMediaBox = this._page._pageDictionary.getArray('MediaBox');\n            }\n            if (cropOrMediaBox) {\n                this._cropBoxValueX = cropOrMediaBox[0];\n                this._cropBoxValueY = cropOrMediaBox[1];\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._appearanceTemplate && !this._dictionary.has('AP')) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._dictionary.has('AP')) {\n                if (this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                    this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n                }\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_8 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_8, appearance);\n                this._dictionary.update('AP', reference_8);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics.drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._removeAnnotationFromPage(this._page, this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    PdfFreeTextAnnotation.prototype._createAppearance = function () {\n        var template;\n        var borderWidth = this.border.width / 2;\n        var nativeRectangle = this._obtainAppearanceBounds();\n        var rotationAngle = this.rotate;\n        if (rotationAngle === 0 || rotationAngle === 90 || rotationAngle === 180 || rotationAngle === 270) {\n            this._isAllRotation = false;\n        }\n        if (rotationAngle > 0 && this._isAllRotation) {\n            template = new PdfTemplate([0, 0, nativeRectangle[2], nativeRectangle[3]], this._crossReference);\n        }\n        else {\n            template = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        _setMatrix(template, this._getRotationAngle());\n        var parameter = new _PaintParameter();\n        var text = this._obtainText();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var alignment = this._obtainTextAlignment();\n        var borderColor = this._obtainColor();\n        var borderPen = new PdfPen(borderColor, this.border.width);\n        if (this.border.width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        var rectangle = this._obtainStyle(borderPen, nativeRectangle, borderWidth, parameter);\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        if (this.textMarkUpColor) {\n            parameter.backBrush = new PdfBrush(this._textMarkUpColor);\n        }\n        parameter.borderWidth = this.border.width;\n        if (this.calloutLines && this._calloutLines.length >= 2) {\n            this._drawCallOuts(graphics, borderPen);\n            if (this._isLoaded && typeof this._lineEndingStyle === 'undefined') {\n                this._lineEndingStyle = this.lineEndingStyle;\n            }\n            if (this._lineEndingStyle !== PdfLineEndingStyle.none) {\n                var linePoints = this._obtainLinePoints();\n                var angle = this._getAngle(linePoints);\n                var endPoint = this._getAxisValue([linePoints[2], linePoints[3]], 90, 0);\n                this._drawLineEndStyle(endPoint, graphics, angle, borderPen, parameter.foreBrush, this.lineEndingStyle, this.border.width, false);\n            }\n            if (!this._dictionary.has('RD')) {\n                rectangle = [this.bounds.x,\n                    -((this._page.size[1] - (this.bounds.y + this.bounds.height))),\n                    this.bounds.width,\n                    -this.bounds.height];\n            }\n            else {\n                rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            }\n            rectangle[0] = rectangle[0] + this._cropBoxValueX;\n            rectangle[1] = rectangle[1] - this._cropBoxValueY;\n            this._calculateRectangle(rectangle);\n            parameter.bounds = rectangle;\n        }\n        else {\n            rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            parameter.bounds = rectangle;\n        }\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [rectangle[0] - outerRectangle[0], (-(rectangle[1])) - outerRectangle[1], rectangle[2] - outerRectangle[2],\n            (((-rectangle[1]) - outerRectangle[1]) + (-rectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < value.length; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.update('RD', value);\n        if (this.opacity && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.save();\n        }\n        this._drawFreeTextRectangle(graphics, parameter, rectangle, alignment);\n        this._drawFreeMarkUpText(graphics, parameter, rectangle, text, alignment);\n        if (this.opacity && this._opacity < 1) {\n            graphics.restore();\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.restore();\n        }\n        var bounds = this._obtainAppearanceBounds();\n        this._dictionary.set('Rect', [bounds[0], bounds[1], bounds[0] + bounds[2], bounds[1] + bounds[3]]);\n        return template;\n    };\n    PdfFreeTextAnnotation.prototype._calculateRectangle = function (innerRectangle) {\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [innerRectangle[0] - outerRectangle[0],\n            (-(innerRectangle[1])) - outerRectangle[1], innerRectangle[2] - outerRectangle[2],\n            (((-innerRectangle[1]) - outerRectangle[1]) + (-innerRectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < 4; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.set('RD', value);\n    };\n    PdfFreeTextAnnotation.prototype._obtainAnnotationIntent = function (_annotationIntent) {\n        switch (_annotationIntent) {\n            case PdfAnnotationIntent.freeTextCallout:\n                this._intentString = 'FreeTextCallout';\n                break;\n            case PdfAnnotationIntent.freeTextTypeWriter:\n                this._intentString = 'FreeTextTypeWriter';\n                break;\n        }\n        return this._intentString;\n    };\n    PdfFreeTextAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        if (!fontData.size && this._dictionary.has('RC')) {\n            //Parse XML data\n        }\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeMarkUpText = function (graphics, parameter, rectangle, text, alignment) {\n        var isRotation = false;\n        var angle = this.rotate;\n        if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n            rectangle = [-rectangle[1], rectangle[0], -rectangle[3], rectangle[2]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n            rectangle = [-(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2], -rectangle[3]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n            rectangle = [(rectangle[1] + rectangle[3]), -(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2]];\n        }\n        else if (angle === 0 && !this._isAllRotation) {\n            rectangle = [rectangle[0], (rectangle[1] + rectangle[3]), rectangle[2], rectangle[3]];\n        }\n        if ((typeof this._font === 'undefined' || this._font === null) || (!this._isLoaded && this._font.size === 1)) {\n            this._font = this._markUpFont;\n        }\n        if (angle > 0 && this._isAllRotation) {\n            isRotation = true;\n            var bounds_1 = this.bounds;\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var textSize = this._font.measureString(text, [0, 0], format, 0, 0);\n            if (angle > 0 && angle <= 91) {\n                graphics.translateTransform(textSize[1], -bounds_1.height);\n            }\n            else if (angle > 91 && angle <= 181) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -(bounds_1.height - textSize[1]));\n            }\n            else if (angle > 181 && angle <= 271) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -textSize[1]);\n            }\n            else if (angle > 271 && angle < 360) {\n                graphics.translateTransform(textSize[1], -textSize[1]);\n            }\n            graphics.rotateTransform(angle);\n            parameter.bounds = [0, 0, parameter.bounds[2], parameter.bounds[3]];\n        }\n        var bounds = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n        if (this._paddings && !this._isLoaded) {\n            var left = this._paddings._left;\n            var top_8 = this._paddings._top;\n            var right = this._paddings._right + this._paddings._left;\n            var bottom = this._paddings._top + this._paddings._bottom;\n            if (parameter.borderWidth > 0) {\n                var first_1 = rectangle[0] + (parameter.borderWidth + left);\n                var second_1 = rectangle[1] + (parameter.borderWidth + top_8);\n                var third = rectangle[2] - ((parameter.borderWidth * 2) + right);\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                else {\n                    forth = -rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                rectangle = [first_1, second_1, third, forth];\n            }\n            else {\n                var first_2 = rectangle[0] + left;\n                var second_2 = rectangle[1] + top_8;\n                var third = rectangle[2] - right;\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - bottom;\n                }\n                else {\n                    forth = -rectangle[3] - bottom;\n                }\n                rectangle = [first_2, second_2, third, forth];\n            }\n        }\n        else if (parameter.borderWidth > 0) {\n            rectangle = [rectangle[0] + (parameter.borderWidth * 1.5),\n                rectangle[1] + (parameter.borderWidth * 1.5),\n                rectangle[2] - (parameter.borderWidth * 3),\n                (rectangle[3] > 0) ? (rectangle[3] - (parameter.borderWidth * 3)) : (-rectangle[3] - (parameter.borderWidth * 3))];\n        }\n        var first = this._font._metrics._getHeight() > ((rectangle[3] > 0) ? rectangle[3] : -rectangle[3]);\n        var second = this._font._metrics._getHeight() <= ((bounds[3] > 0) ? bounds[3] : -bounds[3]);\n        var checkPaddingWithFontHeight = first && second;\n        this._drawFreeTextAnnotation(graphics, parameter, text, this._font, checkPaddingWithFontHeight ? bounds : rectangle, true, alignment, isRotation);\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextRectangle = function (graphics, parameter, rectangle, alignment) {\n        var isRotation = false;\n        if (this._dictionary.has('BE')) {\n            for (var i = 0; i < rectangle.length; i++) {\n                if (rectangle[Number.parseInt(i.toString(), 10)] < 0) {\n                    rectangle[Number.parseInt(i.toString(), 10)] = -rectangle[Number.parseInt(i.toString(), 10)];\n                }\n            }\n            this._drawAppearance(graphics, parameter, rectangle);\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n            }\n        }\n        else {\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n                parameter.bounds = [-rectangle[1], rectangle[2] + rectangle[0] - rectangle[3], -rectangle[2]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n                parameter.bounds = [-(rectangle[2] + rectangle[0]), -(rectangle[3] + rectangle[1]), rectangle[2], rectangle[3]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n                parameter.bounds = [rectangle[1] + rectangle[3], -rectangle[0], -rectangle[3], -rectangle[2]];\n            }\n            this._drawFreeTextAnnotation(graphics, parameter, '', this._font, parameter.bounds, false, alignment, isRotation);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawAppearance = function (graphics, parameter, rectangle) {\n        var graphicsPath = new _PdfPath();\n        graphicsPath._addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        if (this._dictionary.has('BE')) {\n            var dictionary = this._dictionary.get('BE');\n            if (dictionary && dictionary.has('I')) {\n                var value = dictionary.get('I');\n                var radius = value === 1 ? 4 : 9;\n                this._drawCloudStyle(graphics, parameter.foreBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, true);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextAnnotation = function (g, parameter, text, font, rectangle, isSkipDrawRectangle, alignment, isRotation) {\n        if (!isSkipDrawRectangle) {\n            g.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.foreBrush);\n        }\n        else {\n            var format = new PdfStringFormat();\n            format.lineAlignment = PdfVerticalAlignment.top;\n            format.alignment = alignment;\n            format.lineSpacing = 0;\n            if (isRotation) {\n                g.drawString(text, font, parameter.bounds, null, parameter.backBrush, format);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.backBrush, format);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getCalloutLinePoints = function () {\n        if (this._dictionary.has('CL')) {\n            var calloutLinepoints = this._dictionary.getArray('CL');\n            if (calloutLinepoints) {\n                this._calloutLines = [];\n                for (var i = 0; i < calloutLinepoints.length; i = i + 2) {\n                    var points = [calloutLinepoints[Number.parseInt(i.toString(), 10)],\n                        this._page.size[1] - calloutLinepoints[i + 1]];\n                    this._calloutLines.push(points);\n                }\n            }\n        }\n        return this._calloutLines;\n    };\n    PdfFreeTextAnnotation.prototype._obtainAppearanceBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var path = new _PdfPath();\n            var pointArray = [];\n            var length_2 = this._calloutLines.length === 2 ? 2 : 3;\n            for (var i = 0; i < length_2; i++) {\n                pointArray.push([0, 0]);\n            }\n            if (this._calloutLines.length >= 2) {\n                this._obtainCallOutsNative();\n                for (var i = 0; i < this._calloutLines.length; i++) {\n                    if (i < 3) {\n                        pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                            this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            if (pointArray.length > 0) {\n                if (this.lineEndingStyle !== PdfLineEndingStyle.none) {\n                    this._expandAppearance(pointArray);\n                }\n                path._addLines(pointArray);\n            }\n            path._addRectangle(this.bounds.x - 2, (this._page.size[1] - (this.bounds.y + this.bounds.height)) - 2, this.bounds.width + (2 * 2), this.bounds.height + (2 * 2));\n            bounds = path._getBounds();\n        }\n        else {\n            bounds = [this.bounds.x, (this._page.size[1] - (this.bounds.y + this.bounds.height)), this.bounds.width, this.bounds.height];\n        }\n        return bounds;\n    };\n    PdfFreeTextAnnotation.prototype._obtainCallOutsNative = function () {\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var size = this._page.size;\n            this._calloutsClone = [];\n            for (var i = 0; i < this._calloutLines.length; i++) {\n                this._calloutsClone.push([this._calloutLines[Number.parseInt(i.toString(), 10)][0],\n                    size[1] - this._calloutLines[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._obtainLinePoints = function () {\n        var pageHeight = this._page.size[1];\n        return [this.calloutLines[1][0],\n            pageHeight - this.calloutLines[1][1],\n            this.calloutLines[0][0],\n            pageHeight - this.calloutLines[0][1]];\n    };\n    PdfFreeTextAnnotation.prototype._obtainLineEndingStyle = function () {\n        var lineEndingStyle = PdfLineEndingStyle.square;\n        if (this._dictionary.has('LE')) {\n            lineEndingStyle = _mapLineEndingStyle(this._dictionary.get('LE').name, lineEndingStyle);\n        }\n        return lineEndingStyle;\n    };\n    PdfFreeTextAnnotation.prototype._obtainText = function () {\n        var text = '';\n        if (this._dictionary.has('Contents')) {\n            var markUpText = this._dictionary.get('Contents');\n            if (markUpText) {\n                text = markUpText;\n            }\n            if (text && text !== '') {\n                this._text = text;\n            }\n            return text;\n        }\n        else if (this._dictionary.has('RC')) {\n            //this._parseXMLData();\n            text = this._rcText;\n            return text;\n        }\n        return text;\n    };\n    PdfFreeTextAnnotation.prototype._obtainTextAlignment = function () {\n        var textAlignment = PdfTextAlignment.left;\n        var hasAlignment;\n        if (this._dictionary.has('Q')) {\n            var value = this._dictionary.get('Q');\n            if (typeof value !== 'undefined') {\n                textAlignment = value;\n                hasAlignment = true;\n            }\n        }\n        else if (this._dictionary.has('RC')) {\n            //Need to add\n        }\n        if (!hasAlignment && this._dictionary.has('DS')) {\n            var value = this._dictionary.get('DS');\n            var collections = value.split(';');\n            for (var i = 0; i < collections.length; i++) {\n                if (collections[Number.parseInt(i.toString(), 10)].indexOf('text-align') !== -1) {\n                    switch (collections[Number.parseInt(i.toString(), 10)]) {\n                        case 'left':\n                            textAlignment = PdfTextAlignment.left;\n                            break;\n                        case 'right':\n                            textAlignment = PdfTextAlignment.right;\n                            break;\n                        case 'center':\n                            textAlignment = PdfTextAlignment.center;\n                            break;\n                        case 'justify':\n                            textAlignment = PdfTextAlignment.justify;\n                            break;\n                    }\n                }\n            }\n        }\n        return textAlignment;\n    };\n    PdfFreeTextAnnotation.prototype._obtainColor = function () {\n        var color;\n        if (this._isLoaded) {\n            if (this._dictionary.has('DA')) {\n                var entry = this._dictionary.get('DA');\n                if (Array.isArray(entry) && entry.length > 0) {\n                    color = [entry[0], entry[1], entry[2]];\n                }\n                else if (typeof entry === 'string') {\n                    this._da = new _PdfDefaultAppearance(entry);\n                    color = this._da.color;\n                }\n            }\n            else if (this._dictionary.has('MK')) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BC')) {\n                    color = _parseColor(mkDict.getArray('BC'));\n                }\n            }\n            else {\n                color = [0, 0, 0];\n            }\n        }\n        else {\n            color = this._borderColor ? this._borderColor : [0, 0, 0];\n        }\n        return color;\n    };\n    PdfFreeTextAnnotation.prototype._expandAppearance = function (pointArray) {\n        var pointY = pointArray[0][1];\n        var pointX = pointArray[0][0];\n        if (pointY > this.bounds.y) {\n            if (this.lineEndingStyle !== PdfLineEndingStyle.openArrow) {\n                pointArray[0][1] -= (this.border.width * 11);\n            }\n        }\n        else {\n            pointArray[0][1] += (this.border.width * 11);\n        }\n        if (pointX <= this.bounds.x) {\n            pointArray[0][0] -= (this.border.width * 11);\n        }\n        else {\n            pointArray[0][0] += (this.border.width * 11);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawCallOuts = function (graphics, borderPen) {\n        var path = new _PdfPath();\n        var pointArray = [];\n        var length = this._calloutLines.length === 2 ? 2 : 3;\n        for (var i = 0; i < length; i++) {\n            pointArray.push([0, 0]);\n        }\n        if (this._calloutLines.length >= 2) {\n            this._obtainCallOutsNative();\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                    -this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n            }\n        }\n        if (pointArray.length > 0) {\n            path._addLines(pointArray);\n        }\n        graphics._drawPath(path, borderPen);\n    };\n    PdfFreeTextAnnotation.prototype._saveFreeTextDictionary = function () {\n        if ((typeof this.font === 'undefined' || this.font === null) || (!this._isLoaded && this.font.size === 1)) {\n            this.font = this._markUpFont;\n        }\n        this._dictionary.update('Contents', this.text);\n        if (this._isLoaded) {\n            this._textAlignment = this.textAlignment;\n        }\n        this._dictionary.update('Q', this._textAlignment);\n        if (this.annotationIntent === PdfAnnotationIntent.none) {\n            this._dictionary.update('Subj', 'Text Box');\n        }\n        else {\n            this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n        }\n        var ds = 'font:' +\n            this.font._metrics._postScriptName +\n            ' ' +\n            this.font._size +\n            'pt;style:' + _reverseMapPdfFontStyle(this.font._style) +\n            ';color:' +\n            this._colorToHex(this.textMarkUpColor);\n        this._dictionary.update('DS', ds);\n        this._dictionary.update('DA', this._getBorderColorString(this.borderColor ? this._borderColor : [0, 0, 0]));\n        var body = '<?xml version=\"1.0\"?><body xmlns=\"http://www.w3.org/1999/xhtml\"><p dir=\"ltr\">';\n        this._dictionary.update('RC', body + (this.text ? this._getXmlFormattedString(this.text) : '') + '</p></body>');\n        if (this._calloutLines && this._calloutLines.length >= 2) {\n            var pageHeight = this._page.size[1];\n            var lines = [];\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                lines.push(this._calloutLines[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                lines.push((pageHeight + this._cropBoxValueY) - this._calloutLines[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._dictionary.update('CL', lines);\n        }\n        if (this._setAppearance) {\n            var rect = this._obtainAppearanceBounds();\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getXmlFormattedString = function (markupText) {\n        markupText = markupText.replace('&', '&amp;');\n        markupText = markupText.replace('<', '&lt;');\n        markupText = markupText.replace('>', '&gt;');\n        return markupText;\n    };\n    return PdfFreeTextAnnotation;\n}(PdfComment));\nexport { PdfFreeTextAnnotation };\n/**\n * `PdfRedactionAnnotation` class represents the redaction annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new redaction annotation\n * const annotation: PdfRedactionAnnotation = new PdfRedactionAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRedactionAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRedactionAnnotation, _super);\n    function PdfRedactionAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Redact'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.redactionAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"repeatText\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @returns {boolean} repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the boolean flag indicating whether annotation has repeat text or not.\n         * let repeatText: boolean = annotation. repeatText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._repeat === 'undefined' && this._dictionary.has('Repeat')) {\n                this._repeat = this._dictionary.get('Repeat');\n            }\n            return this._repeat;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @param {boolean} value repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the boolean flag indicating whether annotation has repeat text or not.\n         * annotation.repeatText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._repeat) {\n                this._repeat = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Repeat', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textColor\", {\n        /**\n         * Gets the text color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text color of the annotation.\n         * let textColor : number[] = annotation.textColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textColor === 'undefined' && this._dictionary.has('C')) {\n                this._textColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textColor;\n        },\n        /**\n         * Sets the text color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text color of the annotation.\n         * annotation.textColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.textColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._textColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('OC')) {\n                this._borderColor = _parseColor(this._dictionary.getArray('OC'));\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.borderColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._borderColor = value;\n                    this._dictionary.update('OC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"overlayText\", {\n        /**\n         * Gets the overlay text of the annotation.\n         *\n         * @returns {string} overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the overlay text of the annotation.\n         * let overlayText: string =annotation.overlayText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._overlayText === 'undefined' && this._dictionary.has('OverlayText')) {\n                this._overlayText = this._dictionary.get('OverlayText');\n            }\n            return this._overlayText;\n        },\n        /**\n         * Sets the overlay text of the annotation.\n         *\n         * @param {string} value overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the overlay text of the annotation.\n         * annotation.overlayText = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('OverlayText', value);\n                this._overlayText = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRedactionAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRedactionAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRedactionAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRedactionAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfRedactionAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isImported) {\n            if (this._isLoaded) {\n                this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n            }\n            else {\n                this._postProcess(isFlatten);\n                if (!this._appearanceTemplate) {\n                    if (isFlatten) {\n                        if (!this._dictionary.has('AP')) {\n                            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n                        }\n                        else {\n                            var dictionary = this._dictionary.get('AP');\n                            if (dictionary && dictionary.has('N')) {\n                                var appearanceStream = dictionary.get('N');\n                                if (appearanceStream) {\n                                    var reference = dictionary.getRaw('N');\n                                    if (reference) {\n                                        appearanceStream.reference = reference;\n                                    }\n                                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (isFlatten && this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRedactionAnnotation.prototype._createRedactionAppearance = function (isFlatten) {\n        var normalTemplate = this._createNormalAppearance();\n        if (isFlatten) {\n            if (this._isLoaded && this._page !== null) {\n                this._removeAnnotationFromPage(this._page, this);\n            }\n        }\n        else {\n            var borderTemplate = this._createBorderAppearance();\n            if (this._dictionary.has('AP')) {\n                var appearance = this._dictionary.get('AP');\n                _removeDuplicateReference(appearance, this._crossReference, 'N');\n                _removeDuplicateReference(appearance, this._crossReference, 'R');\n            }\n            var dictionary = new _PdfDictionary(this._crossReference);\n            borderTemplate._content.dictionary._updated = true;\n            var reference1 = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference1, borderTemplate._content);\n            borderTemplate._content.reference = reference1;\n            dictionary.set('N', reference1);\n            normalTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, normalTemplate._content);\n            normalTemplate._content.reference = reference;\n            dictionary.set('R', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        return normalTemplate;\n    };\n    PdfRedactionAnnotation.prototype._createBorderAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var actualWidth = this.border.width;\n        var pen;\n        if (this.border.width > 0 && this.borderColor) {\n            pen = new PdfPen(this.borderColor, actualWidth);\n        }\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n        }\n        return template;\n    };\n    PdfRedactionAnnotation.prototype._createNormalAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        var borderPen;\n        if (this.textColor && this.border.width > 0) {\n            borderPen = new PdfPen(this.textColor, this.border.width);\n        }\n        var backBrush;\n        var textcolor;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this.innerColor);\n        }\n        if (this.textColor) {\n            textcolor = new PdfBrush(this.textColor);\n        }\n        else {\n            textcolor = new PdfBrush([128, 128, 128]);\n        }\n        parameter.backBrush = backBrush;\n        parameter.borderWidth = width;\n        var widths = this.border.width;\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n        }\n        graphics.restore();\n        if (this.overlayText && this._overlayText !== '') {\n            var col = 0;\n            var row = 0;\n            if (typeof this.font === 'undefined' || this.font === null) {\n                this.font = this._lineCaptionFont;\n            }\n            var y = 0;\n            var x = 0;\n            var diff = 0;\n            var rectangle = void 0;\n            if (this._isLoaded) {\n                this._textAlignment = this.textAlignment;\n            }\n            var format = new PdfStringFormat(this._textAlignment, PdfVerticalAlignment.middle);\n            var textsize = this.font.measureString(this.overlayText, [0, 0], format, 0, 0);\n            if (this._isLoaded && typeof this._repeat === 'undefined') {\n                this._repeat = this.repeatText;\n            }\n            if (this._repeat) {\n                if (textsize[0] <= 0) {\n                    textsize[0] = 1;\n                }\n                col = this.bounds.width / textsize[0];\n                row = Math.floor(this.bounds.height / this.font._size);\n                diff = Math.abs(this.bounds.width - (Math.floor(col) * textsize[0]));\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                for (var i = 1; i < col; i++) {\n                    for (var j = 0; j < row; j++) {\n                        rectangle = [x, y, 0, 0];\n                        graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n                        y = y + this.font._size;\n                    }\n                    x = x + textsize[0];\n                    y = 0;\n                }\n            }\n            else {\n                diff = Math.abs(this.bounds.width - textsize[0]);\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                rectangle = [x, 0, 0, 0];\n                graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n            }\n        }\n        return template;\n    };\n    return PdfRedactionAnnotation;\n}(PdfAnnotation));\nexport { PdfRedactionAnnotation };\n/**\n * `PdfRichMediaAnnotation` class represents the rich media annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRichMediaAnnotation = page.annotations.at(0) as PdfRichMediaAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRichMediaAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRichMediaAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfRichMediaAnnotation` class.\n     *\n     * @private\n     */\n    function PdfRichMediaAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.richMediaAnnotation;\n        return _this;\n    }\n    PdfRichMediaAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRichMediaAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRichMediaAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRichMediaAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            this._flattenPopUp();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfRichMediaAnnotation;\n}(PdfAnnotation));\nexport { PdfRichMediaAnnotation };\n/**\n * `PdfWidgetAnnotation` class represents the widget annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWidgetAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWidgetAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfWidgetAnnotation` class.\n     *\n     * @private\n     */\n    function PdfWidgetAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._isAutoResize = false;\n        _this._visibility = PdfFormFieldVisibility.visible;\n        _this._isFont = false;\n        _this._isTransparentBackColor = false;\n        _this._isTransparentBorderColor = false;\n        _this._isWidget = true;\n        _this._type = _PdfAnnotationType.widgetAnnotation;\n        return _this;\n    }\n    /**\n     * Parse an existing widget annotation.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @returns {PdfWidgetAnnotation} Widget.\n     */\n    PdfWidgetAnnotation._load = function (dictionary, crossReference) {\n        var widget = new PdfWidgetAnnotation();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        return widget;\n    };\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"page\", {\n        /**\n         * Gets the page object (Read only).\n         *\n         * @returns {PdfPage} page object.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the page object.\n         * let page: PdfPage = item.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getPage();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the fore color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._defaultAppearance) {\n                this._color = this._da.color;\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the fore color of the annotation.\n         * annotation.color = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.color === 'undefined' || this._color !== value) {\n                this._color = value;\n            }\n            var isNew = false;\n            if (!this._defaultAppearance) {\n                this._da = new _PdfDefaultAppearance('');\n                isNew = true;\n            }\n            if (isNew || this._da.color !== value) {\n                this._da.color = value;\n                this._dictionary.update('DA', this._da.toString());\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the back color of the annotation\n         * let backColor: number[] = field.itemAt(0).backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field item\n         * field.itemAt(0).backColor = [255, 0, 0];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBorderColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                return (mkDictionary && mkDictionary.has('BC'));\n            }\n            else {\n                return !this._isTransparentBorderColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor();\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255.. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation.\n         *\n         * @returns {number} Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotationAngle === 'undefined') {\n                if (this._mkDictionary && this._mkDictionary.has('R')) {\n                    this._rotationAngle = this._mkDictionary.get('R');\n                }\n                else if (this._dictionary.has('R')) {\n                    this._rotationAngle = this._dictionary.get('R');\n                }\n            }\n            return this._rotationAngle;\n        },\n        /**\n         * Sets the rotation angle of the annotation.\n         *\n         * @param {number} value Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.rotate === 'undefined' || this._rotationAngle !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('R', value);\n                this._rotationAngle = value;\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the annotation.\n         *\n         * @returns {PdfHighlightMode} Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the highlight mode of the annotation.\n         * let highlightMode: PdfHighlightMode = annotation.highlightMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._highlightMode === 'undefined' && this._dictionary.has('H')) {\n                var mode = this._dictionary.get('H');\n                this._highlightMode = _mapHighlightMode(mode.name);\n            }\n            return this._highlightMode;\n        },\n        /**\n         * Sets the highlight mode of the annotation.\n         *\n         * @param {PdfHighlightMode} value Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the highlight mode of the annotation.\n         * annotation.highlightMode = PdfHighlightMode.noHighlighting;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._highlightMode !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds : {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && typeof this._bounds === 'undefined') {\n                this._bounds = _calculateBounds(this._dictionary, this._getPage());\n            }\n            if (typeof this._bounds === 'undefined' || this._bounds === null) {\n                this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value Bounds\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {0, 0, 50, 50};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            this._bounds = value;\n            if (this._page && this._page._isNew && this._page._pageSettings) {\n                this._dictionary.update('Rect', _updateBounds(this));\n            }\n            else {\n                this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._getPage()));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textAlignment === 'undefined' && this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.left;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._textAlignment === 'undefined' || this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"visibility\", {\n        /**\n         * Gets the visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the visibility.\n         * let visibility: PdfFormFieldVisibility = field.itemAt(0).visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var flag = PdfAnnotationFlag.default;\n                if (this._hasFlags) {\n                    flag = this.flags;\n                    var flagValue = 3;\n                    if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                        flagValue = 0;\n                    }\n                    if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                        flagValue = 1;\n                    }\n                    if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                        flagValue &= 2;\n                    }\n                    switch (flagValue) {\n                        case 0:\n                            value = PdfFormFieldVisibility.hidden;\n                            break;\n                        case 1:\n                            value = PdfFormFieldVisibility.hiddenPrintable;\n                            break;\n                        case 2:\n                            value = PdfFormFieldVisibility.visibleNotPrintable;\n                            break;\n                        case 3:\n                            value = PdfFormFieldVisibility.visible;\n                            break;\n                    }\n                }\n                else {\n                    value = PdfFormFieldVisibility.visibleNotPrintable;\n                }\n            }\n            else {\n                return this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the visibility.\n         *\n         * @param {PdfFormFieldVisibility} value Visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the visibility.\n         * let field.itemAt(0).visibility = PdfFormFieldVisibility.hiddenPrintable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                _updateVisibility(this._dictionary, value);\n                this._dictionary._updated = true;\n            }\n            else {\n                switch (value) {\n                    case PdfFormFieldVisibility.hidden:\n                        this.flags = PdfAnnotationFlag.hidden;\n                        break;\n                    case PdfFormFieldVisibility.hiddenPrintable:\n                        this.flags = PdfAnnotationFlag.noView | PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visible:\n                        this.flags = PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visibleNotPrintable:\n                        this.flags = PdfAnnotationFlag.default;\n                        break;\n                }\n                this._visibility = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the item.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the font of the item.\n         * let font: PdfFont = item.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._pdfFont) {\n                var fontName = void 0;\n                if (this._crossReference) {\n                    var form = this._crossReference._document.form;\n                    var fontData = this._obtainFontDetails();\n                    if (form && form._dictionary.has('DR')) {\n                        var resources = form._dictionary.get('DR');\n                        if (resources.has('Font')) {\n                            var fonts = resources.get('Font');\n                            if (fonts.has(fontData.name)) {\n                                var fontDictionary = fonts.get(fontData.name);\n                                if (fontDictionary && fontData.name && fontDictionary.has('BaseFont')) {\n                                    var baseFont = fontDictionary.get('BaseFont');\n                                    var textFontStyle = PdfFontStyle.regular;\n                                    if (baseFont) {\n                                        fontName = baseFont.name;\n                                        textFontStyle = _getFontStyle(baseFont.name);\n                                        if (fontName.includes('-')) {\n                                            fontName = fontName.substring(0, fontName.indexOf('-'));\n                                        }\n                                        this._pdfFont = _mapFont(fontName, fontData.size, textFontStyle, this);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ((this._pdfFont === null || typeof this._pdfFont === 'undefined') || (!this._isLoaded && this._pdfFont.size === 1)) {\n                this._pdfFont = this._circleCaptionFont;\n            }\n            return this._pdfFont;\n        },\n        /**\n         * Sets the font of the item.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Set the font of the item.\n         * item.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._pdfFont = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined' && this._dictionary.has('DA')) {\n                var da = this._dictionary.get('DA');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfWidgetAnnotation.prototype._create = function (page, bounds, field) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        this._ref = this._crossReference._getNextReference();\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary._currentObj = this;\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('Type', _PdfName.get('Annot'));\n        this._dictionary.update('Subtype', _PdfName.get('Widget'));\n        this.flags |= PdfAnnotationFlag.print;\n        this._dictionary.update('P', page._ref);\n        page._addWidget(this._ref);\n        this.border = new PdfAnnotationBorder();\n        this.bounds = bounds;\n        if (field) {\n            this._field = field;\n            this._dictionary.update('Parent', this._field._ref);\n        }\n        return this._dictionary;\n    };\n    PdfWidgetAnnotation.prototype._doPostProcess = function (isFlatten, recreateAppearance) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (recreateAppearance === void 0) { recreateAppearance = false; }\n        if (isFlatten || recreateAppearance) {\n            var appearanceStream = void 0;\n            if (recreateAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                //appearanceStream = this._createAppearance();\n            }\n            if (!appearanceStream && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var bounds = void 0;\n                if (isFlatten) {\n                    var template = new PdfTemplate(appearanceStream, this._crossReference);\n                    var page = this._getPage();\n                    if (page) {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        if (page.rotation === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(90);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(-180);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(270);\n                        }\n                        bounds = { x: this.bounds.x, y: this.bounds.y, width: template._size[0], height: template._size[1] };\n                        graphics.drawTemplate(template, bounds);\n                        graphics.restore();\n                    }\n                }\n                else {\n                    var appearance = void 0;\n                    if (this._dictionary.has('AP')) {\n                        appearance = this._dictionary.get('AP');\n                    }\n                    else {\n                        var reference_9 = this._crossReference._getNextReference();\n                        appearance = new _PdfDictionary(this._crossReference);\n                        this._crossReference._cacheMap.set(reference_9, appearance);\n                        this._dictionary.update('AP', reference_9);\n                    }\n                    _removeDuplicateReference(appearance, this._crossReference, 'N');\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, appearanceStream);\n                    appearance.update('N', reference);\n                }\n            }\n            this._dictionary._updated = false;\n        }\n    };\n    PdfWidgetAnnotation.prototype._initializeFont = function (font) {\n        this._pdfFont = font;\n        var document;\n        if (this._crossReference) {\n            document = this._crossReference._document;\n            var resource = void 0;\n            if (document) {\n                if (document.form._dictionary.has('DR')) {\n                    resource = document.form._dictionary.get('DR');\n                }\n                else {\n                    resource = new _PdfDictionary(this._crossReference);\n                }\n            }\n            var fontDict = void 0;\n            var isReference = false;\n            if (resource.has('Font')) {\n                var obj = resource.getRaw('Font'); // eslint-disable-line\n                if (obj && obj instanceof _PdfReference) {\n                    isReference = true;\n                    fontDict = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    fontDict = obj;\n                }\n            }\n            if (!fontDict) {\n                fontDict = new _PdfDictionary(this._crossReference);\n                resource.update('Font', fontDict);\n            }\n            var keyName = _PdfName.get(_getNewGuidString());\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            if (font instanceof PdfTrueTypeFont) {\n                if (this._pdfFont._pdfFontInternals) {\n                    this._crossReference._cacheMap.set(reference, this._pdfFont._pdfFontInternals);\n                }\n            }\n            else if (this._pdfFont._dictionary) {\n                this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            }\n            fontDict.update(keyName.name, reference);\n            resource._updated = true;\n            document.form._dictionary.update('DR', resource);\n            document.form._dictionary._updated = true;\n            this._fontName = keyName.name;\n            var defaultAppearance = new _PdfDefaultAppearance();\n            defaultAppearance.fontName = this._fontName;\n            defaultAppearance.fontSize = this._pdfFont._size;\n            defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n            this._dictionary.update('DA', defaultAppearance.toString());\n            if (isReference) {\n                resource._updated = true;\n            }\n            this._isFont = true;\n        }\n    };\n    PdfWidgetAnnotation.prototype._getPage = function () {\n        if (!this._page) {\n            var document_2;\n            if (this._crossReference) {\n                document_2 = this._crossReference._document;\n            }\n            var page = void 0;\n            if (this._dictionary.has('P')) {\n                var ref = this._dictionary.getRaw('P');\n                if (ref && document_2) {\n                    for (var i = 0; i < document_2.pageCount; i++) {\n                        var entry = document_2.getPage(i);\n                        if (entry && entry._ref === ref) {\n                            page = entry;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!page && document_2 && this._ref) {\n                page = _findPage(document_2, this._ref);\n            }\n            this._page = page;\n        }\n        return this._page;\n    };\n    PdfWidgetAnnotation.prototype._beginSave = function () {\n        if (!this._isLoaded && !this._page._isNew) {\n            var value = this._bounds;\n            this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._page));\n        }\n    };\n    PdfWidgetAnnotation.prototype._parseBackColor = function () {\n        var value;\n        if ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor)) {\n            if (typeof this._backColor === 'undefined') {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BG')) {\n                    var colorArray = dictionary.getArray('BG');\n                    if (colorArray) {\n                        this._backColor = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof this._backColor === 'undefined' || this._backColor === null) {\n                this._backColor = [255, 255, 255];\n            }\n            value = this._backColor;\n        }\n        return value;\n    };\n    PdfWidgetAnnotation.prototype._parseBorderColor = function () {\n        var value;\n        if ((this._isLoaded && this._hasBorderColor) || (!this._isLoaded && !this._isTransparentBorderColor)) {\n            if (typeof this._borderColor === 'undefined') {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BC')) {\n                    var colorArray = dictionary.getArray('BC');\n                    if (colorArray) {\n                        this._borderColor = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof this._borderColor === 'undefined' || this._borderColor === null) {\n                this._borderColor = [0, 0, 0];\n            }\n            value = this._borderColor;\n        }\n        return value;\n    };\n    PdfWidgetAnnotation.prototype._updateBackColor = function (value, setAppearance) {\n        if (setAppearance === void 0) { setAppearance = false; }\n        var isChanged = false;\n        if (value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n                isChanged = true;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            if (typeof this.backColor === 'undefined' || this._backColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._backColor = [value[0], value[1], value[2]];\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        if (setAppearance && isChanged && this._field) {\n            this._field._setAppearance = true;\n        }\n    };\n    PdfWidgetAnnotation.prototype._updateBorderColor = function (value, setAppearance) {\n        if (setAppearance === void 0) { setAppearance = false; }\n        if (value.length === 4 && value[3] !== 255) {\n            this._isTransparentBorderColor = true;\n            if (this._dictionary.has('BC')) {\n                delete this._dictionary._map.BC;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BC')) {\n                delete mkDictionary._map.BC;\n                if (this._dictionary.has('BS')) {\n                    var bsDictionary = this._dictionary.get('BS');\n                    if (bsDictionary && bsDictionary.has('W')) {\n                        delete bsDictionary._map.W;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n        }\n        else {\n            this._isTransparentBorderColor = false;\n            if (typeof this.borderColor === 'undefined' || this.borderColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._borderColor = [value[0], value[1], value[2]];\n                this._dictionary._updated = true;\n            }\n        }\n    };\n    return PdfWidgetAnnotation;\n}(PdfAnnotation));\nexport { PdfWidgetAnnotation };\n/**\n * `PdfStateItem` class represents the check box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStateItem = /** @class */ (function (_super) {\n    __extends(PdfStateItem, _super);\n    /**\n     * Initializes a new instance of the `PdfStateItem` class.\n     *\n     * @private\n     */\n    function PdfStateItem() {\n        return _super.call(this) || this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfStateItem} Widget.\n     */\n    PdfStateItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfStateItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfStateItem.prototype, \"checked\", {\n        /**\n         * Gets the flag to indicate whether the field item is checked or not.\n         *\n         * @returns {boolean} Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the flag to indicate whether the field item is checked or not.\n         * let checked: boolean = item.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag to indicate whether the field item is checked or not.\n         *\n         * @param {boolean} value Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                this._dictionary.update('AS', _PdfName.get(value ? 'Yes' : 'Off'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStateItem.prototype, \"style\", {\n        /**\n         * Gets the style of annotation.\n         *\n         * @returns {PdfCheckBoxStyle} Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the style of the annotation\n         * let style: PdfCheckBoxStyle = item.style;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('CA')) {\n                    this._style = _stringToStyle(dictionary.get('CA'));\n                }\n                else {\n                    this._style = PdfCheckBoxStyle.check;\n                }\n            }\n            return this._style;\n        },\n        /**\n         * Sets the style of annotation.\n         *\n         * @param {PdfCheckBoxStyle} value Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.style = PdfCheckBoxStyle.check;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.style !== value) {\n                this._style = value;\n                var dictionary = this._mkDictionary;\n                if (!dictionary) {\n                    dictionary = new _PdfDictionary(this._crossReference);\n                    this._dictionary.update('MK', dictionary);\n                }\n                dictionary.update('CA', _styleToString(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStateItem.prototype._doPostProcess = function () {\n        var style = this.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n        var template = _getStateTemplate(style, this);\n        if (template) {\n            var page = this._getPage();\n            if (page) {\n                var graphics = page.graphics;\n                graphics.save();\n                if (page.rotation === PdfRotationAngle.angle90) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(90);\n                }\n                else if (page.rotation === PdfRotationAngle.angle180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                }\n                else if (page.rotation === PdfRotationAngle.angle270) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(270);\n                }\n                graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n                graphics.drawTemplate(template, this.bounds);\n                graphics.restore();\n            }\n        }\n        this._dictionary._updated = false;\n    };\n    PdfStateItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value) {\n            value = (field && field.checked) ? 'Yes' : 'Off';\n        }\n        this._dictionary.update('AS', _PdfName.get(value));\n    };\n    PdfStateItem.prototype._setField = function (field) {\n        this._field = field;\n        this._field._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n        this._field._addToKid(this);\n    };\n    return PdfStateItem;\n}(PdfWidgetAnnotation));\nexport { PdfStateItem };\n/**\n * `PdfRadioButtonListItem` class represents the radio button field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Create and add third item\n * let third: PdfRadioButtonListItem = new PdfRadioButtonListItem('50-59', {x: 100, y: 200, width: 20, height: 20}, field);\n * field.add(third);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListItem = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListItem, _super);\n    function PdfRadioButtonListItem(value, bounds, item) {\n        var _this = _super.call(this) || this;\n        if (item && value && bounds) {\n            if (item instanceof PdfField) {\n                _this._initializeItem(value, bounds, item.page, item);\n            }\n            else {\n                _this._initializeItem(value, bounds, item);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfRadioButtonListItem} Widget.\n     */\n    PdfRadioButtonListItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfRadioButtonListItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not.\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"value\", {\n        /**\n         * Gets the value of the radio button list field item\n         *\n         * @returns {string} Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the value of the radio button list field item\n         * let value: string = item.value;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && !this._optionValue) {\n                this._optionValue = _getItemValue(this._dictionary);\n            }\n            return this._optionValue;\n        },\n        /**\n         * Sets the value of the radio button list field item\n         *\n         * @param {string} option Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Sets the value of the radio button list field item\n         * item.value = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (option) {\n            this._optionValue = option;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the back color of the annotation\n         * let backColor: number[] = annotation.backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Sets the back color of the radio button list item\n         * field.itemAt(0).backColor = [255, 255, 255];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRadioButtonListItem.prototype._initializeItem = function (value, bounds, page, field) {\n        this._optionValue = value;\n        this._page = page;\n        this._create(this._page, bounds, this._field);\n        this.textAlignment = PdfTextAlignment.left;\n        this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        this._mkDictionary.update('BC', [0, 0, 0]);\n        this._mkDictionary.update('BG', [1, 1, 1]);\n        this.style = PdfCheckBoxStyle.circle;\n        this._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        if (field) {\n            this._setField(field);\n            this._dictionary.update('Parent', field._ref);\n        }\n    };\n    PdfRadioButtonListItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value && field && field.selectedIndex !== -1) {\n            value = field.itemAt(field.selectedIndex).value;\n        }\n        if (this.value === value) {\n            this._dictionary.update('AS', _PdfName.get(this.value));\n        }\n        else {\n            this._dictionary.update('AS', _PdfName.get('Off'));\n        }\n    };\n    return PdfRadioButtonListItem;\n}(PdfStateItem));\nexport { PdfRadioButtonListItem };\n/**\n * `PdfListBoxItem` class represents the list and combo box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListFieldItem = /** @class */ (function (_super) {\n    __extends(PdfListFieldItem, _super);\n    function PdfListFieldItem(text, value, field) {\n        var _this = _super.call(this) || this;\n        if (text && value) {\n            _this._initializeItem(text, value, field);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfListFieldItem} Widget.\n     */\n    PdfListFieldItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfListFieldItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfListFieldItem.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the text of the list field item\n         * let text: string = item.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                this._text = this._field._options[Number.parseInt(this._index.toString(), 10)][1];\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Sets the text of the list field item\n         * item.text = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                if (value !== this._field._options[Number.parseInt(this._index.toString(), 10)][1]) {\n                    this._field._options[Number.parseInt(this._index.toString(), 10)][1] = value;\n                    this._text = value;\n                    this._field._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListFieldItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not (Read only).\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfListFieldItem.prototype._initializeItem = function (text, value, field) {\n        this._text = text;\n        this._value = value;\n        if (field && field instanceof PdfListBoxField) {\n            field._addToOptions(this, field);\n        }\n    };\n    return PdfListFieldItem;\n}(PdfStateItem));\nexport { PdfListFieldItem };\n/**\n * `PdfAnnotationCaption` class represents the caption text and properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Create and set annotation caption values\n * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCaption = /** @class */ (function () {\n    function PdfAnnotationCaption(cap, type, offset) {\n        this._cap = typeof cap !== 'undefined' ? cap : false;\n        this._type = typeof type !== 'undefined' ? type : PdfLineCaptionType.inline;\n        this._offset = typeof offset !== 'undefined' ? offset : [0, 0];\n    }\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"cap\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation has caption or not.\n         * let cap: boolean = annotation.caption.cap;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._cap;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @param {boolean} value Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether annotation has caption or not.\n         * annotation.caption.cap = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._cap) {\n                this._cap = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Cap', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"type\", {\n        /**\n         * Gets the caption type of the annotation.\n         *\n         * @returns {PdfLineCaptionType} Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption type of the annotation.\n         * let type: PdfLineCaptionType = annotation.caption.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._type;\n        },\n        /**\n         * Sets the caption type of the annotation.\n         *\n         * @param {PdfLineCaptionType} value Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the caption type of the annotation.\n         * annotation.caption.type = PdfLineCaptionType.inline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._type) {\n                this._type = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CP', _PdfName.get(value === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"offset\", {\n        /**\n         * Gets the offset position of the annotation.\n         *\n         * @returns {Array<number>} Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the offset position of the annotation.\n         * let offset: Array<number> = annotation.caption.offset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._offset;\n        },\n        /**\n         * Sets the offset position of the annotation.\n         *\n         * @param {Array<number>} value Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the offset position of the annotation.\n         * annotation.caption.offset = [10, 10];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (_areNotEqual(value, this._offset)) {\n                this._offset = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CO', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCaption;\n}());\nexport { PdfAnnotationCaption };\n/**\n * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationLineEndingStyle = /** @class */ (function () {\n    function PdfAnnotationLineEndingStyle(begin, end) {\n        this._begin = typeof begin !== 'undefined' ? begin : PdfLineEndingStyle.none;\n        this._end = typeof end !== 'undefined' ? end : PdfLineEndingStyle.none;\n    }\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"begin\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let begin: PdfLineEndingStyle = annotation.lineEndingStyle.begin;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._begin;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._begin) {\n                this._begin = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(value)), _PdfName.get(_reverseMapEndingStyle(this._end))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"end\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let end: PdfLineEndingStyle = annotation.lineEndingStyle.end;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._end;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._end) {\n                this._end = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(this._begin)), _PdfName.get(_reverseMapEndingStyle(value))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationLineEndingStyle;\n}());\nexport { PdfAnnotationLineEndingStyle };\n/**\n * `PdfInteractiveBorder` class represents the border of the field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the width of the field border.\n * let width: number = field.border.width;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInteractiveBorder = /** @class */ (function () {\n    function PdfInteractiveBorder(width, style, dash) {\n        this._width = typeof width !== 'undefined' ? width : 1;\n        this._style = typeof style !== 'undefined' ? style : PdfBorderStyle.solid;\n        if (typeof dash !== 'undefined' && Array.isArray(dash)) {\n            this._dash = dash;\n        }\n    }\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the field border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width of the annotation border.\n         * let width: number = field.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the field border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"style\", {\n        /**\n         * Gets the border line style of the field border.\n         *\n         * @returns {PdfBorderStyle} Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border line style of the annotation border.\n         * let style: PdfBorderStyle = field.border.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the border line style of the field border.\n         *\n         * @param {PdfBorderStyle} value Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"dash\", {\n        /**\n         * Gets the dash pattern of the field border.\n         *\n         * @returns {Array<number>} Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the dash pattern of the field border.\n         * let dash: Array<number> = field.border.dash;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._dash;\n        },\n        /**\n         * Sets the dash pattern of the field border.\n         *\n         * @param {Array<number>} value Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._dash === 'undefined' || _areNotEqual(value, this._dash)) {\n                this._dash = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    bs.update('D', this._dash);\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfInteractiveBorder;\n}());\nexport { PdfInteractiveBorder };\n/**\n * `PdfAnnotationBorder` class represents the border properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n * //Sets the width of the annotation border.\n * border.width = 10;\n * //Sets the style of the annotation border.\n * border.style = PdfBorderStyle.dashed;\n * //Sets the dash pattern of the annotation border.\n * border.dash = [1, 2, 1];\n * // Sets the border to the PDF form field\n * annotation.border = border;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationBorder = /** @class */ (function (_super) {\n    __extends(PdfAnnotationBorder, _super);\n    function PdfAnnotationBorder(width, hRadius, vRadius, style, dash) {\n        var _this = _super.call(this, width, style, dash) || this;\n        _this._hRadius = typeof hRadius !== 'undefined' ? hRadius : 0;\n        _this._vRadius = typeof vRadius !== 'undefined' ? vRadius : 0;\n        return _this;\n    }\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the annotation border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the width of the annotation border.\n         * let width: number = annotation.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the annotation border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"hRadius\", {\n        /**\n         * Gets the horizontal radius of the annotation border.\n         *\n         * @returns {number} horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the horizontal radius of the annotation border.\n         * let hRadius: number = annotation.border.hRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hRadius;\n        },\n        /**\n         * Sets the horizontal radius of the annotation border.\n         *\n         * @param {number} value horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the horizontal radius of the annotation border.\n         * border.hRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._hRadius) {\n                this._hRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"vRadius\", {\n        /**\n         * Gets the vertical radius of the annotation border.\n         *\n         * @returns {number} vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the vertical radius of the annotation border.\n         * let vRadius: number = annotation.border.vRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._vRadius;\n        },\n        /**\n         * Sets the vertical radius of the annotation border.\n         *\n         * @param {number} value vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the vertical radius of the annotation border.\n         * border.vRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._vRadius) {\n                this._vRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationBorder;\n}(PdfInteractiveBorder));\nexport { PdfAnnotationBorder };\n/**\n * `PdfBorderEffect` class represents the border effects of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n * // Initializes a new instance of the `PdfBorderEffect` class.\n * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n * // Sets the intensity of the annotation border.\n * borderEffect.intensity = 2;\n * // Sets the effect style of the annotation border.\n * borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Sets border effect to the annotation.\n * annotation.borderEffect = borderEffect;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBorderEffect = /** @class */ (function () {\n    function PdfBorderEffect(dictionary) {\n        this._intensity = 0;\n        if (typeof dictionary !== 'undefined' && dictionary !== null) {\n            if (dictionary.has('BE')) {\n                var borderEffect = this._dictionary.get('BE');\n                if (borderEffect) {\n                    if (borderEffect.has('I')) {\n                        this._intensity = borderEffect.get('I');\n                    }\n                    if (borderEffect.has('S')) {\n                        this._style = this._getBorderEffect(borderEffect.get('S'));\n                    }\n                }\n            }\n        }\n        else {\n            this._dictionary = new _PdfDictionary();\n            this._dictionary.set('I', this._intensity);\n            this._dictionary.set('S', this._styleToEffect(this._style));\n        }\n    }\n    Object.defineProperty(PdfBorderEffect.prototype, \"intensity\", {\n        /**\n         * Gets the intensity of the annotation border.\n         *\n         * @returns {number} intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._intensity;\n        },\n        /**\n         * Sets the intensity of the annotation border.\n         *\n         * @param {number} value intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._intensity) {\n                this._intensity = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ? this._dictionary.get('BE') : new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorderEffect.prototype, \"style\", {\n        /**\n         * Gets the effect style of the annotation border.\n         *\n         * @returns {PdfBorderEffectStyle} effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the effect style of the annotation border.\n         *\n         * @param {PdfBorderEffectStyle} value effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ?\n                        this._dictionary.get('BE') :\n                        new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBorderEffect.prototype._getBorderEffect = function (value) {\n        if (value === '/C') {\n            return PdfBorderEffectStyle.cloudy;\n        }\n        else {\n            return PdfBorderEffectStyle.solid;\n        }\n    };\n    PdfBorderEffect.prototype._styleToEffect = function (value) {\n        if (value === PdfBorderEffectStyle.cloudy) {\n            return 'C';\n        }\n        else {\n            return 'S';\n        }\n    };\n    return PdfBorderEffect;\n}());\nexport { PdfBorderEffect };\nvar _PaintParameter = /** @class */ (function () {\n    function _PaintParameter() {\n        this.borderWidth = 1;\n    }\n    return _PaintParameter;\n}());\nexport { _PaintParameter };\nvar _CloudStyleArc = /** @class */ (function () {\n    function _CloudStyleArc() {\n        this.startAngle = 0;\n        this.endAngle = 0;\n    }\n    return _CloudStyleArc;\n}());\n","import { _PdfDictionary, _PdfReference } from './../pdf-primitives';\nimport { _checkReview } from './../utils';\nimport { PdfLineAnnotation, PdfCircleAnnotation, PdfEllipseAnnotation, PdfAngleMeasurementAnnotation, PdfRectangleAnnotation, PdfSquareAnnotation, PdfPolyLineAnnotation, PdfPolygonAnnotation, PdfInkAnnotation, PdfPopupAnnotation, PdfAttachmentAnnotation, Pdf3DAnnotation, PdfFileLinkAnnotation, PdfWatermarkAnnotation, PdfRubberStampAnnotation, PdfSoundAnnotation, PdfFreeTextAnnotation, PdfRedactionAnnotation, PdfRichMediaAnnotation, PdfTextMarkupAnnotation, PdfDocumentLinkAnnotation, PdfTextWebLinkAnnotation, PdfUriAnnotation, PdfComment } from './annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\n/**\n * The class provides methods and properties to handle the collection of `PdfAnnotation`.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation coolection from first page\n * let annotations: PdfAnnotationCollection = document.getPage(0).annotations;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    /**\n     * Represents a annotation collection.\n     *\n     * @private\n     * @param {Array<_PdfReference>} array Annotation references.\n     * @param {_PdfCrossReference} xref Cross reference object.\n     * @param {PdfPage} page PDF page object.\n     */\n    function PdfAnnotationCollection(array, xref, page) {\n        this._isExport = false;\n        this._annotations = array;\n        this._page = page;\n        this._crossReference = xref;\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @returns {number} Number of annotations.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation count\n         * let count: number = page.annotations.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._annotations.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfAnnotation` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfAnnotation} Annotation at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        if (!this._parsedAnnotations.has(index)) {\n            var dictionary = this._annotations[Number.parseInt(index.toString(), 10)];\n            if (typeof dictionary !== 'undefined' && dictionary instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(dictionary);\n            }\n            if (typeof dictionary !== 'undefined' && dictionary instanceof _PdfDictionary) {\n                var annotation = this._parseAnnotation(dictionary);\n                if (annotation) {\n                    annotation._ref = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._parsedAnnotations.set(index, annotation);\n                }\n            }\n        }\n        return this._parsedAnnotations.get(index);\n    };\n    /**\n     * Add a new `PdfAnnotation` into the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to add.\n     * @returns {number} Annotation index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Add a new annotation into the collection\n     * page.annotations.add(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        if (typeof annotation === 'undefined' || annotation === null) {\n            throw Error('annotation cannot be null or undefined');\n        }\n        if (annotation._isLoaded) {\n            throw Error('cannot add an existing annotation');\n        }\n        annotation._initialize(this._page);\n        var reference;\n        if (typeof annotation._ref !== 'undefined' && annotation._ref._isNew) {\n            reference = annotation._ref;\n        }\n        else {\n            reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, annotation._dictionary);\n            annotation._ref = reference;\n        }\n        var index = this._annotations.length;\n        this._annotations.push(reference);\n        this._parsedAnnotations.set(index, annotation);\n        var isAdded = false;\n        if (this._page._pageDictionary.has('Annots')) {\n            var collection = this._page._pageDictionary.get('Annots');\n            if (collection !== null && typeof collection !== 'undefined' && collection.indexOf(reference) === -1) {\n                collection.push(reference);\n                this._page._pageDictionary.set('Annots', collection);\n                isAdded = true;\n            }\n        }\n        if (!isAdded) {\n            this._page._pageDictionary.set('Annots', this._annotations);\n        }\n        this._page._pageDictionary._updated = true;\n        if (annotation instanceof PdfComment) {\n            this._addCommentsAndReview(annotation, annotation._dictionary.get('F'));\n        }\n        this._updateCustomAppearanceResource(annotation);\n        return index;\n    };\n    /**\n     * Remove an annotation from the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access first annotation from the PDF page\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Remove an annotation from the collection\n     * page.annotations.remove(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.remove = function (annotation) {\n        if (annotation._ref) {\n            var index = this._annotations.indexOf(annotation._ref);\n            if (index > -1) {\n                this.removeAt(index);\n            }\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index.\n     *\n     * @param {number} index Annotation index.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Remove an annotation from the collection\n     * page.annotations.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.removeAt = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        var reference = this._annotations[Number.parseInt(index.toString(), 10)];\n        if (reference && this._page) {\n            var array = this._page._getProperty('Annots');\n            var actualIndex = array.indexOf(reference);\n            if (actualIndex > -1) {\n                array.splice(actualIndex, 1);\n            }\n            this._page._pageDictionary.set('Annots', array);\n            this._page._pageDictionary._updated = true;\n            if (this._annotations.indexOf(reference) > -1) {\n                this._annotations.splice(index, 1);\n            }\n            if (this._parsedAnnotations.has(index)) {\n                this._parsedAnnotations.delete(index);\n                this._reorderParsedAnnotations(index);\n            }\n            var crossReference = this._page._crossReference;\n            if (crossReference && crossReference._cacheMap.has(reference)) {\n                crossReference._cacheMap.delete(reference);\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reorderParsedAnnotations = function (index) {\n        var result = new Map();\n        this._parsedAnnotations.forEach(function (value, key) {\n            if (key > index) {\n                result.set(key - 1, value);\n            }\n            else {\n                result.set(key, value);\n            }\n        });\n        this._parsedAnnotations = result;\n    };\n    PdfAnnotationCollection.prototype._updateCustomAppearanceResource = function (annotation) {\n        if (annotation instanceof PdfRubberStampAnnotation && typeof annotation._appearance !== 'undefined') {\n            annotation._appearance.normal.graphics._processResources(annotation._crossReference);\n        }\n    };\n    PdfAnnotationCollection.prototype._addCommentsAndReview = function (annotation, flag) {\n        this._updateChildReference(annotation, annotation.comments, flag);\n        this._updateChildReference(annotation, annotation.reviewHistory, flag);\n    };\n    PdfAnnotationCollection.prototype._updateChildReference = function (annotation, collection, flag) {\n        if (collection && collection.count > 0) {\n            if (flag !== 30) {\n                for (var i = 0; i < collection.count; i++) {\n                    var childAnnotation = collection._collection[Number.parseInt(i.toString(), 10)];\n                    if (childAnnotation && !childAnnotation._dictionary.has('IRT')) {\n                        if (i === 0 || !collection._isReview) {\n                            childAnnotation._dictionary.update('IRT', annotation._ref);\n                        }\n                        else {\n                            childAnnotation._dictionary.update('IRT', collection._collection[i - 1]._ref);\n                        }\n                        if (collection._isReview) {\n                            childAnnotation._isReview = true;\n                        }\n                        else {\n                            childAnnotation._isComment = true;\n                        }\n                        this.add(childAnnotation);\n                    }\n                }\n            }\n            else {\n                throw new Error('Could not add comments/reviews to the review');\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._parseAnnotation = function (dictionary) {\n        var annot;\n        if (dictionary.has('Subtype')) {\n            var key = dictionary.get('Subtype');\n            var size = dictionary.get('Rect');\n            if (key) {\n                var link = void 0;\n                switch (key.name) {\n                    case 'Line':\n                        annot = PdfLineAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Circle':\n                        if (dictionary.has('Measure')) {\n                            annot = PdfCircleAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            var width = size[2] - size[0];\n                            var height = size[3] - size[1];\n                            if (width === height) {\n                                annot = PdfCircleAnnotation._load(this._page, dictionary);\n                            }\n                            else {\n                                annot = PdfEllipseAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        break;\n                    case 'Square':\n                        if (size[2] === size[3]) {\n                            annot = PdfSquareAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            annot = PdfRectangleAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Polygon':\n                        annot = PdfPolygonAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'PolyLine':\n                        if (dictionary.has('Measure') && dictionary.has('IT')) {\n                            var type = dictionary.get('IT');\n                            if (type && type.name === 'PolyLineAngle') {\n                                annot = PdfAngleMeasurementAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        if (!annot) {\n                            annot = PdfPolyLineAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Ink':\n                        annot = PdfInkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Popup':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Text':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Link':\n                        if (dictionary.has('A')) {\n                            link = dictionary.get('A');\n                        }\n                        if (link && link.has('S')) {\n                            var type = link.get('S').name;\n                            if (type) {\n                                var isTextWebLink = this._hasValidBorder(dictionary.getArray('Border'));\n                                if (type === 'URI') {\n                                    annot = isTextWebLink ?\n                                        PdfTextWebLinkAnnotation._load(this._page, dictionary) :\n                                        this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'Launch') {\n                                    annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                                }\n                                else if (type === 'GoToR') {\n                                    annot = this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'GoTo') {\n                                    annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                                }\n                            }\n                        }\n                        else if (key.name === 'Link') {\n                            annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'FileAttachment':\n                        annot = PdfAttachmentAnnotation._load(this._page, dictionary);\n                        break;\n                    case '3D':\n                        annot = Pdf3DAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'FreeText':\n                        annot = PdfFreeTextAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Redact':\n                        annot = PdfRedactionAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'RichMedia':\n                        annot = PdfRichMediaAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Watermark':\n                        annot = PdfWatermarkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Stamp':\n                        annot = PdfRubberStampAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Sound':\n                        annot = PdfSoundAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Highlight':\n                    case 'Squiggly':\n                    case 'StrikeOut':\n                    case 'Underline':\n                        annot = PdfTextMarkupAnnotation._load(this._page, dictionary);\n                        break;\n                }\n            }\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._getLinkAnnotation = function (dictionary) {\n        var annot;\n        if (dictionary.has('A')) {\n            var remote = dictionary.get('A');\n            if (remote && remote.has('S')) {\n                var link = remote.get('S');\n                if (link && link.name === 'GoToR' && remote.has('F')) {\n                    annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                }\n                else if (link && link.name === 'URI') {\n                    annot = PdfUriAnnotation._load(this._page, dictionary);\n                }\n            }\n        }\n        else {\n            annot = PdfUriAnnotation._load(this._page, dictionary);\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._hasValidBorder = function (border) {\n        if (typeof border === 'undefined' || border === null) {\n            return false;\n        }\n        for (var i = 0; i < border.length; i++) {\n            var val = 0;\n            var value = border[Number.parseInt(i.toString(), 10)];\n            if (value !== null && typeof value !== 'undefined') {\n                val = value;\n            }\n            if (val > 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n    PdfAnnotationCollection.prototype._doPostProcess = function (isFlatten) {\n        for (var i = this.count - 1; i >= 0; i--) {\n            var annotation = this.at(i);\n            if (annotation) {\n                annotation._isExport = this._isExport;\n                annotation._doPostProcess(annotation.flatten || isFlatten);\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reArrange = function (ref, tabIndex, index) {\n        if (this._annotations) {\n            if (tabIndex > this._annotations.length) {\n                tabIndex = 0;\n            }\n            if (index >= this._annotations.length) {\n                index = this._annotations.indexOf(ref);\n            }\n            var annotationDictionary = this._crossReference.\n                _fetch(this._annotations[Number.parseInt(index.toString(), 10)]);\n            if (annotationDictionary.has('Parent')) {\n                var parentReference = annotationDictionary.getRaw('Parent');\n                if ((parentReference && parentReference === ref) || ref ===\n                    this._annotations[Number.parseInt(index.toString(), 10)]) {\n                    var temp = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._annotations[Number.parseInt(index.toString(), 10)] = this._annotations[Number.parseInt(tabIndex.toString(), 10)];\n                    this._annotations[Number.parseInt(tabIndex.toString(), 10)] = temp;\n                }\n            }\n        }\n        return this._annotations;\n    };\n    PdfAnnotationCollection.prototype._clear = function () {\n        this._annotations = [];\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    };\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n/**\n * Represents the collection of `PdfPopupAnnotation`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation collection from first page\n * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n * // Gets the comments of annotation\n * let comments: PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotationCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPopupAnnotationCollection` class\n     *\n     * @private\n     * @param {PdfAnnotation} annotation Annotation reference\n     * @param {boolean} isReview Boolean flag to set review\n     */\n    function PdfPopupAnnotationCollection(annotation, isReview) {\n        this._collection = [];\n        this._annotation = annotation;\n        this._isReview = isReview;\n        if (this._annotation._isLoaded || typeof annotation._page !== 'undefined') {\n            this._page = annotation._page;\n            this._parentDictionary = annotation._dictionary;\n            if (this._annotation._isLoaded) {\n                this._parseCommentsOrReview();\n            }\n        }\n    }\n    Object.defineProperty(PdfPopupAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @private\n         * @returns {number} Number of annotations\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access annotation collection from first page\n         * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n         * // Gets the comments of annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Gets the count of comments\n         * let count: number = comments.count;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the popup annotation at the specified index.\n     *\n     * @private\n     * @param {number} index Index of the annotation\n     * @returns {number} Annotation at the specified index\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._collection.length) {\n            throw Error('Index out of range.');\n        }\n        return this._collection[Number.parseInt(index.toString(), 10)];\n    };\n    /**\n     * Add a new popup annotation into the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to add\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Create a new popup annotation\n     * const popupAnnotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n     * popupAnnotation.author = 'Syncfusion';\n     * // Add a new popup annotation into the collection\n     * annotation.comments.add(popupAnnotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.add = function (annotation) {\n        if (this._annotation._dictionary.get('F') === 30) {\n            throw new Error('Could not add comments/reviews to the review');\n        }\n        annotation._dictionary.update('F', ((this._annotation.flags === PdfAnnotationFlag.locked) ? 128 : (this._isReview ? 30 : 28)));\n        if (this._annotation && (this._annotation._isLoaded || (this._page && this._annotation._ref))) {\n            this._page.annotations.add(annotation);\n            var length_1 = this._collection.length;\n            if (length_1 === 0 || !this._isReview) {\n                annotation._dictionary.update('IRT', this._annotation._ref);\n            }\n            else {\n                annotation._dictionary.update('IRT', this._collection[Number.parseInt((length_1 - 1).toString(), 10)]._ref);\n            }\n            if (this._isReview) {\n                annotation._isReview = true;\n            }\n            else {\n                annotation._isComment = true;\n            }\n        }\n        this._collection.push(annotation);\n    };\n    /**\n     * Remove an annotation from the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Remove the comment\n     * comments.remove(comment);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.remove = function (annotation) {\n        var index = this._collection.indexOf(annotation);\n        if (index > -1) {\n            this.removeAt(index);\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index\n     *\n     * @param {number} index Annotation index to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Remove the first comment\n     * comments.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.removeAt = function (index) {\n        if (index > -1 && index < this._collection.length) {\n            var annotation = this._collection[Number.parseInt(index.toString(), 10)];\n            if (this._isReview && index < this._collection.length - 1) {\n                var nextAnnotation = this._collection[Number.parseInt((index + 1).toString(), 10)];\n                var previous = annotation._dictionary._get('IRT');\n                nextAnnotation._dictionary.set('IRT', previous);\n                nextAnnotation._dictionary._updated = true;\n            }\n            this._collection.splice(index, 1);\n            this._page.annotations.remove(annotation);\n        }\n        else {\n            throw new Error('Index out of range.');\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseCommentsOrReview = function () {\n        if (this._isReview) {\n            this._parseReview();\n        }\n        else {\n            this._parseComments();\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseReview = function () {\n        var collection = this._page.annotations;\n        var map = new Map();\n        map.set(this._annotation._ref, this._annotation);\n        if (collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var reference = annotation._dictionary._get('IRT');\n                if (annotation._isReview && reference && map.has(reference)) {\n                    this._collection.push(annotation);\n                    map.set(annotation._ref, annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var reference = dictionary._get('IRT');\n                        if (annotation._isReview && reference && map.has(reference)) {\n                            this._collection.push(annotation);\n                            map.set(annotation._ref, annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n        map.clear();\n    };\n    PdfPopupAnnotationCollection.prototype._parseComments = function () {\n        var collection = this._page.annotations;\n        if (collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var dictionary = annotation._dictionary;\n                var isReview = _checkReview(dictionary);\n                var reference = dictionary._get('IRT');\n                if (reference && reference === this._annotation._ref && !isReview) {\n                    this._collection.push(annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var isReview = _checkReview(dictionary);\n                        var reference = dictionary._get('IRT');\n                        if (reference && reference === this._annotation._ref && !isReview) {\n                            this._collection.push(annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    return PdfPopupAnnotationCollection;\n}());\nexport { PdfPopupAnnotationCollection };\n","import { _PdfDictionary, _PdfReference, _PdfName } from './pdf-primitives';\nimport { _getInheritableProperty } from './utils';\nimport { PdfAnnotationCollection } from './annotations/annotation-collection';\nimport { PdfGraphics } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfContentStream } from './base-stream';\nimport { PdfRotationAngle, PdfDestinationMode, PdfFormFieldsTabOrder, PdfPageOrientation } from './enumerator';\n/**\n * Represents a page loaded from the PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function () {\n    /**\n     * Represents a loaded page of the PDF document.\n     *\n     * @private\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {number} pageIndex page index.\n     * @param {_PdfDictionary} dictionary page Dictionary.\n     * @param {_PdfReference} reference page reference.\n     */\n    function PdfPage(crossReference, pageIndex, dictionary, reference) {\n        this._isAnnotationParsed = false;\n        this._isNew = false;\n        this._pageIndex = pageIndex;\n        this._pageDictionary = dictionary;\n        this._crossReference = crossReference;\n        this._ref = reference;\n    }\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets the collection of the page's annotations (Read only).\n         *\n         * @returns {PdfAnnotationCollection} Annotation collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation collection\n         * let annotations: PdfAnnotationCollection = page.annotations;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotations === 'undefined') {\n                if (this._pageDictionary.has('Annots')) {\n                    var annots = this._getProperty('Annots');\n                    if (annots && Array.isArray(annots)) {\n                        var widgets_1;\n                        if (this._crossReference._document._catalog._catalogDictionary.has('AcroForm')) {\n                            widgets_1 = this._crossReference._document.form._parseWidgetReferences();\n                        }\n                        if (widgets_1 && widgets_1.length > 0) {\n                            var validAnnotations_1 = [];\n                            annots.forEach(function (entry) {\n                                if (widgets_1.indexOf(entry) === -1) {\n                                    validAnnotations_1.push(entry);\n                                }\n                            });\n                            this._annotations = new PdfAnnotationCollection(validAnnotations_1, this._crossReference, this);\n                        }\n                        else {\n                            this._annotations = new PdfAnnotationCollection(annots, this._crossReference, this);\n                        }\n                    }\n                }\n                if (typeof this._annotations === 'undefined') {\n                    this._annotations = new PdfAnnotationCollection([], this._crossReference, this);\n                }\n            }\n            return this._annotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the page (Read only).\n         *\n         * @returns {number[]} Page width and height as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the width and height of the PDF page as number array\n         * let size: number[] = page.size;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                var mBox = this.mediaBox;\n                var width = 0;\n                var height = 0;\n                if (mBox) {\n                    width = mBox[2] - mBox[0];\n                    height = mBox[3] !== 0 ? mBox[3] - mBox[1] : mBox[1];\n                }\n                if (height < 0) {\n                    height = -height;\n                }\n                if (width < 0) {\n                    width = -width;\n                }\n                this._size = [width, height];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the page (Read only).\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the rotation angle of the page\n         * let rotation: PdfRotationAngle = page.rotation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = 0;\n            if (typeof this._rotation === 'undefined') {\n                angle = _getInheritableProperty(this._pageDictionary, 'Rotate', false, true, 'Parent');\n                if (angle < 0) {\n                    angle += 360;\n                }\n                this._rotation = (typeof angle !== 'undefined') ? ((angle / 90) % 4) : PdfRotationAngle.angle0;\n            }\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the PDF page\n         *\n         * @param {PdfRotationAngle} value rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Sets the rotation angle of the PDF page\n         * page.rotate = PdfRotationAngle.angle90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isNew) {\n                this._rotation = value;\n                var rotate = Math.floor(this._rotation) * 90;\n                if (rotate >= 360) {\n                    rotate = rotate % 360;\n                }\n                this._pageDictionary.update('Rotate', rotate);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"tabOrder\", {\n        /**\n         * Gets the tab order of a PDF form field.\n         *\n         * @returns {PdfFormFieldsTabOrder} tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the tab order of a PDF form field.\n         * let tabOrder: PdfFormFieldsTabOrder = page.tabOrder;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._obtainTabOrder();\n        },\n        /**\n         * Sets the tab order of a PDF form field.\n         *\n         * @param {PdfFormFieldsTabOrder} value tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Sets the tab order of a PDF form field.\n         * page.tabOrder = PdfFormFieldsTabOrder.row;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabOrder = value;\n            var tabs = '';\n            if (this._tabOrder !== PdfFormFieldsTabOrder.none) {\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    tabs = 'R';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    tabs = 'C';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.structure) {\n                    tabs = 'S';\n                }\n            }\n            this._pageDictionary.update('Tabs', _PdfName.get(tabs));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"cropBox\", {\n        /**\n         * Gets the bounds that define the area intended for display or printing in the PDF viewer application (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the cropBox of the PDF page as number array\n         * let cropBox: number[] = page.cropBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = _getInheritableProperty(this._pageDictionary, 'CropBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = [0, 0, 0, 0];\n            }\n            return this._cBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"mediaBox\", {\n        /**\n         * Gets the size that specify the width and height of the page (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the mediaBox of the PDF page as number array\n         * let mediaBox: number[] = page.mediaBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = _getInheritableProperty(this._pageDictionary, 'MediaBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = [0, 0, 0, 0];\n            }\n            return this._mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"orientation\", {\n        /**\n         * Gets the orientation of the page (Read only).\n         *\n         * @returns {PdfPageOrientation} Page orientation.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the orientation of the PDF page\n         * let orientation: number[] = page.orientation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._orientation === 'undefined') {\n                if (typeof this.size !== 'undefined') {\n                    var size = this.size;\n                    if (size[0] > size[1]) {\n                        this._orientation = PdfPageOrientation.landscape;\n                    }\n                    else {\n                        this._orientation = PdfPageOrientation.portrait;\n                    }\n                }\n            }\n            return this._orientation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"_origin\", {\n        get: function () {\n            if (typeof this._o === 'undefined' || (this._o[0] === 0 && this._o[1] === 0)) {\n                this._o = [this.mediaBox[0], this._mBox[1]];\n            }\n            return this._o;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Gets the graphics of the page (Read only).\n         *\n         * @returns {PdfGraphics} Page graphics.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * //Create a new pen.\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * //Draw line on the page graphics.\n         * graphics.drawLine(pen, 10, 10, 100, 100);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._g === 'undefined' || this._needInitializeGraphics) {\n                this._parseGraphics();\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPage.prototype._addWidget = function (reference) {\n        var annots;\n        if (this._pageDictionary.has('Annots')) {\n            annots = this._getProperty('Annots');\n        }\n        if (annots && Array.isArray(annots)) {\n            annots.push(reference);\n        }\n        else {\n            this._pageDictionary.update('Annots', [reference]);\n        }\n        this._pageDictionary._updated = true;\n    };\n    PdfPage.prototype._getProperty = function (key, getArray) {\n        if (getArray === void 0) { getArray = false; }\n        var value = _getInheritableProperty(this._pageDictionary, key, getArray, false); // eslint-disable-line\n        if (!Array.isArray(value)) {\n            return value;\n        }\n        if (value.length === 1 || !(value[0] instanceof _PdfDictionary)) {\n            return value[0];\n        }\n        return _PdfDictionary.merge(this._crossReference, value);\n    };\n    PdfPage.prototype._parseGraphics = function () {\n        this._loadContents();\n        var saveStream = new _PdfContentStream([32, 113, 32, 10]);\n        var saveReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(saveReference, saveStream);\n        this._contents.splice(0, 0, saveReference);\n        var restoreStream = new _PdfContentStream([32, 81, 32, 10]);\n        var restoreReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(restoreReference, restoreStream);\n        this._contents.push(restoreReference);\n        var contentStream = new _PdfContentStream([]);\n        var contentReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(contentReference, contentStream);\n        this._contents.push(contentReference);\n        this._pageDictionary.set('Contents', this._contents);\n        this._pageDictionary._updated = true;\n        this._initializeGraphics(contentStream);\n    };\n    PdfPage.prototype._loadContents = function () {\n        var contents = this._pageDictionary.getRaw('Contents'); // eslint-disable-line\n        var ref;\n        if (contents !== null && typeof contents !== 'undefined' && contents instanceof _PdfReference) {\n            ref = contents;\n            contents = this._crossReference._fetch(ref);\n        }\n        if (contents && contents instanceof _PdfBaseStream) {\n            this._contents = [ref];\n        }\n        else if (contents && Array.isArray(contents)) {\n            this._contents = contents;\n        }\n        else {\n            this._contents = [];\n        }\n    };\n    PdfPage.prototype._initializeGraphics = function (stream) {\n        var isInvalidCase = false;\n        var llx = 0;\n        var lly = 0;\n        var urx = 0;\n        var ury = 0;\n        var size = this.size;\n        var mbox = this.mediaBox;\n        if (mbox && mbox.length >= 4) {\n            llx = mbox[0];\n            lly = mbox[1];\n            urx = mbox[2];\n            ury = mbox[3];\n        }\n        var cbox;\n        if (this._pageDictionary.has('CropBox')) {\n            cbox = this.cropBox;\n            if (cbox && cbox.length >= 4) {\n                var cx = cbox[0];\n                var cy = cbox[1];\n                var crx = cbox[2];\n                var cry = cbox[3];\n                var isValid = (cx < 0 || cy < 0 || crx < 0 || cry < 0) &&\n                    (Math.floor(Math.abs(cy)) === Math.floor(Math.abs(size[1]))) &&\n                    (Math.floor(Math.abs(cx)) === Math.floor(Math.abs(size[0])));\n                if (isValid) {\n                    this._g = new PdfGraphics([Math.max(cx, crx), Math.max(cy, cry)], stream, this._crossReference, this);\n                }\n                else {\n                    this._g = new PdfGraphics(size, stream, this._crossReference, this);\n                    this._g._cropBox = cbox;\n                }\n            }\n            else {\n                this._g = new PdfGraphics(size, stream, this._crossReference, this);\n            }\n        }\n        else if ((llx < 0 || lly < 0 || urx < 0 || ury < 0) &&\n            (Math.floor(Math.abs(lly)) === Math.floor(Math.abs(size[1]))) &&\n            (Math.floor(Math.abs(urx)) === Math.floor(Math.abs(size[0])))) {\n            var width = Math.max(llx, urx);\n            var height = Math.max(lly, ury);\n            if (width <= 0 || height <= 0) {\n                isInvalidCase = true;\n                if (llx < 0) {\n                    llx = -llx;\n                }\n                if (lly < 0) {\n                    lly = -lly;\n                }\n                if (urx < 0) {\n                    urx = -urx;\n                }\n                if (ury < 0) {\n                    ury = -ury;\n                }\n                width = Math.max(llx, urx);\n                height = Math.max(lly, ury);\n            }\n            this._g = new PdfGraphics([width, height], stream, this._crossReference, this);\n        }\n        else {\n            this._g = new PdfGraphics(size, stream, this._crossReference, this);\n        }\n        if (this._pageDictionary.has('MediaBox')) {\n            this._g._mediaBoxUpperRightBound = isInvalidCase ? -lly : ury;\n        }\n        this._graphicsState = this._g.save();\n        var origin = this._origin;\n        if ((origin[0] >= 0 && origin[1] >= 0) || Math.sign(origin[0]) !== Math.sign(origin[1])) {\n            this._g._initializeCoordinates();\n        }\n        else {\n            this._g._initializeCoordinates(this);\n        }\n        //Need to code - set transparency group\n        if (!this._isNew) {\n            var rotation = this.rotation;\n            if (!Number.isNaN(rotation) && (rotation !== PdfRotationAngle.angle0 || this._pageDictionary.has('Rotate'))) {\n                var rotate = void 0;\n                if (this._pageDictionary.has('Rotate')) {\n                    rotate = this._pageDictionary.get('Rotate');\n                }\n                else {\n                    rotate = rotation * 90;\n                }\n                var clip = this._g._clipBounds;\n                if (rotate === 90) {\n                    this._g.translateTransform(0, size[1]);\n                    this._g.rotateTransform(-90);\n                    this._g._clipBounds = [clip[0], clip[1], size[0], size[1]];\n                }\n                else if (rotate === 180) {\n                    this._g.translateTransform(size[0], size[1]);\n                    this._g.rotateTransform(-180);\n                }\n                else if (rotate === 270) {\n                    this._g.translateTransform(size[0], 0);\n                    this._g.rotateTransform(-270);\n                    this._g._clipBounds = [clip[0], clip[1], size[1], size[0]];\n                }\n            }\n        }\n        if (this._isNew && this._pageSettings) {\n            var clipBounds = this._getActualBounds(this._pageSettings);\n            this._g._clipTranslateMargins(clipBounds);\n        }\n        this._needInitializeGraphics = false;\n    };\n    PdfPage.prototype._getActualBounds = function (pageSettings) {\n        var actualSize = pageSettings._getActualSize();\n        return [pageSettings.margins.left, pageSettings.margins.top, actualSize[0], actualSize[1]];\n    };\n    PdfPage.prototype._fetchResources = function () {\n        if (typeof this._resourceObject === 'undefined') {\n            if (this._pageDictionary && this._pageDictionary.has('Resources')) {\n                var obj = this._pageDictionary.getRaw('Resources'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined' && obj instanceof _PdfReference) {\n                    this._hasResourceReference = true;\n                    this._resourceObject = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    this._resourceObject = obj;\n                }\n            }\n            else {\n                this._resourceObject = new _PdfDictionary(this._crossReference);\n                this._pageDictionary.update('Resources', this._resourceObject);\n            }\n        }\n        return this._resourceObject;\n    };\n    PdfPage.prototype._getCropOrMediaBox = function () {\n        var box;\n        if (this._pageDictionary.has('CropBox')) {\n            box = this._pageDictionary.getArray('CropBox');\n        }\n        else if (this._pageDictionary.has('MediaBox')) {\n            box = this._pageDictionary.getArray('MediaBox');\n        }\n        return box;\n    };\n    PdfPage.prototype._beginSave = function () {\n        if (typeof this._graphicsState !== 'undefined') {\n            this.graphics.restore(this._graphicsState);\n            this._graphicsState = null;\n            this._needInitializeGraphics = true;\n        }\n    };\n    PdfPage.prototype._destroy = function () {\n        this._pageDictionary = undefined;\n        this._size = undefined;\n        this._mBox = undefined;\n        this._cBox = undefined;\n        this._o = undefined;\n        this._g = undefined;\n        this._graphicsState = undefined;\n        this._contents = undefined;\n    };\n    PdfPage.prototype._obtainTabOrder = function () {\n        if (this._pageDictionary.has('Tabs')) {\n            var tabOrder = this._pageDictionary.get('Tabs');\n            if (tabOrder === _PdfName.get('R')) {\n                this._tabOrder = PdfFormFieldsTabOrder.row;\n            }\n            else if (tabOrder === _PdfName.get('C')) {\n                this._tabOrder = PdfFormFieldsTabOrder.column;\n            }\n            else if (tabOrder === _PdfName.get('S')) {\n                this._tabOrder = PdfFormFieldsTabOrder.structure;\n            }\n            else if (tabOrder === _PdfName.get('W')) {\n                this._tabOrder = PdfFormFieldsTabOrder.widget;\n            }\n        }\n        if (this._tabOrder === null || typeof this._tabOrder === 'undefined') {\n            this._tabOrder = PdfFormFieldsTabOrder.none;\n        }\n        return this._tabOrder;\n    };\n    PdfPage.prototype._removeAnnotation = function (reference) {\n        if (this._pageDictionary.has('Annots')) {\n            var annots = this._getProperty('Annots');\n            if (annots && Array.isArray(annots)) {\n                var index = annots.indexOf(reference);\n                if (index >= 0) {\n                    annots.splice(index, 1);\n                }\n                this._pageDictionary.set('Annots', annots);\n                this._pageDictionary._updated = true;\n            }\n        }\n    };\n    return PdfPage;\n}());\nexport { PdfPage };\n/**\n * `PdfDestination` class represents the PDF destination.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n * // Initializes a new instance of the `PdfDestination` class.\n * let destination: PdfDestination = new PdfDestination();\n * // Sets the zoom factor.\n * destination.zoom = 20;\n * // Sets the page where the destination is situated.\n * destination.page = page;\n * // Sets the mode of the destination.\n * destination.mode = PdfDestinationMode.fitToPage;\n * // Sets the location of the destination.\n * destination.location = [20, 20];\n * // Sets the bounds of the destination.\n * destination.destinationBounds = [20, 20, 100, 50];\n * // Sets destination to  document link annotation.\n * annotation.destination = destination;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(page, location) {\n        this._location = [0, 0];\n        this._destinationMode = PdfDestinationMode.location;\n        this._zoom = 0;\n        this._isValid = true;\n        this._index = 0;\n        this._destinationBounds = [0, 0, 0, 0];\n        this._array = Array(); // eslint-disable-line\n        if (typeof page !== 'undefined' && page !== null) {\n            if (page.rotation === PdfRotationAngle.angle180) {\n                this._location = [page.graphics._size[0], this._location[1]];\n            }\n            else if (page.rotation === PdfRotationAngle.angle90) {\n                this._location = [0, 0];\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                this._location = [page.graphics._size[0], 0];\n            }\n            else {\n                this._location = [0, this._location[1]];\n            }\n            this._page = page;\n            this._index = page._pageIndex;\n        }\n        if (typeof location !== 'undefined' && location.length === 2) {\n            this._location = location;\n        }\n        if (typeof location !== 'undefined' && location.length === 4) {\n            this._location = [location[0], location[1]];\n            this._destinationBounds = location;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        /**\n         * Gets the zoom factor.\n         *\n         * @returns {number} zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the zoom factor of the destination.\n         * let zoom: number = annot.destination.zoom;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._zoom;\n        },\n        /**\n         * Sets the zoom factor.\n         *\n         * @param {number} value zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._zoom) {\n                this._zoom = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets the page where the destination is situated.\n         *\n         * @returns {PdfPage} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page of the destination.\n         * let page: PdfPage = annot.destination.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._page;\n        },\n        /**\n         * Sets the page where the destination is situated.\n         *\n         * @param {PdfPage} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._page) {\n                this._page = value;\n                this._initializePrimitive();\n                this._index = value._pageIndex;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"pageIndex\", {\n        /**\n         * Gets the page index of bookmark destination (Read only).\n         *\n         * @returns {number} index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page index of the destination.\n         * let pageIndex: number = annot.destination.pageIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets the mode of the destination.\n         *\n         * @returns {PdfDestinationMode} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the mode of the destination.\n         * let mode: PdfDestinationMode = annot.destination.mode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationMode;\n        },\n        /**\n         * Sets the mode of the destination.\n         *\n         * @param {PdfDestinationMode} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationMode) {\n                this._destinationMode = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets the location of the destination.\n         *\n         * @returns {number[]} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the location of the destination.\n         * let location: number[] = annot.destination.location;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._location;\n        },\n        /**\n         * Sets the location of the destination.\n         *\n         * @param {number[]} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._location) {\n                this._location = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"destinationBounds\", {\n        /**\n         * Gets the bounds of the destination.\n         *\n         * @returns {number[]} bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the bounds of the destination.\n         * let destinationBounds: number[] = annot.destination.destinationBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationBounds;\n        },\n        /**\n         * Sets the bounds of the destination.\n         *\n         * @param {number[]} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationBounds) {\n                this._destinationBounds = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"isValid\", {\n        /**\n         * Gets a value indicating whether this instance is valid (Read only).\n         *\n         * @returns {boolean} value indicating whether this instance is valid.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets a value indicating whether this instance is valid.\n         * let isValid: boolean = annot.destination.isValid;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isValid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDestination.prototype._setValidation = function (value) {\n        this._isValid = value;\n    };\n    PdfDestination.prototype._initializePrimitive = function () {\n        this._array = [];\n        var page = this._page;\n        var element = this._page._pageDictionary;\n        if (typeof element !== 'undefined' && element !== null) {\n            this._array.push(this._page._ref);\n        }\n        switch (this._destinationMode) {\n            case PdfDestinationMode.location:\n                this._array.push(_PdfName.get('XYZ'));\n                if (typeof page !== 'undefined' && page !== null) {\n                    this._array.push(this._location[0]);\n                    this._array.push(this._page.graphics._size[1] - this._location[1]);\n                }\n                else {\n                    this._array.push(0);\n                    this._array.push(0);\n                }\n                this._array.push(this._zoom);\n                break;\n            case PdfDestinationMode.fitToPage:\n                this._array.push(_PdfName.get('Fit'));\n                break;\n            case PdfDestinationMode.fitR:\n                this._array.push(_PdfName.get('FitR'));\n                this._array.push(this._destinationBounds[0]);\n                this._array.push(this._destinationBounds[1]);\n                this._array.push(this._destinationBounds[2]);\n                this._array.push(this._destinationBounds[3]);\n                break;\n            case PdfDestinationMode.fitH:\n                this._array.push(_PdfName.get('FitH'));\n                this._array.push((typeof page !== 'undefined' && page !== null) ? page._size[1] - this._location[1] : 0);\n                break;\n        }\n        if (this._parent) {\n            this._parent._dictionary.set('D', this._array);\n            this._parent._dictionary._updated = true;\n        }\n    };\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","import { _ImageFormat } from './../../enumerator';\nvar _ImageDecoder = /** @class */ (function () {\n    function _ImageDecoder() {\n        this._format = _ImageFormat.unknown;\n        this._height = 0;\n        this._width = 0;\n        this._bitsPerComponent = 8;\n        this._position = 0;\n        this._noOfComponents = -1;\n    }\n    _ImageDecoder.prototype._reset = function () {\n        this._position = 0;\n    };\n    _ImageDecoder.prototype._getBuffer = function (index) {\n        return this._stream[Number.parseInt(index.toString(), 10)];\n    };\n    _ImageDecoder.prototype._read = function (buffer, offset, count, stream) {\n        if (stream && Array.isArray(stream)) {\n            var result = 0;\n            if (count <= stream.length && stream.length - offset >= count) {\n                for (var i = 0; i < count; i++) {\n                    buffer[Number.parseInt(i.toString(), 10)] = stream[Number.parseInt(offset.toString(), 10)];\n                    offset++;\n                    result++;\n                }\n            }\n            return { 'outputBuffer': buffer, 'offset': offset, 'length': result };\n        }\n        else {\n            for (var index = offset; index < count; index++) {\n                var position = this._position;\n                buffer[Number.parseInt(index.toString(), 10)] = this._getBuffer(position);\n                this._position++;\n            }\n        }\n    };\n    _ImageDecoder.prototype._readString = function (length) {\n        var result = '';\n        for (var i = 0; i < length; i++) {\n            result += String.fromCharCode(this._readByte());\n        }\n        return result;\n    };\n    _ImageDecoder.prototype._seek = function (length) {\n        this._position += length;\n    };\n    _ImageDecoder.prototype._readByte = function () {\n        if (this._position < this._stream.byteLength) {\n            var value = this._getBuffer(this._position);\n            this._position += 1;\n            return value;\n        }\n        else {\n            throw new Error('Error decoding JPEG image. Invalid offset.');\n        }\n    };\n    _ImageDecoder.prototype._toUnsigned16 = function (value) {\n        value = value & 0xFFFF;\n        return value < 0 ? (value + 0x10000) : value;\n    };\n    _ImageDecoder.prototype._readUnsigned32 = function (offset) {\n        var i1 = this._getBuffer(offset + 3);\n        var i2 = this._getBuffer(offset + 2);\n        var i3 = this._getBuffer(offset + 1);\n        var i4 = this._getBuffer(offset);\n        return i1 | (i2 << 8) | (i3 << 16) | (i4 << 24);\n    };\n    return _ImageDecoder;\n}());\nexport { _ImageDecoder };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ImageDecoder } from './image-decoder';\nimport { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nvar _JpegDecoder = /** @class */ (function (_super) {\n    __extends(_JpegDecoder, _super);\n    /**\n     * Initializes a new instance of the `_JpegDecoder` class.\n     *\n     * @private\n     * @param {Uint8Array} stream byte array.\n     */\n    function _JpegDecoder(stream) {\n        var _this = _super.call(this) || this;\n        _this._stream = stream;\n        _this._initialize();\n        return _this;\n    }\n    Object.defineProperty(_JpegDecoder.prototype, \"_imageDataAsNumberArray\", {\n        get: function () {\n            return this._imageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _JpegDecoder.prototype._initialize = function () {\n        this._format = _ImageFormat.jpeg;\n        this._readHeader();\n        this._reset();\n        this._imageData = new Uint8Array(this._stream.byteLength);\n        this._read(this._imageData, 0, this._imageData.byteLength);\n    };\n    _JpegDecoder.prototype._readHeader = function () {\n        this._reset();\n        var imgData = new Uint8Array(this._stream.byteLength);\n        this._read(imgData, 0, imgData.byteLength);\n        var i = 4;\n        var length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n        var isLengthExceed = false;\n        while (i < imgData.byteLength) {\n            i += length;\n            if (i < imgData.byteLength) {\n                if (this._getBuffer(i + 1) === 192) {\n                    this._height = this._getBuffer(i + 5) * 256 + this._getBuffer(i + 6);\n                    this._width = this._getBuffer(i + 7) * 256 + this._getBuffer(i + 8);\n                    this._noOfComponents = this._getBuffer(i + 9);\n                    if (this._width !== 0 && this._height !== 0) {\n                        return;\n                    }\n                }\n                else {\n                    i += 2;\n                    length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this._reset();\n            this._seek(2);\n            this._readExceededJpegImage();\n        }\n    };\n    _JpegDecoder.prototype._getImageDictionary = function () {\n        var data = []; // eslint-disable-line\n        this._imageStream = new _PdfStream(data, new _PdfDictionary());\n        this._imageStream.isImageStream = true;\n        var tempString = '';\n        var decodedString = '';\n        for (var i = 0; i < this._imageDataAsNumberArray.byteLength; i++) {\n            tempString += ' ' + String.fromCharCode(this._getBuffer(i));\n        }\n        for (var i = 0; i < tempString.length; i++) {\n            if (i % 2 !== 0) {\n                decodedString += tempString[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._imageStream.data = [decodedString];\n        this._imageStream._isCompress = false;\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', new _PdfName('XObject'));\n        dictionary.set('Subtype', new _PdfName('Image'));\n        dictionary.set('Width', this._width);\n        dictionary.set('Height', this._height);\n        dictionary.set('BitsPerComponent', this._bitsPerComponent);\n        dictionary.set('Filter', new _PdfName('DCTDecode'));\n        dictionary.set('ColorSpace', new _PdfName(this._getColorSpace()));\n        dictionary.set('DecodeParms', this._getDecodeParams());\n        this._imageStream.dictionary = dictionary;\n        this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n        for (var i = 0; i < this._imageStream.data[0].length; i++) {\n            this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n        }\n        this._imageStream.end = this._imageStream.bytes.length;\n        this._imageStream.dictionary._updated = true;\n        return this._imageStream;\n    };\n    _JpegDecoder.prototype._getColorSpace = function () {\n        if (this._noOfComponents === 1) {\n            return 'DeviceGray';\n        }\n        else if (this._noOfComponents === 4) {\n            return 'DeviceCMYK';\n        }\n        return 'DeviceRGB';\n    };\n    _JpegDecoder.prototype._getDecodeParams = function () {\n        var decodeParams = new _PdfDictionary();\n        decodeParams.set('Columns', this._width);\n        decodeParams.set('BlackIs1', true);\n        decodeParams.set('K', -1);\n        decodeParams.set('Predictor', 15);\n        decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n        return decodeParams;\n    };\n    _JpegDecoder.prototype._skipStream = function () {\n        var length = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n        this._seek(2);\n        if (length < 2) {\n            throw new Error('Error decoding JPEG image');\n        }\n        else if (length > 0) {\n            this._seek(length - 2);\n        }\n    };\n    _JpegDecoder.prototype._readExceededJpegImage = function () {\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this._getMarker();\n            switch (marker) {\n                case 0x00C0:\n                case 0x00C1:\n                case 0x00C2:\n                case 0x00C3:\n                case 0x00C5:\n                case 0x00C6:\n                case 0x00C7:\n                case 0x00C9:\n                case 0x00CA:\n                case 0x00CB:\n                case 0x00CD:\n                case 0x00CE:\n                case 0x00CF:\n                    this._seek(3);\n                    this._height = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._width = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._noOfComponents = this._getBuffer(this._position);\n                    this._seek(1);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this._skipStream();\n                    break;\n            }\n        }\n    };\n    _JpegDecoder.prototype._getMarker = function () {\n        var skippedByte = 0;\n        var marker = this._readByte();\n        while (marker !== 255) {\n            skippedByte++;\n            marker = this._readByte();\n        }\n        do {\n            marker = this._readByte();\n        } while (marker === 255);\n        if (skippedByte !== 0) {\n            throw new Error('Error decoding JPEG image');\n        }\n        return this._toUnsigned16(marker);\n    };\n    return _JpegDecoder;\n}(_ImageDecoder));\nexport { _JpegDecoder };\n","export var _InflaterState;\n(function (_InflaterState) {\n    _InflaterState[_InflaterState[\"readingHeader\"] = 0] = \"readingHeader\";\n    _InflaterState[_InflaterState[\"readingBFinal\"] = 1] = \"readingBFinal\";\n    _InflaterState[_InflaterState[\"readingBType\"] = 2] = \"readingBType\";\n    _InflaterState[_InflaterState[\"readingNlCodes\"] = 3] = \"readingNlCodes\";\n    _InflaterState[_InflaterState[\"readingNdCodes\"] = 4] = \"readingNdCodes\";\n    _InflaterState[_InflaterState[\"readingCodes\"] = 5] = \"readingCodes\";\n    _InflaterState[_InflaterState[\"readingClCodes\"] = 6] = \"readingClCodes\";\n    _InflaterState[_InflaterState[\"readingTcBefore\"] = 7] = \"readingTcBefore\";\n    _InflaterState[_InflaterState[\"readingTcAfter\"] = 8] = \"readingTcAfter\";\n    _InflaterState[_InflaterState[\"decodeTop\"] = 9] = \"decodeTop\";\n    _InflaterState[_InflaterState[\"iLength\"] = 10] = \"iLength\";\n    _InflaterState[_InflaterState[\"fLength\"] = 11] = \"fLength\";\n    _InflaterState[_InflaterState[\"dCode\"] = 12] = \"dCode\";\n    _InflaterState[_InflaterState[\"unCompressedAligning\"] = 13] = \"unCompressedAligning\";\n    _InflaterState[_InflaterState[\"unCompressedByte1\"] = 14] = \"unCompressedByte1\";\n    _InflaterState[_InflaterState[\"unCompressedByte2\"] = 15] = \"unCompressedByte2\";\n    _InflaterState[_InflaterState[\"unCompressedByte3\"] = 16] = \"unCompressedByte3\";\n    _InflaterState[_InflaterState[\"unCompressedByte4\"] = 17] = \"unCompressedByte4\";\n    _InflaterState[_InflaterState[\"decodeUnCompressedBytes\"] = 18] = \"decodeUnCompressedBytes\";\n    _InflaterState[_InflaterState[\"srFooter\"] = 19] = \"srFooter\";\n    _InflaterState[_InflaterState[\"rFooter\"] = 20] = \"rFooter\";\n    _InflaterState[_InflaterState[\"vFooter\"] = 21] = \"vFooter\";\n    _InflaterState[_InflaterState[\"done\"] = 22] = \"done\";\n})(_InflaterState || (_InflaterState = {}));\nexport var _BlockType;\n(function (_BlockType) {\n    _BlockType[_BlockType[\"unCompressedType\"] = 0] = \"unCompressedType\";\n    _BlockType[_BlockType[\"staticType\"] = 1] = \"staticType\";\n    _BlockType[_BlockType[\"dynamicType\"] = 2] = \"dynamicType\";\n})(_BlockType || (_BlockType = {}));\n","import { _copyRange } from './../utils';\nvar _DecompressedOutput = /** @class */ (function () {\n    function _DecompressedOutput() {\n        this._end = 0;\n        this._usedBytes = 0;\n        this._dOutput = Array(_DecompressedOutput._dOutSize).fill(0);\n        this._end = 0;\n        this._usedBytes = 0;\n    }\n    Object.defineProperty(_DecompressedOutput.prototype, \"_unusedBytes\", {\n        get: function () {\n            return _DecompressedOutput._dOutSize - this._usedBytes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _DecompressedOutput.prototype._write = function (b) {\n        this._dOutput[this._end++] = b;\n        this._end &= _DecompressedOutput._dOutMask;\n        ++this._usedBytes;\n    };\n    _DecompressedOutput.prototype._writeLD = function (length, distance) {\n        this._usedBytes += length;\n        var copyStart = (this._end - distance) & _DecompressedOutput._dOutMask;\n        var border = _DecompressedOutput._dOutSize - length;\n        if (copyStart <= border && this._end < border) {\n            if (length <= distance) {\n                _copyRange(this._dOutput, this._end, this._dOutput, copyStart, copyStart + length);\n                this._end += length;\n            }\n            else {\n                while (length-- > 0) {\n                    this._dOutput[this._end++] = this._dOutput[copyStart++];\n                }\n            }\n        }\n        else {\n            while (length-- > 0) {\n                this._dOutput[this._end++] = this._dOutput[copyStart++];\n                this._end &= _DecompressedOutput._dOutMask;\n                copyStart &= _DecompressedOutput._dOutMask;\n            }\n        }\n    };\n    _DecompressedOutput.prototype._copyFrom = function (input, length) {\n        length = Math.min(Math.min(length, _DecompressedOutput._dOutSize - this._usedBytes), input._bytes);\n        var copied;\n        var tailLen = _DecompressedOutput._dOutSize - this._end;\n        if (length > tailLen) {\n            copied = input._copyTo(this._dOutput, this._end, tailLen);\n            if (copied === tailLen) {\n                copied += input._copyTo(this._dOutput, 0, length - tailLen);\n            }\n        }\n        else {\n            copied = input._copyTo(this._dOutput, this._end, length);\n        }\n        this._end = (this._end + copied) & _DecompressedOutput._dOutMask;\n        this._usedBytes += copied;\n        return copied;\n    };\n    _DecompressedOutput.prototype._copyTo = function (output, offset, length) {\n        var end;\n        if (length > this._usedBytes) {\n            end = this._end;\n            length = this._usedBytes;\n        }\n        else {\n            end = (this._end - this._usedBytes + length) & _DecompressedOutput._dOutMask;\n        }\n        var copied = length;\n        var tailLen = length - end;\n        var sourceStart = _DecompressedOutput._dOutSize - tailLen;\n        if (tailLen > 0) {\n            for (var i = 0; i < tailLen && i + sourceStart < this._dOutput.length && i + offset < output.length; i++) {\n                output[offset + i] = this._dOutput[sourceStart + i];\n            }\n            var sourceStartIndex_1 = _DecompressedOutput._dOutSize - tailLen;\n            _copyRange(output, offset, this._dOutput, sourceStartIndex_1, sourceStartIndex_1 + tailLen);\n            offset += tailLen;\n            length = end;\n        }\n        sourceStart = end - length;\n        var sourceStartIndex = end - length;\n        _copyRange(output, offset, this._dOutput, sourceStartIndex, end);\n        this._usedBytes -= copied;\n        return { 'count': copied, 'data': output };\n    };\n    _DecompressedOutput._dOutSize = 32768;\n    _DecompressedOutput._dOutMask = 32767;\n    return _DecompressedOutput;\n}());\nexport { _DecompressedOutput };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ImageDecoder } from './image-decoder';\nimport { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nimport { _bytesToString, _toUnsigned, _toSigned32 } from './../../utils';\nimport { _DeflateStream } from './../../compression/deflate-stream';\n/* eslint-disable */\nvar _PngDecoder = /** @class */ (function (_super) {\n    __extends(_PngDecoder, _super);\n    /**\n     * Initializes a new instance of the `_PngDecoder` class.\n     *\n     * @private\n     * @param {Uint8Array} stream byte array.\n     */\n    function _PngDecoder(stream) {\n        var _this = _super.call(this) || this;\n        _this._stream = stream;\n        _this._format = _ImageFormat.png;\n        _this._isRedGreenBlue = false;\n        _this._isDecode = false;\n        _this._shades = false;\n        _this._ideateDecode = true;\n        _this._colors = 0;\n        _this._bitsPerPixel = 0;\n        _this._idatLength = 0;\n        _this._inputBands = 0;\n        _this._position = 8;\n        _this._initialize();\n        return _this;\n    }\n    _PngDecoder.prototype._initialize = function () {\n        var header;\n        var result = this._hasValidChunkType(header);\n        while (result.hasValidChunk) {\n            header = result.type;\n            switch (header) {\n                case _PngChunkTypes.iHDR:\n                    this._readHeader();\n                    break;\n                case _PngChunkTypes.iDAT:\n                    this._readImageData();\n                    break;\n                case _PngChunkTypes.sRGB:\n                    this._isRedGreenBlue = true;\n                    this._ignoreChunk();\n                    break;\n                case _PngChunkTypes.pLTE:\n                    this._readPhotoPlate();\n                    break;\n                case _PngChunkTypes.iEND:\n                    this._decodeImageData();\n                    break;\n                case _PngChunkTypes.tRNS:\n                    this._readTransparency();\n                    break;\n                case _PngChunkTypes.tEXt:\n                case _PngChunkTypes.iTXt:\n                case _PngChunkTypes.zTXt:\n                case _PngChunkTypes.hIST:\n                case _PngChunkTypes.sBIT:\n                case _PngChunkTypes.iCCP:\n                case _PngChunkTypes.pHYs:\n                case _PngChunkTypes.tIME:\n                case _PngChunkTypes.bKGD:\n                case _PngChunkTypes.gAMA:\n                case _PngChunkTypes.cHRM:\n                case _PngChunkTypes.unknown:\n                    this._ignoreChunk();\n                    break;\n                default:\n                    break;\n            }\n            result = this._hasValidChunkType(header);\n        }\n    };\n    _PngDecoder.prototype._hasValidChunkType = function (type) {\n        type = _PngChunkTypes.unknown;\n        if (this._position + 8 <= this._stream.byteLength) {\n            this._currentChunkLength = this._readUnsigned32(this._position);\n            this._seek(4);\n            var chunk = this._readString(4);\n            var header = this._getChunkType(chunk);\n            if (typeof header !== 'undefined' && header !== null) {\n                type = header;\n                return { 'type': type, 'hasValidChunk': true };\n            }\n            if (this._stream.byteLength === this._position) {\n                return { 'type': type, 'hasValidChunk': false };\n            }\n            else {\n                return { 'type': type, 'hasValidChunk': true };\n            }\n        }\n        else {\n            return { 'type': type, 'hasValidChunk': false };\n        }\n    };\n    _PngDecoder.prototype._ignoreChunk = function () {\n        if (this._currentChunkLength > 0) {\n            this._seek(this._currentChunkLength + 4);\n        }\n    };\n    _PngDecoder.prototype._readHeader = function () {\n        this._header = new _PngHeader();\n        this._header._width = this._readUnsigned32(this._position);\n        this._seek(4);\n        this._header._height = this._readUnsigned32(this._position);\n        this._seek(4);\n        this._header._bitDepth = this._readByte();\n        this._header._colorType = this._readByte();\n        this._header._compression = this._readByte();\n        this._header._filter = this._getFilterType(this._readByte());\n        this._header._interlace = this._readByte();\n        this._colors = (this._header._colorType === 3 || (this._header._colorType & 2) === 0) ? 1 : 3;\n        this._width = this._header._width;\n        this._height = this._header._height;\n        this._bitsPerComponent = this._header._bitDepth;\n        this._setBitsPerPixel();\n        this._seek(4);\n    };\n    _PngDecoder.prototype._setBitsPerPixel = function () {\n        this._bitsPerPixel = this._header._bitDepth === 16 ? 2 : 1;\n        if (this._header._colorType === 0) {\n            this._idatLength = Number.parseInt(((this._bitsPerComponent * this._width + 7) / 8).toString(), 10) * this._height;\n            this._inputBands = 1;\n        }\n        else if (this._header._colorType === 2) {\n            this._idatLength = this._width * this._height * 3;\n            this._inputBands = 3;\n            this._bitsPerPixel *= 3;\n        }\n        else if (this._header._colorType === 3) {\n            if (this._header._interlace === 1) {\n                this._idatLength = Number.parseInt(((this._header._bitDepth * this._width + 7) / 8).toString(), 10) * this._height;\n            }\n            this._inputBands = 1;\n            this._bitsPerPixel = 1;\n        }\n        else if (this._header._colorType === 4) {\n            this._idatLength = this._width * this._height;\n            this._inputBands = 2;\n            this._bitsPerPixel *= 2;\n        }\n        else if (this._header._colorType === 6) {\n            this._idatLength = this._width * 3 * this._height;\n            this._inputBands = 4;\n            this._bitsPerPixel *= 4;\n        }\n    };\n    _PngDecoder.prototype._readImageData = function () {\n        if (!this._encodedStream || this._encodedStream.length === 0) {\n            this._encodedStream = [];\n        }\n        if (this._currentChunkLength <= this._stream.byteLength && this._stream.byteLength - this._position >= this._currentChunkLength) {\n            for (var i = 0; i < this._currentChunkLength; i++) {\n                this._encodedStream.push(this._readByte());\n            }\n        }\n        this._seek(4);\n    };\n    _PngDecoder.prototype._readPhotoPlate = function () {\n        if (this._header._colorType === 3) {\n            this._colorSpace = [];\n            this._colorSpace.push(_PdfName.get('Indexed'));\n            this._colorSpace.push(this._getPngColorSpace());\n            this._colorSpace.push(this._currentChunkLength / 3 - 1);\n            var buffer = new Uint8Array(this._currentChunkLength);\n            this._read(buffer, 0, this._currentChunkLength);\n            this._colorSpace.push(_bytesToString(buffer));\n            this._seek(4);\n        }\n        else {\n            this._ignoreChunk();\n        }\n    };\n    _PngDecoder.prototype._readTransparency = function () {\n        if (this._header._colorType === 3) {\n            var alpha = new Uint8Array(this._currentChunkLength);\n            this._read(alpha, 0, this._currentChunkLength);\n            this._seek(4);\n            this._alpha = [];\n            for (var i = 0; i < alpha.length; i++) {\n                this._alpha.push(alpha[Number.parseInt(i.toString(), 10)]);\n                var sh = alpha[Number.parseInt(i.toString(), 10)] & 0xff;\n                if (sh !== 0 && sh !== 255) {\n                    this._shades = true;\n                }\n            }\n        }\n        else {\n            this._ignoreChunk();\n        }\n    };\n    _PngDecoder.prototype._getPngColorSpace = function () {\n        if (!this._isRedGreenBlue) {\n            if ((this._header._colorType & 2) === 0) {\n                return _PdfName.get('DeviceGray');\n            }\n            else {\n                return _PdfName.get('DeviceRGB');\n            }\n        }\n        else {\n            var colorspace = [];\n            var calRGB = new _PdfDictionary();\n            var whitePoint = [1, 1, 1];\n            var gammaArray = [2.2, 2.2, 2.2];\n            calRGB.set('Gamma', gammaArray);\n            if (this._isRedGreenBlue) {\n                var wpX = 0.3127;\n                var wpY = 0.329;\n                var redX = 0.64;\n                var redY = 0.33;\n                var greenX = 0.3;\n                var greenY = 0.6;\n                var bX = 0.15;\n                var bY = 0.06;\n                var t = wpY * ((greenX - bX) * redY - (redX - bX) * greenY + (redX - greenX) * bY);\n                var alphaY = redY * ((greenX - bX) * wpY - (wpX - bX) * greenY + (wpX - greenX) * bY) / t;\n                var alphaX = alphaY * redX / redY;\n                var alphaZ = alphaY * ((1 - redX) / redY - 1);\n                var blueY = -greenY * ((redX - bX) * wpY - (wpX - bX) * redY + (wpX - redX) * bY) / t;\n                var blueX = blueY * greenX / greenY;\n                var blueZ = blueY * ((1 - greenX) / greenY - 1);\n                var colorY = bY * ((redX - greenX) * wpY - (wpX - greenX) * wpY + (wpX - redX) * greenY) / t;\n                var colorX = colorY * bX / bY;\n                var colorZ = colorY * ((1 - bX) / bY - 1);\n                var whiteX = alphaX + blueX + colorX;\n                var whiteY = 1;\n                var whiteZ = alphaZ + blueZ + colorZ;\n                whitePoint = [whiteX, whiteY, whiteZ];\n                calRGB.set('Matrix', [alphaX, alphaY, alphaZ, blueX, blueY, blueZ, colorX, colorY, colorZ]);\n            }\n            calRGB.set('WhitePoint', whitePoint);\n            colorspace.push(_PdfName.get('CalRGB'));\n            colorspace.push(calRGB);\n            return colorspace;\n        }\n    };\n    _PngDecoder.prototype._decodeImageData = function () {\n        var header = this._header;\n        this._isDecode = (header._interlace === 1) || (header._bitDepth === 16) || ((header._colorType & 4) !== 0) || this._shades;\n        if (this._isDecode) {\n            if ((header._colorType & 4) !== 0 || this._shades) {\n                this._maskData = Array(this._width * this._height).fill(0);\n            }\n            if (this._encodedStream) {\n                this._dataStream = this._getDeflatedData(this._encodedStream);\n                this._dataStreamOffset = 0;\n            }\n            if (this._idatLength > 0) {\n                this._decodedImageData = Array(this._idatLength).fill(0);\n            }\n            this._readDecodeData();\n            if (this._decodedImageData && this._decodedImageData.length === 0 && this._shades) {\n                this._ideateDecode = false;\n                this._decodedImageData = this._encodedStream;\n            }\n        }\n        else {\n            this._ideateDecode = false;\n            this._decodedImageData = this._encodedStream;\n        }\n    };\n    _PngDecoder.prototype._getDeflatedData = function (data) {\n        var idatData = data.slice(2, data.length - 4);\n        var deflateStream = new _DeflateStream(idatData, 0, true);\n        var buffer = Array(4096).fill(0);\n        var numRead = 0;\n        var outputData = [];\n        do {\n            var result = deflateStream._read(buffer, 0, buffer.length);\n            numRead = result.count;\n            buffer = result.data;\n            for (var i = 0; i < numRead; i++) {\n                outputData.push(buffer[Number.parseInt(i.toString(), 10)]);\n            }\n        } while (numRead > 0);\n        return outputData;\n    };\n    _PngDecoder.prototype._readDecodeData = function () {\n        if (this._header._interlace !== 1) {\n            this._decodeData(0, 0, 1, 1, this._width, this._height);\n        }\n        else {\n            this._decodeData(0, 0, 8, 8, Math.floor((this._width + 7) / 8), Math.floor((this._height + 7) / 8));\n            this._decodeData(4, 0, 8, 8, Math.floor((this._width + 3) / 8), Math.floor((this._height + 7) / 8));\n            this._decodeData(0, 4, 4, 8, Math.floor((this._width + 3) / 4), Math.floor((this._height + 3) / 8));\n            this._decodeData(2, 0, 4, 4, Math.floor((this._width + 1) / 4), Math.floor((this._height + 3) / 4));\n            this._decodeData(0, 2, 2, 4, Math.floor((this._width + 1) / 2), Math.floor((this._height + 1) / 4));\n            this._decodeData(1, 0, 2, 2, Math.floor(this._width / 2), Math.floor((this._height + 1) / 2));\n            this._decodeData(0, 1, 1, 2, this._width, Math.floor(this._height / 2));\n        }\n    };\n    _PngDecoder.prototype._decodeData = function (xOffset, yOffset, xStep, yStep, width, height) {\n        if ((width === 0) || (height === 0)) {\n            return;\n        }\n        else {\n            var bytesPerRow = Math.floor((this._inputBands * width * this._header._bitDepth + 7) / 8);\n            var current = Array(bytesPerRow).fill(0);\n            var prior = Array(bytesPerRow).fill(0);\n            for (var sourceY = 0, destinationY = yOffset; sourceY < height; sourceY++, destinationY += yStep) {\n                var filter = this._dataStream[this._dataStreamOffset];\n                this._dataStreamOffset = this._dataStreamOffset + 1;\n                this._dataStreamOffset = this._readStream(this._dataStream, this._dataStreamOffset, current, bytesPerRow);\n                switch (this._getFilterType(filter)) {\n                    case _PngFilterTypes.none:\n                        break;\n                    case _PngFilterTypes.sub:\n                        this._decompressSub(current, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    case _PngFilterTypes.up:\n                        this._decompressUp(current, prior, bytesPerRow);\n                        break;\n                    case _PngFilterTypes.average:\n                        this._decompressAverage(current, prior, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    case _PngFilterTypes.paeth:\n                        this._decompressPaeth(current, prior, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    default:\n                        throw new Error('Unknown PNG filter');\n                }\n                this._processPixels(current, xOffset, xStep, destinationY, width);\n                var tmp = prior;\n                prior = current;\n                current = tmp;\n            }\n        }\n    };\n    _PngDecoder.prototype._readStream = function (stream, streamOffset, data, count) {\n        var result = this._read(data, streamOffset, count, stream);\n        data = result.outputBuffer;\n        streamOffset = result.offset;\n        var n = result.length;\n        if (n <= 0) {\n            throw new Error('Insufficient data');\n        }\n        return streamOffset;\n    };\n    _PngDecoder.prototype._decompressSub = function (data, count, bitsPerPixel) {\n        for (var i = bitsPerPixel; i < count; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + (data[i - bitsPerPixel] & 0xff), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressUp = function (data, pData, count) {\n        for (var i = 0; i < count; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + (pData[Number.parseInt(i.toString(), 10)] & 0xff), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressAverage = function (data, pData, count, bitsPerPixel) {\n        for (var i = 0; i < bitsPerPixel; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((Math.floor(((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + (pData[Number.parseInt(i.toString(), 10)] & 0xff)) / 2)), 8);\n        }\n        for (var i = bitsPerPixel; i < count; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(Math.floor((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + ((data[i - bitsPerPixel] & 0xff) + (pData[Number.parseInt(i.toString(), 10)] & 0xff)) / 2), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressPaeth = function (data, pData, count, bitsPerPixel) {\n        var val;\n        var pp;\n        var pr;\n        var prp;\n        for (var i = 0; i < bitsPerPixel; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(val + pr, 8);\n        }\n        for (var i = bitsPerPixel; i < count; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pp = data[i - bitsPerPixel] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            prp = pData[i - bitsPerPixel] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((val + this._paethPredictor(pp, pr, prp)), 8);\n        }\n    };\n    _PngDecoder.prototype._paethPredictor = function (a, b, c) {\n        var p = a + b - c;\n        var pa = Math.abs(p - a);\n        var pb = Math.abs(p - b);\n        var pc = Math.abs(p - c);\n        if ((pa <= pb) && (pa <= pc)) {\n            return a;\n        }\n        else if (pb <= pc) {\n            return b;\n        }\n        else {\n            return c;\n        }\n    };\n    _PngDecoder.prototype._processPixels = function (data, x, step, y, width) {\n        var sourceX = 0;\n        var destX = 0;\n        var size = 0;\n        var pixel = this._getPixel(data);\n        if (this._header._colorType === 0 || this._header._colorType === 3 || this._header._colorType === 4) {\n            size = 1;\n        }\n        else if (this._header._colorType === 2 || this._header._colorType === 6) {\n            size = 3;\n        }\n        if (this._decodedImageData && this._decodedImageData.length > 0) {\n            destX = x;\n            var depth = (this._header._bitDepth === 16) ? 8 : this._header._bitDepth;\n            var yStep = Math.floor((size * width * depth + 7) / 8);\n            for (sourceX = 0; sourceX < width; sourceX++) {\n                this._decodedImageData = this._setPixel(this._decodedImageData, pixel, this._inputBands * sourceX, size, destX, y, this._header._bitDepth, yStep);\n                destX += step;\n            }\n        }\n        var shades = (this._header._colorType & 4) !== 0 || this._shades;\n        if (shades) {\n            if ((this._header._colorType & 4) !== 0) {\n                if (this._header._bitDepth === 16) {\n                    for (var i = 0; i < width; ++i) {\n                        var temp = i * this._inputBands + size;\n                        var unsigned = _toUnsigned(pixel[Number.parseInt(temp.toString(), 10)], 32);\n                        pixel[Number.parseInt(temp.toString(), 10)] = _toSigned32(unsigned >> 8);\n                    }\n                }\n                var yStep = width;\n                destX = x;\n                for (sourceX = 0; sourceX < width; sourceX++) {\n                    this._maskData = this._setPixel(this._maskData, pixel, this._inputBands * sourceX + size, 1, destX, y, 8, yStep);\n                    destX += step;\n                }\n            }\n            else {\n                var yStep = width;\n                var dt = [0];\n                destX = x;\n                for (sourceX = 0; sourceX < width; sourceX++) {\n                    var index = pixel[Number.parseInt(sourceX.toString(), 10)];\n                    if (index < this._alpha.length) {\n                        dt[0] = this._alpha[Number.parseInt(index.toString(), 10)];\n                    }\n                    else {\n                        dt[0] = 255;\n                    }\n                    this._maskData = this._setPixel(this._maskData, dt, 0, 1, destX, y, 8, yStep);\n                    destX += step;\n                }\n            }\n        }\n    };\n    _PngDecoder.prototype._getPixel = function (data) {\n        if (this._header._bitDepth === 8) {\n            var pixel = Array(data.length).fill(0);\n            for (var i = 0; i < pixel.length; ++i) {\n                pixel[Number.parseInt(i.toString(), 10)] = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            }\n            return pixel;\n        }\n        else if (this._header._bitDepth === 16) {\n            var pixel = Array(Math.floor(data.length / 2)).fill(0);\n            for (var i = 0; i < pixel.length; ++i) {\n                pixel[Number.parseInt(i.toString(), 10)] = ((data[i * 2] & 0xff) << 8) + (data[i * 2 + 1] & 0xff);\n            }\n            return pixel;\n        }\n        else {\n            var pixel = Array(Math.floor((data.length * 8) / this._header._bitDepth)).fill(0);\n            var index = 0;\n            var p = Math.floor(8 / this._header._bitDepth);\n            var mask = (1 << this._header._bitDepth) - 1;\n            for (var n = 0; n < data.length; ++n) {\n                for (var i = p - 1; i >= 0; --i) {\n                    var hb = this._header._bitDepth * i;\n                    var d = data[Number.parseInt(n.toString(), 10)];\n                    pixel[index++] = ((hb < 1) ? d : _toSigned32(_toUnsigned(d, 32) >> hb)) & mask;\n                }\n            }\n            return pixel;\n        }\n    };\n    _PngDecoder.prototype._setPixel = function (imageData, data, offset, size, x, y, bitDepth, bpr) {\n        if (bitDepth === 8) {\n            var position = bpr * y + size * x;\n            for (var i = 0; i < size; ++i) {\n                imageData[position + i] = _toUnsigned(data[i + offset], 8);\n            }\n        }\n        else if (bitDepth === 16) {\n            var position = bpr * y + size * x;\n            for (var i = 0; i < size; ++i) {\n                imageData[position + i] = _toUnsigned((data[i + offset] >> 8), 8);\n            }\n        }\n        else {\n            var position = Math.floor((bpr * y + x) / (8 / bitDepth));\n            var t = data[Number.parseInt(offset.toString(), 10)]\n                << Number.parseInt((8 - bitDepth * (x % (8 / bitDepth)) - bitDepth).toString(), 10);\n            imageData[Number.parseInt(position.toString(), 10)] = imageData[Number.parseInt(position.toString(), 10)] | _toUnsigned(t, 8);\n        }\n        return imageData;\n    };\n    _PngDecoder.prototype._getImageDictionary = function () {\n        var data = [];\n        this._imageStream = new _PdfStream(data, new _PdfDictionary());\n        this._imageStream.isImageStream = true;\n        var decodedString = '';\n        for (var i = 0; i < this._decodedImageData.length; i++) {\n            decodedString += String.fromCharCode(this._decodedImageData[Number.parseInt(i.toString(), 10)]);\n        }\n        this._imageStream.data = [decodedString];\n        this._imageStream._isCompress = this._isDecode && this._ideateDecode;\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', new _PdfName('XObject'));\n        dictionary.set('Subtype', new _PdfName('Image'));\n        dictionary.set('Width', this._width);\n        dictionary.set('Height', this._height);\n        if (this._bitsPerComponent === 16) {\n            dictionary.set('BitsPerComponent', 8);\n        }\n        else {\n            dictionary.set('BitsPerComponent', this._bitsPerComponent);\n        }\n        if (!this._isDecode || !this._ideateDecode) {\n            dictionary.set('Filter', new _PdfName('FlateDecode'));\n        }\n        if ((this._header._colorType & 2) === 0) {\n            dictionary.set('ColorSpace', _PdfName.get('DeviceGray'));\n        }\n        else {\n            dictionary.set('ColorSpace', _PdfName.get('DeviceRGB'));\n        }\n        if (!this._isDecode || this._shades && !this._ideateDecode) {\n            dictionary.set('DecodeParms', this._getDecodeParams());\n        }\n        this._imageStream.dictionary = dictionary;\n        this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n        for (var i = 0; i < this._imageStream.data[0].length; i++) {\n            this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n        }\n        this._imageStream.end = this._imageStream.bytes.length;\n        this._imageStream.dictionary._updated = true;\n        this._setMask();\n        return this._imageStream;\n    };\n    _PngDecoder.prototype._setMask = function () {\n        if (this._maskData && this._maskData.length > 0) {\n            this._maskStream = new _PdfStream(this._maskData, new _PdfDictionary());\n            this._maskStream._isCompress = this._isDecode && this._ideateDecode;\n            var dictionary = new _PdfDictionary();\n            dictionary.set('Type', new _PdfName('XObject'));\n            dictionary.set('Subtype', new _PdfName('Image'));\n            dictionary.set('Width', this._width);\n            dictionary.set('Height', this._height);\n            if (this._bitsPerComponent === 16) {\n                dictionary.set('BitsPerComponent', 8);\n            }\n            else {\n                dictionary.set('BitsPerComponent', this._bitsPerComponent);\n            }\n            dictionary.set('ColorSpace', _PdfName.get('DeviceGray'));\n            this._maskStream.dictionary = dictionary;\n            this._maskStream.bytes = new Uint8Array(this._maskData);\n            this._maskStream.end = this._maskStream.bytes.length;\n            this._maskStream.dictionary._updated = true;\n        }\n    };\n    _PngDecoder.prototype._getDecodeParams = function () {\n        var decodeParams = new _PdfDictionary();\n        decodeParams.set('Columns', this._width);\n        decodeParams.set('Colors', this._colors);\n        decodeParams.set('Predictor', 15);\n        decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n        return decodeParams;\n    };\n    _PngDecoder.prototype._getChunkType = function (chunk) {\n        switch (chunk) {\n            case 'IHDR':\n                return _PngChunkTypes.iHDR;\n            case 'PLTE':\n                return _PngChunkTypes.pLTE;\n            case 'IDAT':\n                return _PngChunkTypes.iDAT;\n            case 'IEND':\n                return _PngChunkTypes.iEND;\n            case 'bKGD':\n                return _PngChunkTypes.bKGD;\n            case 'cHRM':\n                return _PngChunkTypes.cHRM;\n            case 'gAMA':\n                return _PngChunkTypes.gAMA;\n            case 'hIST':\n                return _PngChunkTypes.hIST;\n            case 'pHYs':\n                return _PngChunkTypes.pHYs;\n            case 'sBIT':\n                return _PngChunkTypes.sBIT;\n            case 'tEXt':\n                return _PngChunkTypes.tEXt;\n            case 'tIME':\n                return _PngChunkTypes.tIME;\n            case 'tRNS':\n                return _PngChunkTypes.tRNS;\n            case 'zTXt':\n                return _PngChunkTypes.zTXt;\n            case 'sRGB':\n                return _PngChunkTypes.sRGB;\n            case 'iCCP':\n                return _PngChunkTypes.iCCP;\n            case 'iTXt':\n                return _PngChunkTypes.iTXt;\n            case 'Unknown':\n                return _PngChunkTypes.unknown;\n            default:\n                return null;\n        }\n    };\n    _PngDecoder.prototype._getFilterType = function (type) {\n        switch (type) {\n            case 1:\n                return _PngFilterTypes.sub;\n            case 2:\n                return _PngFilterTypes.up;\n            case 3:\n                return _PngFilterTypes.average;\n            case 4:\n                return _PngFilterTypes.paeth;\n            default:\n                return _PngFilterTypes.none;\n        }\n    };\n    return _PngDecoder;\n}(_ImageDecoder));\nexport { _PngDecoder };\nvar _PngHeader = /** @class */ (function () {\n    function _PngHeader() {\n        this._width = 0;\n        this._height = 0;\n        this._colorType = 0;\n        this._compression = 0;\n        this._bitDepth = 0;\n        this._interlace = 0;\n        this._filter = _PngFilterTypes.none;\n    }\n    return _PngHeader;\n}());\nvar _PngChunkTypes;\n(function (_PngChunkTypes) {\n    _PngChunkTypes[_PngChunkTypes[\"iHDR\"] = 0] = \"iHDR\";\n    _PngChunkTypes[_PngChunkTypes[\"pLTE\"] = 1] = \"pLTE\";\n    _PngChunkTypes[_PngChunkTypes[\"iDAT\"] = 2] = \"iDAT\";\n    _PngChunkTypes[_PngChunkTypes[\"iEND\"] = 3] = \"iEND\";\n    _PngChunkTypes[_PngChunkTypes[\"bKGD\"] = 4] = \"bKGD\";\n    _PngChunkTypes[_PngChunkTypes[\"cHRM\"] = 5] = \"cHRM\";\n    _PngChunkTypes[_PngChunkTypes[\"gAMA\"] = 6] = \"gAMA\";\n    _PngChunkTypes[_PngChunkTypes[\"hIST\"] = 7] = \"hIST\";\n    _PngChunkTypes[_PngChunkTypes[\"pHYs\"] = 8] = \"pHYs\";\n    _PngChunkTypes[_PngChunkTypes[\"sBIT\"] = 9] = \"sBIT\";\n    _PngChunkTypes[_PngChunkTypes[\"tEXt\"] = 10] = \"tEXt\";\n    _PngChunkTypes[_PngChunkTypes[\"tIME\"] = 11] = \"tIME\";\n    _PngChunkTypes[_PngChunkTypes[\"tRNS\"] = 12] = \"tRNS\";\n    _PngChunkTypes[_PngChunkTypes[\"zTXt\"] = 13] = \"zTXt\";\n    _PngChunkTypes[_PngChunkTypes[\"sRGB\"] = 14] = \"sRGB\";\n    _PngChunkTypes[_PngChunkTypes[\"iCCP\"] = 15] = \"iCCP\";\n    _PngChunkTypes[_PngChunkTypes[\"iTXt\"] = 16] = \"iTXt\";\n    _PngChunkTypes[_PngChunkTypes[\"unknown\"] = 17] = \"unknown\";\n})(_PngChunkTypes || (_PngChunkTypes = {}));\nvar _PngFilterTypes;\n(function (_PngFilterTypes) {\n    _PngFilterTypes[_PngFilterTypes[\"none\"] = 0] = \"none\";\n    _PngFilterTypes[_PngFilterTypes[\"sub\"] = 1] = \"sub\";\n    _PngFilterTypes[_PngFilterTypes[\"up\"] = 2] = \"up\";\n    _PngFilterTypes[_PngFilterTypes[\"average\"] = 3] = \"average\";\n    _PngFilterTypes[_PngFilterTypes[\"paeth\"] = 4] = \"paeth\";\n})(_PngFilterTypes || (_PngFilterTypes = {}));\n","import { _toUnsigned } from './../utils';\nvar _InBuffer = /** @class */ (function () {\n    function _InBuffer() {\n        this._bBuffer = 0;\n        this._bInBuffer = 0;\n        this._begin = 0;\n        this._end = 0;\n    }\n    Object.defineProperty(_InBuffer.prototype, \"_bytes\", {\n        get: function () {\n            return (this._end - this._begin) + Math.floor(this._bInBuffer / 8);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _InBuffer.prototype._needsInput = function () {\n        return this._begin === this._end;\n    };\n    _InBuffer.prototype._availableBits = function (count) {\n        if (this._bInBuffer < count) {\n            if (this._needsInput()) {\n                return false;\n            }\n            this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n            this._bInBuffer += 8;\n            if (this._bInBuffer < count) {\n                if (this._needsInput()) {\n                    return false;\n                }\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        return true;\n    };\n    _InBuffer.prototype._load16Bits = function () {\n        if (this._bInBuffer < 8) {\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        else if (this._bInBuffer < 16) {\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        return this._bBuffer;\n    };\n    _InBuffer.prototype._getBitMask = function (count) {\n        return (_toUnsigned(1, 32) << count) - 1;\n    };\n    _InBuffer.prototype._getBits = function (count) {\n        if (!this._availableBits(count)) {\n            return -1;\n        }\n        var result = this._bBuffer & this._getBitMask(count);\n        this._bBuffer >>= count;\n        this._bInBuffer -= count;\n        return result;\n    };\n    _InBuffer.prototype._copyTo = function (output, offset, length) {\n        var bitBuffer = 0;\n        while (this._bInBuffer > 0 && length > 0) {\n            output[offset++] = _toUnsigned(this._bBuffer, 8);\n            this._bBuffer >>= 8;\n            this._bInBuffer -= 8;\n            length--;\n            bitBuffer++;\n        }\n        if (length === 0) {\n            return bitBuffer;\n        }\n        var avail = this._end - this._begin;\n        if (length > avail) {\n            length = avail;\n        }\n        for (var i = 0; i < length && i + this._begin < this._buffer.length && i + offset < output.length; i++) {\n            output[offset + i] = this._buffer[this._begin + i];\n        }\n        this._begin += length;\n        return bitBuffer + length;\n    };\n    _InBuffer.prototype._setInput = function (buffer, offset, length) {\n        this._buffer = buffer;\n        this._begin = offset;\n        this._end = offset + length;\n    };\n    _InBuffer.prototype._skipBits = function (n) {\n        this._bBuffer >>= n;\n        this._bInBuffer -= n;\n    };\n    _InBuffer.prototype._skipByteBoundary = function () {\n        this._bBuffer >>= this._bInBuffer % 8;\n        this._bInBuffer = this._bInBuffer - (this._bInBuffer % 8);\n    };\n    return _InBuffer;\n}());\nexport { _InBuffer };\n","import { _toUnsigned, _toSigned16 } from './../utils';\nvar _HuffmanTree = /** @class */ (function () {\n    function _HuffmanTree() {\n    }\n    _HuffmanTree.prototype._load = function (code) {\n        this._clArray = code;\n        this._initialize();\n    };\n    _HuffmanTree.prototype._loadTree = function (isLengthTree) {\n        this._clArray = isLengthTree ? this._getLengthTree() : this._getDepthTree();\n        this._initialize();\n    };\n    _HuffmanTree.prototype._initialize = function () {\n        if (this._clArray.length === _HuffmanTree._maxLengthTree) {\n            this._tBits = 9;\n        }\n        else {\n            this._tBits = 7;\n        }\n        this._tMask = (1 << this._tBits) - 1;\n        this._createTable();\n    };\n    _HuffmanTree.prototype._getLengthTree = function () {\n        var lTree = Array(_HuffmanTree._maxLengthTree).fill(0);\n        for (var i = 0; i <= 143; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(8, 8);\n        }\n        for (var i = 144; i <= 255; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(9, 8);\n        }\n        for (var i = 256; i <= 279; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(7, 8);\n        }\n        for (var i = 280; i <= 287; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(8, 8);\n        }\n        return lTree;\n    };\n    _HuffmanTree.prototype._getDepthTree = function () {\n        return Array(_HuffmanTree._maxDepthTree).fill(5);\n    };\n    _HuffmanTree.prototype._calculateHashCode = function () {\n        var bit = Array(17).fill(0);\n        for (var i = 0; i < this._clArray.length; i++) {\n            bit[this._clArray[Number.parseInt(i.toString(), 10)]]++;\n        }\n        bit[0] = 0;\n        var next = Array(17).fill(0);\n        var temp = 0;\n        for (var bits = 1; bits <= 16; bits++) {\n            temp = (temp + bit[bits - 1]) << 1;\n            next[Number.parseInt(bits.toString(), 10)] = temp;\n        }\n        var code = Array(_HuffmanTree._maxLengthTree).fill(0);\n        for (var i = 0; i < this._clArray.length; i++) {\n            var len = this._clArray[Number.parseInt(i.toString(), 10)];\n            if (len > 0) {\n                code[Number.parseInt(i.toString(), 10)] = this._bitReverse(next[Number.parseInt(len.toString(), 10)], len);\n                next[Number.parseInt(len.toString(), 10)]++;\n            }\n        }\n        return code;\n    };\n    _HuffmanTree.prototype._bitReverse = function (code, length) {\n        var newcode = 0;\n        do {\n            newcode |= code & 1;\n            newcode <<= 1;\n            code >>= 1;\n        } while (--length > 0);\n        return newcode >> 1;\n    };\n    _HuffmanTree.prototype._createTable = function () {\n        var codeArray = this._calculateHashCode();\n        this._table = Array(1 << this._tBits).fill(0);\n        this._left = Array(2 * this._clArray.length).fill(0);\n        this._right = Array(2 * this._clArray.length).fill(0);\n        var avail = _toSigned16(this._clArray.length);\n        for (var ch = 0; ch < this._clArray.length; ch++) {\n            var len = this._clArray[Number.parseInt(ch.toString(), 10)];\n            if (len > 0) {\n                var start = codeArray[Number.parseInt(ch.toString(), 10)];\n                if (len <= this._tBits) {\n                    var i = 1 << len;\n                    if (start >= i) {\n                        throw new Error('Invalid Data.');\n                    }\n                    var l = 1 << (this._tBits - len);\n                    for (var j = 0; j < l; j++) {\n                        this._table[Number.parseInt(start.toString(), 10)] = _toSigned16(ch);\n                        start += i;\n                    }\n                }\n                else {\n                    var ofBits = len - this._tBits;\n                    var bitMask = 1 << this._tBits;\n                    var index = start & ((1 << this._tBits) - 1);\n                    var array = this._table;\n                    do {\n                        var value = _toSigned16(array[Number.parseInt(index.toString(), 10)]);\n                        if (value === 0) {\n                            array[Number.parseInt(index.toString(), 10)] = _toSigned16(-avail);\n                            value = _toSigned16(-avail);\n                            avail++;\n                        }\n                        if (value > 0) {\n                            throw new Error('Invalid Data.');\n                        }\n                        if ((start & bitMask) === 0) {\n                            array = this._left;\n                        }\n                        else {\n                            array = this._right;\n                        }\n                        index = -value;\n                        bitMask <<= 1;\n                        ofBits--;\n                    } while (ofBits !== 0);\n                    array[Number.parseInt(index.toString(), 10)] = _toSigned16(ch);\n                }\n            }\n        }\n    };\n    _HuffmanTree.prototype._getNextSymbol = function (input) {\n        var bitBuffer = input._load16Bits();\n        if (input._bInBuffer === 0) {\n            return -1;\n        }\n        var symbol = this._table[bitBuffer & this._tMask];\n        if (symbol < 0) {\n            var mask = _toUnsigned((1 << this._tBits), 32);\n            do {\n                symbol = -symbol;\n                if ((bitBuffer & mask) === 0) {\n                    symbol = this._left[Number.parseInt(symbol.toString(), 10)];\n                }\n                else {\n                    symbol = this._right[Number.parseInt(symbol.toString(), 10)];\n                }\n                mask <<= 1;\n            } while (symbol < 0);\n        }\n        var codeLength = this._clArray[Number.parseInt(symbol.toString(), 10)];\n        if (codeLength <= 0) {\n            throw new Error('Invalid Data.');\n        }\n        if (codeLength > input._bInBuffer) {\n            return -1;\n        }\n        input._skipBits(codeLength);\n        return symbol;\n    };\n    _HuffmanTree._maxLengthTree = 288;\n    _HuffmanTree._maxDepthTree = 32;\n    _HuffmanTree._nCLength = 19;\n    return _HuffmanTree;\n}());\nexport { _HuffmanTree };\n","import { _InflaterState, _BlockType } from './enum';\nimport { _DecompressedOutput } from './decompressed-output';\nimport { _InBuffer } from './in-buffer';\nimport { _HuffmanTree } from './huffman-tree';\nimport { _toUnsigned, _copyRange } from './../utils';\n/* eslint-disable */\nvar _Inflater = /** @class */ (function () {\n    function _Inflater() {\n        this._extraLengthBits = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];\n        this._staticDistanceTreeTable = [0x00, 0x10, 0x08, 0x18, 0x04, 0x14, 0x0c, 0x1c, 0x02, 0x12, 0x0a, 0x1a, 0x06, 0x16, 0x0e, 0x1e,\n            0x01, 0x11, 0x09, 0x19, 0x05, 0x15, 0x0d, 0x1d, 0x03, 0x13, 0x0b, 0x1b, 0x07, 0x17, 0x0f, 0x1f];\n        this._lengthBase = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115,\n            131, 163, 195, 227, 258];\n        this._distanceBasePosition = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049,\n            3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0];\n        this._codeOrder = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n        this._bfinal = 0;\n        this._bLength = 0;\n        this._blBuffer = [0, 0, 0, 0];\n        this._blockType = _BlockType.unCompressedType;\n        this._caSize = 0;\n        this._clCodeCount = 0;\n        this._extraBits = 0;\n        this._lengthCode = 0;\n        this._length = 0;\n        this._llCodeCount = 0;\n        this._output = new _DecompressedOutput();\n        this._input = new _InBuffer();\n        this._loopCounter = 0;\n        this._codeList = Array(_HuffmanTree._maxLengthTree + _HuffmanTree._maxDepthTree).fill(0);\n        this._cltcl = Array(_HuffmanTree._nCLength).fill(0);\n        this._inflaterState = _InflaterState.readingBFinal;\n    }\n    Object.defineProperty(_Inflater.prototype, \"_finished\", {\n        get: function () {\n            return this._inflaterState === _InflaterState.done || this._inflaterState === _InflaterState.vFooter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _Inflater.prototype._setInput = function (inputBytes, offset, length) {\n        this._input._setInput(inputBytes, offset, length);\n    };\n    _Inflater.prototype._inflate = function (bytes, offset, length) {\n        var i = 0;\n        do {\n            var result = this._output._copyTo(bytes, offset, length);\n            var copied = result.count;\n            bytes = result.data;\n            if (copied > 0) {\n                offset += copied;\n                i += copied;\n                length -= copied;\n            }\n            if (length === 0) {\n                break;\n            }\n        } while (!this._finished && this._decode());\n        return { 'count': i, 'data': bytes };\n    };\n    _Inflater.prototype._decode = function () {\n        var eob = false;\n        var result = false;\n        if (this._finished) {\n            return true;\n        }\n        if (this._inflaterState === _InflaterState.readingBFinal) {\n            if (!this._input._availableBits(1)) {\n                return false;\n            }\n            this._bfinal = this._input._getBits(1);\n            this._inflaterState = _InflaterState.readingBType;\n        }\n        if (this._inflaterState === _InflaterState.readingBType) {\n            if (!this._input._availableBits(2)) {\n                this._inflaterState = _InflaterState.readingBType;\n                return false;\n            }\n            this._blockType = this._getBlockType(this._input._getBits(2));\n            if (this._blockType === _BlockType.dynamicType) {\n                this._inflaterState = _InflaterState.readingNlCodes;\n            }\n            else if (this._blockType === _BlockType.staticType) {\n                this._llTree = new _HuffmanTree();\n                this._llTree._loadTree(true);\n                this._distanceTree = new _HuffmanTree();\n                this._distanceTree._loadTree(false);\n                this._inflaterState = _InflaterState.decodeTop;\n            }\n            else if (this._blockType === _BlockType.unCompressedType) {\n                this._inflaterState = _InflaterState.unCompressedAligning;\n            }\n        }\n        if (this._blockType === _BlockType.dynamicType) {\n            if (this._getInflaterStateValue(this._inflaterState) < this._getInflaterStateValue(_InflaterState.decodeTop)) {\n                result = this._decodeDynamicBlockHeader();\n            }\n            else {\n                var returnedValue = this._decodeBlock(eob);\n                result = returnedValue.result;\n                eob = returnedValue.eob;\n                this._output = returnedValue.output;\n            }\n        }\n        else if (this._blockType === _BlockType.staticType) {\n            var returnedValue = this._decodeBlock(eob);\n            result = returnedValue.result;\n            eob = returnedValue.eob;\n            this._output = returnedValue.output;\n        }\n        else if (this._blockType === _BlockType.unCompressedType) {\n            var returnedValue = this._decodeUncompressedBlock(eob);\n            result = returnedValue.result;\n            eob = returnedValue.eob;\n            this._output = returnedValue.output;\n        }\n        if (eob && (this._bfinal !== 0)) {\n            this._inflaterState = _InflaterState.done;\n        }\n        return result;\n    };\n    _Inflater.prototype._decodeUncompressedBlock = function (endBlock) {\n        endBlock = false;\n        while (true) {\n            switch (this._inflaterState) {\n                case _InflaterState.unCompressedAligning:\n                    this._input._skipByteBoundary();\n                    this._inflaterState = _InflaterState.unCompressedByte1;\n                    if (!this._unCompressedByte()) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.unCompressedByte1:\n                case _InflaterState.unCompressedByte2:\n                case _InflaterState.unCompressedByte3:\n                case _InflaterState.unCompressedByte4:\n                    if (!this._unCompressedByte()) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.decodeUnCompressedBytes:\n                    this._bLength -= this._output._copyFrom(this._input, this._bLength);\n                    if (this._bLength === 0) {\n                        this._inflaterState = _InflaterState.readingBFinal;\n                        endBlock = true;\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    if (this._output._unusedBytes === 0) {\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    return { 'result': false, 'eob': endBlock, 'output': this._output };\n                default:\n                    break;\n            }\n        }\n    };\n    _Inflater.prototype._unCompressedByte = function () {\n        var bits = this._input._getBits(8);\n        if (bits < 0) {\n            return false;\n        }\n        var inflaterstate = this._getInflaterStateValue(this._inflaterState);\n        var unCompressedByte = this._getInflaterStateValue(_InflaterState.unCompressedByte1);\n        this._blBuffer[inflaterstate - unCompressedByte] = _toUnsigned(bits, 8);\n        if (this._inflaterState === _InflaterState.unCompressedByte4) {\n            this._bLength = this._blBuffer[0] + (this._blBuffer[1]) * 256;\n            if (_toUnsigned(this._bLength, 16) !== _toUnsigned((~(this._blBuffer[2] + (this._blBuffer[3]) * 256)), 16)) {\n                throw new Error('Ivalid block length.');\n            }\n        }\n        this._inflaterState = this._getInflaterState(this._getInflaterStateValue(this._inflaterState) + 1);\n        return true;\n    };\n    _Inflater.prototype._decodeBlock = function (endBlock) {\n        endBlock = false;\n        var fb = this._output._unusedBytes;\n        while (fb > 258) {\n            var symbol = void 0;\n            var dCodeResult = void 0;\n            var fLengthResult = void 0;\n            var inLengthResult = void 0;\n            switch (this._inflaterState) {\n                case _InflaterState.decodeTop:\n                    symbol = this._llTree._getNextSymbol(this._input);\n                    if (symbol < 0) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    if (symbol < 256) {\n                        this._output._write(_toUnsigned(symbol, 8));\n                        --fb;\n                    }\n                    else if (symbol === 256) {\n                        endBlock = true;\n                        this._inflaterState = _InflaterState.readingBFinal;\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    else {\n                        symbol -= 257;\n                        if (symbol < 8) {\n                            symbol += 3;\n                            this._extraBits = 0;\n                        }\n                        else if (symbol === 28) {\n                            symbol = 258;\n                            this._extraBits = 0;\n                        }\n                        else {\n                            if (symbol < 0 || symbol >= this._extraLengthBits.length) {\n                                throw new Error('Invalid data.');\n                            }\n                            this._extraBits = this._extraLengthBits[Number.parseInt(symbol.toString(), 10)];\n                        }\n                        this._length = symbol;\n                        inLengthResult = this._inLength(fb);\n                        fb = inLengthResult.fb;\n                        if (!inLengthResult.value) {\n                            return { 'result': false, 'eob': endBlock, 'output': this._output };\n                        }\n                    }\n                    break;\n                case _InflaterState.iLength:\n                    inLengthResult = this._inLength(fb);\n                    fb = inLengthResult.fb;\n                    if (!inLengthResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.fLength:\n                    fLengthResult = this._fLength(fb);\n                    fb = fLengthResult.fb;\n                    if (!fLengthResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.dCode:\n                    dCodeResult = this._dcode(fb);\n                    fb = dCodeResult.fb;\n                    if (!dCodeResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        return { 'result': true, 'eob': endBlock, 'output': this._output };\n    };\n    _Inflater.prototype._inLength = function (fb) {\n        if (this._extraBits > 0) {\n            this._inflaterState = _InflaterState.iLength;\n            var bits = this._input._getBits(this._extraBits);\n            if (bits < 0) {\n                return { 'value': false, 'fb': fb };\n            }\n            if (this._length < 0 || this._length >= this._lengthBase.length) {\n                throw new Error('Invalid data.');\n            }\n            this._length = this._lengthBase[this._length] + bits;\n        }\n        this._inflaterState = _InflaterState.fLength;\n        var fLengthResult = this._fLength(fb);\n        fb = fLengthResult.fb;\n        if (!fLengthResult.value) {\n            return { 'value': false, 'fb': fb };\n        }\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._fLength = function (fb) {\n        if (this._blockType === _BlockType.dynamicType) {\n            this._distanceCode = this._distanceTree._getNextSymbol(this._input);\n        }\n        else {\n            this._distanceCode = this._input._getBits(5);\n            if (this._distanceCode >= 0) {\n                this._distanceCode = this._staticDistanceTreeTable[this._distanceCode];\n            }\n        }\n        if (this._distanceCode < 0) {\n            return { 'value': false, 'fb': fb };\n        }\n        this._inflaterState = _InflaterState.dCode;\n        var dCodeResult = this._dcode(fb);\n        fb = dCodeResult.fb;\n        if (!dCodeResult.value) {\n            return { 'value': false, 'fb': fb };\n        }\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._dcode = function (fb) {\n        var offset;\n        if (this._distanceCode > 3) {\n            this._extraBits = (this._distanceCode - 2) >> 1;\n            var bits = this._input._getBits(this._extraBits);\n            if (bits < 0) {\n                return { 'value': false, 'fb': fb };\n            }\n            offset = this._distanceBasePosition[this._distanceCode] + bits;\n        }\n        else {\n            offset = this._distanceCode + 1;\n        }\n        this._output._writeLD(this._length, offset);\n        fb -= this._length;\n        this._inflaterState = _InflaterState.decodeTop;\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._decodeDynamicBlockHeader = function () {\n        switch (this._inflaterState) {\n            case _InflaterState.readingNlCodes:\n                this._llCodeCount = this._input._getBits(5);\n                if (this._llCodeCount < 0) {\n                    return false;\n                }\n                this._llCodeCount += 257;\n                this._inflaterState = _InflaterState.readingNdCodes;\n                if (!this._readingNDCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingNdCodes:\n                if (!this._readingNDCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingCodes:\n                if (!this._readingCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingClCodes:\n                if (!this._readingCLCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingTcBefore:\n            case _InflaterState.readingTcAfter:\n                if (!this._readingTCBefore()) {\n                    return false;\n                }\n                break;\n            default:\n                break;\n        }\n        var literalTreeCodeLength = Array(_HuffmanTree._maxLengthTree).fill(0);\n        _copyRange(literalTreeCodeLength, 0, this._codeList, 0, this._llCodeCount);\n        var distanceTreeCodeLength = Array(_HuffmanTree._maxDepthTree).fill(0);\n        _copyRange(distanceTreeCodeLength, 0, this._codeList, this._llCodeCount, this._llCodeCount + this._dCodeCount);\n        this._llTree = new _HuffmanTree();\n        this._llTree._load(literalTreeCodeLength);\n        this._distanceTree = new _HuffmanTree();\n        this._distanceTree._load(distanceTreeCodeLength);\n        this._inflaterState = _InflaterState.decodeTop;\n        return true;\n    };\n    _Inflater.prototype._readingNDCodes = function () {\n        this._dCodeCount = this._input._getBits(5);\n        if (this._dCodeCount < 0) {\n            return false;\n        }\n        this._dCodeCount += 1;\n        this._inflaterState = _InflaterState.readingCodes;\n        if (!this._readingCodes()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingCodes = function () {\n        this._clCodeCount = this._input._getBits(4);\n        if (this._clCodeCount < 0) {\n            return false;\n        }\n        this._clCodeCount += 4;\n        this._loopCounter = 0;\n        this._inflaterState = _InflaterState.readingClCodes;\n        if (!this._readingCLCodes()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingCLCodes = function () {\n        while (this._loopCounter < this._clCodeCount) {\n            var bits = this._input._getBits(3);\n            if (bits < 0) {\n                return false;\n            }\n            this._cltcl[this._codeOrder[this._loopCounter]] = _toUnsigned(bits, 8);\n            ++this._loopCounter;\n        }\n        for (var i = this._clCodeCount; i < this._codeOrder.length; i++) {\n            this._cltcl[this._codeOrder[Number.parseInt(i.toString(), 10)]] = 0;\n        }\n        this._clTree = new _HuffmanTree();\n        this._clTree._load(this._cltcl);\n        this._caSize = this._llCodeCount + this._dCodeCount;\n        this._loopCounter = 0;\n        this._inflaterState = _InflaterState.readingTcBefore;\n        if (!this._readingTCBefore()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingTCBefore = function () {\n        while (this._loopCounter < this._caSize) {\n            if (this._inflaterState === _InflaterState.readingTcBefore) {\n                this._lengthCode = this._clTree._getNextSymbol(this._input);\n                if (this._lengthCode < 0) {\n                    return false;\n                }\n            }\n            if (this._lengthCode <= 15) {\n                this._codeList[this._loopCounter++] = _toUnsigned(this._lengthCode, 8);\n            }\n            else {\n                if (!this._input._availableBits(7)) {\n                    this._inflaterState = _InflaterState.readingTcAfter;\n                    return false;\n                }\n                var repeatCount = void 0;\n                if (this._lengthCode === 16) {\n                    if (this._loopCounter === 0) {\n                        throw new Error('Invalid data.');\n                    }\n                    var previousCode = _toUnsigned(this._codeList[this._loopCounter - 1], 8);\n                    repeatCount = this._input._getBits(2) + 3;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = previousCode;\n                    }\n                }\n                else if (this._lengthCode === 17) {\n                    repeatCount = this._input._getBits(3) + 3;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = 0;\n                    }\n                }\n                else {\n                    repeatCount = this._input._getBits(7) + 11;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = 0;\n                    }\n                }\n            }\n            this._inflaterState = _InflaterState.readingTcBefore;\n        }\n        return true;\n    };\n    _Inflater.prototype._getBlockType = function (type) {\n        if (type === _BlockType.unCompressedType) {\n            return _BlockType.unCompressedType;\n        }\n        else if (type === _BlockType.staticType) {\n            return _BlockType.staticType;\n        }\n        else {\n            return _BlockType.dynamicType;\n        }\n    };\n    _Inflater.prototype._getInflaterState = function (value) {\n        switch (value) {\n            case 0:\n                return _InflaterState.readingHeader;\n            case 2:\n                return _InflaterState.readingBFinal;\n            case 3:\n                return _InflaterState.readingBType;\n            case 4:\n                return _InflaterState.readingNlCodes;\n            case 5:\n                return _InflaterState.readingNdCodes;\n            case 6:\n                return _InflaterState.readingCodes;\n            case 7:\n                return _InflaterState.readingClCodes;\n            case 8:\n                return _InflaterState.readingTcBefore;\n            case 9:\n                return _InflaterState.readingTcAfter;\n            case 10:\n                return _InflaterState.decodeTop;\n            case 11:\n                return _InflaterState.iLength;\n            case 12:\n                return _InflaterState.fLength;\n            case 13:\n                return _InflaterState.dCode;\n            case 15:\n                return _InflaterState.unCompressedAligning;\n            case 16:\n                return _InflaterState.unCompressedByte1;\n            case 17:\n                return _InflaterState.unCompressedByte2;\n            case 18:\n                return _InflaterState.unCompressedByte3;\n            case 19:\n                return _InflaterState.unCompressedByte4;\n            case 20:\n                return _InflaterState.decodeUnCompressedBytes;\n            case 21:\n                return _InflaterState.srFooter;\n            case 22:\n                return _InflaterState.rFooter;\n            case 23:\n                return _InflaterState.vFooter;\n            case 24:\n                return _InflaterState.done;\n            default:\n                return _InflaterState.readingHeader;\n        }\n    };\n    _Inflater.prototype._getInflaterStateValue = function (state) {\n        switch (state) {\n            case _InflaterState.readingHeader:\n                return 0;\n            case _InflaterState.readingBFinal:\n                return 2;\n            case _InflaterState.readingBType:\n                return 3;\n            case _InflaterState.readingNlCodes:\n                return 4;\n            case _InflaterState.readingNdCodes:\n                return 5;\n            case _InflaterState.readingCodes:\n                return 6;\n            case _InflaterState.readingClCodes:\n                return 7;\n            case _InflaterState.readingTcBefore:\n                return 8;\n            case _InflaterState.readingTcAfter:\n                return 9;\n            case _InflaterState.decodeTop:\n                return 10;\n            case _InflaterState.iLength:\n                return 11;\n            case _InflaterState.fLength:\n                return 12;\n            case _InflaterState.dCode:\n                return 13;\n            case _InflaterState.unCompressedAligning:\n                return 15;\n            case _InflaterState.unCompressedByte1:\n                return 16;\n            case _InflaterState.unCompressedByte2:\n                return 17;\n            case _InflaterState.unCompressedByte3:\n                return 18;\n            case _InflaterState.unCompressedByte4:\n                return 19;\n            case _InflaterState.decodeUnCompressedBytes:\n                return 20;\n            case _InflaterState.srFooter:\n                return 21;\n            case _InflaterState.rFooter:\n                return 22;\n            case _InflaterState.vFooter:\n                return 23;\n            case _InflaterState.done:\n                return 24;\n            default:\n                return 0;\n        }\n    };\n    return _Inflater;\n}());\nexport { _Inflater };\n","import { _Inflater } from './inflater';\nvar _DeflateStream = /** @class */ (function () {\n    function _DeflateStream(data, offset, leaveOpen) {\n        this._offset = offset;\n        this._data = data;\n        this._leaveOpen = leaveOpen;\n        this._inflater = new _Inflater();\n        this._buffer = Array(8192).fill(0);\n    }\n    _DeflateStream.prototype._read = function (array, offset, count) {\n        var length;\n        var cOffset = offset;\n        var rCount = count;\n        while (true) { // eslint-disable-line\n            var inflateResult = this._inflater._inflate(array, cOffset, rCount);\n            length = inflateResult.count;\n            array = inflateResult.data;\n            cOffset += length;\n            rCount -= length;\n            if (rCount === 0) {\n                break;\n            }\n            if (this._inflater._finished) {\n                break;\n            }\n            var result = this._readBytes();\n            var bytes = result.count;\n            this._buffer = result.buffer;\n            if (bytes === 0) {\n                break;\n            }\n            this._inflater._setInput(this._buffer, 0, bytes);\n        }\n        return { count: count - rCount, data: array };\n    };\n    _DeflateStream.prototype._readBytes = function () {\n        if (this._offset >= this._data.length) {\n            return { buffer: [], count: 0 };\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < this._buffer.length && i + this._offset < this._data.length; i++) {\n                this._buffer[Number.parseInt(i.toString(), 10)] = this._data[this._offset + i];\n                count++;\n            }\n            this._offset += count;\n            return { buffer: this._buffer, count: count };\n        }\n    };\n    return _DeflateStream;\n}());\nexport { _DeflateStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary } from './pdf-primitives';\nimport { _byteArrayToHexString, _bytesToString } from './utils';\nvar _PdfBaseStream = /** @class */ (function () {\n    function _PdfBaseStream() {\n        this._isCompress = true;\n    }\n    _PdfBaseStream.prototype.getByte = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getBytes = function (length) {\n        return null;\n    };\n    Object.defineProperty(_PdfBaseStream.prototype, \"length\", {\n        get: function () {\n            throw new Error('Abstract getter `length` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isEmpty\", {\n        get: function () {\n            throw new Error('Abstract getter `isEmpty` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isDataLoaded\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfBaseStream.prototype.peekByte = function () {\n        var peekedByte = this.getByte();\n        if (peekedByte !== -1) {\n            this.offset--;\n        }\n        return peekedByte;\n    };\n    _PdfBaseStream.prototype.peekBytes = function (length) {\n        var bytes = this.getBytes(length);\n        this.offset -= bytes.length;\n        return bytes;\n    };\n    _PdfBaseStream.prototype.getUnsignedInteger16 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        if (b0 === -1 || b1 === -1) {\n            return -1;\n        }\n        return (b0 << 8) + b1;\n    };\n    _PdfBaseStream.prototype.getInt32 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        var b2 = this.getByte();\n        var b3 = this.getByte();\n        return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    };\n    _PdfBaseStream.prototype.getByteRange = function (begin, end) {\n        return null;\n    };\n    _PdfBaseStream.prototype.makeSubStream = function (start, length, dictionary) {\n        return null;\n    };\n    _PdfBaseStream.prototype.readBlock = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.reset = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.moveStart = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getString = function (isHex, bytes) {\n        if (isHex === void 0) { isHex = false; }\n        if (typeof bytes === 'undefined' || bytes === null) {\n            bytes = this.getBytes();\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            return _bytesToString(bytes);\n        }\n    };\n    _PdfBaseStream.prototype.skip = function (n) {\n        this.offset += n || 1;\n    };\n    _PdfBaseStream.prototype.getBaseStreams = function () {\n        return null;\n    };\n    return _PdfBaseStream;\n}());\nexport { _PdfBaseStream };\nvar _PdfStream = /** @class */ (function (_super) {\n    __extends(_PdfStream, _super);\n    function _PdfStream(arrayBuffer, dictionary, start, length) {\n        var _this = _super.call(this) || this;\n        _this.isImageStream = false;\n        _this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n        if (typeof start !== 'undefined') {\n            _this.start = start;\n        }\n        else {\n            _this.start = 0;\n        }\n        _this.position = _this.start;\n        _this.end = start + length || _this.bytes.length;\n        _this.dictionary = dictionary;\n        return _this;\n    }\n    Object.defineProperty(_PdfStream.prototype, \"position\", {\n        /**\n         * Gets the position of the stream.\n         *\n         * @returns {number} offset position.\n         */\n        get: function () {\n            return this.offset;\n        },\n        /**\n         * Sets the position of the stream.\n         *\n         * @param {number} value offset position.\n         */\n        set: function (value) {\n            this.offset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"length\", {\n        /**\n         * Gets the length of the stream (Read only).\n         *\n         * @returns {number} length.\n         */\n        get: function () {\n            return this.end - this.start;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"isEmpty\", {\n        /**\n         * Gets a value indicating whether the stream is empty (Read only).\n         *\n         * @returns {boolean} stream empty or not.\n         */\n        get: function () {\n            return this.length === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"data\", {\n        /**\n         * Gets the data of the stream.\n         *\n         * @returns {string[]} data of the stream.\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        /**\n         * Sets the data of the stream.\n         *\n         * @param {string[]} value data.\n         */\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfStream.prototype.getByte = function () {\n        if (this.position >= this.end) {\n            return -1;\n        }\n        return this.bytes[this.position++];\n    };\n    _PdfStream.prototype.getBytes = function (length) {\n        var bytes = this.bytes;\n        var position = this.position;\n        var strEnd = this.end;\n        if (!length) {\n            return bytes.subarray(position, strEnd);\n        }\n        var end = position + length;\n        if (end > strEnd) {\n            end = strEnd;\n        }\n        this.position = end;\n        return bytes.subarray(position, end);\n    };\n    _PdfStream.prototype.getByteRange = function (begin, end) {\n        if (begin < 0) {\n            begin = 0;\n        }\n        if (end > this.end) {\n            end = this.end;\n        }\n        return this.bytes.subarray(begin, end);\n    };\n    _PdfStream.prototype.reset = function () {\n        this.position = this.start;\n    };\n    _PdfStream.prototype.moveStart = function () {\n        this.start = this.position;\n    };\n    _PdfStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (dictionary === void 0) { dictionary = null; }\n        return new _PdfStream(this.bytes.buffer, dictionary, start, length);\n    };\n    _PdfStream.prototype.readBlock = function () {\n        throw new Error('Abstract method `readBlock` called');\n    };\n    _PdfStream.prototype._clearStream = function () {\n        if (this.dictionary !== null && typeof this.dictionary !== 'undefined' && this.dictionary.has('Filter')) {\n            delete this.dictionary._map.Filter;\n        }\n        this._isCompress = true;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._write = function (text) {\n        this.bytes = new Uint8Array(text.length);\n        for (var i = 0; i < text.length; i++) {\n            this.bytes[Number.parseInt(i.toString(), 10)] = text.charCodeAt(i);\n        }\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._writeBytes = function (data) {\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text = text + String.fromCharCode(data[Number.parseInt(i.toString(), 10)]);\n        }\n        this.bytes = new Uint8Array(data);\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    return _PdfStream;\n}(_PdfBaseStream));\nexport { _PdfStream };\nvar _PdfContentStream = /** @class */ (function (_super) {\n    __extends(_PdfContentStream, _super);\n    function _PdfContentStream(bytes) {\n        var _this = _super.call(this) || this;\n        _this._bytes = bytes;\n        _this.dictionary = new _PdfDictionary();\n        _this.dictionary._updated = true;\n        return _this;\n    }\n    Object.defineProperty(_PdfContentStream.prototype, \"length\", {\n        get: function () {\n            return this._bytes.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfContentStream.prototype.write = function (data) {\n        if (typeof data === 'string') {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data.charCodeAt(i));\n            }\n        }\n        else {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        this.dictionary._updated = true;\n    };\n    _PdfContentStream.prototype.getString = function (isHex) {\n        if (isHex === void 0) { isHex = false; }\n        var bytes = new Uint8Array(this._bytes);\n        if (typeof bytes === 'undefined' || bytes === null || typeof bytes.length === 'undefined') {\n            throw new Error('Invalid argument for bytesToString');\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            var len = bytes.length;\n            var max = 8192;\n            if (len < max) {\n                return String.fromCharCode.apply(null, bytes);\n            }\n            var stringBuffer = [];\n            for (var i = 0; i < len; i += max) {\n                stringBuffer.push(String.fromCharCode.apply(null, bytes.subarray(i, Math.min(i + max, len))));\n            }\n            return stringBuffer.join('');\n        }\n    };\n    return _PdfContentStream;\n}(_PdfBaseStream));\nexport { _PdfContentStream };\nvar _PdfNullStream = /** @class */ (function (_super) {\n    __extends(_PdfNullStream, _super);\n    function _PdfNullStream() {\n        return _super.call(this, new Uint8Array(0)) || this;\n    }\n    return _PdfNullStream;\n}(_PdfStream));\nexport { _PdfNullStream };\n","import { _TokenType } from './enumerator';\nvar _ContentParser = /** @class */ (function () {\n    function _ContentParser(contentStream) {\n        this._recordCollection = [];\n        this._operands = [];\n        this._lexer = new _ContentLexer(contentStream);\n    }\n    _ContentParser.prototype._readContent = function () {\n        this._parseObject(_TokenType.eof);\n        return this._recordCollection;\n    };\n    _ContentParser.prototype._parseObject = function (tokenType) {\n        var symbol;\n        while ((symbol = this._getNextToken()) !== _TokenType.eof) { // eslint-disable-line\n            if (symbol === tokenType || symbol === _TokenType.none) {\n                return;\n            }\n            switch (symbol) {\n                case _TokenType.comment:\n                    break;\n                case _TokenType.number:\n                    if (this._lexer._operatorParams === '-') {\n                        this._operands.push('0');\n                    }\n                    else {\n                        this._operands.push(this._lexer._operatorParams);\n                    }\n                    break;\n                case _TokenType.real:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.string:\n                case _TokenType.hexString:\n                case _TokenType.unicodeHexString:\n                case _TokenType.unicodeString:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.name:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.operator:\n                    this._createRecord();\n                    this._operands = [];\n                    break;\n                case _TokenType.beginArray:\n                    break;\n                case _TokenType.endArray:\n                    throw new Error('Error while parsing content');\n            }\n        }\n    };\n    _ContentParser.prototype._createRecord = function () {\n        var operand = this._lexer._operatorParams;\n        var record = new _PdfRecord(operand, this._operands);\n        this._recordCollection.push(record);\n    };\n    _ContentParser.prototype._getNextToken = function () {\n        return this._lexer._getNextToken();\n    };\n    return _ContentParser;\n}());\nexport { _ContentParser };\nvar _ContentLexer = /** @class */ (function () {\n    function _ContentLexer(data) {\n        this._tokenType = _TokenType.none;\n        this._currentCharacter = '\\0';\n        this._nextCharacter = '\\0';\n        this._offset = 0;\n        this._data = data instanceof Uint8Array ? data : new Uint8Array(data);\n    }\n    _ContentLexer.prototype._getNextToken = function () {\n        this._operatorParams = '';\n        var value = this._moveToNextChar();\n        switch (value) {\n            case '%':\n                return this._tokenType = this._getComment();\n            case '/':\n                return this._tokenType = this._getName();\n            case '[':\n            case '(':\n                return this._tokenType = this._getLiteralString();\n            case '+':\n            case '-':\n                return this._tokenType = this._getNumber();\n            case '<':\n                return this._tokenType = this._getEncodedDecimalString();\n            case '.':\n                return this._tokenType = this._getNumber();\n            case '\"':\n            case '\\'':\n                return this._tokenType = this._getOperator();\n        }\n        if (!isNaN(parseInt(value, 10))) {\n            return this._tokenType = this._getNumber();\n        }\n        if ((/[a-zA-Z]/).test(value)) {\n            return this._tokenType = this._getOperator();\n        }\n        if (value === String.fromCharCode(65535)) {\n            return this._tokenType = _TokenType.eof;\n        }\n        return this._tokenType = _TokenType.none;\n    };\n    _ContentLexer.prototype._getComment = function () {\n        this._operatorParams = '';\n        var value;\n        var flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        while (flag) {\n            flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        }\n        return _TokenType.comment;\n    };\n    _ContentLexer.prototype._getName = function () {\n        this._operatorParams = '';\n        var flag = false;\n        while (!flag) {\n            var value = this._consumeValue();\n            switch (value) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                case '%':\n                case '(':\n                case ')':\n                case '<':\n                case '>':\n                case '[':\n                case ']':\n                case '/':\n                    flag = true;\n                    return _TokenType.name;\n                default:\n                    break;\n            }\n        }\n        return _TokenType.none;\n    };\n    _ContentLexer.prototype._getNumber = function () {\n        var value = this._currentCharacter;\n        if (value === '+' || value === '-') {\n            this._operatorParams += this._currentCharacter;\n            value = this._getNextChar();\n        }\n        while (!isNaN(parseInt(value, 10)) || value === '.') {\n            if (!isNaN(parseInt(value, 10))) {\n                this._operatorParams += this._currentCharacter;\n            }\n            else if (value === '.') {\n                if (this._operatorParams.includes('.')) {\n                    break;\n                }\n                else {\n                    this._operatorParams += this._currentCharacter;\n                }\n            }\n            value = this._getNextChar();\n        }\n        return _TokenType.number;\n    };\n    _ContentLexer.prototype._getOperator = function () {\n        this._operatorParams = '';\n        var value = this._currentCharacter;\n        while (this._isOperator(value)) {\n            value = this._consumeValue();\n        }\n        return _TokenType.operator;\n    };\n    _ContentLexer.prototype._isOperator = function (value) {\n        if ((/[a-zA-Z]/).test(value)) {\n            return true;\n        }\n        switch (value) {\n            case '*':\n            case '\\'':\n            case '\\\"': // eslint-disable-line\n            case '1':\n            case '0':\n                return true;\n        }\n        return false;\n    };\n    _ContentLexer.prototype._getLiteralString = function () {\n        this._operatorParams = '';\n        var beginChar = this._currentCharacter;\n        var literal;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (beginChar === '(') {\n                literal = this._getLiteralStringValue(value);\n                this._operatorParams += literal;\n                value = this._getNextChar();\n                flag = false;\n                break;\n            }\n            else {\n                if (value === '(') {\n                    value = this._consumeValue();\n                    literal = this._getLiteralStringValue(value);\n                    this._operatorParams += literal;\n                    value = this._getNextChar();\n                    continue;\n                }\n                else if (value === ']') {\n                    flag = false;\n                    value = this._consumeValue();\n                    break;\n                }\n                value = this._consumeValue();\n            }\n        }\n        return _TokenType.string;\n    };\n    _ContentLexer.prototype._getEncodedDecimalString = function () {\n        var startChar = '<';\n        var endChar = '>';\n        var space = ' ';\n        var parentLevel = 0;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (value === startChar) {\n                parentLevel++;\n                value = this._consumeValue();\n            }\n            else if (value === endChar) {\n                if (parentLevel === 0) {\n                    this._consumeValue();\n                    flag = false;\n                    break;\n                }\n                else if (parentLevel === 1) {\n                    value = this._consumeValue();\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    if (parentLevel === 1 && value === space) {\n                        flag = false;\n                        break;\n                    }\n                }\n                else {\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    value = this._consumeValue();\n                }\n            }\n            else {\n                value = this._consumeValue();\n                if (value === String.fromCharCode(65535)) {\n                    flag = false;\n                    break;\n                }\n            }\n        }\n        return _TokenType.hexString;\n    };\n    _ContentLexer.prototype._getLiteralStringValue = function (value) {\n        var parenthesesCount = 0;\n        var literal = '';\n        var flag = true;\n        while (flag) {\n            if (value === '\\\\') {\n                literal += value;\n                value = this._getNextChar();\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === '(') {\n                parenthesesCount++;\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === ')' && parenthesesCount !== 0) {\n                literal += value;\n                value = this._getNextChar();\n                parenthesesCount--;\n                continue;\n            }\n            if (value === ')' && parenthesesCount === 0) {\n                literal += value;\n                flag = false;\n                return literal;\n            }\n            literal += value;\n            value = this._getNextChar();\n        }\n        return literal;\n    };\n    _ContentLexer.prototype._consumeValue = function () {\n        this._operatorParams += this._currentCharacter;\n        return this._getNextChar();\n    };\n    _ContentLexer.prototype._moveToNextChar = function () {\n        while (this._currentCharacter !== String.fromCharCode(65535)) {\n            switch (this._currentCharacter) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                    this._getNextChar();\n                    break;\n                default:\n                    return this._currentCharacter;\n            }\n        }\n        return this._currentCharacter;\n    };\n    _ContentLexer.prototype._getNextChar = function () {\n        if (this._data.length <= this._offset) {\n            if (this._nextCharacter === 'Q' || (this._currentCharacter === 'D' && this._nextCharacter === 'o')) {\n                this._currentCharacter = this._nextCharacter;\n                this._nextCharacter = String.fromCharCode(65535);\n                return this._currentCharacter;\n            }\n            this._currentCharacter = String.fromCharCode(65535);\n            this._nextCharacter = String.fromCharCode(65535);\n        }\n        else {\n            this._currentCharacter = this._nextCharacter;\n            this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n            if (this._currentCharacter === '\\x0D') {\n                if (this._nextCharacter === '\\x0A') {\n                    this._currentCharacter = this._nextCharacter;\n                    if (this._data.length <= this._offset) {\n                        this._nextCharacter = String.fromCharCode(65535);\n                    }\n                    else {\n                        this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n                    }\n                }\n                else {\n                    this._currentCharacter = '\\x0A';\n                }\n            }\n        }\n        return this._currentCharacter;\n    };\n    return _ContentLexer;\n}());\nexport { _ContentLexer };\nvar _PdfRecord = /** @class */ (function () {\n    function _PdfRecord(operator, operands) {\n        this._operator = operator;\n        this._operands = operands;\n    }\n    return _PdfRecord;\n}());\nexport { _PdfRecord };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nvar _PdfDecodeStream = /** @class */ (function (_super) {\n    __extends(_PdfDecodeStream, _super);\n    function _PdfDecodeStream(maybeMinBufferLength) {\n        var _this = _super.call(this) || this;\n        _this._rawMinBufferLength = maybeMinBufferLength || 0;\n        _this.offset = 0;\n        _this.bufferLength = 0;\n        _this.eof = false;\n        _this.buffer = new Uint8Array(0);\n        _this.minBufferLength = 512;\n        if (maybeMinBufferLength) {\n            while (_this.minBufferLength < maybeMinBufferLength) {\n                _this.minBufferLength *= 2;\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(_PdfDecodeStream.prototype, \"isEmpty\", {\n        get: function () {\n            while (!this.eof && this.bufferLength === 0) {\n                this.readBlock();\n            }\n            return this.bufferLength === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDecodeStream.prototype.ensureBuffer = function (requested) {\n        var buffer = this.buffer;\n        if (requested <= buffer.byteLength) {\n            return buffer;\n        }\n        var size = this.minBufferLength;\n        while (size < requested) {\n            size *= 2;\n        }\n        var buffer2 = new Uint8Array(size);\n        buffer2.set(buffer);\n        this.buffer = buffer2;\n        return this.buffer;\n    };\n    _PdfDecodeStream.prototype.getByte = function () {\n        var position = this.offset;\n        while (this.bufferLength <= position) {\n            if (this.eof) {\n                return -1;\n            }\n            this.readBlock();\n        }\n        return this.buffer[this.offset++];\n    };\n    _PdfDecodeStream.prototype.getBytes = function (length) {\n        var position = this.offset;\n        var end;\n        if (length) {\n            this.ensureBuffer(position + length);\n            end = position + length;\n            while (!this.eof && this.bufferLength < end) {\n                this.readBlock();\n            }\n            var bufEnd = this.bufferLength;\n            if (end > bufEnd) {\n                end = bufEnd;\n            }\n        }\n        else {\n            while (!this.eof) {\n                this.readBlock();\n            }\n            end = this.bufferLength;\n        }\n        this.offset = end;\n        return this.buffer.subarray(position, end);\n    };\n    _PdfDecodeStream.prototype.reset = function () {\n        this.offset = 0;\n    };\n    _PdfDecodeStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (length === undefined) {\n            while (!this.eof) {\n                this.readBlock();\n            }\n        }\n        else {\n            var end = start + length;\n            while (this.bufferLength <= end && !this.eof) {\n                this.readBlock();\n            }\n        }\n        return new _PdfStream(this.buffer, dictionary, start, length);\n    };\n    _PdfDecodeStream.prototype.getBaseStreams = function () {\n        return this.stream ? this.stream.getBaseStreams() : null;\n    };\n    _PdfDecodeStream.prototype.moveStart = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    _PdfDecodeStream.prototype.getByteRange = function (begin, end) {\n        throw new Error('Invalid call from decode stream. begin: ' + begin + ', end: ' + end);\n    };\n    _PdfDecodeStream.prototype.readBlock = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    return _PdfDecodeStream;\n}(_PdfBaseStream));\nexport { _PdfDecodeStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nvar _PdfDecryptStream = /** @class */ (function (_super) {\n    __extends(_PdfDecryptStream, _super);\n    function _PdfDecryptStream(stream, maybeLength, cipher) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this._chunkSize = 512;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        _this._cipher = cipher;\n        _this._nextChunk = null;\n        _this._initialized = false;\n        return _this;\n    }\n    _PdfDecryptStream.prototype.readBlock = function () {\n        var chunk;\n        if (this._initialized) {\n            chunk = this._nextChunk;\n        }\n        else {\n            chunk = this.stream.getBytes(this._chunkSize);\n            this._initialized = true;\n        }\n        if (!chunk || chunk.length === 0) {\n            this.eof = true;\n            return;\n        }\n        this._nextChunk = this.stream.getBytes(this._chunkSize);\n        var hasMoreData = this._nextChunk && this._nextChunk.length > 0;\n        chunk = this._cipher._decryptBlock(chunk, !hasMoreData);\n        var bufferLength = this.bufferLength;\n        var n = chunk.length;\n        var buffer = this.ensureBuffer(bufferLength + n);\n        for (var i = 0; i < n; i++) {\n            buffer[bufferLength++] = chunk[Number.parseInt(i.toString(), 10)];\n        }\n        this.bufferLength = bufferLength;\n    };\n    return _PdfDecryptStream;\n}(_PdfDecodeStream));\nexport { _PdfDecryptStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { FormatError } from './utils';\nvar codeLenCodeMap = new Int32Array([\n    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15\n]);\nvar lengthDecode = new Int32Array([\n    0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a,\n    0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f,\n    0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073,\n    0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102\n]);\nvar distDecode = new Int32Array([\n    0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d,\n    0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1,\n    0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01,\n    0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001\n]);\nvar fixedLitCodeTab = [\n    new Int32Array([\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0,\n        0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0,\n        0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0,\n        0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8,\n        0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8,\n        0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8,\n        0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4,\n        0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4,\n        0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4,\n        0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc,\n        0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec,\n        0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc,\n        0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2,\n        0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2,\n        0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2,\n        0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca,\n        0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea,\n        0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da,\n        0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6,\n        0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6,\n        0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6,\n        0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce,\n        0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee,\n        0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de,\n        0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe,\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1,\n        0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1,\n        0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1,\n        0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9,\n        0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9,\n        0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9,\n        0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5,\n        0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5,\n        0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5,\n        0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd,\n        0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed,\n        0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd,\n        0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3,\n        0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3,\n        0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3,\n        0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb,\n        0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb,\n        0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db,\n        0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7,\n        0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7,\n        0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7,\n        0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf,\n        0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef,\n        0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df,\n        0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff\n    ]),\n    9\n];\nvar fixedDistCodeTab = [\n    new Int32Array([\n        0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c,\n        0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000,\n        0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d,\n        0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000\n    ]),\n    5\n];\nvar _PdfFlateStream = /** @class */ (function (_super) {\n    __extends(_PdfFlateStream, _super);\n    function _PdfFlateStream(stream, maybeLength) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var cmf = stream.getByte();\n        var flg = stream.getByte();\n        if ((cmf & 0x0f) !== 0x08) {\n            throw new FormatError(\"Unknown compression method in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (((cmf << 8) + flg) % 31 !== 0) {\n            throw new FormatError(\"Bad flag check in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (flg & 0x20) {\n            throw new FormatError(\"Bad flag bit set in flate stream: \" + cmf + \", \" + flg);\n        }\n        _this.codeSize = 0;\n        _this.codeBuffer = 0;\n        return _this;\n    }\n    _PdfFlateStream.prototype.getBits = function (bits) {\n        var stream = this.stream;\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < bits) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        b = codeBuffer & ((1 << bits) - 1);\n        this.codeBuffer = codeBuffer >> bits;\n        this.codeSize = codeSize -= bits;\n        return b;\n    };\n    _PdfFlateStream.prototype.getCode = function (table) {\n        var stream = this.stream;\n        var codes = table[0];\n        var maxLen = table[1];\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < maxLen) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        var code = codes[codeBuffer & ((1 << maxLen) - 1)];\n        var codeLen = code >> 16;\n        var codeVal = code & 0xffff;\n        if (!(codeLen < 1 || codeSize < codeLen)) {\n            this.codeBuffer = codeBuffer >> codeLen;\n            this.codeSize = codeSize - codeLen;\n        }\n        return codeVal;\n    };\n    _PdfFlateStream.prototype.generateHuffmanTable = function (lengths) {\n        var n = lengths.length;\n        var maximumLength = 0;\n        var i;\n        for (i = 0; i < n; ++i) {\n            if (lengths[i] > maximumLength) { // eslint-disable-line\n                maximumLength = lengths[i]; // eslint-disable-line\n            }\n        }\n        var size = 1 << maximumLength;\n        var codes = new Int32Array(size);\n        for (var len = 1, code = 0, skip = 2; len <= maximumLength; ++len, code <<= 1, skip <<= 1) {\n            for (var val = 0; val < n; ++val) {\n                if (lengths[val] === len) { // eslint-disable-line\n                    var code2 = 0;\n                    var t = code;\n                    for (i = 0; i < len; ++i) {\n                        code2 = (code2 << 1) | (t & 1);\n                        t >>= 1;\n                    }\n                    for (i = code2; i < size; i += skip) {\n                        codes[i] = (len << 16) | val; // eslint-disable-line\n                    }\n                    ++code;\n                }\n            }\n        }\n        return [codes, maximumLength];\n    };\n    _PdfFlateStream.prototype.readBlock = function () {\n        var buffer;\n        var length;\n        var stream = this.stream;\n        var hdr = this.getBits(3);\n        if (hdr & 1) {\n            this.eof = true;\n        }\n        hdr >>= 1;\n        if (hdr === 0) {\n            var b = stream.getByte();\n            var blockLen = b;\n            b = stream.getByte();\n            blockLen |= b << 8;\n            b = stream.getByte();\n            var check = b;\n            b = stream.getByte();\n            check |= b << 8;\n            if (!(check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0))) {\n                this.codeBuffer = 0;\n                this.codeSize = 0;\n                var bufferLength = this.bufferLength;\n                var end = bufferLength + blockLen;\n                buffer = this.ensureBuffer(end);\n                this.bufferLength = end;\n                if (blockLen === 0) {\n                    if (stream.peekByte() === -1) {\n                        this.eof = true;\n                    }\n                }\n                else {\n                    var block = stream.getBytes(blockLen);\n                    buffer.set(block, bufferLength);\n                    if (block.length < blockLen) {\n                        this.eof = true;\n                    }\n                }\n                return;\n            }\n        }\n        var litCodeTable;\n        var distCodeTable;\n        if (hdr === 1) {\n            litCodeTable = fixedLitCodeTab;\n            distCodeTable = fixedDistCodeTab;\n        }\n        else if (hdr === 2) {\n            var numLitCodes = this.getBits(5) + 257;\n            var numDistCodes = this.getBits(5) + 1;\n            var numCodeLenCodes = this.getBits(4) + 4;\n            var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n            var i = void 0;\n            for (i = 0; i < numCodeLenCodes; ++i) {\n                codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3); // eslint-disable-line\n            }\n            var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n            length = 0;\n            i = 0;\n            var codes = numLitCodes + numDistCodes;\n            var codeLengths = new Uint8Array(codes);\n            var bitsLength = void 0;\n            var bitsOffset = void 0;\n            var what = void 0;\n            while (i < codes) {\n                var code = this.getCode(codeLenCodeTab);\n                if (code === 16) {\n                    bitsLength = 2;\n                    bitsOffset = 3;\n                    what = length;\n                }\n                else if (code === 17) {\n                    bitsLength = 3;\n                    bitsOffset = 3;\n                    what = length = 0;\n                }\n                else if (code === 18) {\n                    bitsLength = 7;\n                    bitsOffset = 11;\n                    what = length = 0;\n                }\n                else {\n                    codeLengths[i++] = length = code;\n                    continue;\n                }\n                var repeatLength = this.getBits(bitsLength) + bitsOffset;\n                while (repeatLength-- > 0) {\n                    codeLengths[i++] = what;\n                }\n            }\n            litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n            distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n        }\n        buffer = this.buffer;\n        var limit = buffer ? buffer.length : 0;\n        var position = this.bufferLength;\n        while (true) { // eslint-disable-line\n            var code1 = this.getCode(litCodeTable);\n            if (code1 < 256) {\n                if (position + 1 >= limit) {\n                    buffer = this.ensureBuffer(position + 1);\n                    limit = buffer.length;\n                }\n                buffer[position++] = code1;\n                continue;\n            }\n            if (code1 === 256) {\n                this.bufferLength = position;\n                return;\n            }\n            code1 -= 257;\n            code1 = lengthDecode[code1]; // eslint-disable-line\n            var code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            length = (code1 & 0xffff) + code2;\n            code1 = this.getCode(distCodeTable);\n            code1 = distDecode[code1]; // eslint-disable-line\n            code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            var dist = (code1 & 0xffff) + code2;\n            if (position + length >= limit) {\n                buffer = this.ensureBuffer(position + length);\n                limit = buffer.length;\n            }\n            for (var k = 0; k < length; ++k, ++position) {\n                buffer[position] = buffer[position - dist]; // eslint-disable-line\n            }\n        }\n    };\n    return _PdfFlateStream;\n}(_PdfDecodeStream));\nexport { _PdfFlateStream };\n","import { _PdfDictionary, _PdfReferenceSet, _PdfReferenceSetCache, _PdfReference, _isName } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar _PdfCatalog = /** @class */ (function () {\n    function _PdfCatalog(xref) {\n        this._crossReference = xref;\n        this._catalogDictionary = xref._getCatalogObj();\n        if (!(this._catalogDictionary instanceof _PdfDictionary)) {\n            throw new FormatError('Catalog object is not a dictionary.');\n        }\n        else {\n            this._catalogDictionary.isCatalog = true;\n        }\n        this._topPagesDictionary = this._catalogDictionary.get('Pages');\n        this.pageKidsCountCache = new _PdfReferenceSetCache();\n        this.pageIndexCache = new _PdfReferenceSetCache();\n    }\n    Object.defineProperty(_PdfCatalog.prototype, \"version\", {\n        get: function () {\n            var value;\n            if (this._catalogDictionary.has('Version')) {\n                var version = this._catalogDictionary.get('Version');\n                if (version) {\n                    value = version.name;\n                }\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"pageCount\", {\n        get: function () {\n            var obj = this._topPagesDictionary.get('Count');\n            if (typeof obj === 'undefined' || !Number.isInteger(obj)) {\n                throw new FormatError('Invalid page count');\n            }\n            return obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"acroForm\", {\n        get: function () {\n            var form;\n            if (this._catalogDictionary.has('AcroForm')) {\n                form = this._catalogDictionary.get('AcroForm');\n            }\n            if (form === null || typeof form === 'undefined') {\n                form = this._createForm();\n            }\n            return form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* eslint-disable */\n    _PdfCatalog.prototype._createForm = function () {\n        var form = new _PdfDictionary(this._crossReference);\n        var ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(ref, form);\n        this._catalogDictionary.set('AcroForm', ref);\n        this._catalogDictionary._updated = true;\n        this._crossReference._allowCatalog = true;\n        form._updated = true;\n        return form;\n    };\n    _PdfCatalog.prototype.getPageDictionary = function (pageIndex) {\n        var nodesToVisit = [this._topPagesDictionary];\n        var visitedNodes = new _PdfReferenceSet();\n        var pagesRef = this._catalogDictionary.getRaw('Pages');\n        if (pagesRef instanceof _PdfReference) {\n            visitedNodes.put(pagesRef);\n        }\n        var xref = this._crossReference;\n        var pageKidsCountCache = this.pageKidsCountCache;\n        var pageIndexCache = this.pageIndexCache;\n        var currentPageIndex = 0;\n        while (nodesToVisit.length > 0) {\n            var currentNode = nodesToVisit.pop();\n            if (currentNode !== null && typeof currentNode !== 'undefined' && currentNode instanceof _PdfReference) {\n                var count_1 = pageKidsCountCache.get(currentNode);\n                if (count_1 >= 0 && currentPageIndex + count_1 <= pageIndex) {\n                    currentPageIndex += count_1;\n                    continue;\n                }\n                if (visitedNodes.has(currentNode)) {\n                    throw new FormatError('Pages tree contains circular reference.');\n                }\n                visitedNodes.put(currentNode);\n                var obj = xref._fetch(currentNode);\n                if (obj instanceof _PdfDictionary) {\n                    var type = obj.getRaw('Type');\n                    if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                        type = xref._fetch(type);\n                    }\n                    if (_isName(type, 'Page') || !obj.has('Kids')) {\n                        if (!pageKidsCountCache.has(currentNode)) {\n                            pageKidsCountCache.put(currentNode, 1);\n                        }\n                        if (!pageIndexCache.has(currentNode)) {\n                            pageIndexCache.put(currentNode, currentPageIndex);\n                        }\n                        if (currentPageIndex === pageIndex) {\n                            return { dictionary: obj, reference: currentNode };\n                        }\n                        currentPageIndex++;\n                        continue;\n                    }\n                }\n                nodesToVisit.push(obj);\n                continue;\n            }\n            if (!(currentNode instanceof _PdfDictionary)) {\n                throw new FormatError('Page dictionary kid reference points to wrong type of object.');\n            }\n            var objId = currentNode.objId;\n            var count = currentNode.get('Count');\n            if (count !== null && typeof count !== 'undefined' && count instanceof _PdfReference) {\n                count = xref._fetch(count);\n            }\n            if (count !== null && typeof count !== 'undefined' && Number.isInteger(count) && count >= 0) {\n                if (objId && !pageKidsCountCache.has(objId)) {\n                    pageKidsCountCache.set(objId, count);\n                }\n                if (currentPageIndex + count <= pageIndex) {\n                    currentPageIndex += count;\n                    continue;\n                }\n            }\n            var kids = currentNode.getRaw('Kids');\n            if (kids !== null && typeof kids !== 'undefined' && kids instanceof _PdfReference) {\n                kids = xref._fetch(kids);\n            }\n            if (!Array.isArray(kids)) {\n                var type = currentNode.getRaw('Type');\n                if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                    type = xref._fetch(type);\n                }\n                if (_isName(type, 'Page') || !currentNode.has('Kids')) {\n                    if (currentPageIndex === pageIndex) {\n                        return { dictionary: currentNode, reference: null };\n                    }\n                    currentPageIndex++;\n                    continue;\n                }\n                throw new FormatError('Page dictionary kids object is not an array.');\n            }\n            for (var last = kids.length - 1; last >= 0; last--) {\n                nodesToVisit.push(kids[last]);\n            }\n        }\n        throw new Error(\"Page index \" + pageIndex + \" not found.\");\n    };\n    _PdfCatalog.prototype._destroy = function () {\n        if (this._catalogDictionary) {\n            this._catalogDictionary = undefined;\n        }\n        if (this._topPagesDictionary) {\n            this._topPagesDictionary = undefined;\n        }\n        if (this.pageIndexCache) {\n            this.pageIndexCache.clear();\n            this.pageIndexCache = undefined;\n        }\n        if (this.pageKidsCountCache) {\n            this.pageKidsCountCache.clear();\n            this.pageKidsCountCache = undefined;\n        }\n    };\n    return _PdfCatalog;\n}());\nexport { _PdfCatalog };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { _PdfDictionary } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar PdfPredictorStream = /** @class */ (function (_super) {\n    __extends(PdfPredictorStream, _super);\n    function PdfPredictorStream(stream, maybeLength, params) {\n        var _this = _super.call(this, maybeLength) || this;\n        if (!(params instanceof _PdfDictionary)) {\n            return stream;\n        }\n        var predictor = (_this.predictor = params.get('Predictor') || 1);\n        if (predictor <= 1) {\n            return stream;\n        }\n        if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n            throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        if (predictor === 2) {\n            _this.readBlock = _this.readBlockTiff;\n        }\n        else {\n            _this.readBlock = _this.readBlockPng;\n        }\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var colors = (_this.colors = params.get('Colors') || 1);\n        var bits = (_this.bits = params.get('BPC', 'BitsPerComponent') || 8);\n        var columns = (_this.columns = params.get('Columns') || 1);\n        _this.pixBytes = (colors * bits + 7) >> 3;\n        _this.rowBytes = (columns * colors * bits + 7) >> 3;\n        return _this;\n    }\n    PdfPredictorStream.prototype.readBlockTiff = function () {\n        var rowBytes = this.rowBytes;\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var bits = this.bits;\n        var colors = this.colors;\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var inbuf = 0;\n        var outbuf = 0;\n        var inbits = 0;\n        var outbits = 0;\n        var position = bufferLength;\n        var i;\n        if (bits === 1 && colors === 1) {\n            for (i = 0; i < rowBytes; ++i) {\n                var c = rawBytes[i] ^ inbuf; // eslint-disable-line\n                c ^= c >> 1;\n                c ^= c >> 2;\n                c ^= c >> 4;\n                inbuf = (c & 1) << 7;\n                buffer[position++] = c;\n            }\n        }\n        else if (bits === 8) {\n            for (i = 0; i < colors; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; ++i) {\n                buffer[position] = buffer[position - colors] + rawBytes[i]; // eslint-disable-line\n                position++;\n            }\n        }\n        else if (bits === 16) {\n            var bytesPerPixel = colors * 2;\n            for (i = 0; i < bytesPerPixel; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; i += 2) {\n                var sum = ((rawBytes[i] & 0xff) << 8) + // eslint-disable-line\n                    (rawBytes[i + 1] & 0xff) +\n                    ((buffer[position - bytesPerPixel] & 0xff) << 8) +\n                    (buffer[position - bytesPerPixel + 1] & 0xff);\n                buffer[position++] = (sum >> 8) & 0xff;\n                buffer[position++] = sum & 0xff;\n            }\n        }\n        else {\n            var compArray = new Uint8Array(colors + 1);\n            var bitMask = (1 << bits) - 1;\n            var j = 0;\n            var k = bufferLength;\n            var columns = this.columns;\n            for (i = 0; i < columns; ++i) {\n                for (var kk = 0; kk < colors; ++kk) {\n                    if (inbits < bits) {\n                        inbuf = (inbuf << 8) | (rawBytes[j++] & 0xff);\n                        inbits += 8;\n                    }\n                    compArray[kk] = (compArray[kk] + (inbuf >> (inbits - bits))) & bitMask; // eslint-disable-line\n                    inbits -= bits;\n                    outbuf = (outbuf << bits) | compArray[kk]; // eslint-disable-line\n                    outbits += bits;\n                    if (outbits >= 8) {\n                        buffer[k++] = (outbuf >> (outbits - 8)) & 0xff;\n                        outbits -= 8;\n                    }\n                }\n            }\n            if (outbits > 0) {\n                buffer[k++] = (outbuf << (8 - outbits)) + (inbuf & ((1 << (8 - outbits)) - 1));\n            }\n        }\n        this.bufferLength += rowBytes;\n    };\n    PdfPredictorStream.prototype.readBlockPng = function () {\n        var rowBytes = this.rowBytes;\n        var pixBytes = this.pixBytes;\n        var predictor = this.stream.getByte();\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n        if (prevRow.length === 0) {\n            prevRow = new Uint8Array(rowBytes);\n        }\n        var i;\n        var j = bufferLength;\n        var up;\n        var c;\n        switch (predictor) {\n            case 0:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                break;\n            case 1:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (buffer[j - pixBytes] + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 2:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = (prevRow[i] + rawBytes[i]) & 0xff; // eslint-disable-line\n                }\n                break;\n            case 3:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = (prevRow[i] >> 1) + rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (((prevRow[i] + buffer[j - pixBytes]) >> 1) + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 4:\n                for (i = 0; i < pixBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    c = rawBytes[i]; // eslint-disable-line\n                    buffer[j++] = up + c;\n                }\n                for (; i < rowBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    var upLeft = prevRow[i - pixBytes];\n                    var left = buffer[j - pixBytes];\n                    var p = left + up - upLeft;\n                    var pa = p - left;\n                    if (pa < 0) {\n                        pa = -pa;\n                    }\n                    var pb = p - up;\n                    if (pb < 0) {\n                        pb = -pb;\n                    }\n                    var pc = p - upLeft;\n                    if (pc < 0) {\n                        pc = -pc;\n                    }\n                    c = rawBytes[i]; // eslint-disable-line\n                    if (pa <= pb && pa <= pc) {\n                        buffer[j++] = left + c;\n                    }\n                    else if (pb <= pc) {\n                        buffer[j++] = up + c;\n                    }\n                    else {\n                        buffer[j++] = upLeft + c;\n                    }\n                }\n                break;\n            default:\n                throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        this.bufferLength += rowBytes;\n    };\n    return PdfPredictorStream;\n}(_PdfDecodeStream));\nexport { PdfPredictorStream };\n","import { _PdfCommand, _PdfName, _PdfDictionary, _isCommand, _PdfReference, _isName } from './pdf-primitives';\nimport { _isWhiteSpace, FormatError, ParserEndOfFileException, _decodeText } from './utils';\nimport { _PdfNullStream } from './base-stream';\nimport { PdfPredictorStream } from './predictor-stream';\nimport { _PdfFlateStream } from './flate-stream';\nvar maxCacheLength = 1000;\nvar maxNumberLength = 5552;\nvar endOfFile = 'EOF';\nvar specialChars = [\n    1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n];\nvar _PdfLexicalOperator = /** @class */ (function () {\n    function _PdfLexicalOperator(stream) {\n        this.stream = stream;\n        this.nextChar();\n        this.stringBuffer = [];\n        this._hexStringNumber = 0;\n        this.beginInlineImagePosition = -1;\n    }\n    _PdfLexicalOperator.prototype.nextChar = function () {\n        return (this.currentChar = this.stream.getByte());\n    };\n    _PdfLexicalOperator.prototype.peekChar = function () {\n        return this.stream.peekByte();\n    };\n    _PdfLexicalOperator.prototype.getNumber = function () {\n        var ch = this.currentChar;\n        var eNotation = false;\n        var divideBy = 0;\n        var sign = 0;\n        if (ch === 0x2d) {\n            sign = -1;\n            ch = this.nextChar();\n            if (ch === 0x2d) {\n                ch = this.nextChar();\n            }\n        }\n        else if (ch === 0x2b) {\n            sign = 1;\n            ch = this.nextChar();\n        }\n        if (ch === 0x0a || ch === 0x0d) {\n            do {\n                ch = this.nextChar();\n            } while (ch === 0x0a || ch === 0x0d);\n        }\n        if (ch === 0x2e) {\n            divideBy = 10;\n            ch = this.nextChar();\n        }\n        if (ch < 0x30 || ch > 0x39) {\n            if (_isWhiteSpace(ch) || ch === -1) {\n                if (divideBy === 10 && sign === 0) {\n                    return 0;\n                }\n                if (divideBy === 0 && sign === -1) {\n                    return 0;\n                }\n            }\n            throw new FormatError(\"Invalid number: \" + String.fromCharCode(ch) + \" (charCode \" + ch + \")\");\n        }\n        sign = sign || 1;\n        var baseValue = ch - 0x30;\n        var powerValue = 0;\n        var powerValueSign = 1;\n        ch = this.nextChar();\n        while (ch >= 0) {\n            if (ch >= 0x30 && ch <= 0x39) {\n                var currentDigit = ch - 0x30;\n                if (eNotation) {\n                    powerValue = powerValue * 10 + currentDigit;\n                }\n                else {\n                    if (divideBy !== 0) {\n                        divideBy *= 10;\n                    }\n                    baseValue = baseValue * 10 + currentDigit;\n                }\n            }\n            else if (ch === 0x2e) {\n                if (divideBy === 0) {\n                    divideBy = 1;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (ch === 0x2d) {\n                ch = this.nextChar();\n                continue;\n            }\n            else if (ch === 0x45 || ch === 0x65) {\n                ch = this.peekChar();\n                if (ch === 0x2b || ch === 0x2d) {\n                    powerValueSign = ch === 0x2d ? -1 : 1;\n                    this.nextChar();\n                }\n                else if (ch < 0x30 || ch > 0x39) {\n                    break;\n                }\n                eNotation = true;\n            }\n            else {\n                break;\n            }\n            ch = this.nextChar();\n        }\n        if (divideBy !== 0) {\n            baseValue /= divideBy;\n        }\n        if (eNotation) {\n            baseValue *= Math.pow(10, (powerValueSign * powerValue));\n        }\n        return sign * baseValue;\n    };\n    _PdfLexicalOperator.prototype.getString = function () {\n        var numParen = 1;\n        var done = false;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.nextChar();\n        while (true) { // eslint-disable-line\n            var charBuffered = false;\n            switch (ch | 0) {\n                case -1:\n                    done = true;\n                    break;\n                case 0x28:\n                    ++numParen;\n                    stringBuffer.push('(');\n                    break;\n                case 0x29:\n                    if (--numParen === 0) {\n                        this.nextChar();\n                        done = true;\n                    }\n                    else {\n                        stringBuffer.push(')');\n                    }\n                    break;\n                case 0x5c:\n                    ch = this.nextChar();\n                    switch (ch) {\n                        case -1:\n                            done = true;\n                            break;\n                        case 0x6e:\n                            stringBuffer.push('\\n');\n                            break;\n                        case 0x72:\n                            stringBuffer.push('\\r');\n                            break;\n                        case 0x74:\n                            stringBuffer.push('\\t');\n                            break;\n                        case 0x62:\n                            stringBuffer.push('\\b');\n                            break;\n                        case 0x66:\n                            stringBuffer.push('\\f');\n                            break;\n                        case 0x5c:\n                        case 0x28:\n                        case 0x29:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                            var x = ch & 0x0f; // eslint-disable-line\n                            ch = this.nextChar();\n                            charBuffered = true;\n                            if (ch >= 0x30 && ch <= 0x37) {\n                                x = (x << 3) + (ch & 0x0f);\n                                ch = this.nextChar();\n                                if (ch >= 0x30 && ch <= 0x37) {\n                                    charBuffered = false;\n                                    x = (x << 3) + (ch & 0x0f);\n                                }\n                            }\n                            stringBuffer.push(String.fromCharCode(x));\n                            break;\n                        case 0x0d:\n                            if (this.peekChar() === 0x0a) {\n                                this.nextChar();\n                            }\n                            break;\n                        case 0x0a:\n                            break;\n                        default:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                    }\n                    break;\n                default:\n                    stringBuffer.push(String.fromCharCode(ch));\n                    break;\n            }\n            if (done) {\n                break;\n            }\n            if (!charBuffered) {\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getName = function () {\n        var ch;\n        var previousCh;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            if (ch === 0x23) {\n                ch = this.nextChar();\n                if (specialChars[ch]) { // eslint-disable-line\n                    stringBuffer.push('#');\n                    break;\n                }\n                var x = this._toHexDigit(ch);\n                if (x !== -1) {\n                    previousCh = ch;\n                    ch = this.nextChar();\n                    var x2 = this._toHexDigit(ch);\n                    if (x2 === -1) {\n                        stringBuffer.push('#', String.fromCharCode(previousCh));\n                        if (specialChars[ch]) { // eslint-disable-line\n                            break;\n                        }\n                        stringBuffer.push(String.fromCharCode(ch));\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((x << 4) | x2));\n                }\n                else {\n                    stringBuffer.push('#', String.fromCharCode(ch));\n                }\n            }\n            else {\n                stringBuffer.push(String.fromCharCode(ch));\n            }\n            ch = this.nextChar();\n        }\n        return _PdfName.get(stringBuffer.join(''));\n    };\n    _PdfLexicalOperator.prototype.getHexString = function () {\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.currentChar;\n        var isFirstHex = true;\n        var firstDigit;\n        var secondDigit;\n        this._hexStringNumber = 0;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                break;\n            }\n            else if (ch === 0x3e) {\n                this.nextChar();\n                break;\n            }\n            else if (specialChars[ch] === 1) { // eslint-disable-line\n                ch = this.nextChar();\n                continue;\n            }\n            else {\n                if (isFirstHex) {\n                    firstDigit = this._toHexDigit(ch);\n                    if (firstDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                }\n                else {\n                    secondDigit = this._toHexDigit(ch);\n                    if (secondDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((firstDigit << 4) | secondDigit));\n                }\n                isFirstHex = !isFirstHex;\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getObject = function () {\n        var comment = false;\n        var ch = this.currentChar;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                return endOfFile;\n            }\n            if (comment) {\n                if (ch === 0x0a || ch === 0x0d) {\n                    comment = false;\n                }\n            }\n            else if (ch === 0x25) {\n                comment = true;\n            }\n            else if (specialChars[ch] !== 1) { // eslint-disable-line\n                break;\n            }\n            ch = this.nextChar();\n        }\n        switch (ch | 0) {\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x2b:\n            case 0x2d:\n            case 0x2e:\n                return this.getNumber();\n            case 0x28:\n                return this.getString();\n            case 0x2f:\n                return this.getName();\n            case 0x5b:\n                this.nextChar();\n                return _PdfCommand.get('[');\n            case 0x5d:\n                this.nextChar();\n                return _PdfCommand.get(']');\n            case 0x3c:\n                ch = this.nextChar();\n                if (ch === 0x3c) {\n                    this.nextChar();\n                    return _PdfCommand.get('<<');\n                }\n                return this.getHexString();\n            case 0x3e:\n                ch = this.nextChar();\n                if (ch === 0x3e) {\n                    this.nextChar();\n                    return _PdfCommand.get('>>');\n                }\n                return _PdfCommand.get('>');\n            case 0x7b:\n                this.nextChar();\n                return _PdfCommand.get('{');\n            case 0x7d:\n                this.nextChar();\n                return _PdfCommand.get('}');\n            case 0x29:\n                this.nextChar();\n                throw new FormatError(\"Illegal character: \" + ch);\n        }\n        var str = String.fromCharCode(ch);\n        if (ch < 0x20 || ch > 0x7f) {\n            var nextCh = this.peekChar();\n            if (nextCh >= 0x20 && nextCh <= 0x7f) {\n                this.nextChar();\n                return _PdfCommand.get(str);\n            }\n        }\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            var possibleCommand = str + String.fromCharCode(ch);\n            if (str.length === 128) {\n                throw new FormatError(\"Command token too long: \" + str.length);\n            }\n            str = possibleCommand;\n            ch = this.nextChar();\n        }\n        if (str === 'true') {\n            return true;\n        }\n        if (str === 'false') {\n            return false;\n        }\n        if (str === 'null') {\n            return null;\n        }\n        if (str === 'BI') {\n            this.beginInlineImagePosition = this.stream.position;\n        }\n        return _PdfCommand.get(str);\n    };\n    _PdfLexicalOperator.prototype.peekObj = function () {\n        var streamPos = this.stream.position;\n        var currentChar = this.currentChar;\n        var beginInlineImagePosition = this.beginInlineImagePosition;\n        var nextObj; // eslint-disable-line\n        try {\n            nextObj = this.getObject();\n        }\n        catch (ex) { } // eslint-disable-line\n        this.stream.position = streamPos;\n        this.currentChar = currentChar;\n        this.beginInlineImagePosition = beginInlineImagePosition;\n        return nextObj;\n    };\n    _PdfLexicalOperator.prototype.skipToNextLine = function () {\n        var ch = this.currentChar;\n        while (ch >= 0) {\n            if (ch === 0x0d) {\n                ch = this.nextChar();\n                if (ch === 0x0a) {\n                    this.nextChar();\n                }\n                break;\n            }\n            else if (ch === 0x0a) {\n                this.nextChar();\n                break;\n            }\n            ch = this.nextChar();\n        }\n    };\n    _PdfLexicalOperator.prototype._toHexDigit = function (ch) {\n        if (ch >= 0x30 && ch <= 0x39) {\n            return ch & 0x0f;\n        }\n        if ((ch >= 0x41 && ch <= 0x46) || (ch >= 0x61 && ch <= 0x66)) {\n            return (ch & 0x0f) + 9;\n        }\n        return -1;\n    };\n    return _PdfLexicalOperator;\n}());\nexport { _PdfLexicalOperator };\nvar _PdfParser = /** @class */ (function () {\n    function _PdfParser(lexicalOperator, xref, allowStreams, recoveryMode) {\n        if (allowStreams === void 0) { allowStreams = false; }\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        this._isColorSpace = false;\n        this._isPassword = false;\n        this.lexicalOperator = lexicalOperator;\n        this.xref = xref;\n        this.allowStreams = allowStreams;\n        this.recoveryMode = recoveryMode;\n        this.imageCache = new Map();\n        this.refill();\n    }\n    _PdfParser.prototype.refill = function () {\n        this.first = this.lexicalOperator.getObject();\n        this.second = this.lexicalOperator.getObject();\n    };\n    _PdfParser.prototype.shift = function () {\n        if (this.second instanceof _PdfCommand && this.second.command === 'ID') {\n            this.first = this.second;\n            this.second = null;\n        }\n        else {\n            this.first = this.second;\n            this.second = this.lexicalOperator.getObject();\n        }\n    };\n    _PdfParser.prototype.tryShift = function () {\n        try {\n            this.shift();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    _PdfParser.prototype.getObject = function (cipherTransform) {\n        var first = this.first; // eslint-disable-line\n        this.shift();\n        if (first instanceof _PdfCommand) {\n            switch (first.command) {\n                case 'BI':\n                    return this.makeInlineImage(cipherTransform);\n                case '[':\n                    var array = []; // eslint-disable-line\n                    while (!_isCommand(this.first, ']') && this.first !== endOfFile) {\n                        var entry = this.getObject(cipherTransform); // eslint-disable-line\n                        if (array.length === 0 && _isName(entry, 'Indexed')) {\n                            this._isColorSpace = true;\n                        }\n                        entry = _decodeText(entry, this._isColorSpace, this._isPassword);\n                        array.push(entry);\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return array;\n                        }\n                        throw new ParserEndOfFileException('End of file inside array.');\n                    }\n                    this._isColorSpace = false;\n                    this.shift();\n                    return array;\n                case '<<':\n                    var dictionary = new _PdfDictionary(this.xref); // eslint-disable-line\n                    while (!_isCommand(this.first, '>>') && this.first !== endOfFile) {\n                        if (!(this.first instanceof _PdfName)) {\n                            this.shift();\n                            continue;\n                        }\n                        var key = this.first.name;\n                        if (key === 'U' || key === 'O' || key === 'ID') {\n                            this._isPassword = true;\n                        }\n                        this.shift();\n                        var isEnd = this._checkEnd();\n                        if (isEnd) {\n                            break;\n                        }\n                        var value = this.getObject(cipherTransform); // eslint-disable-line\n                        value = _decodeText(value, this._isColorSpace, this._isPassword);\n                        this._isPassword = false;\n                        dictionary.set(key, value);\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return dictionary;\n                        }\n                        throw new ParserEndOfFileException('End of file inside dictionary.');\n                    }\n                    if (_isCommand(this.second, 'stream')) {\n                        if (this.allowStreams === true) {\n                            return this.makeStream(dictionary, cipherTransform);\n                        }\n                        else {\n                            return dictionary;\n                        }\n                    }\n                    this.shift();\n                    return dictionary;\n                default:\n                    return first;\n            }\n        }\n        if (Number.isInteger(first)) {\n            if (Number.isInteger(this.first) && _isCommand(this.second, 'R')) {\n                var ref = _PdfReference.get(first, this.first);\n                this.shift();\n                this.shift();\n                return ref;\n            }\n            return first;\n        }\n        if (typeof first === 'string') {\n            if (cipherTransform) {\n                return cipherTransform.decryptString(first);\n            }\n            return first;\n        }\n        return first;\n    };\n    _PdfParser.prototype.findDiscreteDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var foundEnd = false;\n        var b;\n        var markerLength;\n        b = stream.getByte();\n        while (b !== -1) {\n            if (b !== 0xff) {\n                b = stream.getByte();\n                continue;\n            }\n            switch (stream.getByte()) {\n                case 0x00:\n                    break;\n                case 0xff:\n                    stream.skip(-1);\n                    break;\n                case 0xd9:\n                    foundEnd = true;\n                    break;\n                case 0xc0:\n                case 0xc1:\n                case 0xc2:\n                case 0xc3:\n                case 0xc5:\n                case 0xc6:\n                case 0xc7:\n                case 0xc9:\n                case 0xca:\n                case 0xcb:\n                case 0xcd:\n                case 0xce:\n                case 0xcf:\n                case 0xc4:\n                case 0xcc:\n                case 0xda:\n                case 0xdb:\n                case 0xdc:\n                case 0xdd:\n                case 0xde:\n                case 0xdf:\n                case 0xe0:\n                case 0xe1:\n                case 0xe2:\n                case 0xe3:\n                case 0xe4:\n                case 0xe5:\n                case 0xe6:\n                case 0xe7:\n                case 0xe8:\n                case 0xe9:\n                case 0xea:\n                case 0xeb:\n                case 0xec:\n                case 0xed:\n                case 0xee:\n                case 0xef:\n                case 0xfe:\n                    markerLength = stream.getUnsignedInteger16();\n                    if (markerLength > 2) {\n                        stream.skip(markerLength - 2);\n                    }\n                    else {\n                        stream.skip(-2);\n                    }\n                    break;\n            }\n            if (foundEnd) {\n                break;\n            }\n            b = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (b === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        while ((ch = stream.getByte()) !== -1) { // eslint-disable-line\n            if (ch === 0x7e) {\n                var tildePos = stream.position;\n                ch = stream.peekByte();\n                while (_isWhiteSpace(ch)) {\n                    stream.skip();\n                    ch = stream.peekByte();\n                }\n                if (ch === 0x3e) {\n                    stream.skip();\n                    break;\n                }\n                if (stream.position > tildePos) {\n                    var maybeEI = stream.peekBytes(2);\n                    if (maybeEI[0] === 0x45 && maybeEI[1] === 0x49) {\n                        break;\n                    }\n                }\n            }\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findHexDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (ch === 0x3e) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.inlineStreamSkipEI = function (stream) {\n        var state = 0;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else if (state === 2) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n    };\n    _PdfParser.prototype.makeInlineImage = function (cipherTransform) {\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream;\n        var dictionary = new _PdfDictionary(this.xref);\n        var dictLength;\n        while (!_isCommand(this.first, 'ID') && this.first !== endOfFile) {\n            if (!(this.first instanceof _PdfName)) {\n                throw new FormatError('Dictionary key must be a name object');\n            }\n            var key = this.first.name;\n            this.shift();\n            if (this.first.name === endOfFile) {\n                break;\n            }\n            dictionary.set(key, this.getObject(cipherTransform));\n        }\n        if (lexicalOperator.beginInlineImagePosition !== -1) {\n            dictLength = stream.position - lexicalOperator.beginInlineImagePosition;\n        }\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var filterName;\n        if (filter instanceof _PdfName) {\n            filterName = filter.name;\n        }\n        else if (Array.isArray(filter)) {\n            var reference = filter[0]; // eslint-disable-line\n            var filterZero = (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) ?\n                this.xref._fetch(reference) :\n                reference;\n            if (filterZero) {\n                filterName = filterZero.name;\n            }\n        }\n        var startPos = stream.position;\n        var length;\n        switch (filterName) {\n            case 'DCT':\n            case 'DCTDecode':\n                length = this.findDiscreteDecodeInlineStreamEnd(stream);\n                break;\n            case 'A85':\n            case 'ASCII85Decode':\n                length = this.findDecodeInlineStreamEnd(stream);\n                break;\n            case 'AHx':\n            case 'ASCIIHexDecode':\n                length = this.findHexDecodeInlineStreamEnd(stream);\n                break;\n            default:\n                length = this.findDefaultInlineStreamEnd(stream);\n        }\n        var imageStream = stream.makeSubStream(startPos, length, dictionary); // eslint-disable-line\n        var cacheKey;\n        if (length < maxCacheLength && dictLength < maxNumberLength) {\n            var imageBytes = imageStream.getBytes();\n            imageStream.reset();\n            var initialStreamPos = stream.position;\n            stream.position = lexicalOperator.beginInlineImagePosition;\n            var dictBytes = stream.getBytes(dictLength);\n            stream.position = initialStreamPos;\n            cacheKey = this._computeMaxNumber(imageBytes) + '_' + this._computeMaxNumber(dictBytes);\n            var cacheEntry = this.imageCache.get(cacheKey);\n            if (cacheEntry !== undefined) {\n                this.second = _PdfCommand.get('EI');\n                this.shift();\n                cacheEntry.reset();\n                return cacheEntry;\n            }\n        }\n        if (cipherTransform) {\n            imageStream = cipherTransform.createStream(imageStream, length);\n        }\n        imageStream = this.filter(imageStream, dictionary, length);\n        imageStream.dictionary = dictionary;\n        if (cacheKey !== undefined) {\n            this.imageCache.set(cacheKey, imageStream);\n        }\n        this.second = _PdfCommand.get('EI');\n        this.shift();\n        return imageStream;\n    };\n    _PdfParser.prototype._computeMaxNumber = function (bytes) {\n        var bytesLength = bytes.length;\n        var a = 1;\n        var b = 0;\n        for (var i = 0; i < bytesLength; ++i) {\n            a += bytes[i] & 0xff; // eslint-disable-line\n            b += a;\n        }\n        return (b % 65521 << 16) | a % 65521;\n    };\n    _PdfParser.prototype.makeStream = function (dictionary, cipherTransform) {\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream; // eslint-disable-line\n        lexicalOperator.skipToNextLine();\n        var startPosition = stream.position - 1;\n        var length = dictionary.get('Length');\n        if (!Number.isInteger(length)) {\n            length = 0;\n        }\n        stream.position = startPosition + length;\n        lexicalOperator.nextChar();\n        if (this.tryShift() && _isCommand(this.second, 'endstream')) {\n            this.shift();\n        }\n        else {\n            var endStreamSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d]);\n            var actualLength = this._findStreamLength(startPosition, endStreamSignature);\n            if (actualLength < 0) {\n                var end = endStreamSignature.length - 1;\n                var truncatedSignature = endStreamSignature.slice(0, end);\n                var maybeLength = this._findStreamLength(startPosition, truncatedSignature);\n                if (maybeLength >= 0) {\n                    var lastByte = stream.peekBytes(end + 1)[end]; // eslint-disable-line\n                    if (_isWhiteSpace(lastByte)) {\n                        actualLength = maybeLength;\n                    }\n                }\n                if (actualLength < 0) {\n                    throw new FormatError('Missing endstream command.');\n                }\n            }\n            length = actualLength;\n            lexicalOperator.nextChar();\n            this.shift();\n            this.shift();\n        }\n        this.shift();\n        stream = stream.makeSubStream(startPosition, length, dictionary);\n        if (cipherTransform) {\n            stream = cipherTransform.createStream(stream, length);\n        }\n        stream = this.filter(stream, dictionary, length);\n        stream.dictionary = dictionary;\n        return stream;\n    };\n    _PdfParser.prototype.filter = function (stream, dictionary, length) {\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var params = dictionary.get('DP', 'DecodeParms'); // eslint-disable-line\n        if (filter instanceof _PdfName) {\n            return this.makeFilter(stream, filter.name, length, params);\n        }\n        var maybeLength = length;\n        if (Array.isArray(filter)) {\n            var filterArray = filter; // eslint-disable-line\n            var paramsArray = params; // eslint-disable-line\n            for (var i = 0; i < filterArray.length; ++i) {\n                var reference = filterArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                filter = reference instanceof _PdfReference ? this.xref._fetch(reference) : reference;\n                if (!(filter instanceof _PdfName)) {\n                    throw new FormatError(\"Bad filter name '\" + filter + \"'\");\n                }\n                params = null;\n                if (Array.isArray(paramsArray) && i in paramsArray) {\n                    var ref = paramsArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    params = ref instanceof _PdfReference ? this.xref._fetch(ref) : ref;\n                }\n                stream = this.makeFilter(stream, filter.name, maybeLength, params);\n                maybeLength = null;\n            }\n        }\n        return stream;\n    };\n    _PdfParser.prototype.makeFilter = function (stream, name, maybeLength, params) {\n        if (maybeLength === 0) {\n            return new _PdfNullStream();\n        }\n        try {\n            if (name === 'Fl' || name === 'FlateDecode') {\n                if (params) {\n                    return new PdfPredictorStream(new _PdfFlateStream(stream, maybeLength), maybeLength, params);\n                }\n                return new _PdfFlateStream(stream, maybeLength);\n            }\n            return stream;\n        }\n        catch (ex) {\n            return new _PdfNullStream();\n        }\n    };\n    _PdfParser.prototype._findStreamLength = function (startPosition, signature) {\n        var stream = this.lexicalOperator.stream;\n        stream.position = startPosition;\n        var length = 2048;\n        var signatureLength = signature.length;\n        while (stream.position < stream.end) {\n            var scanBytes = stream.peekBytes(length);\n            var scanLength = scanBytes.length - signatureLength;\n            if (scanLength <= 0) {\n                break;\n            }\n            var position = 0;\n            while (position < scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return stream.position - startPosition;\n                }\n                position++;\n            }\n            stream.position += scanLength;\n        }\n        return -1;\n    };\n    _PdfParser.prototype.findDefaultInlineStreamEnd = function (stream) {\n        var startPosition = stream.position;\n        var n = 10;\n        var state = 0;\n        var ch;\n        var endImagePosition;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else {\n                if (state !== 2) {\n                    throw new Error('findDefaultInlineStreamEnd - invalid state.');\n                }\n                if (ch === 0x20 || ch === 0xa || ch === 0xd) {\n                    endImagePosition = stream.position;\n                    var followingBytes = stream.peekBytes(n);\n                    for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n                        ch = followingBytes[i]; // eslint-disable-line\n                        if (ch === 0x0 && followingBytes[i + 1] !== 0x0) {\n                            continue;\n                        }\n                        if (ch !== 0xa && ch !== 0xd && (ch < 0x20 || ch > 0x7f)) {\n                            state = 0;\n                            break;\n                        }\n                    }\n                    if (state !== 2) {\n                        ch = stream.getByte();\n                        continue;\n                    }\n                    if (state === 2) {\n                        break;\n                    }\n                }\n                else {\n                    state = 0;\n                }\n            }\n            ch = stream.getByte();\n        }\n        if (ch === -1) {\n            if (typeof endImagePosition !== 'undefined') {\n                stream.skip(-(stream.position - endImagePosition));\n            }\n        }\n        var endOffset = 4;\n        stream.skip(-endOffset);\n        ch = stream.peekByte();\n        stream.skip(endOffset);\n        if (!_isWhiteSpace(ch)) {\n            endOffset--;\n        }\n        return stream.position - endOffset - startPosition;\n    };\n    _PdfParser.prototype._checkEnd = function () {\n        if (this.first === endOfFile) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return _PdfParser;\n}());\nexport { _PdfParser };\n/* eslint-disable */\nvar _Linearization = /** @class */ (function () {\n    function _Linearization(stream) {\n        this.isValid = false;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        var dictionary = parser.getObject();\n        this.isValid = Number.isInteger(obj1) && Number.isInteger(obj2) && _isCommand(obj3, 'obj') && typeof dictionary !== 'undefined';\n        if (this.isValid) {\n            var obj = dictionary.get('Linearized');\n            this.isValid = typeof obj !== 'undefined' && obj > 0;\n        }\n        if (this.isValid) {\n            var length_1 = this.getInt(dictionary, 'L');\n            if (length_1 !== stream.length) {\n                throw new Error('The L parameter in the linearization dictionary ' + 'does not equal the stream length.');\n            }\n            this.length = length_1;\n            this.hints = this.getHints(dictionary);\n            this.objectNumberFirst = this.getInt(dictionary, 'O');\n            this.endFirst = this.getInt(dictionary, 'E');\n            this.pageCount = this.getInt(dictionary, 'N');\n            this.mainXRefEntriesOffset = this.getInt(dictionary, 'T');\n            this.pageFirst = dictionary.has('P') ? this.getInt(dictionary, 'P', true) : 0;\n        }\n    }\n    _Linearization.prototype.getInt = function (dictionary, name, allowZeroValue) {\n        if (allowZeroValue === void 0) { allowZeroValue = false; }\n        var obj = dictionary.get(name);\n        if (typeof obj !== 'undefined' && Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n            return obj;\n        }\n        throw new Error(\"The '\" + name + \"' parameter in the linearization \" + 'dictionary is invalid.');\n    };\n    _Linearization.prototype.getHints = function (dictionary) {\n        var hints = dictionary.getArray('H');\n        var hintsLength = hints.length;\n        if (hints && (hintsLength === 2 || hintsLength === 4)) {\n            for (var index = 0; index < hintsLength; index++) {\n                var hint = hints[index];\n                if (!(Number.isInteger(hint) && hint > 0)) {\n                    throw new Error(\"Hint (\" + index + \") in the linearization dictionary is invalid.\");\n                }\n            }\n            return hints;\n        }\n        throw new Error('Hint array in the linearization dictionary is invalid.');\n    };\n    return _Linearization;\n}());\nexport { _Linearization };\n/* eslint-enable */\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _isName, _PdfName } from './../pdf-primitives';\nimport { FormatError, _stringToBytes, _areArrayEqual, _bytesToString } from './../utils';\nimport { _PdfDecryptStream } from './../decrypt-stream';\nvar _PdfEncryptor = /** @class */ (function () {\n    function _PdfEncryptor(dictionary, id, password) {\n        if (password === void 0) { password = ''; }\n        this._isUserPassword = true;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = true;\n        this._defaultPasswordBytes = new Uint8Array([0x28, 0xbf, 0x4e, 0x5e, 0x4e, 0x75, 0x8a, 0x41, 0x64, 0x00, 0x4e, 0x56, 0xff,\n            0xfa, 0x01, 0x08, 0x2e, 0x2e, 0x00, 0xb6, 0xd0, 0x68, 0x3e, 0x80, 0x2f, 0x0c, 0xa9, 0xfe, 0x64, 0x53, 0x69, 0x7a]);\n        var filter = dictionary.get('Filter');\n        if (!_isName(filter, 'Standard')) {\n            throw new FormatError('unknown encryption method');\n        }\n        this._filterName = filter.name;\n        this._dictionary = dictionary;\n        var algorithm = dictionary.get('V');\n        if (!Number.isInteger(algorithm) || (algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5)) {\n            throw new FormatError('unsupported encryption algorithm');\n        }\n        this._algorithm = algorithm;\n        var keyLength = dictionary.get('Length');\n        if (!keyLength) {\n            if (algorithm <= 3) {\n                keyLength = 40;\n            }\n            else {\n                var cfDictionary = dictionary.get('CF');\n                var streamCryptoName = dictionary.get('StmF');\n                if (cfDictionary && streamCryptoName) {\n                    cfDictionary.suppressEncryption = true;\n                    var handlerDictionary = cfDictionary.get(streamCryptoName.name);\n                    keyLength = (handlerDictionary && handlerDictionary.get('Length')) || 128;\n                    if (keyLength < 40) {\n                        keyLength <<= 3;\n                    }\n                }\n            }\n        }\n        if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n            throw new FormatError('invalid key length');\n        }\n        var ownerPassword = _stringToBytes(dictionary.get('O'), false, true).subarray(0, 32);\n        var userPassword = _stringToBytes(dictionary.get('U'), false, true).subarray(0, 32);\n        var flag = dictionary.get('P');\n        var revision = dictionary.get('R');\n        this._encryptMetaData = (algorithm === 4 || algorithm === 5) && dictionary.get('EncryptMetadata') !== false;\n        var fileIdBytes = _stringToBytes(id, false, true);\n        var passwordBytes;\n        if (password) {\n            if (revision === 6) {\n                password = encodeURIComponent(password);\n            }\n            passwordBytes = _stringToBytes(password);\n        }\n        var encryptionKey;\n        if (algorithm !== 5) {\n            encryptionKey = this._prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n            if (encryptionKey) {\n                this._isUserPassword = true;\n                if (password) {\n                    var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                    var ownerEncryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                    if (ownerEncryptionKey && _areArrayEqual(ownerEncryptionKey, encryptionKey)) {\n                        this._hasUserPasswordOnly = true;\n                    }\n                }\n            }\n        }\n        else {\n            var ownerValidationKey = _stringToBytes(dictionary.get('O'), false, true);\n            var ownerValidationSalt = ownerValidationKey.subarray(32, 40);\n            var ownerKeySalt = ownerValidationKey.subarray(40, 48);\n            var userValidationKey = _stringToBytes(dictionary.get('U'), false, true);\n            var uBytes = userValidationKey.subarray(0, 48);\n            var userValidationSalt = userValidationKey.subarray(32, 40);\n            var userKeySalt = userValidationKey.subarray(40, 48);\n            var ownerEncryption = _stringToBytes(dictionary.get('OE'), false, true);\n            var userEncryption = _stringToBytes(dictionary.get('UE'), false, true);\n            var algorithm_1;\n            if (revision === 6) {\n                algorithm_1 = new _AdvancedEncryption();\n            }\n            else {\n                algorithm_1 = new _BasicEncryption();\n            }\n            var p = void 0;\n            if (passwordBytes) {\n                p = passwordBytes.subarray(0, Math.min(127, passwordBytes.length));\n            }\n            else {\n                p = new Uint8Array([]);\n            }\n            if (algorithm_1._checkUserPassword(p, userValidationSalt, userPassword)) {\n                encryptionKey = this._createEncryptionKey(true, p, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = true;\n                if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                    this._hasUserPasswordOnly = true;\n                }\n            }\n            else if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                encryptionKey = this._createEncryptionKey(false, passwordBytes, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = false;\n            }\n        }\n        if (!encryptionKey) {\n            if (password) {\n                var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                encryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                this._isUserPassword = false;\n            }\n            else {\n                throw new Error('Cannot open an encrypted document. The password is invalid.');\n            }\n        }\n        if (algorithm >= 4) {\n            var cipherDictionary = dictionary.get('CF');\n            if (cipherDictionary) {\n                cipherDictionary.suppressEncryption = true;\n                if (cipherDictionary.has('StdCF')) {\n                    var standardCryptFilter = cipherDictionary.get('StdCF');\n                    if (standardCryptFilter && standardCryptFilter.has('AuthEvent')) {\n                        var event_1 = standardCryptFilter.get('AuthEvent');\n                        if (event_1 && event_1.name === 'EFOpen') {\n                            this._encryptOnlyAttachment = true;\n                        }\n                    }\n                }\n            }\n            this._cipherDictionary = cipherDictionary;\n            this._stream = dictionary.get('StmF') || _PdfName.get('Identity');\n            this._string = dictionary.get('StrF') || _PdfName.get('Identity');\n            this._eff = dictionary.get('EFF') || this._stream;\n        }\n        if (!encryptionKey && !this._encryptOnlyAttachment) {\n            throw new Error('Cannot open an encrypted document. The password is invalid.');\n        }\n        this._encryptionKey = encryptionKey;\n    }\n    Object.defineProperty(_PdfEncryptor.prototype, \"_md5\", {\n        get: function () {\n            if (typeof this._messageDigest === 'undefined') {\n                this._messageDigest = new _MD5();\n            }\n            return this._messageDigest;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfEncryptor.prototype._createEncryptionKey = function (isUserKey, password, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm) {\n        if (isUserKey) {\n            return algorithm._getUserKey(password, userKeySalt, userEncryption);\n        }\n        else {\n            return algorithm._getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n        }\n    };\n    _PdfEncryptor.prototype._prepareKeyData = function (id, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetaData) {\n        var hashData = new Uint8Array(40 + ownerPassword.length + id.length);\n        var i = 0;\n        var j = 0;\n        var n;\n        if (password) {\n            n = Math.min(32, password.length);\n            for (; i < n; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        for (j = 0, n = ownerPassword.length; j < n; ++j) {\n            hashData[i++] = ownerPassword[Number.parseInt(j.toString(), 10)];\n        }\n        hashData[i++] = flags & 0xff;\n        hashData[i++] = (flags >> 8) & 0xff;\n        hashData[i++] = (flags >> 16) & 0xff;\n        hashData[i++] = (flags >>> 24) & 0xff;\n        for (j = 0, n = id.length; j < n; ++j) {\n            hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n        }\n        if (revision >= 4 && !encryptMetaData) {\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, keyLengthInBytes);\n            }\n        }\n        var encryptionKey = hash.subarray(0, keyLengthInBytes);\n        var cipher;\n        var checkData;\n        if (revision >= 3) {\n            for (i = 0; i < 32; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = this._defaultPasswordBytes[Number.parseInt(i.toString(), 10)];\n            }\n            for (j = 0, n = id.length; j < n; ++j) {\n                hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n            }\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._md5.hash(hashData, 0, i));\n            n = encryptionKey.length;\n            var derivedKey = new Uint8Array(n);\n            for (j = 1; j <= 19; ++j) {\n                for (var k = 0; k < n; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = encryptionKey[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                checkData = cipher._encryptBlock(checkData);\n            }\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._defaultPasswordBytes);\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        return encryptionKey;\n    };\n    _PdfEncryptor.prototype._decodeUserPassword = function (password, ownerPassword, revision, keyLength) {\n        var hashData = new Uint8Array(32);\n        var i = 0;\n        var j = 0;\n        var n = Math.min(32, password.length);\n        for (; i < n; ++i) {\n            hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, hash.length);\n            }\n        }\n        var cipher;\n        var userPassword;\n        if (revision >= 3) {\n            userPassword = ownerPassword;\n            var derivedKey = new Uint8Array(keyLengthInBytes);\n            for (j = 19; j >= 0; j--) {\n                for (var k = 0; k < keyLengthInBytes; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = hash[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                userPassword = cipher._encryptBlock(userPassword);\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(hash.subarray(0, keyLengthInBytes));\n            userPassword = cipher._encryptBlock(ownerPassword);\n        }\n        return userPassword;\n    };\n    _PdfEncryptor.prototype._createCipherTransform = function (objectNumber, generationNumber) {\n        if (this._algorithm === 4 || this._algorithm === 5) {\n            var stringCipher = this._buildCipherConstructor(this._cipherDictionary, this._string, objectNumber, generationNumber, this._encryptionKey);\n            var streamCipher = this._buildCipherConstructor(this._cipherDictionary, this._stream, objectNumber, generationNumber, this._encryptionKey);\n            return new _CipherTransform(stringCipher, streamCipher);\n        }\n        var key = this._buildObjectKey(objectNumber, generationNumber, this._encryptionKey, false);\n        return new _CipherTransform(new _NormalCipherFour(key), new _NormalCipherFour(key));\n    };\n    _PdfEncryptor.prototype._buildCipherConstructor = function (cipherDictionary, name, objectNumber, generationNumber, key) {\n        var cryptFilter = cipherDictionary.get(name.name);\n        var cfm;\n        if (cryptFilter) {\n            cfm = cryptFilter.get('CFM');\n        }\n        if (!cfm) {\n            return new _NullCipher();\n        }\n        switch (cfm.name) {\n            case 'None':\n                return new _NullCipher();\n            case 'AESV2':\n                return new _AdvancedEncryption128Cipher(this._buildObjectKey(objectNumber, generationNumber, key, true));\n            case 'AESV3':\n                return new _AdvancedEncryption256Cipher(key);\n            case 'V2':\n                return new _NormalCipherFour(this._buildObjectKey(objectNumber, generationNumber, key, false));\n        }\n        throw new FormatError('Unknown cryptography method');\n    };\n    _PdfEncryptor.prototype._buildObjectKey = function (objectNumber, generationNumber, encryptionKey, isAdvancedEncryption) {\n        if (isAdvancedEncryption === void 0) { isAdvancedEncryption = false; }\n        var key = new Uint8Array(encryptionKey.length + 9);\n        var i;\n        for (i = 0; i < encryptionKey.length; ++i) {\n            key[Number.parseInt(i.toString(), 10)] = encryptionKey[Number.parseInt(i.toString(), 10)];\n        }\n        key[i++] = objectNumber & 0xff;\n        key[i++] = (objectNumber >> 8) & 0xff;\n        key[i++] = (objectNumber >> 16) & 0xff;\n        key[i++] = generationNumber & 0xff;\n        key[i++] = (generationNumber >> 8) & 0xff;\n        if (isAdvancedEncryption) {\n            key[i++] = 0x73;\n            key[i++] = 0x41;\n            key[i++] = 0x6c;\n            key[i++] = 0x54;\n        }\n        var hash = this._md5.hash(key, 0, i);\n        return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n    };\n    return _PdfEncryptor;\n}());\nexport { _PdfEncryptor };\nvar _MD5 = /** @class */ (function () {\n    function _MD5() {\n        this._r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9,\n            14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21,\n            6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n        this._k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983,\n            1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632,\n            643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501,\n            -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353,\n            -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651,\n            -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744,\n            -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n    }\n    _MD5.prototype.hash = function (data, offset, length) {\n        var h0 = 1732584193;\n        var h1 = -271733879;\n        var h2 = -1732584194;\n        var h3 = 271733878;\n        var paddedLength = (length + 72) & ~63;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j = 0;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = (length << 3) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        var w = new Int32Array(16);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j, i += 4) {\n                w[Number.parseInt(j.toString(), 10)] = padded[Number.parseInt(i.toString(), 10)] |\n                    (padded[i + 1] << 8) |\n                    (padded[i + 2] << 16) |\n                    (padded[i + 3] << 24);\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = void 0;\n            var f = void 0;\n            for (j = 0; j < 64; ++j) {\n                if (j < 16) {\n                    e = (b & c) | (~b & d);\n                    f = j;\n                }\n                else if (j < 32) {\n                    e = (d & b) | (~d & c);\n                    f = (5 * j + 1) & 15;\n                }\n                else if (j < 48) {\n                    e = b ^ c ^ d;\n                    f = (3 * j + 5) & 15;\n                }\n                else {\n                    e = c ^ (b | ~d);\n                    f = (7 * j) & 15;\n                }\n                var previous = d;\n                var current = (a + e + this._k[Number.parseInt(j.toString(), 10)] + w[Number.parseInt(f.toString(), 10)]) | 0;\n                var rotate = this._r[Number.parseInt(j.toString(), 10)];\n                d = c;\n                c = b;\n                b = (b + ((current << rotate) | (current >>> (32 - rotate)))) | 0;\n                a = previous;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n        }\n        return new Uint8Array([h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >>> 24) & 0xFF, h1 & 0xFF,\n            (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >>> 24) & 0xFF, h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF,\n            (h2 >>> 24) & 0xFF, h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >>> 24) & 0xFF\n        ]);\n    };\n    return _MD5;\n}());\nexport { _MD5 };\nvar _Sha256 = /** @class */ (function () {\n    function _Sha256() {\n    }\n    _Sha256.prototype._rotateRight = function (x, n) {\n        return (x >>> n) | (x << (32 - n));\n    };\n    _Sha256.prototype._sigma = function (x) {\n        return this._rotateRight(x, 2) ^ this._rotateRight(x, 13) ^ this._rotateRight(x, 22);\n    };\n    _Sha256.prototype._sigmaPrime = function (x) {\n        return this._rotateRight(x, 6) ^ this._rotateRight(x, 11) ^ this._rotateRight(x, 25);\n    };\n    _Sha256.prototype._littleSigma = function (x) {\n        return this._rotateRight(x, 7) ^ this._rotateRight(x, 18) ^ (x >>> 3);\n    };\n    _Sha256.prototype._littleSigmaPrime = function (x) {\n        return this._rotateRight(x, 17) ^ this._rotateRight(x, 19) ^ (x >>> 10);\n    };\n    _Sha256.prototype._hash = function (data, offset, length) {\n        var h0 = 0x6a09e667;\n        var h1 = 0xbb67ae85;\n        var h2 = 0x3c6ef372;\n        var h3 = 0xa54ff53a;\n        var h4 = 0x510e527f;\n        var h5 = 0x9b05688c;\n        var h6 = 0x1f83d9ab;\n        var h7 = 0x5be0cd19;\n        var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98,\n            0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6,\n            0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3,\n            0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e,\n            0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116,\n            0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814,\n            0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n        var paddedLength = Math.ceil((length + 9) / 64) * 64;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Uint32Array(64);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                    (padded[i + 1] << 16) |\n                    (padded[i + 2] << 8) |\n                    padded[i + 3];\n                i += 4;\n            }\n            for (j = 16; j < 64; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (this._littleSigmaPrime(w[j - 2]) +\n                    w[j - 7] +\n                    this._littleSigma(w[j - 15]) + w[j - 16]) | 0;\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = h4;\n            var f = h5;\n            var g = h6;\n            var h = h7;\n            var t1 = void 0;\n            var t2 = void 0;\n            for (j = 0; j < 64; ++j) {\n                t1 = h +\n                    this._sigmaPrime(e) +\n                    ((e & f) ^ (~e & g)) +\n                    k[Number.parseInt(j.toString(), 10)] +\n                    w[Number.parseInt(j.toString(), 10)];\n                t2 = this._sigma(a) + ((a & b) ^ (a & c) ^ (b & c));\n                h = g;\n                g = f;\n                f = e;\n                e = (d + t1) | 0;\n                d = c;\n                c = b;\n                b = a;\n                a = (t1 + t2) | 0;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n            h4 = (h4 + e) | 0;\n            h5 = (h5 + f) | 0;\n            h6 = (h6 + g) | 0;\n            h7 = (h7 + h) | 0;\n        }\n        return new Uint8Array([(h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, (h0) & 0xFF, (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF,\n            (h1 >> 8) & 0xFF, (h1) & 0xFF, (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, (h2) & 0xFF, (h3 >> 24) & 0xFF,\n            (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, (h3) & 0xFF, (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, (h4) & 0xFF,\n            (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, (h5) & 0xFF, (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF,\n            (h6) & 0xFF, (h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, (h7) & 0xFF\n        ]);\n    };\n    return _Sha256;\n}());\nexport { _Sha256 };\nvar _Sha512 = /** @class */ (function () {\n    function _Sha512() {\n        this._k = [new _Word64(0x428a2f98, 0xd728ae22), new _Word64(0x71374491, 0x23ef65cd),\n            new _Word64(0xb5c0fbcf, 0xec4d3b2f), new _Word64(0xe9b5dba5, 0x8189dbbc),\n            new _Word64(0x3956c25b, 0xf348b538), new _Word64(0x59f111f1, 0xb605d019),\n            new _Word64(0x923f82a4, 0xaf194f9b), new _Word64(0xab1c5ed5, 0xda6d8118),\n            new _Word64(0xd807aa98, 0xa3030242), new _Word64(0x12835b01, 0x45706fbe),\n            new _Word64(0x243185be, 0x4ee4b28c), new _Word64(0x550c7dc3, 0xd5ffb4e2),\n            new _Word64(0x72be5d74, 0xf27b896f), new _Word64(0x80deb1fe, 0x3b1696b1),\n            new _Word64(0x9bdc06a7, 0x25c71235), new _Word64(0xc19bf174, 0xcf692694),\n            new _Word64(0xe49b69c1, 0x9ef14ad2), new _Word64(0xefbe4786, 0x384f25e3),\n            new _Word64(0x0fc19dc6, 0x8b8cd5b5), new _Word64(0x240ca1cc, 0x77ac9c65),\n            new _Word64(0x2de92c6f, 0x592b0275), new _Word64(0x4a7484aa, 0x6ea6e483),\n            new _Word64(0x5cb0a9dc, 0xbd41fbd4), new _Word64(0x76f988da, 0x831153b5),\n            new _Word64(0x983e5152, 0xee66dfab), new _Word64(0xa831c66d, 0x2db43210),\n            new _Word64(0xb00327c8, 0x98fb213f), new _Word64(0xbf597fc7, 0xbeef0ee4),\n            new _Word64(0xc6e00bf3, 0x3da88fc2), new _Word64(0xd5a79147, 0x930aa725),\n            new _Word64(0x06ca6351, 0xe003826f), new _Word64(0x14292967, 0x0a0e6e70),\n            new _Word64(0x27b70a85, 0x46d22ffc), new _Word64(0x2e1b2138, 0x5c26c926),\n            new _Word64(0x4d2c6dfc, 0x5ac42aed), new _Word64(0x53380d13, 0x9d95b3df),\n            new _Word64(0x650a7354, 0x8baf63de), new _Word64(0x766a0abb, 0x3c77b2a8),\n            new _Word64(0x81c2c92e, 0x47edaee6), new _Word64(0x92722c85, 0x1482353b),\n            new _Word64(0xa2bfe8a1, 0x4cf10364), new _Word64(0xa81a664b, 0xbc423001),\n            new _Word64(0xc24b8b70, 0xd0f89791), new _Word64(0xc76c51a3, 0x0654be30),\n            new _Word64(0xd192e819, 0xd6ef5218), new _Word64(0xd6990624, 0x5565a910),\n            new _Word64(0xf40e3585, 0x5771202a), new _Word64(0x106aa070, 0x32bbd1b8),\n            new _Word64(0x19a4c116, 0xb8d2d0c8), new _Word64(0x1e376c08, 0x5141ab53),\n            new _Word64(0x2748774c, 0xdf8eeb99), new _Word64(0x34b0bcb5, 0xe19b48a8),\n            new _Word64(0x391c0cb3, 0xc5c95a63), new _Word64(0x4ed8aa4a, 0xe3418acb),\n            new _Word64(0x5b9cca4f, 0x7763e373), new _Word64(0x682e6ff3, 0xd6b2b8a3),\n            new _Word64(0x748f82ee, 0x5defb2fc), new _Word64(0x78a5636f, 0x43172f60),\n            new _Word64(0x84c87814, 0xa1f0ab72), new _Word64(0x8cc70208, 0x1a6439ec),\n            new _Word64(0x90befffa, 0x23631e28), new _Word64(0xa4506ceb, 0xde82bde9),\n            new _Word64(0xbef9a3f7, 0xb2c67915), new _Word64(0xc67178f2, 0xe372532b),\n            new _Word64(0xca273ece, 0xea26619c), new _Word64(0xd186b8c7, 0x21c0c207),\n            new _Word64(0xeada7dd6, 0xcde0eb1e), new _Word64(0xf57d4f7f, 0xee6ed178),\n            new _Word64(0x06f067aa, 0x72176fba), new _Word64(0x0a637dc5, 0xa2c898a6),\n            new _Word64(0x113f9804, 0xbef90dae), new _Word64(0x1b710b35, 0x131c471b),\n            new _Word64(0x28db77f5, 0x23047d84), new _Word64(0x32caab7b, 0x40c72493),\n            new _Word64(0x3c9ebe0a, 0x15c9bebc), new _Word64(0x431d67c4, 0x9c100d4c),\n            new _Word64(0x4cc5d4be, 0xcb3e42b6), new _Word64(0x597f299c, 0xfc657e2a),\n            new _Word64(0x5fcb6fab, 0x3ad6faec), new _Word64(0x6c44198c, 0x4a475817)];\n    }\n    _Sha512.prototype._sigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(28);\n        buffer.assign(x);\n        buffer.rotateRight(34);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(39);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._sigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(14);\n        buffer.assign(x);\n        buffer.rotateRight(18);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(41);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(1);\n        buffer.assign(x);\n        buffer.rotateRight(8);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(7);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(19);\n        buffer.assign(x);\n        buffer.rotateRight(61);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(6);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._hash = function (data, offset, length, isMode384) {\n        if (isMode384 === void 0) { isMode384 = false; }\n        var h0;\n        var h1;\n        var h2;\n        var h3;\n        var h4;\n        var h5;\n        var h6;\n        var h7;\n        if (isMode384) {\n            h0 = new _Word64(0xcbbb9d5d, 0xc1059ed8);\n            h1 = new _Word64(0x629a292a, 0x367cd507);\n            h2 = new _Word64(0x9159015a, 0x3070dd17);\n            h3 = new _Word64(0x152fecd8, 0xf70e5939);\n            h4 = new _Word64(0x67332667, 0xffc00b31);\n            h5 = new _Word64(0x8eb44a87, 0x68581511);\n            h6 = new _Word64(0xdb0c2e0d, 0x64f98fa7);\n            h7 = new _Word64(0x47b5481d, 0xbefa4fa4);\n        }\n        else {\n            h0 = new _Word64(0x6a09e667, 0xf3bcc908);\n            h1 = new _Word64(0xbb67ae85, 0x84caa73b);\n            h2 = new _Word64(0x3c6ef372, 0xfe94f82b);\n            h3 = new _Word64(0xa54ff53a, 0x5f1d36f1);\n            h4 = new _Word64(0x510e527f, 0xade682d1);\n            h5 = new _Word64(0x9b05688c, 0x2b3e6c1f);\n            h6 = new _Word64(0x1f83d9ab, 0xfb41bd6b);\n            h7 = new _Word64(0x5be0cd19, 0x137e2179);\n        }\n        var paddedLength = Math.ceil((length + 17) / 128) * 128;\n        var padded = new Uint8Array(paddedLength);\n        var i;\n        for (i = 0; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 16;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Array(80);\n        for (i = 0; i < 80; i++) {\n            w[Number.parseInt(i.toString(), 10)] = new _Word64(0, 0);\n        }\n        var a = new _Word64(0, 0);\n        var b = new _Word64(0, 0);\n        var c = new _Word64(0, 0);\n        var d = new _Word64(0, 0);\n        var e = new _Word64(0, 0);\n        var f = new _Word64(0, 0);\n        var g = new _Word64(0, 0);\n        var h = new _Word64(0, 0);\n        var t1 = new _Word64(0, 0);\n        var t2 = new _Word64(0, 0);\n        var buffer1 = new _Word64(0, 0);\n        var buffer2 = new _Word64(0, 0);\n        var buffer3;\n        for (i = 0; i < paddedLength;) {\n            var j = void 0;\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)].high =\n                    (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                        (padded[i + 1] << 16) |\n                        (padded[i + 2] << 8) |\n                        padded[i + 3];\n                w[Number.parseInt(j.toString(), 10)].low =\n                    (padded[i + 4] << 24) |\n                        (padded[i + 5] << 16) |\n                        (padded[i + 6] << 8) |\n                        padded[i + 7];\n                i += 8;\n            }\n            for (j = 16; j < 80; ++j) {\n                buffer3 = w[Number.parseInt(j.toString(), 10)];\n                this._littleSigmaPrime(buffer3, w[j - 2], buffer2);\n                buffer3.add(w[j - 7]);\n                this._littleSigma(buffer1, w[j - 15], buffer2);\n                buffer3.add(buffer1);\n                buffer3.add(w[j - 16]);\n            }\n            a.assign(h0);\n            b.assign(h1);\n            c.assign(h2);\n            d.assign(h3);\n            e.assign(h4);\n            f.assign(h5);\n            g.assign(h6);\n            h.assign(h7);\n            for (j = 0; j < 80; ++j) {\n                t1.assign(h);\n                this._sigmaPrime(buffer1, e, buffer2);\n                t1.add(buffer1);\n                buffer1.assign(e);\n                buffer1.and(f);\n                buffer2.assign(e);\n                buffer2.not();\n                buffer2.and(g);\n                buffer1.xor(buffer2);\n                t1.add(buffer1);\n                t1.add(this._k[Number.parseInt(j.toString(), 10)]);\n                t1.add(w[Number.parseInt(j.toString(), 10)]);\n                this._sigma(t2, a, buffer2);\n                buffer1.assign(a);\n                buffer1.and(b);\n                buffer2.assign(a);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                buffer2.assign(b);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                t2.add(buffer1);\n                buffer3 = h;\n                h = g;\n                g = f;\n                f = e;\n                d.add(t1);\n                e = d;\n                d = c;\n                c = b;\n                b = a;\n                buffer3.assign(t1);\n                buffer3.add(t2);\n                a = buffer3;\n            }\n            h0.add(a);\n            h1.add(b);\n            h2.add(c);\n            h3.add(d);\n            h4.add(e);\n            h5.add(f);\n            h6.add(g);\n            h7.add(h);\n        }\n        var result;\n        if (!isMode384) {\n            result = new Uint8Array(64);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n            h6.copyTo(result, 48);\n            h7.copyTo(result, 56);\n        }\n        else {\n            result = new Uint8Array(48);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n        }\n        return result;\n    };\n    return _Sha512;\n}());\nexport { _Sha512 };\nvar _Word64 = /** @class */ (function () {\n    function _Word64(high, low) {\n        this.high = high | 0;\n        this.low = low | 0;\n    }\n    _Word64.prototype.and = function (word) {\n        this.high &= word.high;\n        this.low &= word.low;\n    };\n    _Word64.prototype.or = function (word) {\n        this.high |= word.high;\n        this.low |= word.low;\n    };\n    _Word64.prototype.not = function () {\n        this.high = ~this.high;\n        this.low = ~this.low;\n    };\n    _Word64.prototype.xor = function (word) {\n        this.high ^= word.high;\n        this.low ^= word.low;\n    };\n    _Word64.prototype.shiftRight = function (places) {\n        if (places >= 32) {\n            this.low = (this.high >>> (places - 32)) | 0;\n            this.high = 0;\n        }\n        else {\n            this.low = (this.low >>> places) | (this.high << (32 - places));\n            this.high = (this.high >>> places) | 0;\n        }\n    };\n    _Word64.prototype.shiftLeft = function (places) {\n        if (places >= 32) {\n            this.high = this.low << (places - 32);\n            this.low = 0;\n        }\n        else {\n            this.high = (this.high << places) | (this.low >>> (32 - places));\n            this.low <<= places;\n        }\n    };\n    _Word64.prototype.rotateRight = function (places) {\n        var low;\n        var high;\n        if (places & 32) {\n            high = this.low;\n            low = this.high;\n        }\n        else {\n            low = this.low;\n            high = this.high;\n        }\n        places &= 31;\n        this.low = (low >>> places) | (high << (32 - places));\n        this.high = (high >>> places) | (low << (32 - places));\n    };\n    _Word64.prototype.add = function (word) {\n        var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n        var highAdd = (this.high >>> 0) + (word.high >>> 0);\n        if (lowAdd > 0xffffffff) {\n            highAdd += 1;\n        }\n        this.low = lowAdd | 0;\n        this.high = highAdd | 0;\n    };\n    _Word64.prototype.copyTo = function (bytes, offset) {\n        bytes[Number.parseInt(offset.toString(), 10)] = (this.high >>> 24) & 0xff;\n        bytes[offset + 1] = (this.high >> 16) & 0xff;\n        bytes[offset + 2] = (this.high >> 8) & 0xff;\n        bytes[offset + 3] = this.high & 0xff;\n        bytes[offset + 4] = (this.low >>> 24) & 0xff;\n        bytes[offset + 5] = (this.low >> 16) & 0xff;\n        bytes[offset + 6] = (this.low >> 8) & 0xff;\n        bytes[offset + 7] = this.low & 0xff;\n    };\n    _Word64.prototype.assign = function (word) {\n        this.high = word.high;\n        this.low = word.low;\n    };\n    return _Word64;\n}());\nexport { _Word64 };\nvar _EncryptionKey = /** @class */ (function () {\n    function _EncryptionKey() {\n    }\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha256\", {\n        get: function () {\n            if (typeof this._sha256Obj === 'undefined') {\n                this._sha256Obj = new _Sha256();\n            }\n            return this._sha256Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha512\", {\n        get: function () {\n            if (typeof this._sha512Obj === 'undefined') {\n                this._sha512Obj = new _Sha512();\n            }\n            return this._sha512Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _EncryptionKey;\n}());\nexport { _EncryptionKey };\n// PDF17 encryption support\nvar _BasicEncryption = /** @class */ (function (_super) {\n    __extends(_BasicEncryption, _super);\n    function _BasicEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _BasicEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _BasicEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, userPassword);\n    };\n    _BasicEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _BasicEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    return _BasicEncryption;\n}(_EncryptionKey));\nexport { _BasicEncryption };\n// PDF20 encryption support\nvar _AdvancedEncryption = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption, _super);\n    function _AdvancedEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _AdvancedEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._hash(password, hashData, userBytes);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _AdvancedEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._hash(password, hashData, new Uint8Array([]));\n        return _areArrayEqual(result, userPassword);\n    };\n    _AdvancedEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._hash(password, hashData, userBytes);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._hash(password, hashData, new Uint8Array([]));\n        var cipher = new _AdvancedEncryption256Cipher(key);\n        return cipher._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._hash = function (password, input, userBytes) {\n        var data = this._sha256._hash(input, 0, input.length).subarray(0, 32);\n        var encrypted = new Uint8Array([0]);\n        var i = 0;\n        while (i < 64 || encrypted[encrypted.length - 1] > i - 32) {\n            var combinedLength = password.length + data.length + userBytes.length;\n            var combinedArray = new Uint8Array(combinedLength);\n            var writeOffset = 0;\n            combinedArray.set(password, writeOffset);\n            writeOffset += password.length;\n            combinedArray.set(data, writeOffset);\n            writeOffset += data.length;\n            combinedArray.set(userBytes, writeOffset);\n            var k1 = new Uint8Array(combinedLength * 64);\n            for (var j = 0, pos = 0; j < 64; j++) {\n                k1.set(combinedArray, pos);\n                pos += combinedLength;\n            }\n            var cipher = new _AdvancedEncryption128Cipher(data.subarray(0, 16));\n            encrypted = cipher._encrypt(k1, data.subarray(16, 32));\n            var remainder = 0;\n            for (var z = 0; z < 16; z++) {\n                remainder *= 256 % 3;\n                remainder %= 3;\n                remainder += (encrypted[Number.parseInt(z.toString(), 10)] >>> 0) % 3;\n                remainder %= 3;\n            }\n            if (remainder === 2) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length);\n            }\n            else if (remainder === 1) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length, true);\n            }\n            else if (remainder === 0) {\n                data = this._sha256._hash(encrypted, 0, encrypted.length);\n            }\n            i++;\n        }\n        return data.subarray(0, 32);\n    };\n    return _AdvancedEncryption;\n}(_EncryptionKey));\nexport { _AdvancedEncryption };\nvar _Cipher = /** @class */ (function () {\n    function _Cipher() {\n    }\n    return _Cipher;\n}());\nexport { _Cipher };\nvar _NormalCipherFour = /** @class */ (function (_super) {\n    __extends(_NormalCipherFour, _super);\n    function _NormalCipherFour(key) {\n        var _this = _super.call(this) || this;\n        _this._a = 0;\n        _this._b = 0;\n        var s = new Uint8Array(256);\n        for (var i = 0; i < 256; ++i) {\n            s[Number.parseInt(i.toString(), 10)] = i;\n        }\n        var keyLength = key.length;\n        for (var i = 0, j = 0; i < 256; ++i) {\n            var buffer = s[Number.parseInt(i.toString(), 10)];\n            j = (j + buffer + key[i % keyLength]) & 0xff;\n            s[Number.parseInt(i.toString(), 10)] = s[Number.parseInt(j.toString(), 10)];\n            s[Number.parseInt(j.toString(), 10)] = buffer;\n        }\n        _this._s = s;\n        return _this;\n    }\n    _NormalCipherFour.prototype._encryptBlock = function (data) {\n        var a = this._a;\n        var b = this._b;\n        var s = this._s;\n        var n = data.length;\n        var output = new Uint8Array(n);\n        for (var i = 0; i < n; ++i) {\n            a = (a + 1) & 0xff;\n            var first = s[Number.parseInt(a.toString(), 10)];\n            b = (b + first) & 0xff;\n            var second = s[Number.parseInt(b.toString(), 10)];\n            s[Number.parseInt(a.toString(), 10)] = second;\n            s[Number.parseInt(b.toString(), 10)] = first;\n            output[Number.parseInt(i.toString(), 10)] = data[Number.parseInt(i.toString(), 10)] ^ s[(first + second) & 0xff];\n        }\n        this._a = a;\n        this._b = b;\n        return output;\n    };\n    _NormalCipherFour.prototype._decryptBlock = function (data) {\n        return this._encryptBlock(data);\n    };\n    _NormalCipherFour.prototype._encrypt = function (data) {\n        return this._encryptBlock(data);\n    };\n    return _NormalCipherFour;\n}(_Cipher));\nexport { _NormalCipherFour };\nvar _AdvancedEncryptionBaseCipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryptionBaseCipher, _super);\n    function _AdvancedEncryptionBaseCipher() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._buffer = new Uint8Array(16);\n        _this._position = 0;\n        _this._s = new Uint8Array([\n            0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b,\n            0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,\n            0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26,\n            0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n            0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2,\n            0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,\n            0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed,\n            0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n            0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f,\n            0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,\n            0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec,\n            0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n            0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14,\n            0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,\n            0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d,\n            0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n            0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f,\n            0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,\n            0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11,\n            0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n            0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f,\n            0xb0, 0x54, 0xbb, 0x16\n        ]);\n        _this._inverseS = new Uint8Array([\n            0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e,\n            0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87,\n            0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32,\n            0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,\n            0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49,\n            0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16,\n            0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50,\n            0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,\n            0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05,\n            0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02,\n            0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41,\n            0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,\n            0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8,\n            0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89,\n            0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b,\n            0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,\n            0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59,\n            0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d,\n            0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d,\n            0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,\n            0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63,\n            0x55, 0x21, 0x0c, 0x7d\n        ]);\n        _this._mix = new Uint32Array([\n            0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927,\n            0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45,\n            0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb,\n            0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381,\n            0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf,\n            0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66,\n            0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28,\n            0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012,\n            0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec,\n            0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e,\n            0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd,\n            0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7,\n            0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89,\n            0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b,\n            0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815,\n            0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f,\n            0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa,\n            0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8,\n            0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36,\n            0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c,\n            0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742,\n            0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea,\n            0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4,\n            0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e,\n            0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360,\n            0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502,\n            0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87,\n            0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd,\n            0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3,\n            0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621,\n            0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f,\n            0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55,\n            0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26,\n            0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844,\n            0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba,\n            0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480,\n            0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce,\n            0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67,\n            0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929,\n            0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713,\n            0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed,\n            0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f,\n            0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3\n        ]);\n        return _this;\n    }\n    Object.defineProperty(_AdvancedEncryptionBaseCipher.prototype, \"_mixCol\", {\n        get: function () {\n            if (typeof this._mixC === 'undefined') {\n                this._mixC = new Uint8Array(256);\n                for (var i = 0; i < 256; i++) {\n                    if (i < 128) {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = i << 1;\n                    }\n                    else {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = (i << 1) ^ 0x1b;\n                    }\n                }\n            }\n            return this._mixC;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _AdvancedEncryptionBaseCipher.prototype._decrypt = function (input, key) {\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n            t = state[13];\n            state[13] = state[9];\n            state[9] = state[5];\n            state[5] = state[1];\n            state[1] = t;\n            t = state[14];\n            u = state[10];\n            state[14] = state[6];\n            state[10] = state[2];\n            state[6] = t;\n            state[2] = u;\n            t = state[15];\n            u = state[11];\n            v = state[7];\n            state[15] = state[3];\n            state[11] = t;\n            state[7] = u;\n            state[3] = v;\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = this._mix[state[Number.parseInt(j.toString(), 10)]];\n                var s1 = this._mix[state[j + 1]];\n                var s2 = this._mix[state[j + 2]];\n                var s3 = this._mix[state[j + 3]];\n                t = s0 ^ (s1 >>> 8) ^ (s1 << 24) ^ (s2 >>> 16) ^ (s2 << 16) ^ (s3 >>> 24) ^ (s3 << 8);\n                state[Number.parseInt(j.toString(), 10)] = (t >>> 24) & 0xff;\n                state[j + 1] = (t >> 16) & 0xff;\n                state[j + 2] = (t >> 8) & 0xff;\n                state[j + 3] = t & 0xff;\n            }\n        }\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encryptBlock = function (input, key) {\n        var s = this._s;\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        for (var i = 1; i < this._cyclesOfRepetition; i++) {\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n            }\n            v = state[1];\n            state[1] = state[5];\n            state[5] = state[9];\n            state[9] = state[13];\n            state[13] = v;\n            v = state[2];\n            u = state[6];\n            state[2] = state[10];\n            state[6] = state[14];\n            state[10] = v;\n            state[14] = u;\n            v = state[3];\n            u = state[7];\n            t = state[11];\n            state[3] = state[15];\n            state[7] = v;\n            state[11] = u;\n            state[15] = t;\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = state[j + 0];\n                var s1 = state[j + 1];\n                var s2 = state[j + 2];\n                var s3 = state[j + 3];\n                t = s0 ^ s1 ^ s2 ^ s3;\n                state[j + 0] ^= t ^ this._mixCol[s0 ^ s1];\n                state[j + 1] ^= t ^ this._mixCol[s1 ^ s2];\n                state[j + 2] ^= t ^ this._mixCol[s2 ^ s3];\n                state[j + 3] ^= t ^ this._mixCol[s3 ^ s0];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n        }\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlockHelper = function (data, finalize) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        var iv = this._iv;\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            var plain = this._decrypt(buffer, this._key);\n            for (var j = 0; j < 16; ++j) {\n                plain[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            iv = buffer;\n            result.push(plain);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        if (finalize) {\n            var lastBlock = result[result.length - 1];\n            var length_1 = lastBlock[15];\n            if (length_1 <= 16) {\n                for (var i = 15, ii = 16 - length_1; i >= ii; --i) {\n                    if (lastBlock[Number.parseInt(i.toString(), 10)] !== length_1) {\n                        length_1 = 0;\n                        break;\n                    }\n                }\n                outputLength -= length_1;\n                result[result.length - 1] = lastBlock.subarray(0, 16 - length_1);\n            }\n        }\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlock = function (data, finalize, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        if (iv) {\n            this._iv = iv;\n        }\n        else {\n            for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n                buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            }\n            if (bufferLength < 16) {\n                this._bufferLength = bufferLength;\n                return new Uint8Array(0);\n            }\n            this._iv = buffer;\n            data = data.subarray(16);\n        }\n        this._buffer = new Uint8Array(16);\n        this._bufferLength = 0;\n        this._decryptBlock = this._decryptBlockHelper;\n        return this._decryptBlock(data, finalize);\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encrypt = function (data, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        if (!iv) {\n            iv = new Uint8Array(16);\n        }\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            for (var j = 0; j < 16; ++j) {\n                buffer[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            var cipher = this._encryptBlock(buffer, this._key);\n            iv = cipher;\n            result.push(cipher);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    return _AdvancedEncryptionBaseCipher;\n}(_Cipher));\nexport { _AdvancedEncryptionBaseCipher };\nvar _AdvancedEncryption128Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption128Cipher, _super);\n    function _AdvancedEncryption128Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 10;\n        _this._keySize = 160;\n        _this._key = new Uint8Array([\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,\n            0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6,\n            0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72,\n            0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc,\n            0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10,\n            0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e,\n            0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5,\n            0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94,\n            0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02,\n            0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d,\n            0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d,\n            0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f,\n            0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb,\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d\n        ]);\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption128Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 176;\n        var s = this._s;\n        var rcon = this._key;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        for (var j = 16, i = 1; j < count; ++i) {\n            var t1 = result[j - 3];\n            var t2 = result[j - 2];\n            var t3 = result[j - 1];\n            var t4 = result[j - 4];\n            t1 = s[Number.parseInt(t1.toString(), 10)];\n            t2 = s[Number.parseInt(t2.toString(), 10)];\n            t3 = s[Number.parseInt(t3.toString(), 10)];\n            t4 = s[Number.parseInt(t4.toString(), 10)];\n            t1 ^= rcon[Number.parseInt(i.toString(), 10)];\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 16];\n                result[j + 1] = t2 ^= result[j - 15];\n                result[j + 2] = t3 ^= result[j - 14];\n                result[j + 3] = t4 ^= result[j - 13];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption128Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption128Cipher };\nvar _AdvancedEncryption256Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption256Cipher, _super);\n    function _AdvancedEncryption256Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 14;\n        _this._keySize = 224;\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption256Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 240;\n        var s = this._s;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        var r = 1;\n        var t1;\n        var t2;\n        var t3;\n        var t4;\n        for (var j = 32, i = 1; j < count; ++i) {\n            if (j % 32 === 16) {\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n            }\n            else if (j % 32 === 0) {\n                t1 = result[j - 3];\n                t2 = result[j - 2];\n                t3 = result[j - 1];\n                t4 = result[j - 4];\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n                t1 ^= r;\n                r = r << 1;\n                if (r >= 256) {\n                    r = (r ^ 0x1b) & 0xff;\n                }\n            }\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 32];\n                result[j + 1] = t2 ^= result[j - 31];\n                result[j + 2] = t3 ^= result[j - 30];\n                result[j + 3] = t4 ^= result[j - 29];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption256Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption256Cipher };\nvar _NullCipher = /** @class */ (function (_super) {\n    __extends(_NullCipher, _super);\n    function _NullCipher() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _NullCipher.prototype._decryptBlock = function (data) {\n        return data;\n    };\n    _NullCipher.prototype._encrypt = function (data) {\n        return data;\n    };\n    return _NullCipher;\n}(_Cipher));\nexport { _NullCipher };\nvar _CipherTransform = /** @class */ (function () {\n    function _CipherTransform(stringCipher, streamCipher) {\n        this._stringCipher = stringCipher;\n        this._streamCipher = streamCipher;\n    }\n    _CipherTransform.prototype.createStream = function (stream, length) {\n        return new _PdfDecryptStream(stream, length, this._streamCipher);\n    };\n    _CipherTransform.prototype.decryptString = function (s) {\n        return _bytesToString(this._stringCipher._decryptBlock(_stringToBytes(s, false, true), true));\n    };\n    _CipherTransform.prototype.encryptString = function (s) {\n        if (this._stringCipher instanceof _AdvancedEncryptionBaseCipher) {\n            var length_2 = s.length;\n            var pad = 16 - (length_2 % 16);\n            s += String.fromCharCode(pad).repeat(pad);\n            var iv = new Uint8Array(16);\n            if (typeof crypto !== 'undefined') {\n                crypto.getRandomValues(iv);\n            }\n            else {\n                for (var i = 0; i < 16; i++) {\n                    iv[Number.parseInt(i.toString(), 10)] = Math.floor(256 * Math.random());\n                }\n            }\n            var data = this._stringCipher._encrypt(_stringToBytes(s, false, true), iv);\n            var buffer = new Uint8Array(16 + data.length);\n            buffer.set(iv);\n            buffer.set(data, 16);\n            return _bytesToString(buffer);\n        }\n        return _bytesToString(this._stringCipher._encrypt(_stringToBytes(s, false, true)));\n    };\n    return _CipherTransform;\n}());\nexport { _CipherTransform };\n","import { _PdfStream } from './base-stream';\nimport { _PdfDictionary, _PdfReferenceSet, _isCommand, _PdfReference, _PdfName } from './pdf-primitives';\nimport { BaseException, FormatError, _escapePdfName, _bytesToString, ParserEndOfFileException, _numberToString, _stringToPdfString, _getSize, _stringToBigEndianBytes } from './utils';\nimport { _PdfParser, _PdfLexicalOperator } from './pdf-parser';\nimport { _PdfBaseStream } from './base-stream';\nimport { PdfCrossReferenceType } from './enumerator';\nimport { _MD5, _PdfEncryptor } from './security/encryptor';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\nvar _PdfCrossReference = /** @class */ (function () {\n    function _PdfCrossReference(document, password) {\n        this._version = '';\n        this._newLine = '\\r\\n';\n        this._password = password;\n        this._document = document;\n        this._stream = document._stream;\n        this._entries = [];\n        this._crossReferencePosition = Object.create(null);\n        this._cacheMap = new Map(); // eslint-disable-line\n        this._pendingRefs = new _PdfReferenceSet();\n    }\n    _PdfCrossReference.prototype._setStartXRef = function (startXRef) {\n        this._startXRefQueue = [startXRef];\n        this._prevStartXref = startXRef;\n        if (typeof this._prevXRefOffset === 'undefined' || this._prevXRefOffset === null) {\n            this._prevXRefOffset = startXRef;\n        }\n    };\n    _PdfCrossReference.prototype._parse = function (recoveryMode) {\n        var trailerDictionary;\n        if (!recoveryMode) {\n            trailerDictionary = this._readXRef();\n        }\n        else {\n            trailerDictionary = this._indexObjects();\n        }\n        trailerDictionary.assignXref(this);\n        this._nextReferenceNumber = trailerDictionary.get('Size');\n        this._trailer = trailerDictionary;\n        var encrypt = trailerDictionary.get('Encrypt');\n        if (encrypt) {\n            this._document._isEncrypted = true;\n            this._ids = trailerDictionary.get('ID');\n            this._permissionFlags = encrypt.get('P');\n            var fileId = this._ids && this._ids.length ? this._ids[0] : '';\n            encrypt.suppressEncryption = true;\n            this._encrypt = new _PdfEncryptor(encrypt, fileId, this._password);\n            this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.stream;\n            this._document._isUserPassword = this._encrypt._isUserPassword;\n            this._document._encryptOnlyAttachment = this._encrypt._encryptOnlyAttachment;\n            if (this._encrypt._encryptOnlyAttachment) {\n                this._document._hasUserPasswordOnly = true;\n                this._document._encryptMetaData = false;\n            }\n            else {\n                this._document._hasUserPasswordOnly = this._encrypt._hasUserPasswordOnly;\n                this._document._encryptMetaData = encrypt.has('EncryptMetadata') ? encrypt.get('EncryptMetadata') : true;\n            }\n        }\n        var hasRoot = false;\n        var root;\n        try {\n            root = trailerDictionary.get('Root');\n        }\n        catch (e) {\n            throw new BaseException('Invalid cross reference', 'XRefParseException');\n        }\n        if (root) {\n            try {\n                var pagesEntry = root.get('Pages');\n                if (pagesEntry) {\n                    this._root = root;\n                    hasRoot = true;\n                }\n            }\n            catch (ex) {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n        if (!hasRoot) {\n            if (!recoveryMode) {\n                throw new BaseException('Invalid cross reference', 'XRefParseException');\n            }\n            else {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n    };\n    _PdfCrossReference.prototype._getEntry = function (i) {\n        var xrefEntry = this._entries[i]; // eslint-disable-line\n        if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n            return xrefEntry;\n        }\n        return null;\n    };\n    _PdfCrossReference.prototype._fetch = function (ref, suppressEncryption) {\n        var entry; // eslint-disable-line\n        if (!(ref instanceof _PdfReference)) {\n            throw new Error('ref object is not a reference');\n        }\n        var objectNumber = ref.objectNumber;\n        var cacheEntry = this._cacheMap.get(ref); // eslint-disable-line\n        if (typeof cacheEntry !== 'undefined') {\n            if (cacheEntry instanceof _PdfDictionary && !cacheEntry.objId) {\n                cacheEntry.objId = objectNumber;\n            }\n            return cacheEntry;\n        }\n        var xrefEntry = this._getEntry(objectNumber);\n        if (xrefEntry === null) {\n            this._cacheMap.set(ref, xrefEntry);\n            return xrefEntry;\n        }\n        if (this._pendingRefs.has(ref)) {\n            this._pendingRefs.remove(ref);\n            throw new Error('circular reference');\n        }\n        this._pendingRefs.put(ref);\n        try {\n            if (xrefEntry.uncompressed) {\n                entry = this._fetchUncompressed(ref, xrefEntry, suppressEncryption);\n            }\n            else {\n                entry = this._fetchCompressed(ref, xrefEntry);\n            }\n            this._pendingRefs.remove(ref);\n        }\n        catch (ex) {\n            this._pendingRefs.remove(ref);\n            throw ex;\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchUncompressed = function (reference, xrefEntry, suppressEncryption) {\n        var generationNumber = reference.generationNumber;\n        var objectNumber = reference.objectNumber;\n        if (xrefEntry.gen !== generationNumber) {\n            throw new BaseException(\"Inconsistent generation in XRef: \" + reference, 'XRefEntryException');\n        }\n        var stream = this._stream.makeSubStream(xrefEntry.offset + this._stream.start, undefined);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        if (obj1 !== objectNumber || obj2 !== generationNumber || typeof obj3 === 'undefined') {\n            throw new BaseException(\"Bad (uncompressed) XRef entry: \" + reference, 'XRefEntryException');\n        }\n        var entry; // eslint-disable-line\n        if (this._encrypt && !suppressEncryption) {\n            entry = parser.getObject(this._encrypt._createCipherTransform(reference.objectNumber, reference.generationNumber));\n        }\n        else {\n            entry = parser.getObject();\n        }\n        if (!(entry instanceof _PdfBaseStream)) {\n            this._cacheMap.set(reference, entry);\n        }\n        if (entry instanceof _PdfDictionary) {\n            entry.objId = reference.toString();\n        }\n        else if (entry instanceof _PdfBaseStream) {\n            entry.dictionary.objId = reference.toString();\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchCompressed = function (ref, xrefEntry) {\n        var tableOffset = xrefEntry.offset;\n        var stream = this._fetch(_PdfReference.get(tableOffset, 0));\n        if (typeof stream === 'undefined') {\n            throw new FormatError('bad ObjStm stream');\n        }\n        var first = stream.dictionary.get('First');\n        var n = stream.dictionary.get('N');\n        var gen = ref.generationNumber;\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n            throw new FormatError('invalid first and n parameters for ObjStm stream');\n        }\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n        var nums = new Array(n);\n        var offsets = new Array(n);\n        for (var i = 0; i < n; ++i) {\n            var value = parser.getObject();\n            if (!Number.isInteger(value)) {\n                throw new FormatError(\"invalid object number in the ObjStm stream: \" + value);\n            }\n            var offset = parser.getObject();\n            if (!Number.isInteger(offset)) {\n                throw new FormatError(\"invalid object offset in the ObjStm stream: \" + offset);\n            }\n            nums[i] = value; // eslint-disable-line\n            offsets[i] = offset; // eslint-disable-line\n        }\n        var start = (stream.start || 0) + first;\n        var entries = new Array(n); // eslint-disable-line\n        for (var i = 0; i < n; ++i) {\n            var length_1 = (i < n - 1 ? (offsets[i + 1] - offsets[i]) : undefined); // eslint-disable-line\n            if (length_1 < 0) {\n                throw new FormatError('Invalid offset in the ObjStm stream.');\n            }\n            parser = new _PdfParser(new _PdfLexicalOperator(stream.makeSubStream(start + offsets[i], length_1, stream.dictionary)), this, true); // eslint-disable-line\n            var obj = parser.getObject(); // eslint-disable-line\n            entries[i] = obj; // eslint-disable-line\n            if (obj instanceof _PdfBaseStream) {\n                continue;\n            }\n            var value = nums[i]; // eslint-disable-line\n            var entry = this._entries[value]; // eslint-disable-line\n            if (entry && entry.offset === tableOffset && entry.gen === i) {\n                var objId = value + \" \" + gen;\n                this._cacheMap.set(_PdfReference.get(value, gen), obj);\n                if (obj instanceof _PdfDictionary) {\n                    obj.objId = objId;\n                }\n            }\n        }\n        var result = entries[xrefEntry.gen]; // eslint-disable-line\n        if (typeof result === 'undefined') {\n            throw new BaseException(\"Bad (compressed) XRef entry: \" + ref, 'XRefEntryException');\n        }\n        return result;\n    };\n    _PdfCrossReference.prototype._readXRef = function (recoveryMode) {\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        var stream = this._stream;\n        var startXRefParsedCache = new Set();\n        try {\n            while (this._startXRefQueue.length) {\n                var startXRef = this._startXRefQueue[0];\n                if (this._prevStartXref < startXRef) {\n                    this._prevStartXref = startXRef;\n                }\n                if (startXRefParsedCache.has(startXRef)) {\n                    this._startXRefQueue.shift();\n                    continue;\n                }\n                startXRefParsedCache.add(startXRef);\n                stream.position = startXRef + stream.start;\n                var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n                var obj = parser.getObject(); // eslint-disable-line\n                var dictionary = void 0;\n                if (_isCommand(obj, 'xref')) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.table;\n                    }\n                    dictionary = this._processXRefTable(parser);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    obj = dictionary.get('XRefStm');\n                    if (Number.isInteger(obj)) {\n                        var position = obj; // eslint-disable-line\n                        if (!(position in this._crossReferencePosition)) {\n                            this._crossReferencePosition[position] = 1; // eslint-disable-line\n                            this._startXRefQueue.push(position);\n                        }\n                    }\n                }\n                else if (Number.isInteger(obj)) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.stream;\n                    }\n                    var gen = parser.getObject();\n                    var command = parser.getObject();\n                    obj = parser.getObject();\n                    if (typeof gen === 'undefined' ||\n                        !Number.isInteger(gen) ||\n                        !_isCommand(command, 'obj') ||\n                        !(obj instanceof _PdfBaseStream)) {\n                        throw new FormatError('Invalid cross reference stream');\n                    }\n                    dictionary = this._processXRefStream(obj);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    if (!dictionary) {\n                        throw new FormatError('Failed to read XRef stream');\n                    }\n                }\n                else {\n                    throw new FormatError('Invalid XRef stream header');\n                }\n                obj = dictionary.get('Prev');\n                if (Number.isInteger(obj)) {\n                    this._startXRefQueue.push(obj);\n                }\n                else if (obj instanceof _PdfReference) {\n                    this._startXRefQueue.push(obj.objectNumber);\n                }\n                this._startXRefQueue.shift();\n            }\n            return this._topDictionary;\n        }\n        catch (e) {\n            this._startXRefQueue.shift();\n        }\n        if (recoveryMode) {\n            return undefined;\n        }\n        throw new BaseException('Invalid cross reference', 'XRefParseException');\n    };\n    _PdfCrossReference.prototype._readToken = function (data, offset) {\n        var lf = 0xa;\n        var cr = 0xd;\n        var lt = 0x3c;\n        var token = '';\n        var ch = data[offset]; // eslint-disable-line\n        while (ch !== lf && ch !== cr && ch !== lt) {\n            if (++offset >= data.length) {\n                break;\n            }\n            token += String.fromCharCode(ch);\n            ch = data[offset]; // eslint-disable-line\n        }\n        return token;\n    };\n    _PdfCrossReference.prototype._skipUntil = function (data, offset, what) {\n        var length = what.length;\n        var dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n            var i = 0;\n            while (i < length && data[offset + i] === what[i]) { // eslint-disable-line\n                ++i;\n            }\n            if (i >= length) {\n                break;\n            }\n            offset++;\n            skipped++;\n        }\n        return skipped;\n    };\n    _PdfCrossReference.prototype._indexObjects = function () {\n        var tab = 0x9;\n        var lf = 0xa;\n        var cr = 0xd;\n        var space = 0x20;\n        var percent = 0x25;\n        var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n        var endobjRegExp = /\\bendobj[\\b\\s]$/;\n        var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s<])$/;\n        var checkContentLength = 25;\n        var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n        var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n        var objBytes = new Uint8Array([111, 98, 106]);\n        var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n        this._entries.length = 0;\n        this._cacheMap.clear();\n        var stream = this._stream;\n        stream.position = 0;\n        var buffer = stream.getBytes();\n        var length = buffer.length;\n        var position = stream.start;\n        var trailers = [];\n        var crossReferencePosition = [];\n        while (position < length) {\n            var ch = buffer[position]; // eslint-disable-line\n            if (ch === tab || ch === lf || ch === cr || ch === space) {\n                ++position;\n                continue;\n            }\n            if (ch === percent) {\n                do {\n                    ++position;\n                    if (position >= length) {\n                        break;\n                    }\n                    ch = buffer[position]; // eslint-disable-line\n                } while (ch !== lf && ch !== cr);\n                continue;\n            }\n            var token = this._readToken(buffer, position);\n            var m = void 0; // eslint-disable-line\n            if (token.startsWith('xref') && (token.length === 4 || /\\s/.test(token[4]))) {\n                position += this._skipUntil(buffer, position, trailerBytes);\n                trailers.push(position);\n                position += this._skipUntil(buffer, position, startxrefBytes);\n            }\n            else {\n                m = objRegExp.exec(token);\n                if (m) {\n                    var objectNumber = Number.parseInt(m[1]) | 0; // eslint-disable-line\n                    var gen = Number.parseInt(m[2]) | 0; // eslint-disable-line\n                    var contentLength = void 0;\n                    var startPos = position + token.length;\n                    var updateEntries = false;\n                    if (!this._entries[objectNumber]) { // eslint-disable-line\n                        updateEntries = true;\n                    }\n                    else if (this._entries[objectNumber].gen === gen) { // eslint-disable-line\n                        try {\n                            var subStream = stream.makeSubStream(startPos, stream.length - startPos);\n                            var lexicalOperator = new _PdfLexicalOperator(subStream);\n                            var parser = new _PdfParser(lexicalOperator, null);\n                            parser.getObject();\n                            updateEntries = true;\n                        }\n                        catch (ex) {\n                            updateEntries = !(ex instanceof ParserEndOfFileException);\n                        }\n                    }\n                    if (updateEntries) {\n                        var info = new _PdfObjectInformation();\n                        info.offset = position - stream.start;\n                        info.gen = gen;\n                        info.uncompressed = true;\n                        this._entries[objectNumber] = info; // eslint-disable-line\n                    }\n                    while (startPos < buffer.length) {\n                        var endPos = startPos + this._skipUntil(buffer, startPos, objBytes) + 4;\n                        contentLength = endPos - position;\n                        var checkPos = Math.max(endPos - checkContentLength, startPos);\n                        var tokenStr = _bytesToString(buffer.subarray(checkPos, endPos));\n                        if (endobjRegExp.test(tokenStr)) {\n                            break;\n                        }\n                        else {\n                            var objToken = nestedObjRegExp.exec(tokenStr); // eslint-disable-line\n                            if (objToken && objToken[1]) {\n                                contentLength -= objToken[1].length;\n                                break;\n                            }\n                        }\n                        startPos = endPos;\n                    }\n                    var content = buffer.subarray(position, position + contentLength);\n                    var xrefTagOffset = this._skipUntil(content, 0, xrefBytes);\n                    if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n                        crossReferencePosition.push(position - stream.start);\n                        this._crossReferencePosition[position - stream.start] = 1;\n                    }\n                    position += contentLength;\n                }\n                else if (token.startsWith('trailer') && (token.length === 7 || /\\s/.test(token[7]))) {\n                    trailers.push(position);\n                    position += this._skipUntil(buffer, position, startxrefBytes);\n                }\n                else {\n                    position += token.length + 1;\n                }\n            }\n        }\n        for (var i = 0; i < crossReferencePosition.length; ++i) {\n            this._startXRefQueue.push(crossReferencePosition[i]); // eslint-disable-line\n            this._readXRef(true);\n        }\n        var trailerDict;\n        for (var i = 0; i < trailers.length; ++i) {\n            stream.position = trailers[i]; // eslint-disable-line\n            var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true, true);\n            var obj = parser.getObject(); // eslint-disable-line\n            if (!_isCommand(obj, 'trailer')) {\n                continue;\n            }\n            var dictionary = parser.getObject(); // eslint-disable-line\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            try {\n                var rootDict = dictionary.get('Root'); // eslint-disable-line\n                if (!(rootDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesDict = rootDict.get('Pages'); // eslint-disable-line\n                if (!(pagesDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesCount = pagesDict.get('Count');\n                if (typeof pagesCount === 'undefined' || !Number.isInteger(pagesCount)) {\n                    continue;\n                }\n            }\n            catch (ex) {\n                continue;\n            }\n            if (dictionary.has('ID')) {\n                return dictionary;\n            }\n            trailerDict = dictionary;\n        }\n        if (trailerDict) {\n            return trailerDict;\n        }\n        if (this._topDictionary) {\n            return this._topDictionary;\n        }\n        throw new BaseException('Invalid PDF structure.', 'InvalidPDFException');\n    };\n    _PdfCrossReference.prototype._processXRefTable = function (parser) {\n        if (typeof this._tableState === 'undefined') {\n            var tableState = new _PdfCrossTableState();\n            tableState.entryNum = 0;\n            tableState.streamPos = parser.lexicalOperator.stream.position;\n            tableState.parserBuf1 = parser.first;\n            tableState.parserBuf2 = parser.second;\n            this._tableState = tableState;\n        }\n        var obj = this._readXRefTable(parser);\n        if (!_isCommand(obj, 'trailer')) {\n            throw new FormatError('Invalid XRef table: could not find trailer dictionary');\n        }\n        var topDictionary = parser.getObject(); // eslint-disable-line\n        var dictionary;\n        if (topDictionary) {\n            if (topDictionary instanceof _PdfDictionary) {\n                dictionary = topDictionary;\n            }\n            else if (topDictionary instanceof _PdfBaseStream && topDictionary.dictionary) {\n                dictionary = topDictionary.dictionary;\n            }\n        }\n        if (!dictionary) {\n            throw new FormatError('Invalid cross reference: could not parse trailer dictionary');\n        }\n        this._tableState = undefined;\n        return dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefTable = function (parser) {\n        var stream = parser.lexicalOperator.stream;\n        stream.position = this._tableState.streamPos;\n        parser.first = this._tableState.parserBuf1;\n        parser.second = this._tableState.parserBuf2;\n        var obj; // eslint-disable-line\n        while (true) { // eslint-disable-line\n            if (typeof this._tableState.firstEntryNum === 'undefined' || typeof this._tableState.entryCount === 'undefined') {\n                obj = parser.getObject();\n                if (_isCommand(obj, 'trailer')) {\n                    break;\n                }\n                this._tableState.firstEntryNum = obj;\n                this._tableState.entryCount = parser.getObject();\n            }\n            var first = this._tableState.firstEntryNum;\n            var count = this._tableState.entryCount;\n            if (!Number.isInteger(first) || !Number.isInteger(count)) {\n                throw new FormatError('Invalid cross reference: wrong types in subsection header');\n            }\n            for (var i = this._tableState.entryNum; i < count; i++) {\n                this._tableState.streamPos = stream.position;\n                this._tableState.entryNum = i;\n                this._tableState.parserBuf1 = parser.first;\n                this._tableState.parserBuf2 = parser.second;\n                var entry = new _PdfObjectInformation();\n                entry.offset = parser.getObject();\n                entry.gen = parser.getObject();\n                var type = parser.getObject();\n                if (type) {\n                    switch (type.command) {\n                        case 'f':\n                            entry.free = true;\n                            break;\n                        case 'n':\n                            entry.uncompressed = true;\n                            break;\n                    }\n                }\n                if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n                    throw new FormatError(\"Invalid entry in cross reference subsection: \" + first + \", \" + count);\n                }\n                if (i === 0 && entry.free && first === 1) {\n                    first = 0;\n                }\n                if (!this._entries[i + first]) {\n                    this._entries[i + first] = entry;\n                }\n            }\n            this._tableState.entryNum = 0;\n            this._tableState.streamPos = stream.position;\n            this._tableState.parserBuf1 = parser.first;\n            this._tableState.parserBuf2 = parser.second;\n            this._tableState.firstEntryNum = undefined;\n            this._tableState.entryCount = undefined;\n        }\n        if (this._entries[0] && !this._entries[0].free) {\n            throw new FormatError('Invalid XRef table: unexpected first object');\n        }\n        return obj;\n    };\n    _PdfCrossReference.prototype._processXRefStream = function (stream) {\n        if (typeof this._streamState === 'undefined') {\n            var streamParameters = stream.dictionary;\n            var streamState = new _PdfStreamState();\n            var index = streamParameters.getArray('Index');\n            if (!index) {\n                index = [0, streamParameters.get('Size')];\n            }\n            streamState.entryRanges = index;\n            streamState.byteWidths = streamParameters.getArray('W');\n            streamState.entryNum = 0;\n            streamState.streamPos = stream.position;\n            this._streamState = streamState;\n        }\n        this._readXRefStream(stream);\n        this._streamState = undefined;\n        return stream.dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefStream = function (stream) {\n        stream.position = this._streamState.streamPos;\n        var typeFieldWidth = this._streamState.byteWidths[0];\n        var offsetFieldWidth = this._streamState.byteWidths[1];\n        var generationFieldWidth = this._streamState.byteWidths[2];\n        var entryRanges = this._streamState.entryRanges;\n        while (entryRanges.length > 0) {\n            var first = entryRanges[0];\n            var n = entryRanges[1];\n            if (!Number.isInteger(first) || !Number.isInteger(n)) {\n                throw new FormatError(\"Invalid XRef range fields: \" + first + \", \" + n);\n            }\n            if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n                throw new FormatError(\"Invalid XRef entry fields length: \" + first + \", \" + n);\n            }\n            for (var i = this._streamState.entryNum; i < n; ++i) {\n                this._streamState.entryNum = i;\n                this._streamState.streamPos = stream.position;\n                var type = 0;\n                var offset = 0;\n                var generation = 0;\n                for (var j = 0; j < typeFieldWidth; ++j) {\n                    var typeByte = stream.getByte();\n                    if (typeByte === -1) {\n                        throw new FormatError('invalid cross reference byte width type.');\n                    }\n                    type = (type << 8) | typeByte;\n                }\n                if (typeFieldWidth === 0) {\n                    type = 1;\n                }\n                for (var j = 0; j < offsetFieldWidth; ++j) {\n                    var offsetByte = stream.getByte();\n                    if (offsetByte === -1) {\n                        throw new FormatError('invalid cross reference byte width offset.');\n                    }\n                    offset = (offset << 8) | offsetByte;\n                }\n                for (var j = 0; j < generationFieldWidth; ++j) {\n                    var generationByte = stream.getByte();\n                    if (generationByte === -1) {\n                        throw new FormatError('invalid cross reference byte width generation.');\n                    }\n                    generation = (generation << 8) | generationByte;\n                }\n                var entry = new _PdfObjectInformation();\n                entry.offset = offset;\n                entry.gen = generation;\n                switch (type) {\n                    case 0:\n                        entry.free = true;\n                        break;\n                    case 1:\n                        entry.uncompressed = true;\n                        break;\n                    case 2:\n                        break;\n                    default:\n                        throw new FormatError(\"Invalid XRef entry type: \" + type);\n                }\n                if (!this._entries[first + i]) {\n                    this._entries[first + i] = entry;\n                }\n            }\n            this._streamState.entryNum = 0;\n            this._streamState.streamPos = stream.position;\n            entryRanges.splice(0, 2);\n        }\n    };\n    _PdfCrossReference.prototype._getCatalogObj = function () {\n        return this._root;\n    };\n    _PdfCrossReference.prototype._save = function () {\n        var _this = this;\n        var currentLength = this._stream.length;\n        var buffer = [this._newLine.charCodeAt(0), this._newLine.charCodeAt(1), 37, 80, 68, 70, 45];\n        this._writeString(\"\" + this._version + this._newLine, buffer);\n        buffer.push(0x25, 0x83, 0x92, 0xfa, 0xfe);\n        this._writeString(this._newLine, buffer);\n        var updatedCount = 0;\n        var uncompressedCount = 0;\n        if (this._document._fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n            var data = [];\n            var updatedStream_1 = [];\n            var archiveXRef_1 = '';\n            var indexes_1 = [];\n            indexes_1.push(0, 1);\n            var collection_1 = [];\n            var uncompressedOffsets_1 = [];\n            this._cacheMap.forEach(function (value, key) {\n                var dictionary;\n                if (value instanceof _PdfBaseStream) {\n                    dictionary = value.dictionary;\n                }\n                if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                    indexes_1.push(key.objectNumber, 1);\n                    uncompressedOffsets_1.push(currentLength + buffer.length);\n                    var cipher_1;\n                    if (_this._encrypt) {\n                        cipher_1 = _this._encrypt._createCipherTransform(key.objectNumber, key.generationNumber);\n                    }\n                    _this._writeObject(value, buffer, key, cipher_1);\n                    uncompressedCount++;\n                    dictionary._updated = false;\n                }\n            });\n            this._cacheMap.forEach(function (value, key) {\n                if (value instanceof _PdfDictionary) {\n                    if (value._updated && (!value.isCatalog || _this._allowCatalog)) {\n                        archiveXRef_1 += key.objectNumber + \" \" + updatedStream_1.length + _this._newLine;\n                        collection_1.push(key.objectNumber, 1);\n                        updatedCount++;\n                        _this._writeObject(value, updatedStream_1);\n                    }\n                }\n                else if (value instanceof _PdfBaseStream) {\n                    var dictionary = value.dictionary;\n                    if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                        indexes_1.push(key.objectNumber, 1);\n                        uncompressedOffsets_1.push(currentLength + buffer.length);\n                        _this._writeObject(value, buffer, key);\n                        uncompressedCount++;\n                        dictionary._updated = false;\n                    }\n                }\n            });\n            for (var i = 0; i < collection_1.length; i++) {\n                indexes_1.push(collection_1[parseInt(i.toString(), 10)]);\n            }\n            var archiveOffset = void 0;\n            var archiveRef = void 0;\n            if (updatedCount > 0) {\n                archiveRef = this._getNextReference();\n                indexes_1.push(archiveRef.objectNumber, 2);\n                this._writeString(archiveXRef_1, data);\n                this._writeBytes(updatedStream_1, data);\n                var newDict = new _PdfDictionary(this);\n                newDict.set('Type', _PdfName.get('ObjStm'));\n                newDict.set('N', updatedCount);\n                newDict.set('First', archiveXRef_1.length);\n                newDict.set('Length', data.length);\n                var archiveStream = new _PdfStream(data, newDict, 0, data.length);\n                archiveOffset = currentLength + buffer.length;\n                var cipher_2;\n                if (this._encrypt) {\n                    cipher_2 = this._encrypt._createCipherTransform(archiveRef.objectNumber, archiveRef.generationNumber);\n                }\n                this._writeObject(archiveStream, buffer, archiveRef, cipher_2);\n            }\n            var formatValue = Math.max(_getSize(this._stream.bytes.length + buffer.length), _getSize(this._nextReferenceNumber));\n            var newRef = this._getNextReference();\n            var newStartXref = currentLength + buffer.length;\n            var newXref = new _PdfDictionary(this);\n            newXref.set('Type', _PdfName.get('XRef'));\n            newXref.set('Index', indexes_1);\n            newXref.set('W', [1, formatValue, 1]);\n            this._copyTrailer(newXref);\n            if (this._ids && this._ids.length > 0) {\n                newXref.update('ID', [this._ids[0], this._computeMessageDigest(newStartXref)]);\n            }\n            var newXrefData = [];\n            this._writeLong(0, 1, newXrefData);\n            this._writeLong(1, formatValue, newXrefData);\n            this._writeLong(-1, 1, newXrefData);\n            if (uncompressedCount > 0) {\n                for (var index = 0; index < uncompressedCount; index++) {\n                    this._writeLong(1, 1, newXrefData);\n                    this._writeLong(uncompressedOffsets_1[index], formatValue, newXrefData); // eslint-disable-line\n                    this._writeLong(0, 1, newXrefData);\n                }\n            }\n            if (updatedCount > 0) {\n                for (var index = 0; index < updatedCount; index++) {\n                    this._writeLong(2, 1, newXrefData);\n                    this._writeLong(archiveRef.objectNumber, formatValue, newXrefData);\n                    this._writeLong(index, 1, newXrefData);\n                }\n                this._writeLong(1, 1, newXrefData);\n                this._writeLong(archiveOffset, formatValue, newXrefData);\n                this._writeLong(0, 1, newXrefData);\n            }\n            this._writeLong(1, 1, newXrefData);\n            this._writeLong(newStartXref, formatValue, newXrefData);\n            this._writeLong(0, 1, newXrefData);\n            newXref.set('Length', newXrefData.length);\n            var newXrefStream = new _PdfStream(newXrefData, newXref, 0, newXrefData.length);\n            var cipher = void 0;\n            if (this._encrypt) {\n                cipher = this._encrypt._createCipherTransform(newRef.objectNumber, newRef.generationNumber);\n            }\n            this._writeObject(newXrefStream, buffer, newRef, cipher, true);\n            this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n        }\n        else {\n            var tempBuffer_1 = '';\n            this._cacheMap.forEach(function (value, key) {\n                var dictionary;\n                if (value instanceof _PdfDictionary) {\n                    dictionary = value;\n                }\n                else if (value instanceof _PdfBaseStream) {\n                    dictionary = value.dictionary;\n                }\n                if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                    var offsetString = (currentLength + buffer.length).toString();\n                    while (offsetString.length < 10) {\n                        offsetString = '0' + offsetString;\n                    }\n                    var genString = key.generationNumber.toString();\n                    while (genString.length < 5) {\n                        genString = '0' + genString;\n                    }\n                    tempBuffer_1 += key.objectNumber + \" 1\" + _this._newLine + offsetString + \" \" + genString + \" n\" + _this._newLine;\n                    updatedCount++;\n                    _this._writeObject(value, buffer, key);\n                }\n            });\n            var newStartXref = buffer.length + currentLength;\n            this._writeString(\"xref\" + this._newLine + \"0 1\" + this._newLine + \"0000000000 65535 f\" + this._newLine, buffer);\n            if (updatedCount > 0) {\n                this._writeString(tempBuffer_1, buffer);\n            }\n            this._writeString(\"trailer\" + this._newLine, buffer);\n            var newXref = new _PdfDictionary(this);\n            this._copyTrailer(newXref);\n            this._writeDictionary(newXref, buffer, this._newLine);\n            this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n        }\n        var array = new Uint8Array(this._stream.length + buffer.length);\n        array.set(this._stream.bytes);\n        array.set(buffer, this._stream.length);\n        return array;\n    };\n    _PdfCrossReference.prototype._copyTrailer = function (newXref) {\n        var reference = this._getNextReference();\n        newXref.set('Size', reference.objectNumber);\n        newXref.set('Prev', this._prevXRefOffset);\n        var root = this._trailer.getRaw('Root'); // eslint-disable-line\n        if (typeof root !== 'undefined' && root !== null) {\n            newXref.set('Root', root);\n        }\n        var info = this._trailer.getRaw('Info'); // eslint-disable-line\n        if (typeof info !== 'undefined' && info !== null) {\n            newXref.set('Info', info);\n        }\n        var encrypt = this._trailer.getRaw('Encrypt'); // eslint-disable-line\n        if (typeof encrypt !== 'undefined' && encrypt !== null) {\n            newXref.set('Encrypt', encrypt);\n        }\n    };\n    _PdfCrossReference.prototype._computeMessageDigest = function (size) {\n        var _this = this;\n        var time = Math.floor(Date.now() / 1000);\n        var buffer = [time.toString(), '', size.toString()];\n        var info = this._trailer.getRaw('Info');\n        var crossReferenceInfo = new _PdfDictionary();\n        if (info && info instanceof _PdfDictionary) {\n            info.forEach(function (key, value) {\n                if (value && typeof value === 'string') {\n                    crossReferenceInfo.set(key, _stringToPdfString(value));\n                }\n            });\n        }\n        crossReferenceInfo.forEach(function (key, value) {\n            buffer.push(value);\n        });\n        var array = [];\n        buffer.forEach(function (str) {\n            _this._writeString(str, array);\n        });\n        return _bytesToString((new _MD5().hash(new Uint8Array(array))));\n    };\n    _PdfCrossReference.prototype._getNextReference = function () {\n        var reference = new _PdfReference(this._nextReferenceNumber++, 0);\n        reference._isNew = true;\n        return reference;\n    };\n    _PdfCrossReference.prototype._writeObject = function (obj, buffer, reference, transform, isCrossReference) {\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(reference.objectNumber + \" \" + reference.generationNumber + \" obj\" + this._newLine, buffer);\n        }\n        if (obj instanceof _PdfDictionary) {\n            this._writeDictionary(obj, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (obj instanceof _PdfBaseStream) {\n            this._writeStream(obj, buffer, transform, isCrossReference);\n        }\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(\"endobj\" + this._newLine, buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeDictionary = function (dictionary, buffer, spaceChar, transform, isCrossReference) {\n        var _this = this;\n        if (dictionary._currentObj) {\n            dictionary._currentObj._beginSave();\n        }\n        if (dictionary._isFont) {\n            this._writeFontDictionary(dictionary);\n        }\n        this._writeString(\"<<\" + spaceChar, buffer);\n        dictionary.forEach(function (key, value) {\n            _this._writeString(\"/\" + _escapePdfName(key) + \" \", buffer);\n            _this._writeValue(value, buffer, transform, isCrossReference);\n            _this._writeString(spaceChar, buffer);\n        });\n        this._writeString(\">>\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeFontDictionary = function (dictionary) {\n        if (dictionary.has('DescendantFonts')) {\n            var fonts = dictionary.get('DescendantFonts'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('DescendantFonts', [reference]);\n        }\n        if (dictionary.has('ToUnicode')) {\n            var fonts = dictionary.get('ToUnicode'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('ToUnicode', reference);\n        }\n        if (dictionary.has('FontFile2')) {\n            var fonts = dictionary.get('FontFile2'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontFile2', reference);\n        }\n        if (dictionary.has('FontDescriptor')) {\n            var fonts = dictionary.get('FontDescriptor'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontDescriptor', reference);\n        }\n    };\n    _PdfCrossReference.prototype._writeStream = function (stream, buffer, transform, isCrossReference) {\n        var streamBuffer = [];\n        var value = stream.getString();\n        if (!isCrossReference) {\n            var byteArray = [];\n            for (var i = 0; i < value.length; i++) {\n                byteArray.push(value.charCodeAt(i));\n            }\n            if (stream._isCompress) {\n                var dataArray = new Uint8Array(byteArray);\n                var sw = new CompressedStreamWriter();\n                sw.write(dataArray, 0, dataArray.length);\n                sw.close();\n                value = sw.getCompressedString;\n                stream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n            }\n            if (transform) {\n                value = transform.encryptString(value);\n            }\n        }\n        this._writeString(value, streamBuffer);\n        stream.dictionary.update('Length', streamBuffer.length);\n        this._writeDictionary(stream.dictionary, buffer, this._newLine, transform, isCrossReference);\n        this._writeString(\"stream\" + this._newLine, buffer);\n        this._writeBytes(streamBuffer, buffer);\n        this._writeString(this._newLine + \"endstream\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeValue = function (value, buffer, transform, isCrossReference) {\n        if (value instanceof _PdfName) {\n            this._writeString(\"/\" + value.name, buffer);\n        }\n        else if (value instanceof _PdfReference) {\n            this._writeString(value.toString() + \" R\", buffer);\n        }\n        else if (Array.isArray(value)) {\n            this._writeString('[', buffer);\n            var first = true;\n            for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n                var val = value_1[_i];\n                if (!first) {\n                    this._writeString(' ', buffer);\n                }\n                else {\n                    first = false;\n                }\n                this._writeValue(val, buffer, transform, isCrossReference);\n            }\n            this._writeString(']', buffer);\n        }\n        else if (typeof value === 'string') {\n            if (!isCrossReference && transform) {\n                value = transform.encryptString(value);\n            }\n            var isUnicode = false;\n            for (var i = 0; i < value.length; i++) {\n                if (value.charCodeAt([i]) > 255) {\n                    isUnicode = true;\n                    break;\n                }\n            }\n            if (isUnicode) {\n                this._writeUnicodeString(value, buffer);\n            }\n            else {\n                this._writeString(\"(\" + this._escapeString(value) + \")\", buffer);\n            }\n        }\n        else if (typeof value === 'number') {\n            this._writeString(_numberToString(value), buffer);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeString(value.toString(), buffer);\n        }\n        else if (value instanceof _PdfDictionary) {\n            this._writeDictionary(value, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (value instanceof _PdfBaseStream) {\n            this._writeStream(value, buffer, transform, isCrossReference);\n        }\n        else if (value === null) {\n            this._writeString('null', buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeUnicodeString = function (value, buffer) {\n        var byteValues = _stringToBigEndianBytes(value);\n        byteValues.unshift(254, 255);\n        var data = [];\n        for (var i = 0; i < byteValues.length; i++) {\n            var byte = byteValues[Number.parseInt(i.toString(), 10)];\n            switch (byte) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(byte);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(byte);\n                    break;\n                default:\n                    data.push(byte);\n                    break;\n            }\n        }\n        buffer.push('('.charCodeAt(0) & 0xff);\n        for (var i = 0; i < data.length; i++) {\n            buffer.push(data[Number.parseInt(i.toString(), 10)] & 0xff);\n        }\n        buffer.push(')'.charCodeAt(0) & 0xff);\n    };\n    _PdfCrossReference.prototype._writeString = function (value, buffer) {\n        for (var i = 0; i < value.length; i++) {\n            buffer.push(value.charCodeAt(i) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._writeBytes = function (data, buffer) {\n        for (var i = 0; i < data.length; i++) {\n            buffer.push(data[i]); // eslint-disable-line\n        }\n    };\n    _PdfCrossReference.prototype._writeLong = function (value, count, buffer) {\n        for (var i = count - 1; i >= 0; --i) {\n            buffer.push(value >> (i << 3) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._escapeString = function (value) {\n        return value.replace(/([()\\\\\\n\\r])/g, function (substring) {\n            if (substring === '\\n') {\n                return '\\\\n';\n            }\n            else if (substring === '\\r') {\n                return '\\\\r';\n            }\n            return \"\\\\\" + substring;\n        });\n    };\n    _PdfCrossReference.prototype._destroy = function () {\n        this._entries = undefined;\n        this._pendingRefs.clear();\n        this._pendingRefs = undefined;\n        this._cacheMap.clear();\n        this._pendingRefs = undefined;\n        this._root = undefined;\n        this._startXRefQueue = [];\n        this._startXRefQueue = undefined;\n        this._stream = undefined;\n        this._streamState = undefined;\n        this._tableState = undefined;\n        this._topDictionary = undefined;\n        this._trailer = undefined;\n        this._version = undefined;\n        this._crossReferencePosition = undefined;\n    };\n    return _PdfCrossReference;\n}());\nexport { _PdfCrossReference };\nvar _PdfObjectInformation = /** @class */ (function () {\n    function _PdfObjectInformation() {\n    }\n    return _PdfObjectInformation;\n}());\nvar _PdfCrossTableState = /** @class */ (function () {\n    function _PdfCrossTableState() {\n    }\n    return _PdfCrossTableState;\n}());\nvar _PdfStreamState = /** @class */ (function () {\n    function _PdfStreamState() {\n    }\n    return _PdfStreamState;\n}());\n","import { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfField, PdfTextBoxField, PdfButtonField, PdfCheckBoxField, PdfRadioButtonListField, PdfComboBoxField, PdfListBoxField, PdfSignatureField } from './field';\nimport { _getInheritableProperty, _getPageIndex } from './../utils';\nimport { PdfFormFieldsTabOrder, _FieldFlag, _SignatureFlag } from './../enumerator';\nimport { PdfPage } from './../pdf-page';\n/**\n * Represents a PDF form.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form of the PDF document\n * let form: PdfForm = document.form;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfForm = /** @class */ (function () {\n    /**\n     * Represents a loaded from the PDF document.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Form dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     */\n    function PdfForm(dictionary, crossReference) {\n        this._hasKids = false;\n        this._setAppearance = false;\n        this._exportEmptyFields = false;\n        this._fieldCollection = [];\n        this._signFlag = _SignatureFlag.none;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n        this._parsedFields = new Map();\n        this._fields = [];\n        this._createFields();\n    }\n    Object.defineProperty(PdfForm.prototype, \"count\", {\n        /**\n         * Gets the fields count (Read only).\n         *\n         * @returns {number} Fields count.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the fields count\n         * let count: number = form.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fields.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"needAppearances\", {\n        /**\n         *  Gets a value indicating whether need appearances (Read only).\n         *\n         * @returns {boolean} Need appearances.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the boolean flag indicating need appearances\n         * let needAppearances: number = form.needAppearances;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('NeedAppearances')) {\n                this._needAppearances = this._dictionary.get('NeedAppearances');\n            }\n            return this._needAppearances;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"exportEmptyFields\", {\n        /**\n         *  Gets a value indicating whether allow to export empty fields or not.\n         *\n         * @returns {boolean} Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets a value indicating whether allow to export empty fields or not.\n         * let exportEmptyFields: boolean = form.exportEmptyFields;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportEmptyFields;\n        },\n        /**\n         *  Sets a value indicating whether allow to export empty fields or not.\n         *\n         * @param {boolean} value Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Sets a value indicating whether allow to export empty fields or not.\n         * form.exportEmptyFields = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportEmptyFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"_signatureFlag\", {\n        get: function () {\n            return this._signFlag;\n        },\n        set: function (value) {\n            if (value !== this._signFlag) {\n                this._signFlag = value;\n                this._dictionary.update('SigFlags', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfField` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfField} Loaded PDF form field at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.fieldAt = function (index) {\n        if (index < 0 || index >= this._fields.length) {\n            throw Error('Index out of range.');\n        }\n        var field;\n        if (this._parsedFields.has(index)) {\n            field = this._parsedFields.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            var ref = this._fields[index]; // eslint-disable-line\n            if (ref && ref instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(ref);\n            }\n            if (dictionary) {\n                var key = _getInheritableProperty(dictionary, 'FT', false, true, 'Parent');\n                var fieldFlags = 0;\n                var flag = _getInheritableProperty(dictionary, 'Ff', false, true, 'Parent');\n                if (typeof flag !== 'undefined') {\n                    fieldFlags = flag;\n                }\n                if (key) {\n                    switch (key.name.toLowerCase()) {\n                        case 'tx':\n                            field = PdfTextBoxField._load(this, dictionary, this._crossReference, ref);\n                            break;\n                        case 'btn':\n                            if ((fieldFlags & _FieldFlag.pushButton) !== 0) {\n                                field = PdfButtonField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            else if ((fieldFlags & _FieldFlag.radio) !== 0) {\n                                field = PdfRadioButtonListField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            else {\n                                field = PdfCheckBoxField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            break;\n                        case 'ch':\n                            if ((fieldFlags & _FieldFlag.combo) !== 0) {\n                                field = PdfComboBoxField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            else {\n                                field = PdfListBoxField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            break;\n                        case 'sig':\n                            field = PdfSignatureField._load(this, dictionary, this._crossReference, ref);\n                            break;\n                    }\n                }\n                this._parsedFields.set(index, field);\n                if (field && field instanceof PdfField) {\n                    field._annotationIndex = index;\n                }\n            }\n        }\n        return field;\n    };\n    /**\n     * Add a new `PdfField`.\n     *\n     * @param {PdfField} field Field object to add.\n     * @returns {number} Field index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Add a new form field\n     * let index: number = document.form.add(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.add = function (field) {\n        this._fields.push(field._ref);\n        this._dictionary.update('Fields', this._fields);\n        this._parsedFields.set(this._fields.length - 1, field);\n        field._form = this;\n        this._crossReference._root._updated = true;\n        if (field._kidsCount > 0) {\n            for (var i = 0; i < field._kidsCount; i++) {\n                var item = field.itemAt(i);\n                var page = item._page;\n                page.annotations._annotations.push(item._ref);\n                page._pageDictionary.set('Annots', page.annotations._annotations);\n                page._pageDictionary._updated = true;\n            }\n        }\n        else if (field._dictionary.has('Subtype') && field._dictionary.get('Subtype').name === 'Widget') {\n            var page = field._page;\n            page.annotations._annotations.push(field._ref);\n            field._page._pageDictionary.set('Annots', field.page.annotations._annotations);\n            field._page._pageDictionary._updated = true;\n        }\n        if (field instanceof PdfSignatureField) {\n            field._form._signatureFlag = _SignatureFlag.signatureExists | _SignatureFlag.appendOnly;\n        }\n        return (this._fields.length - 1);\n    };\n    /**\n     * Remove the specified PDF form field.\n     *\n     * @param {PdfField} field Field object to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(3);\n     * // Remove the form field\n     * document.form.removeField(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeField = function (field) {\n        var index = this._fields.indexOf(field._ref);\n        if (index >= 0) {\n            this.removeFieldAt(index);\n        }\n    };\n    /**\n     * Remove the PDF form field from specified index.\n     *\n     * @param {number} index Field index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Remove the form field from the specified index\n     * document.form.removeFieldAt(3);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeFieldAt = function (index) {\n        var field = this.fieldAt(index);\n        if (field) {\n            if (field._kidsCount > 0) {\n                for (var i = field._kidsCount - 1; i >= 0; i--) {\n                    var item = field.itemAt(i);\n                    var page = item._getPage();\n                    if (page) {\n                        page._removeAnnotation(item._ref);\n                    }\n                }\n            }\n            else if (field._dictionary.has('Subtype') && field._dictionary.get('Subtype').name === 'Widget') {\n                var page = field.page;\n                if (page) {\n                    page._removeAnnotation(field._ref);\n                }\n            }\n            this._parsedFields.delete(index);\n        }\n        this._fields.splice(index, 1);\n        this._dictionary.set('Fields', this._fields);\n        this._dictionary._updated = true;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation\n     * If true, appearance will not be created. Default appearance has been considered.\n     * If false, new appearance stream has been created from field values and updated as normal appearance.\n     *\n     * @param {boolean} value Set default appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.setDefaultAppearance(false);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.setDefaultAppearance = function (value) {\n        this._setAppearance = !value;\n        this._needAppearances = value;\n        this._dictionary.update('NeedAppearances', value);\n    };\n    PdfForm.prototype.orderFormFields = function (tabOrder) {\n        var _this = this;\n        if (tabOrder === null || typeof tabOrder === 'undefined') {\n            this.orderFormFields(new Map());\n        }\n        else {\n            var tab = void 0;\n            var document_1 = this._crossReference._document;\n            var value = void 0;\n            if (tabOrder && tabOrder instanceof Map) {\n                var setTabOrder = true;\n                if (tabOrder.size > 0) {\n                    this._tabCollection = tabOrder;\n                }\n                else {\n                    setTabOrder = false;\n                    this._tabCollection = tabOrder;\n                }\n                var fieldCollection = new Map();\n                this._fieldCollection = this._getFields();\n                if (this._fieldCollection && this._fieldCollection.length > 0) {\n                    var page = this._fieldCollection[0].page;\n                    if (page && document_1) {\n                        for (var i = 0; i < this._fieldCollection.length; i++) {\n                            var field = this._fieldCollection[Number.parseInt(i.toString(), 10)];\n                            if (field.page) {\n                                var index = _getPageIndex(document_1, this._sortItemByPageIndex(field, true)._pageDictionary);\n                                if (index >= 0) {\n                                    if (fieldCollection.has(index)) {\n                                        value = fieldCollection.get(index);\n                                        value.push(field);\n                                    }\n                                    else {\n                                        value = [];\n                                        value.push(field);\n                                        fieldCollection.set(index, value);\n                                    }\n                                    var page_1 = document_1.getPage(index);\n                                    if (!this._tabCollection.has(index)) {\n                                        this._tabCollection.set(index, page_1.tabOrder);\n                                    }\n                                    if (setTabOrder) {\n                                        page_1.tabOrder = this._tabCollection.get(index);\n                                    }\n                                }\n                            }\n                        }\n                        var fieldsCount_1 = 0;\n                        fieldCollection.forEach(function (value, key) {\n                            _this._tabOrder = _this._tabCollection.get(key);\n                            if (_this._tabOrder !== PdfFormFieldsTabOrder.structure) {\n                                var fields = value;\n                                fields.sort(function (pdfField1, pdfField2) {\n                                    return _this._compareFields(pdfField1, pdfField2);\n                                });\n                                for (var j = 0; j < fields.length; j++) {\n                                    var fieldIndex = _this._fieldCollection.indexOf(fields[Number.parseInt(j.toString(), 10)]);\n                                    if (fieldIndex !== -1 && fieldIndex !== fieldsCount_1 + j) {\n                                        var field = _this._fieldCollection[Number.parseInt(fieldIndex.toString(), 10)];\n                                        _this._fieldCollection.splice(fieldIndex, 1);\n                                        _this._fieldCollection.splice(fieldsCount_1 + j, 0, field);\n                                    }\n                                }\n                            }\n                            fieldsCount_1 += value.length;\n                        });\n                    }\n                }\n            }\n            else {\n                this._tabOrder = tabOrder;\n                tab = this._getOrder(this._tabOrder);\n                this._fieldCollection = this._getFields();\n                this._fieldCollection.sort(function (pdfField1, pdfField2) {\n                    return _this._compareFields(pdfField1, pdfField2);\n                });\n            }\n            this._parsedFields.clear();\n            for (var i = 0; i < this._fieldCollection.length; i++) {\n                this._parsedFields.set(Number.parseInt(i.toString(), 10), this._fieldCollection[Number.parseInt(i.toString(), 10)]);\n                this._fields[Number.parseInt(i.toString(), 10)] = this._fieldCollection[Number.parseInt(i.toString(), 10)]._ref;\n                if (tab) {\n                    this._fieldCollection[Number.parseInt(i.toString(), 10)].page._pageDictionary.update('Tabs', tab);\n                }\n            }\n            this._dictionary.update('Fields', this._fields);\n        }\n    };\n    PdfForm.prototype._createFields = function () {\n        var fields; // eslint-disable-line\n        if (this._dictionary.has('Fields')) {\n            fields = this._dictionary.get('Fields');\n        }\n        var count = 0;\n        var nodes = []; // eslint-disable-line\n        while (typeof fields !== 'undefined' && fields !== null) {\n            for (; count < fields.length; count++) {\n                var ref = fields[count]; // eslint-disable-line\n                var fieldDictionary = void 0;\n                if (ref && ref instanceof _PdfReference) {\n                    fieldDictionary = this._crossReference._fetch(ref);\n                }\n                var fieldKids = void 0;\n                if (fieldDictionary && fieldDictionary.has('Kids')) {\n                    fieldKids = fieldDictionary.get('Kids');\n                    if (typeof fieldKids !== 'undefined' && fieldKids.length > 0) {\n                        for (var i = 0; i < fieldKids.length; i++) {\n                            var reference = fieldKids[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var kidsDict = this._crossReference._fetch(reference);\n                                if (typeof kidsDict !== 'undefined' && !kidsDict.has('Parent')) {\n                                    kidsDict.update('Parent', ref);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (typeof fieldKids === 'undefined') {\n                    if (typeof fieldDictionary !== 'undefined') {\n                        if (this._fields.indexOf(ref) === -1) {\n                            this._fields.push(ref);\n                        }\n                    }\n                }\n                else {\n                    var isNode = (!fieldDictionary.has('FT')) || this._isNode(fieldKids);\n                    if (isNode) {\n                        nodes.push({ fields: fields, count: count });\n                        this._hasKids = true;\n                        count = -1;\n                        fields = fieldKids;\n                    }\n                    else {\n                        this._fields.push(ref);\n                    }\n                }\n            }\n            if (nodes.length === 0) {\n                break;\n            }\n            var entry = nodes.pop(); // eslint-disable-line\n            fields = entry.fields;\n            count = entry.count + 1;\n        }\n    };\n    PdfForm.prototype._isNode = function (kids) {\n        var isNode = false;\n        if (typeof kids !== 'undefined' && kids.length > 0) {\n            var entry = kids[0]; // eslint-disable-line\n            var dictionary = void 0;\n            if (typeof entry !== 'undefined' && entry !== null) {\n                if (entry instanceof _PdfDictionary) {\n                    dictionary = entry;\n                }\n                else if (entry instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(entry);\n                }\n            }\n            if (typeof dictionary !== 'undefined' && dictionary.has('Subtype')) {\n                var subtype = dictionary.get('Subtype');\n                if (subtype && subtype.name !== 'Widget') {\n                    isNode = true;\n                }\n            }\n        }\n        return isNode;\n    };\n    PdfForm.prototype._parseWidgetReferences = function () {\n        var _this = this;\n        if (typeof this._widgetReferences === 'undefined' && this.count > 0) {\n            this._widgetReferences = [];\n            this._fields.forEach(function (fieldReference) {\n                var dictionary = _this._crossReference._fetch(fieldReference);\n                if (dictionary) {\n                    if (dictionary.has('Kids')) {\n                        var fieldKids = dictionary.get('Kids');\n                        if (fieldKids && fieldKids.length > 0) {\n                            fieldKids.forEach(function (kidReference) {\n                                var kidDictionary;\n                                if (kidReference instanceof _PdfDictionary) {\n                                    kidDictionary = kidReference;\n                                }\n                                else if (kidReference instanceof _PdfReference) {\n                                    kidDictionary = _this._crossReference._fetch(kidReference);\n                                }\n                                if (typeof kidDictionary !== 'undefined' && kidDictionary.has('Subtype')) {\n                                    var subtype = kidDictionary.get('Subtype');\n                                    if (subtype && subtype.name === 'Widget') {\n                                        _this._widgetReferences.push(kidReference);\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else {\n                        _this._widgetReferences.push(fieldReference);\n                    }\n                }\n            });\n        }\n        return this._widgetReferences;\n    };\n    PdfForm.prototype._doPostProcess = function (isFlatten) {\n        for (var i = this.count - 1; i >= 0; i--) {\n            var field = this.fieldAt(i);\n            if (field) {\n                field._doPostProcess(isFlatten || field.flatten);\n                if (!isFlatten && field.flatten) {\n                    this.removeFieldAt(i);\n                }\n            }\n        }\n    };\n    PdfForm.prototype._getFieldIndex = function (name) {\n        var index = -1;\n        if (this.count > 0) {\n            if (!this._fieldNames) {\n                this._fieldNames = [];\n            }\n            if (!this._indexedFieldNames) {\n                this._indexedFieldNames = [];\n            }\n            if (!this._actualFieldNames) {\n                this._actualFieldNames = [];\n            }\n            if (!this._indexedActualFieldNames) {\n                this._indexedActualFieldNames = [];\n            }\n            for (var i = 0; i < this.count; i++) {\n                var field = this.fieldAt(i);\n                if (field) {\n                    var fieldName = field.name;\n                    if (fieldName) {\n                        this._fieldNames.push(fieldName);\n                        this._indexedFieldNames.push(fieldName.split('[')[0]);\n                    }\n                    var actualName = field.actualName;\n                    if (actualName) {\n                        this._actualFieldNames.push(actualName);\n                        this._indexedActualFieldNames.push(actualName.split('[')[0]);\n                    }\n                }\n            }\n            var nameIndex = this._fieldNames.indexOf(name);\n            if (nameIndex !== -1) {\n                index = nameIndex;\n            }\n            else {\n                nameIndex = this._indexedFieldNames.indexOf(name);\n                if (nameIndex !== -1) {\n                    index = nameIndex;\n                }\n                else {\n                    nameIndex = this._actualFieldNames.indexOf(name);\n                    if (nameIndex !== -1) {\n                        index = nameIndex;\n                    }\n                    else {\n                        nameIndex = this._indexedActualFieldNames.indexOf(name);\n                        if (nameIndex !== -1) {\n                            index = nameIndex;\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfForm.prototype._getFields = function () {\n        var fields = [];\n        for (var i = 0; i < this._fields.length; i++) {\n            var field = this.fieldAt(i);\n            if (field && field instanceof PdfField) {\n                fields.push(field);\n            }\n        }\n        return fields;\n    };\n    PdfForm.prototype._getOrder = function (tabOrder) {\n        if (tabOrder !== PdfFormFieldsTabOrder.none) {\n            var tabs = '';\n            if (tabOrder === PdfFormFieldsTabOrder.row) {\n                tabs = 'R';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.column) {\n                tabs = 'C';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.structure) {\n                tabs = 'S';\n            }\n            return _PdfName.get(tabs);\n        }\n        return null;\n    };\n    PdfForm.prototype._compareFields = function (field1, field2) {\n        var result = 0;\n        var xdiff;\n        var index;\n        var page1 = field1.page;\n        var page2 = field2.page;\n        if (page1 && !page1._isNew && page1 instanceof PdfPage && page2 && !page2._isNew && page2 instanceof PdfPage) {\n            var page1Index = this._sortItemByPageIndex(field1, false)._pageIndex;\n            var page2Index = this._sortItemByPageIndex(field2, false)._pageIndex;\n            var rectangle1 = void 0;\n            if (field1._dictionary.has('Kids')) {\n                rectangle1 = this._getItemRectangle(field1);\n            }\n            else {\n                rectangle1 = this._getRectangle(field1._dictionary);\n            }\n            var rectangle2 = void 0;\n            if (field2._dictionary.has('Kids')) {\n                rectangle2 = this._getItemRectangle(field2);\n            }\n            else {\n                rectangle2 = this._getRectangle(field2._dictionary);\n            }\n            var firstHeight = rectangle1[3] - rectangle1[1];\n            var secondHeight = rectangle2[3] - rectangle2[1];\n            if (rectangle1 && rectangle1.length >= 2 && rectangle2 && rectangle2.length >= 2) {\n                var x1 = rectangle1[0];\n                var y1 = rectangle1[1];\n                var x2 = rectangle2[0];\n                var y2 = rectangle2[1];\n                if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                    typeof y1 === 'number' && typeof y2 === 'number') {\n                    index = page1Index - page2Index;\n                    if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            var isValid = xdiff === -1 && y1 > y2 && (y1 - firstHeight / 2) < y2;\n                            isValid = isValid || (xdiff === 1 && y2 > y1 && (y2 - secondHeight / 2) < y1);\n                            if (isValid) {\n                                xdiff = 0;\n                            }\n                        }\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                        xdiff = this._compare(x1, x2);\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.manual ||\n                        this._tabOrder === PdfFormFieldsTabOrder.none || this._tabOrder === PdfFormFieldsTabOrder.structure) {\n                        if (field1 instanceof PdfField && field2 instanceof PdfField) {\n                            var field1Index = field1.tabIndex;\n                            var field2Index = field2.tabIndex;\n                            xdiff = this._compare(field1Index, field2Index);\n                            if (index !== 0) {\n                                result = index;\n                            }\n                            else {\n                                result = xdiff;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._getRectangle = function (dictionary) {\n        var rect;\n        if (dictionary.has('Rect')) {\n            rect = dictionary.getArray('Rect');\n        }\n        return rect;\n    };\n    PdfForm.prototype._getItemRectangle = function (field) {\n        var result;\n        var dictionary = field._dictionary;\n        if (dictionary.has('Kids')) {\n            var kids = dictionary.getArray('Kids');\n            if (kids && kids.length >= 1) {\n                if (kids.length === 1) {\n                    result = this._getRectangle(kids[0]);\n                }\n                else {\n                    if (field && field.itemsCount > 1) {\n                        result = this._getRectangle(field.itemAt(0)._dictionary);\n                    }\n                    else {\n                        result = this._getRectangle(kids[0]);\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._compare = function (x, y) {\n        if (x > y) {\n            return 1;\n        }\n        else if (x < y) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    };\n    PdfForm.prototype._compareKidsElement = function (x, y) {\n        var xDictionary = this._crossReference._fetch(x);\n        var yDictionary = this._crossReference._fetch(y);\n        var xRect = this._getRectangle(xDictionary);\n        var yRect = this._getRectangle(yDictionary);\n        var result;\n        if (xRect && xRect.length >= 2 && yRect && yRect.length >= 2) {\n            var x1 = xRect[0];\n            var y1 = xRect[1];\n            var x2 = yRect[0];\n            var y2 = yRect[1];\n            if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                typeof y1 === 'number' && typeof y2 === 'number') {\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(y2, y1);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(x1, x2);\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(x1, x2);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(y2, y1);\n                    }\n                }\n                else {\n                    result = 0;\n                }\n                return result;\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._sortItemByPageIndex = function (field, hasPageTabOrder) {\n        var page = field.page;\n        var tabOrder = this._tabOrder;\n        this._tabOrder = hasPageTabOrder ? field.page.tabOrder : tabOrder;\n        this._sortFieldItems(field);\n        if (field._isLoaded && field._kidsCount > 1) {\n            page = field.itemAt(0).page;\n        }\n        this._tabOrder = tabOrder;\n        if (typeof page === 'undefined') {\n            page = field.page;\n        }\n        return page;\n    };\n    PdfForm.prototype._sortFieldItems = function (field) {\n        var _this = this;\n        if (field._isLoaded && (field instanceof PdfTextBoxField ||\n            field instanceof PdfListBoxField ||\n            field instanceof PdfCheckBoxField ||\n            field instanceof PdfRadioButtonListField)) {\n            var collection = field._parseItems(); // eslint-disable-line\n            collection.sort(function (item1, item2) {\n                return _this._compareFieldItem(item1, item2);\n            });\n            field._parsedItems.clear();\n            for (var i = 0; i < collection.length; i++) {\n                field._parsedItems.set(i, collection[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    PdfForm.prototype._compareFieldItem = function (item1, item2) {\n        var result = 0;\n        if (typeof item1 !== 'undefined' && typeof item2 !== 'undefined') {\n            var page1 = item1.page;\n            var page2 = item2.page;\n            var array1 = this._getRectangle(item1._dictionary);\n            var array2 = this._getRectangle(item2._dictionary);\n            if (array1 && array2) {\n                var x1 = array1[0];\n                var y1 = array1[1];\n                var x2 = array2[0];\n                var y2 = array2[1];\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(x1, x2);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._clear = function () {\n        this._fields = [];\n        this._parsedFields = new Map();\n    };\n    return PdfForm;\n}());\nexport { PdfForm };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfParser, _PdfLexicalOperator } from '../pdf-parser';\nimport { _PdfStream } from '../base-stream';\nimport { _PdfCommand } from './../pdf-primitives';\nimport { _ExportHelper } from './xfdf-document';\nimport { PdfUriAnnotation, PdfRubberStampAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfRectangleAnnotation, PdfDocumentLinkAnnotation } from './../annotations/annotation';\nimport { _bytesToString, _getNewGuidString, _byteArrayToHexString, _stringToBytes } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField } from './../form/field';\nimport { _StringTokenizer } from './../fonts/string-layouter';\nimport { _PdfFlateStream } from '../flate-stream';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\nvar _FdfDocument = /** @class */ (function (_super) {\n    __extends(_FdfDocument, _super);\n    function _FdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        _this._annotationObjects = new Map(); // eslint-disable-line\n        _this._specialCharacters = 'âãÏÓ';\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _FdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _FdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _FdfDocument.prototype._save = function () {\n        var _this = this;\n        var objectID = 0;\n        var objectArray = [];\n        if (!this._isAnnotationExport) {\n            if (this._asPerSpecification) {\n                this.fdfString += '%FDF-1.2\\n%' + this._specialCharacters + '\\r\\n1 0 obj\\r<</FDF<</F(';\n                this.fdfString += this._fileName + ')';\n                this.fdfString += '/Fields[';\n            }\n            else {\n                this.fdfString += '%FDF-1.2\\n';\n            }\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    var value = this._exportFormFieldsData(field);\n                    if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField\n                        || field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                        objectID++;\n                    }\n                    if (!this._asPerSpecification) {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V ';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '<' + this._stringToHexString((Array.isArray(value) ? value[0] : value)) + '>';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '<' + this._stringToHexString(value[Number.parseInt(j.toString(), 10)]) + '>';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += ' >>endobj\\n';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V /';\n                            this.fdfString += value + ' >>endobj\\n';\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '(' + (Array.isArray(value) ? value[0] : value) + ')';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '(' + value[Number.parseInt(j.toString(), 10)] + ')';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += '>>';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V/' + value + '>>';\n                        }\n                    }\n                }\n            }\n            if (this._asPerSpecification) {\n                this.fdfString += ']';\n                this.fdfString += '/ID[]/UF(' + this._fileName + ')>>/Type/Catalog>>\\rendobj\\rtrailer\\r\\n<</Root 1 0 R>>\\r\\n';\n                this.fdfString += '%%EOF\\r\\n';\n            }\n            else {\n                this.fdfString += (this._table.size + 1) + ' 0 obj<</F <' + this._stringToHexString(this._fileName) + '>  /Fields [';\n                for (var i = 0; i < this._table.size; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this.fdfString += objectArray[Number.parseInt(i.toString(), 10)] + ' 0 R ';\n                    }\n                }\n                this.fdfString += ']>>endobj\\n';\n                this.fdfString += (objectArray.length + 2) + ' 0 obj<</Version /1.4 /FDF ' + (objectArray.length + 1) + ' 0 R>>endobj\\n';\n                this.fdfString += 'trailer\\n<</Root ' + (objectArray.length + 2) + ' 0 R>>';\n            }\n        }\n        var arrayBuffer = new ArrayBuffer(this.fdfString.length * 1);\n        var result = new Uint8Array(arrayBuffer);\n        result.forEach(function (val, i) {\n            result[i] = _this.fdfString.charCodeAt(i); // eslint-disable-line\n        });\n        return result;\n    };\n    _FdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        this._isAnnotationImport = true;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, true, false);\n        this._readFdfData(parser);\n        if (this._annotationObjects !== null && typeof this._annotationObjects !== 'undefined' && this._annotationObjects.size > 0) {\n            this._annotationObjects.clear();\n        }\n        if (this._table !== null && typeof this._table !== 'undefined' && this._table.size > 0) {\n            this._table.clear();\n        }\n    };\n    _FdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, false, false);\n        this._readFdfData(parser);\n    };\n    _FdfDocument.prototype._readFdfData = function (parser) {\n        var _this = this;\n        var token = parser.getObject(); // eslint-disable-line\n        if (this._isAnnotationImport) {\n            var key = '';\n            while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                if (token instanceof _PdfDictionary) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token instanceof _PdfStream || token instanceof _PdfFlateStream) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token !== null && Number.isInteger(token) && token !== 0) {\n                    if (parser.first >= 0) {\n                        key = token.toString() + ' ' + parser.first.toString();\n                    }\n                }\n                else if (token instanceof _PdfCommand && token.command !== null && typeof token.command !== 'undefined' &&\n                    token.command === 'trailer') {\n                    key = token.command;\n                }\n                token = parser.getObject();\n            }\n            this._annotationObjects = this._parseAnnotationData();\n            this._annotationObjects.forEach(function (value, key) {\n                var dictionary = value;\n                dictionary._crossReference = _this._crossReference;\n                dictionary._updated = true;\n                if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.has('Page')) {\n                    var pageNumber = dictionary.get('Page');\n                    if (pageNumber !== null && typeof pageNumber !== 'undefined') {\n                        var pageIndex = pageNumber;\n                        if (pageIndex < _this._document.pageCount) {\n                            var page = _this._document.getPage(pageIndex);\n                            var pageDictionary = page._pageDictionary;\n                            if (pageDictionary !== null && typeof pageDictionary !== 'undefined') {\n                                var annotations = page.annotations;\n                                var annotation = annotations._parseAnnotation(dictionary);\n                                if (annotation !== null && typeof annotation !== 'undefined') {\n                                    annotation._isImported = true;\n                                    var reference = _this._crossReference._getNextReference();\n                                    _this._crossReference._cacheMap.set(reference, dictionary);\n                                    if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                        _this._addReferenceToGroup(reference, dictionary);\n                                    }\n                                    annotation._ref = reference;\n                                    var index = annotations._annotations.length;\n                                    annotations._annotations.push(reference);\n                                    pageDictionary.set('Annots', annotations._annotations);\n                                    pageDictionary._updated = true;\n                                    annotations._parsedAnnotations.set(index, annotation);\n                                    _this._handlePopup(annotations, reference, dictionary, pageDictionary);\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        }\n        else {\n            token = parser.getObject();\n            if (!this._asPerSpecification) {\n                token = parser.getObject();\n                if (token instanceof _PdfCommand && token.command !== null) {\n                    token = token.command;\n                }\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary) {\n                        var t = token.getArray('T');\n                        var v = void 0;\n                        if (token._map.V instanceof _PdfName) {\n                            v = token.getArray('V').name;\n                        }\n                        else {\n                            v = token.getArray('V');\n                        }\n                        if (t !== null && t !== undefined && t.length > 0) {\n                            this._table.set(t, v);\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            else {\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary && token !== null && token._map.FDF !== null && token._map.FDF !== undefined) {\n                        token = token._map.FDF;\n                        if (token instanceof _PdfDictionary && token._map.Fields !== null && token._map.Fields !== undefined) {\n                            token = token._map.Fields;\n                            if (token !== null && token !== undefined) {\n                                for (var i = 0; i < token.length; i++) {\n                                    var field = token[Number.parseInt(i.toString(), 10)];\n                                    if (field instanceof _PdfDictionary && field !== null && field !== undefined) {\n                                        var t = field.getArray('T');\n                                        var v = void 0;\n                                        if (field._map.V instanceof _PdfName) {\n                                            v = field.getArray('V').name;\n                                        }\n                                        else {\n                                            v = field.getArray('V');\n                                        }\n                                        if (t !== null && t !== undefined && t.length > 0) {\n                                            this._table.set(t, v);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            this._importField();\n        }\n    };\n    _FdfDocument.prototype._parseAnnotationData = function () {\n        var objects = new Map(); // eslint-disable-line\n        var mappedObjects = new Map(); // eslint-disable-line  \n        objects = this._table;\n        if (objects !== null && typeof objects !== 'undefined' && objects.size > 0 && objects.has('trailer')) {\n            var trailer = objects.get('trailer');\n            if (trailer instanceof _PdfDictionary && trailer !== null && typeof trailer !== 'undefined' && trailer.has('Root')) {\n                var holder = trailer.getRaw('Root');\n                if (holder !== null && typeof holder !== 'undefined') {\n                    var rootKey = holder.objectNumber.toString() + ' ' + holder.generationNumber.toString();\n                    if (objects.has(rootKey)) {\n                        var root = objects.get(rootKey);\n                        if (root !== null && typeof root !== 'undefined' && root.has('FDF')) {\n                            var fdf = root.get('FDF');\n                            if (fdf !== null && typeof fdf !== 'undefined' && fdf.has('Annots')) {\n                                var annots = fdf.get('Annots');\n                                if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                                    for (var i = 0; i < annots.length; i++) {\n                                        var annot = annots[Number.parseInt(i.toString(), 10)];\n                                        var key = annot.objectNumber.toString() + ' ' + annot.generationNumber.toString();\n                                        if (objects.has(key)) {\n                                            annot = objects.get(key);\n                                            mappedObjects.set(key, annot);\n                                            objects.delete(key);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    objects.delete(rootKey);\n                }\n            }\n            objects.delete('trailer');\n        }\n        return mappedObjects;\n    };\n    _FdfDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field) {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        if (Array.isArray(value)) {\n                            param = value;\n                        }\n                        else {\n                            param.push(value);\n                        }\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    //#region Export Annotations\n    _FdfDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var genNumber = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace;\n        var startDictionary = '<<' + '/';\n        this.fdfString += '%FDF-1.2' + '\\r\\n';\n        var index = 2;\n        var annot = new Array();\n        var appearance = this.exportAppearance;\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page !== null && typeof page !== 'undefined' && page.annotations.count > 0) {\n                for (var k = 0; k < page.annotations.count; k++) {\n                    var annotation = page.annotations.at(k);\n                    if (annotation !== null && typeof annotation !== 'undefined' && !(annotation instanceof PdfFileLinkAnnotation ||\n                        annotation instanceof PdfTextWebLinkAnnotation || annotation instanceof PdfDocumentLinkAnnotation ||\n                        annotation instanceof PdfUriAnnotation)) {\n                        if (annotation instanceof PdfRubberStampAnnotation || annotation instanceof PdfRectangleAnnotation) {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, true);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                        else {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, appearance);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                    }\n                }\n            }\n        }\n        if (index !== 2) {\n            var root = '1' + genNumber;\n            this.fdfString += root + 'obj' + '\\r\\n' + startDictionary + 'FDF' + startDictionary + 'Annots' + '[';\n            for (var i = 0; i < annot.length - 1; i++) {\n                this.fdfString += annot[Number.parseInt(i.toString(), 10)] + genNumber + 'R' + ' ';\n            }\n            this.fdfString += annot[annot.length - 1] + genNumber + 'R' + ']' + '/' + 'F' + '(' + this._fileName + ')' + '/' + 'UF' + '(';\n            this.fdfString += this._fileName + ')>>' + '/' + 'Type' + '/' + 'Catalog' + '>>' + '\\r\\n' + 'endobj' + '\\r\\n';\n            this.fdfString += 'trailer' + '\\r\\n' + startDictionary + 'Root' + ' ' + root + 'R' + '>>' + '\\r\\n' + '%%EOF' + '\\r\\n';\n        }\n    };\n    _FdfDocument.prototype._exportAnnotation = function (annotation, fdfString, index, annot, pageIndex, appearance) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var dictionary = annotation._dictionary;\n        var startObject = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace + 'obj' + '\\r\\n';\n        var endObject = '\\r\\n' + 'endobj' + '\\r\\n';\n        this._annotationID = index.toString();\n        this.fdfString += index + startObject + '<<';\n        var list = new Map(); // eslint-disable-line\n        var streamReference = new Array();\n        annot.push(this._annotationID);\n        dictionary.set('Page', pageIndex);\n        var annotValue = this._getEntries(list, streamReference, index, dictionary, this.fdfString, appearance);\n        index = annotValue.index;\n        list = annotValue.list;\n        streamReference = annotValue.streamReference;\n        delete dictionary._map.Page;\n        this.fdfString += '>>' + endObject;\n        var _loop_1 = function () {\n            var keys = Array();\n            list.forEach(function (key, value) {\n                keys.push(value);\n            });\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[Number.parseInt(i.toString(), 10)];\n                if (list.get(key) instanceof _PdfDictionary || list.get(key) instanceof _PdfStream ||\n                    list.get(key) instanceof _PdfFlateStream) {\n                    if (list.get(key) instanceof _PdfDictionary) {\n                        dictionary = list.get(key);\n                    }\n                    else {\n                        dictionary = list.get(key).dictionary;\n                    }\n                    if (dictionary !== null && typeof dictionary !== 'undefined') {\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Type')) {\n                            var type = dictionary.get('Type');\n                            if (type !== null && typeof type !== 'undefined' && type.name === 'Annot') {\n                                annot.push(key.toString());\n                                dictionary.set('Page', pageIndex);\n                            }\n                        }\n                        this_1.fdfString += key + startObject + '<<';\n                        var value = this_1._getEntries(list, streamReference, index, dictionary, this_1.fdfString, appearance);\n                        list = value.list;\n                        streamReference = value.streamReference;\n                        index = value.index;\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Page')) {\n                            delete dictionary._map.Page;\n                        }\n                        this_1.fdfString += '>>';\n                        if (streamReference !== null && typeof streamReference !== 'undefined' && streamReference.indexOf(key) !== -1) {\n                            this_1._appendStream(list.get(key), this_1.fdfString);\n                        }\n                        this_1.fdfString += endObject;\n                    }\n                }\n                list.delete(key);\n            }\n        };\n        var this_1 = this;\n        while (list.size > 0) {\n            _loop_1();\n        }\n        index++;\n        helper.index = index;\n        helper.annot = annot;\n        return helper;\n    };\n    _FdfDocument.prototype._appendStream = function (value, fdfString) {\n        var stream = value; // eslint-disable-line\n        this.fdfString = fdfString;\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            if (value instanceof _PdfFlateStream) {\n                stream = value.stream;\n            }\n            else {\n                stream = value;\n            }\n        }\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            var byteArray = stream.getBytes();\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            var compressString = sw.getCompressedString;\n            this.fdfString += 'stream' + '\\r\\n';\n            this.fdfString += compressString;\n            this.fdfString += '\\r\\n' + 'endstream';\n        }\n    };\n    _FdfDocument.prototype._getEntries = function (list, // eslint-disable-line\n    streamReference, index, dictionary, fdfString, hasAppearance) {\n        var _this = this;\n        var flag = false;\n        var helper = new _FdfHelper();\n        this.fdfString = fdfString;\n        var listDictionary = list; // eslint-disable-line\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP'))) {\n                if (key !== 'P') {\n                    _this.fdfString += '/' + key;\n                }\n                if (key === 'Sound' || key === 'F' || hasAppearance) {\n                    flag = true;\n                }\n                var primitive = value; // eslint-disable-line\n                if (typeof primitive === 'string') {\n                    _this.fdfString += '(' + _this._getFormattedString(primitive) + ')';\n                }\n                else if (primitive instanceof _PdfName) {\n                    _this.fdfString += '/' + primitive.name;\n                }\n                else if (primitive instanceof Array) {\n                    primitive = primitive; // eslint-disable-line\n                    var value_1 = _this._appendArray(primitive, _this.fdfString, index, flag, listDictionary, streamReference);\n                    listDictionary = value_1.list;\n                    streamReference = value_1.streamReference;\n                    index = value_1.index;\n                }\n                else if (typeof primitive === 'number') {\n                    _this.fdfString += ' ' + primitive.toString();\n                }\n                else if (typeof primitive === 'boolean') {\n                    _this.fdfString += ' ' + ((primitive) ? 'true' : 'false');\n                }\n                else if (primitive instanceof _PdfDictionary) {\n                    _this.fdfString += '<<';\n                    primitive = primitive;\n                    var value_2 = _this._getEntries(listDictionary, streamReference, index, primitive, _this.fdfString, hasAppearance);\n                    listDictionary = value_2.list;\n                    streamReference = value_2.streamReference;\n                    index = value_2.index;\n                    _this.fdfString += '>>';\n                }\n                else if (primitive instanceof _PdfReference) {\n                    var pageNumber = dictionary.get('Page');\n                    if (key === 'Parent') {\n                        _this.fdfString += ' ' + _this._annotationID + ' 0 R';\n                        _this.fdfString += '/Page ' + pageNumber;\n                    }\n                    else if (key === 'IRT') {\n                        if (dictionary.has('NM')) {\n                            var name_1 = dictionary.get('NM');\n                            if (name_1 !== null) {\n                                _this.fdfString += '(' + _this._getFormattedString(name_1) + ')';\n                            }\n                        }\n                    }\n                    else if (key !== 'P') {\n                        var holder = primitive;\n                        if (holder !== null && typeof holder !== 'undefined') {\n                            index++;\n                            _this.fdfString += ' ' + index + ' 0 R';\n                            if (flag) {\n                                streamReference.push(index);\n                            }\n                            listDictionary.set(index, dictionary.get(key));\n                        }\n                    }\n                }\n                flag = false;\n            }\n        });\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendArray = function (array, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        this.fdfString += '[';\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (array !== null && array.length > 0) {\n            var count = array.length;\n            for (var i = 0; i < count; i++) {\n                var element = array[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (i !== 0 && (typeof element === 'number' || element instanceof _PdfReference || typeof element === 'boolean')) {\n                    this.fdfString += ' ';\n                }\n                var value = this._appendElement(element, this.fdfString, index, flag, listDictionary, streamReference);\n                listDictionary = value.list;\n                streamReference = value.streamReference;\n                index = value.index;\n            }\n        }\n        this.fdfString += ']';\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendElement = function (element, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (typeof element === 'number') {\n            this.fdfString += (element).toString();\n        }\n        else if (element instanceof _PdfName) {\n            this.fdfString += (element.name.toString());\n        }\n        else if (element instanceof Array) {\n            element = element; // eslint-disable-line\n            var value = this._appendArray(element, this.fdfString, index, flag, listDictionary, streamReference);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n        }\n        else if (element instanceof _PdfDictionary) {\n            this.fdfString += '<<';\n            element = element;\n            var value = this._getEntries(listDictionary, streamReference, index, element, this.fdfString, flag);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n            this.fdfString += '>>';\n        }\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._getFormattedString = function (value) {\n        var result = '';\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charCodeAt(i);\n            if (c === 40 || c === 41) {\n                result += '\\'';\n            }\n            result += String.fromCharCode(c);\n        }\n        return result;\n    };\n    //#endregion\n    _FdfDocument.prototype._checkFdf = function (element) {\n        if (element.includes(this._specialCharacters) || element.includes('Ã¢Ã£Ã\\u008fÃ\\u0093')) {\n            this._asPerSpecification = true;\n        }\n        if (element.startsWith('%')) {\n            var token = element.substring(1, 5);\n            if (token !== 'FDF-') { // eslint-disable-line\n                throw new Error('Invalid FDF file.');\n            }\n        }\n    };\n    _FdfDocument.prototype._stringToHexString = function (text) {\n        var hexString = '';\n        if (text !== null && typeof text !== 'undefined' && text.length > 0) {\n            var bytesValue = _stringToBytes(text);\n            hexString = _byteArrayToHexString(bytesValue);\n        }\n        return hexString;\n    };\n    return _FdfDocument;\n}(_ExportHelper));\nexport { _FdfDocument };\nvar _FdfHelper = /** @class */ (function () {\n    function _FdfHelper() {\n    }\n    return _FdfHelper;\n}());\nexport { _FdfHelper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestinationMode, PdfRotationAngle, PdfTextStyle } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { _checkRotation, _getPageIndex, _obtainDestination, _parseColor } from './utils';\n/**\n * Represents a base class for all bookmark objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmarkBase = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBookmarkBase` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Outline dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmarkBase(dictionary, crossReference) {\n        this._bookMarkList = [];\n        this._isExpanded = false;\n        this._isLoadedBookmark = false;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n    }\n    Object.defineProperty(PdfBookmarkBase.prototype, \"count\", {\n        /**\n         * Gets the bookmark count (Read only).\n         *\n         * @returns {number} Number of bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Get bookmark count\n         * let bookmarkCount: number = bookmarks.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoadedBookmark && this._bookMarkList.length === 0) {\n                this._reproduceTree();\n            }\n            return this._bookMarkList.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfBookmark` at the specified index.\n     *\n     * @param {number} index Bookmark index.\n     * @returns {PdfBookmark} Bookmark at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.at = function (index) {\n        var bookmark;\n        if (index < 0 || index >= this.count) {\n            throw Error('Index out of range.');\n        }\n        if (this._bookMarkList.length > 0 && index < this._bookMarkList.length) {\n            bookmark = this._bookMarkList[Number.parseInt(index.toString(), 10)];\n        }\n        return bookmark;\n    };\n    /**\n     * Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     *\n     * @param {PdfBookmark} outline Bookmark.\n     * @returns {boolean} whether the bookmark is present or not.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get the bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     * let isPresent: boolean = bookmarks.contains(bookmark);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.contains = function (outline) {\n        return this._bookMarkList.indexOf(outline) !== -1;\n    };\n    PdfBookmarkBase.prototype._reproduceTree = function () {\n        var bookmark = this._getFirstBookmark(this);\n        var isBookmark = (bookmark) ? true : false;\n        while (isBookmark && bookmark._dictionary) {\n            this._bookMarkList.push(bookmark);\n            bookmark = bookmark._next;\n            isBookmark = (bookmark) ? true : false;\n        }\n    };\n    PdfBookmarkBase.prototype._getFirstBookmark = function (bookmarkBase) {\n        var bookmarkBaseDictionary = bookmarkBase._dictionary;\n        var bookMark;\n        if (bookmarkBaseDictionary && bookmarkBaseDictionary.has('First')) {\n            var bookMarkDictionary = bookmarkBaseDictionary.get('First');\n            if (bookMarkDictionary) {\n                bookMark = new PdfBookmark(bookMarkDictionary, this._crossReference);\n            }\n        }\n        return bookMark;\n    };\n    return PdfBookmarkBase;\n}());\nexport { PdfBookmarkBase };\n/**\n * Represents a bookmark in a PDF document\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmark = /** @class */ (function (_super) {\n    __extends(PdfBookmark, _super);\n    /**\n     * Initializes a new instance of the `PdfBookmark` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Bookmark dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmark(dictionary, crossReference) {\n        var _this = _super.call(this, dictionary, crossReference) || this;\n        if (!_this._dictionary.has('Dest') && _this._dictionary.has('A')) {\n            var actionDictionary = _this._dictionary.get('A');\n            if (actionDictionary && actionDictionary.has('D')) {\n                var destinationArray = actionDictionary.getRaw('D'); // eslint-disable-line\n                _this._dictionary.update('Dest', destinationArray);\n            }\n        }\n        _this._isLoadedBookmark = true;\n        return _this;\n    }\n    Object.defineProperty(PdfBookmark.prototype, \"destination\", {\n        /**\n         * Gets the destination (Read only).\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the destination\n         * let destination: PdfDestination = bookmark.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var namedDestination = this._obtainNamedDestination();\n            if (namedDestination === null || typeof namedDestination === 'undefined') {\n                value = _obtainDestination(this._dictionary, 'Dest');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"namedDestination\", {\n        /**\n         * Gets the named destination (Read only).\n         *\n         * @returns {PdfNamedDestination} Named destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._namedDestination === null || typeof this._namedDestination === 'undefined') {\n                this._namedDestination = this._obtainNamedDestination();\n            }\n            return this._namedDestination;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"title\", {\n        /**\n         * Gets the bookmark title (Read only).\n         *\n         * @returns {string} Bookmark title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark title\n         * let bookmarkTitle: string = bookmark.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._title === null || typeof this._title === 'undefined') {\n                this._title = this._obtainTitle();\n            }\n            return this._title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"color\", {\n        /**\n         * Gets the bookmark color (Read only).\n         *\n         * @returns {number[]} Bookmark color.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark color\n         * let color: number[] = bookmark.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._color === null || typeof this._color === 'undefined') {\n                if (this._dictionary.has('C')) {\n                    this._color = _parseColor(this._dictionary.getArray('C'));\n                }\n            }\n            return (this._color) ? this._color : [0, 0, 0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"textStyle\", {\n        /**\n         * Gets the textStyle (Read only).\n         *\n         * @returns {PdfTextStyle} Text style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the textStyle\n         * let textStyle: PdfTextStyle = bookmark.textStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._textStyle === null || typeof this._textStyle === 'undefined') {\n                this._textStyle = this._obtainTextStyle();\n            }\n            return this._textStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"isExpanded\", {\n        /**\n         * Gets the boolean flag indicating whether the bookmark is expanded or not (Read only).\n         *\n         * @returns {boolean} whether the bookmark is expanded or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the boolean flag indicating whether the bookmark is expanded or not\n         * let isExpanded: boolean = bookmark.isExpanded;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Count')) {\n                var value = this._dictionary.get('Count');\n                if (value >= 0) {\n                    return true;\n                }\n            }\n            return this._isExpanded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"_next\", {\n        get: function () {\n            var nextBookmark;\n            if (this._dictionary.has('Next')) {\n                var dictionary = this._dictionary.get('Next');\n                if (dictionary) {\n                    nextBookmark = new PdfBookmark(dictionary, this._crossReference);\n                }\n            }\n            return nextBookmark;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBookmark.prototype._obtainTextStyle = function () {\n        var style = PdfTextStyle.regular;\n        if (this._dictionary.has('F')) {\n            var flag = this._dictionary.get('F');\n            var flagValue = 0;\n            if (typeof flag !== 'undefined' && flag !== null) {\n                flagValue = flag;\n            }\n            style |= flagValue;\n        }\n        return style;\n    };\n    PdfBookmark.prototype._obtainTitle = function () {\n        var value = '';\n        if (this._dictionary.has('Title')) {\n            value = this._dictionary.get('Title');\n        }\n        return value;\n    };\n    PdfBookmark.prototype._obtainNamedDestination = function () {\n        var document = this._crossReference._document;\n        var destinationCollection;\n        if (document) {\n            destinationCollection = document._destinationCollection;\n        }\n        var destination; // eslint-disable-line\n        var namedDestination;\n        if (destinationCollection) {\n            var dictionary = this._dictionary;\n            if (dictionary.has('A')) {\n                var action = dictionary.get('A');\n                if (action.has('D')) {\n                    destination = action.get('D');\n                }\n            }\n            else if (dictionary.has('Dest')) {\n                destination = dictionary.get('Dest');\n            }\n            if (destination) {\n                var value = void 0;\n                if (destination instanceof _PdfName) {\n                    value = destination.name;\n                }\n                else if (typeof destination === 'string') {\n                    value = destination;\n                }\n                if (value) {\n                    var namedDestinations = destinationCollection._namedDestinations;\n                    for (var i = 0; i < namedDestinations.length; i++) {\n                        namedDestination = namedDestinations[Number.parseInt(i.toString(), 10)];\n                        if (namedDestination._title === value) {\n                            destination = namedDestination;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return namedDestination;\n    };\n    return PdfBookmark;\n}(PdfBookmarkBase));\nexport { PdfBookmark };\n/**\n * Represents a named destination in a PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Gets the named destination\n * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfNamedDestination = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNamedDestination` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Destination dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfNamedDestination(dictionary, crossReference) {\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n    }\n    Object.defineProperty(PdfNamedDestination.prototype, \"destination\", {\n        /**\n         * Gets the destination.\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the destination\n         * let destination: PdfDestination = namedDestination.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destination;\n        },\n        /**\n         * Sets the destination.\n         *\n         * @param {PdfDestination} value destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the destination\n         * namedDestination.destination = new PdfDestination(page, [100, 200]);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                value._parent = this;\n                this._destination = value;\n                this._destination._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNamedDestination.prototype, \"title\", {\n        /**\n         * Gets the title.\n         *\n         * @returns {string} title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the title\n         * let title: string = namedDestination.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._title;\n        },\n        /**\n         * Sets the title.\n         *\n         * @param {string} value title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the title\n         * namedDestination.title = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._title) {\n                this._title = value;\n                this._dictionary.update('Title', value);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfNamedDestination;\n}());\nexport { PdfNamedDestination };\nvar _PdfNamedDestinationCollection = /** @class */ (function () {\n    function _PdfNamedDestinationCollection(dictionary, crossReference) {\n        this._namedDestinations = [];\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (crossReference) {\n            this._crossReference = crossReference;\n        }\n        if (dictionary && dictionary.has('Dests')) {\n            var destination = dictionary.get('Dests');\n            if (destination) {\n                if (destination.has('Names')) {\n                    this._addCollection(destination);\n                }\n                else if (destination.has('Kids')) {\n                    var destinationArray = destination.getArray('Kids'); // eslint-disable-line\n                    for (var i = 0; i < destinationArray.length; i++) {\n                        var destinationElement = destinationArray[Number.parseInt(i.toString(), 10)];\n                        this._addCollection(destinationElement);\n                    }\n                }\n            }\n        }\n    }\n    _PdfNamedDestinationCollection.prototype._addCollection = function (destination) {\n        var elements = destination.getRaw('Names'); // eslint-disable-line\n        var ref; // eslint-disable-line\n        var dictionary;\n        if (elements instanceof _PdfReference) {\n            ref = this._crossReference._fetch(elements);\n        }\n        if (ref && Array.isArray(ref) && ref.length > 0) {\n            elements = ref;\n        }\n        if (elements && Array.isArray(elements) && elements.length > 0) {\n            for (var i = 1; i < elements.length; i = i + 2) {\n                var reference = elements[i]; // eslint-disable-line\n                if (reference instanceof _PdfReference) {\n                    var destinationArray = this._crossReference._fetch(reference); // eslint-disable-line\n                    if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n                        dictionary = new _PdfDictionary();\n                        dictionary.update('D', destinationArray);\n                    }\n                    else {\n                        dictionary = this._crossReference._fetch(reference);\n                    }\n                }\n                else if ((dictionary === null || typeof dictionary === 'undefined') && Array.isArray(reference)) {\n                    dictionary = new _PdfDictionary();\n                    dictionary.update('D', reference);\n                }\n                if (dictionary) {\n                    var namedDestination = new PdfNamedDestination(dictionary, this._crossReference);\n                    var value = elements[i - 1];\n                    var destinationObject = void 0;\n                    var destinationArray = void 0; // eslint-disable-line\n                    if (value) {\n                        namedDestination._title = value;\n                        if (dictionary.has('D')) {\n                            destinationArray = dictionary.get('D');\n                            destinationObject = new PdfDestination();\n                            var reference_1 = destinationArray[0];\n                            if (destinationArray && destinationArray[0] instanceof _PdfReference) {\n                                var pageDictionary = this._crossReference._fetch(reference_1);\n                                var loadedDocument = this._crossReference._document;\n                                var index = void 0;\n                                if (loadedDocument && pageDictionary) {\n                                    index = _getPageIndex(loadedDocument, pageDictionary);\n                                    if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                        destinationObject._index = index;\n                                        destinationObject.page = loadedDocument.getPage(index);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (destinationArray[1] instanceof _PdfName) {\n                        var left = void 0;\n                        var height = void 0;\n                        var zoom = void 0;\n                        var mode = destinationArray[1].name;\n                        var page = destinationObject.page;\n                        switch (mode) {\n                            case 'Fit':\n                                destinationObject._destinationMode = PdfDestinationMode.fitToPage;\n                                break;\n                            case 'XYZ':\n                                destinationObject._destinationMode = PdfDestinationMode.location;\n                                if (destinationArray.length > 2) {\n                                    left = destinationArray[2];\n                                }\n                                if (destinationArray.length > 3) {\n                                    height = destinationArray[3];\n                                }\n                                if (destinationArray.length > 4) {\n                                    zoom = destinationArray[4];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                                    destinationObject._location = [leftValue, topValue];\n                                    if (page.rotation !== PdfRotationAngle.angle0) {\n                                        topValue = _checkRotation(page, height, left);\n                                    }\n                                    destinationObject._zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                                    if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                        || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                        destinationObject._isValid = false;\n                                    }\n                                }\n                                break;\n                            case 'FitH':\n                            case 'FitBH':\n                                destinationObject._destinationMode = PdfDestinationMode.fitH;\n                                if (destinationArray.length >= 3) {\n                                    height = destinationArray[2];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    destinationObject._location = [0, topValue];\n                                }\n                                if (height === null || typeof height === 'undefined') {\n                                    destinationObject._isValid = false;\n                                }\n                                break;\n                            case 'FitR':\n                                destinationObject._destinationMode = PdfDestinationMode.fitR;\n                                break;\n                        }\n                    }\n                    destinationObject._parent = namedDestination;\n                    namedDestination._destination = destinationObject;\n                    this._namedDestinations.push(namedDestination);\n                }\n            }\n        }\n    };\n    return _PdfNamedDestinationCollection;\n}());\nexport { _PdfNamedDestinationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { _bytesToString, _getNewGuidString } from './../utils';\nimport { _ExportHelper } from './xfdf-document';\nvar _XmlDocument = /** @class */ (function (_super) {\n    __extends(_XmlDocument, _super);\n    function _XmlDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _XmlDocument.prototype._exportAnnotations = function () {\n        throw new Error('Method not implemented.');\n    };\n    _XmlDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._format = 'XML';\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XmlDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        if (this._asPerSpecification) {\n            writer._writeStartElement('fields');\n            writer._writeAttributeString('xfdf', 'http://ns.adobe.com/xfdf-transition/', 'xmlns', null);\n        }\n        else {\n            writer._writeStartElement('Fields');\n        }\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                if (field !== null && typeof field !== 'undefined' && field.export) {\n                    this._exportFormFieldData(field);\n                }\n            }\n            this._writeFormFieldData(writer, this._asPerSpecification);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XmlDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    var text = key.replace(/ /g, '');\n                    writer._writeStartElement(text.toString());\n                    writer._writeAttributeString('original', key.toString(), 'xfdf', null);\n                }\n                else {\n                    writer._writeStartElement(key.toString());\n                }\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        else {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    key = key.replace(/ /g, '_x0020_');\n                }\n                writer._writeStartElement(key.toString());\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        writer._writeEndElement();\n    };\n    _XmlDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var value = _bytesToString(data);\n        value = value.replace(/(\\r\\n|\\n|\\r)/gm, '');\n        value = value.replace(/[^\\x20-\\x7E]/g, '');\n        this._xmlDocument = (new DOMParser()).parseFromString(value, 'text/xml');\n        this._checkXml(this._xmlDocument);\n        this._xmlImport = true;\n        this._parseFormData(this._xmlDocument.documentElement);\n        this._xmlImport = false;\n    };\n    _XmlDocument.prototype._parseFormData = function (root) {\n        var child = root.childNodes;\n        if (child !== null && typeof child !== 'undefined' && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode !== null && typeof childNode !== 'undefined' && childNode.nodeType === 1) {\n                    var element = childNode;\n                    var text = '';\n                    if (element.attributes !== null && typeof element.attributes !== 'undefined' && element.attributes.length > 0) {\n                        var attribute = element.attributes.item(0); // eslint-disable-line\n                        if (attribute !== null && typeof attribute !== 'undefined' && attribute.name === 'xfdf:original') {\n                            text = attribute.value;\n                        }\n                    }\n                    else {\n                        text = element.tagName;\n                    }\n                    var v = element.textContent;\n                    if (text !== null && text !== undefined && text.length > 0) {\n                        this._table.set(text, v);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XmlDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var text = key.toString();\n                if (text.indexOf('_x0020_') !== -1) {\n                    text = text.replace(/_x0020_/g, ' ');\n                }\n                var index = form._getFieldIndex(text);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        param.push(value);\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    _XmlDocument.prototype._checkXml = function (xmlDocument) {\n        if (xmlDocument.getElementsByTagName('parsererror').length > 0) {\n            throw new Error('Invalid XML file.');\n        }\n    };\n    return _XmlDocument;\n}(_ExportHelper));\nexport { _XmlDocument };\n","/**\n * `PdfFileStructure` class represents the internal structure of the PDF file.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the internal file structure of the PDF document\n * let fileStructure: PdfFileStructure = document.fileStructure;\n * // Set the cross reference type\n * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileStructure = /** @class */ (function () {\n    function PdfFileStructure() {\n    }\n    Object.defineProperty(PdfFileStructure.prototype, \"crossReferenceType\", {\n        /**\n         * Gets the cross reference type of the PDF document.\n         *\n         * @returns {PdfCrossReferenceType} - Returns the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._crossReferenceType;\n        },\n        /**\n         * Sets the cross reference type of the PDF document.\n         *\n         * @param {PdfCrossReferenceType} value - Specifies the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Set the cross reference type\n         * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._crossReferenceType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFileStructure;\n}());\nexport { PdfFileStructure };\n","import { _PdfStream } from './base-stream';\nimport { _PdfCrossReference } from './pdf-cross-reference';\nimport { _Linearization } from './pdf-parser';\nimport { _isWhiteSpace, FormatError, _decode } from './utils';\nimport { _PdfCatalog } from './pdf-catalog';\nimport { _PdfDictionary, _PdfReference, _isName, _PdfName, _clearPrimitiveCaches } from './pdf-primitives';\nimport { PdfPage } from './pdf-page';\nimport { Save } from '@syncfusion/ej2-file-utils';\nimport { DataFormat, PdfPermissionFlag, PdfTextAlignment, PdfPageOrientation, PdfRotationAngle } from './enumerator';\nimport { PdfForm } from './form/form';\nimport { PdfBrush } from './graphics/pdf-graphics';\nimport { PdfFontFamily, PdfFontStyle, PdfStandardFont } from './fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './fonts/pdf-string-format';\nimport { _XfdfDocument } from './import-export/xfdf-document';\nimport { _JsonDocument } from './import-export/json-document';\nimport { _FdfDocument } from './import-export/fdf-document';\nimport { PdfBookmarkBase, _PdfNamedDestinationCollection } from './pdf-outline';\nimport { _XmlDocument } from './import-export/xml-document';\nimport { PdfFileStructure } from './pdf-file-structure';\n/**\n * Represents a PDF document and can be used to parse an existing PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Flatten annotations and form fields\n * document.flatten = true;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function () {\n    function PdfDocument(data, password) {\n        this._headerSignature = new Uint8Array([0x25, 0x50, 0x44, 0x46, 0x2d]);\n        this._startXrefSignature = new Uint8Array([0x73, 0x74, 0x61, 0x72, 0x74, 0x78, 0x72, 0x65, 0x66]);\n        this._endObjSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x6f, 0x62, 0x6a]);\n        this._version = '';\n        this._permissions = PdfPermissionFlag.default;\n        this._isEncrypted = false;\n        this._isUserPassword = false;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = false;\n        this._isExport = false;\n        this._allowCustomData = false;\n        if (!data) {\n            throw new Error('PDF data cannot be undefined or null');\n        }\n        this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        this._fileStructure = new PdfFileStructure();\n        this._crossReference = new _PdfCrossReference(this, password);\n        this._pages = new Map();\n        this._checkHeader();\n        this._crossReference._setStartXRef(this._startXRef);\n        try {\n            this._parse(false);\n        }\n        catch (e) {\n            if (e.name === 'XRefParseException') {\n                this._parse(true);\n            }\n            else {\n                throw e;\n            }\n        }\n        this._crossReference._version = this._version;\n    }\n    Object.defineProperty(PdfDocument.prototype, \"_allowImportCustomData\", {\n        get: function () {\n            return this._allowCustomData;\n        },\n        set: function (value) {\n            this._allowCustomData = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_linearization\", {\n        get: function () {\n            if (!this._linear) {\n                var value = void 0;\n                try {\n                    value = new _Linearization(this._stream);\n                }\n                catch (err) { } // eslint-disable-line\n                this._linear = value;\n            }\n            return this._linear;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_startXRef\", {\n        get: function () {\n            var stream = this._stream;\n            var startXRef = 0;\n            if (this._linearization && this._linearization.isValid) {\n                stream.reset();\n                if (this._find(stream, this._endObjSignature)) {\n                    startXRef = stream.position + 6 - stream.start;\n                }\n            }\n            else {\n                var step = 1024;\n                var startXRefLength = this._startXrefSignature.length;\n                var found = false;\n                var position = stream.end;\n                while (!found && position > 0) {\n                    position -= step - startXRefLength;\n                    if (position < 0) {\n                        position = 0;\n                    }\n                    stream.position = position;\n                    found = this._find(stream, this._startXrefSignature, step, true);\n                }\n                if (found) {\n                    stream.skip(9);\n                    var ch = void 0;\n                    do {\n                        ch = stream.getByte();\n                    } while (_isWhiteSpace(ch));\n                    var str = '';\n                    while (ch >= 0x20 && ch <= 0x39) {\n                        str += String.fromCharCode(ch);\n                        ch = stream.getByte();\n                    }\n                    startXRef = parseInt(str, 10);\n                    if (isNaN(startXRef)) {\n                        startXRef = 0;\n                    }\n                }\n            }\n            return startXRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isEncrypted\", {\n        /**\n         * Gets a value indicating whether the document is encrypted. (Read Only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is encrypted.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is encrypted.\n         * let isEncrypted: boolean = document.isEncrypted;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEncrypted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isUserPassword\", {\n        /**\n         * Gets a value indicating whether the document is decrypted using the user password. (Read only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is decrypted using the user password.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is decrypted using the user password\n         * let isUserPassword: boolean = document.isUserPassword;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUserPassword;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageCount\", {\n        /**\n         * Gets the page count (Read only).\n         *\n         * @returns {number} Number of pages\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the page count\n         * let count: number = document.pageCount;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pageCount === 'undefined') {\n                this._pageCount = 0;\n                if (this._linearization && this._linearization.isValid) {\n                    this._pageCount = this._linearization.pageCount;\n                }\n                else {\n                    this._pageCount = this._catalog.pageCount;\n                }\n            }\n            return this._pageCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"form\", {\n        /**\n         * Gets the PDF form fields included in the document (Read only).\n         *\n         * @returns {PdfForm} Form object\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._form === 'undefined') {\n                this._form = new PdfForm(this._catalog.acroForm, this._crossReference);\n            }\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag to flatten the annotations and form fields.\n         *\n         * @returns {boolean} Flag to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the flatten value applied\n         * let flatten: boolean = document.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag to flatten the annotations and form fields.\n         *\n         * @param {boolean} value to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Flatten PDF annotations and form fields\n         * document.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"permissions\", {\n        /**\n         * Gets the permission flag of the PDF document (Read only).\n         *\n         * @returns {PdfPermissionFlag} permission flag. Default value is PdfPermissionFlag.default.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the permission flag\n         * let permission: PdfPermissionFlag = document.permissions;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._crossReference) {\n                var flag = this._crossReference._permissionFlags;\n                if (typeof flag !== 'undefined') {\n                    this._permissions = (flag & ~-3904);\n                }\n            }\n            return this._permissions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"bookmarks\", {\n        /**\n         * Gets the bookmarks (Read only).\n         *\n         * @returns {PdfBookmarkBase} Bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var catalog = this._catalog;\n            if (catalog && catalog._catalogDictionary.has('Outlines')) {\n                var outlines = catalog._catalogDictionary.get('Outlines');\n                if (outlines) {\n                    this._bookmarkBase = new PdfBookmarkBase(outlines, this._crossReference);\n                    if (outlines.has('First')) {\n                        this._bookmarkBase._reproduceTree();\n                    }\n                }\n            }\n            return this._bookmarkBase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"fileStructure\", {\n        /**\n         * Gets the internal structure of the PDF document.\n         *\n         * @returns {PdfFileStructure} The internal structure of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fileStructure;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfPage` at the specified index.\n     *\n     * @param {number} pageIndex Page index.\n     * @returns {PdfPage} PDF page at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.getPage = function (pageIndex) {\n        if (pageIndex < 0 || pageIndex >= this.pageCount) {\n            throw new Error('Invalid page index');\n        }\n        var cachedPage = this._pages.get(pageIndex);\n        if (cachedPage) {\n            return cachedPage;\n        }\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization;\n        var promise;\n        if (_linearization && _linearization.isValid && _linearization.pageFirst === pageIndex) {\n            promise = this._getLinearizationPage(pageIndex);\n        }\n        else {\n            promise = _catalog.getPageDictionary(pageIndex);\n        }\n        var page = new PdfPage(this._crossReference, pageIndex, promise.dictionary, promise.reference);\n        this._pages.set(pageIndex, page);\n        return page;\n    };\n    PdfDocument.prototype.addPage = function (arg1, arg2) {\n        var settings;\n        var pageIndex;\n        if (typeof arg2 !== 'undefined') {\n            settings = arg2;\n            pageIndex = arg1;\n            this._checkPageNumber(pageIndex);\n        }\n        else if (typeof arg1 === 'undefined') {\n            settings = new PdfPageSettings();\n            pageIndex = this.pageCount;\n        }\n        else if (arg1 instanceof PdfPageSettings) {\n            settings = arg1;\n            pageIndex = this.pageCount;\n        }\n        else {\n            settings = new PdfPageSettings();\n            pageIndex = arg1;\n            this._checkPageNumber(pageIndex);\n        }\n        var sectionDictionary = new _PdfDictionary(this._crossReference);\n        sectionDictionary.update('Type', _PdfName.get('Pages'));\n        sectionDictionary.update('Count', 1);\n        this._updatePageSettings(sectionDictionary, settings);\n        var sectionReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(sectionReference, sectionDictionary);\n        sectionDictionary.objId = sectionReference.toString();\n        var pageDictionary = new _PdfDictionary(this._crossReference);\n        pageDictionary.update('Type', _PdfName.get('Page'));\n        var pageReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pageReference, pageDictionary);\n        pageDictionary.objId = pageReference.toString();\n        pageDictionary.update('Parent', sectionReference);\n        sectionDictionary.update('Kids', [pageReference]);\n        if (this.pageCount === 0) {\n            var parentReference = this._catalog._catalogDictionary._get('Pages');\n            if (parentReference && this._catalog._topPagesDictionary) {\n                this._catalog._topPagesDictionary.update('Kids', [sectionReference]);\n                sectionDictionary.update('Parent', parentReference);\n            }\n            else {\n                this._catalog._catalogDictionary.update('Pages', sectionReference);\n            }\n            this._pages = new Map();\n            this._pageCount = 1;\n        }\n        else {\n            var lastPage_1 = this.getPage(pageIndex === this.pageCount ? (pageIndex - 1) : pageIndex);\n            if (lastPage_1 && lastPage_1._pageDictionary) {\n                var parentReference = lastPage_1._pageDictionary._get('Parent');\n                var parentDictionary = this._crossReference._fetch(parentReference);\n                if (parentDictionary && parentDictionary.has('Kids')) {\n                    var kids = parentDictionary.get('Kids');\n                    if (kids) {\n                        if (pageIndex === this.pageCount) {\n                            kids.push(sectionReference);\n                        }\n                        else {\n                            var newKids_1 = [];\n                            kids.forEach(function (entry) {\n                                if (entry === lastPage_1._ref) {\n                                    newKids_1.push(sectionReference);\n                                }\n                                newKids_1.push(entry);\n                            });\n                            kids = newKids_1;\n                            this._updatePageCache(pageIndex);\n                        }\n                        parentDictionary.update('Kids', kids);\n                        sectionDictionary.update('Parent', parentReference);\n                        this._updatePageCount(parentDictionary, 1);\n                        this._pageCount = this.pageCount + 1;\n                    }\n                }\n            }\n        }\n        var result = new PdfPage(this._crossReference, pageIndex, pageDictionary, pageReference);\n        result._pageSettings = settings;\n        result._isNew = true;\n        this._pages.set(pageIndex, result);\n        return result;\n    };\n    PdfDocument.prototype.removePage = function (argument) {\n        var targetPage = (argument instanceof PdfPage) ? argument : this.getPage(argument);\n        this._removePage(targetPage);\n    };\n    PdfDocument.prototype._checkPageNumber = function (index) {\n        if (index < 0 || index > this.pageCount) {\n            throw new Error('Index out of range');\n        }\n    };\n    PdfDocument.prototype._updatePageCount = function (dictionary, valueToIncrement) {\n        dictionary.update('Count', dictionary.get('Count') + valueToIncrement);\n        if (dictionary.has('Parent')) {\n            var parentDictionary = dictionary.get('Parent');\n            if (parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                this._updatePageCount(parentDictionary, valueToIncrement);\n            }\n        }\n    };\n    PdfDocument.prototype._updatePageSettings = function (dictionary, settings) {\n        var bounds = [0, 0, settings.size[0], settings.size[1]];\n        dictionary.update('MediaBox', bounds);\n        dictionary.update('CropBox', bounds);\n        var rotate = Math.floor(settings.rotation) * 90;\n        if (rotate >= 360) {\n            rotate = rotate % 360;\n        }\n        dictionary.update('Rotate', rotate);\n    };\n    PdfDocument.prototype._updatePageCache = function (index, isIncrement) {\n        if (isIncrement === void 0) { isIncrement = true; }\n        var updatedData = new Map();\n        for (var i = this.pageCount - 1; i >= 0; i--) {\n            var page = this.getPage(i);\n            if (isIncrement) {\n                if (i >= index) {\n                    updatedData.set(i + 1, page);\n                    page._pageIndex = i + 1;\n                }\n                else {\n                    updatedData.set(i, page);\n                }\n            }\n            else {\n                if (i > index) {\n                    updatedData.set(i - 1, page);\n                    page._pageIndex = i - 1;\n                }\n                else if (i !== index) {\n                    updatedData.set(i, page);\n                }\n            }\n        }\n        this._pages = updatedData;\n        if (!isIncrement) {\n            this._pageCount = this._pages.size;\n        }\n    };\n    PdfDocument.prototype._removePage = function (pageToRemove) {\n        var bookMarkMap = this._parseBookmarkDestination();\n        if (bookMarkMap && bookMarkMap.has(pageToRemove)) {\n            var bookmarks = bookMarkMap.get(pageToRemove);\n            if (bookmarks) {\n                for (var i = 0; i < bookmarks.length; i++) {\n                    var bookmark = bookmarks[Number.parseInt(i.toString(), 10)];\n                    if (bookmark) {\n                        var bookmarkDictionary = bookmark._dictionary;\n                        if (bookmarkDictionary) {\n                            if (bookmarkDictionary.has('A')) {\n                                bookmarkDictionary.update('A', null);\n                            }\n                            bookmarkDictionary.update('Dest', null);\n                        }\n                    }\n                }\n            }\n        }\n        this._removePageTemplates(pageToRemove);\n        for (var i = this.form.count - 1; i >= 0; --i) {\n            var field = this.form.fieldAt(i);\n            if (field && field.page === pageToRemove) {\n                this.form.removeFieldAt(i);\n            }\n        }\n        this._updatePageCache(pageToRemove._pageIndex, false);\n        this._removeParent(pageToRemove._ref, pageToRemove._pageDictionary);\n        if (this._crossReference._cacheMap.has(pageToRemove._ref)) {\n            pageToRemove._pageDictionary._updated = false;\n        }\n    };\n    PdfDocument.prototype._removeParent = function (referenceToRemove, dictionary) {\n        if (dictionary.has('Parent')) {\n            var parentReference = dictionary._get('Parent');\n            var parentDictionary = this._crossReference._fetch(parentReference);\n            if (parentDictionary && parentDictionary.has('Kids')) {\n                var kids = parentDictionary.get('Kids');\n                if (kids.length === 1 && parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                    this._removeParent(parentReference, parentDictionary);\n                }\n                else {\n                    kids = kids.filter(function (item) { return item !== referenceToRemove; });\n                    parentDictionary.update('Kids', kids);\n                    this._updatePageCount(parentDictionary, -1);\n                }\n            }\n        }\n    };\n    PdfDocument.prototype._parseBookmarkDestination = function () {\n        var current = this.bookmarks;\n        if (typeof this._bookmarkHashTable === 'undefined' && current) {\n            this._bookmarkHashTable = new Map();\n            var stack = [];\n            var nodeInformation = { index: 0, kids: current._bookMarkList };\n            do {\n                for (; nodeInformation.index < nodeInformation.kids.length;) {\n                    current = nodeInformation.kids[nodeInformation.index];\n                    var namedDestination = current.namedDestination;\n                    if (namedDestination) {\n                        if (namedDestination.destination) {\n                            var page = namedDestination.destination.page;\n                            var list = this._bookmarkHashTable.get(page);\n                            if (!list) {\n                                list = [];\n                            }\n                            list.push(current);\n                            this._bookmarkHashTable.set(page, list);\n                        }\n                    }\n                    else {\n                        var destination = current.destination;\n                        if (destination) {\n                            var page = destination.page;\n                            var list = this._bookmarkHashTable.get(page);\n                            if (!list) {\n                                list = [];\n                            }\n                            list.push(current);\n                            this._bookmarkHashTable.set(page, list);\n                        }\n                    }\n                    nodeInformation.index += 1;\n                    if (current.count > 0) {\n                        stack.push(nodeInformation);\n                        nodeInformation = { index: 0, kids: current._bookMarkList };\n                        continue;\n                    }\n                }\n                if (stack.length > 0) {\n                    nodeInformation = stack.pop();\n                    while (nodeInformation.index === nodeInformation.kids.length && stack.length > 0) {\n                        nodeInformation = stack.pop();\n                    }\n                }\n            } while (nodeInformation.index < nodeInformation.kids.length);\n        }\n        return this._bookmarkHashTable;\n    };\n    PdfDocument.prototype._removePageTemplates = function (page) {\n        var dictionary;\n        if (this._catalog._catalogDictionary.has('Names')) {\n            dictionary = this._catalog._catalogDictionary.get('Names');\n            if (dictionary) {\n                this._removeInternalTemplates(dictionary, 'Pages', page);\n                this._removeInternalTemplates(dictionary, 'Templates', page);\n            }\n        }\n    };\n    PdfDocument.prototype._removeInternalTemplates = function (dictionary, key, page) {\n        if (dictionary.has(key)) {\n            var namedObject = dictionary.get(key);\n            if (namedObject && namedObject.has('Names')) {\n                var nameCollection = namedObject.getArray('Names');\n                if (nameCollection && nameCollection.length > 0) {\n                    var namedPageCollection = this._getUpdatedPageTemplates(nameCollection, page);\n                    var namedPageDictionary = new _PdfDictionary(this._crossReference);\n                    namedPageDictionary.update('Names', namedPageCollection);\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, namedPageDictionary);\n                    namedPageDictionary.objId = reference.toString();\n                    dictionary.update(key, reference);\n                }\n            }\n        }\n    };\n    PdfDocument.prototype._getUpdatedPageTemplates = function (namedPages, page) {\n        if (namedPages.length > 0) {\n            for (var i = 1; i <= namedPages.length; i = i + 2) {\n                var pageDictionary = namedPages[Number.parseInt(i.toString(), 10)];\n                if (pageDictionary && page._pageDictionary === pageDictionary) {\n                    namedPages.pop();\n                    namedPages.pop();\n                    return namedPages;\n                }\n            }\n        }\n        return namedPages;\n    };\n    /**\n     * Reorders the pages in the PDF document.\n     *\n     * @param {number[]} orderArray The page sequence to arrange the pages.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Reorders the pages in the PDF document\n     * document.reorderPages([3, 2, 1]);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.reorderPages = function (orderArray) {\n        var _this = this;\n        orderArray.forEach(function (pageNumber) {\n            _this._checkPageNumber(pageNumber);\n        });\n        var sortedArray = this._sortedArray(orderArray);\n        var ascendingOrder = orderArray.slice().sort(function (a, b) { return a - b; });\n        var inputArray = Array.from({ length: this.pageCount }, function (_, i) { return i; });\n        var pagesToRemove = inputArray.filter(function (element) { return sortedArray.indexOf(element) === -1; });\n        for (var i = pagesToRemove.length - 1; i >= 0; i--) {\n            this.removePage(pagesToRemove[Number.parseInt(i.toString(), 10)]);\n        }\n        var newkids = [];\n        var newPages = new Map();\n        var parentReference = this._catalog._catalogDictionary._get('Pages');\n        var _loop_1 = function (i) {\n            var indexPage = this_1.getPage(ascendingOrder.indexOf(sortedArray[Number.parseInt(i.toString(), 10)]));\n            indexPage._pageIndex = i;\n            newPages.set(i, indexPage);\n            var sectionDictionary = new _PdfDictionary(this_1._crossReference);\n            sectionDictionary.update('Type', _PdfName.get('Pages'));\n            sectionDictionary.update('Count', 1);\n            sectionDictionary.update('Parent', parentReference);\n            var sectionReference = this_1._crossReference._getNextReference();\n            sectionDictionary.objId = sectionReference.toString();\n            sectionDictionary.update('Kids', [indexPage._ref]);\n            newkids.push(sectionReference);\n            var parentDictionary = indexPage._pageDictionary.get('Parent');\n            while (parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                parentDictionary.forEach(function (key, value) {\n                    switch (key) {\n                        case 'Parent':\n                        case 'Kids':\n                        case 'Type':\n                        case 'Count':\n                            break;\n                        case 'Resources':\n                            _this._cloneResources(parentDictionary.get('Resources'), sectionDictionary);\n                            break;\n                        default:\n                            if (!sectionDictionary.has(key)) {\n                                sectionDictionary.update(key, value);\n                            }\n                            break;\n                    }\n                });\n                if (parentDictionary.has('Parent')) {\n                    parentDictionary = parentDictionary.get('Parent');\n                }\n                else {\n                    break;\n                }\n            }\n            this_1._crossReference._cacheMap.set(sectionReference, sectionDictionary);\n            var pageSection = this_1._crossReference._fetch(indexPage._ref);\n            pageSection.update('Parent', sectionReference);\n        };\n        var this_1 = this;\n        for (var i = 0; i < sortedArray.length; i++) {\n            _loop_1(i);\n        }\n        this._pages = newPages;\n        if (this._catalog) {\n            var parentDictionary = this._catalog._topPagesDictionary;\n            if (parentDictionary && parentDictionary.has('Kids')) {\n                var kids = parentDictionary.get('Kids');\n                kids = newkids;\n                parentDictionary.update('Kids', kids);\n            }\n        }\n    };\n    PdfDocument.prototype._sortedArray = function (order) {\n        var sortedArray = [];\n        order.forEach(function (num) {\n            if (sortedArray.indexOf(num) === -1) {\n                sortedArray.push(num);\n            }\n        });\n        return sortedArray;\n    };\n    PdfDocument.prototype._cloneResources = function (source, target) {\n        var _this = this;\n        if (!target.has('Resources')) {\n            target.update('Resources', source);\n        }\n        else {\n            var resourceDictionary_1 = target.get('Resources');\n            source.forEach(function (key, value) {\n                if (resourceDictionary_1.has(key)) {\n                    _this._cloneInnerResources(key, value, resourceDictionary_1);\n                }\n                else {\n                    resourceDictionary_1.update(key, value);\n                }\n            });\n        }\n    };\n    PdfDocument.prototype._cloneInnerResources = function (key, value, resourceDictionary) {\n        if (value instanceof _PdfDictionary) {\n            var oldObject_1 = resourceDictionary.get(key);\n            if (oldObject_1) {\n                var hasNew_1 = false;\n                oldObject_1.forEach(function (innerKey, innerValue) {\n                    if (!oldObject_1.has(innerKey)) {\n                        oldObject_1.update(innerKey, innerValue);\n                        hasNew_1 = true;\n                    }\n                });\n                if (hasNew_1) {\n                    resourceDictionary._updated = true;\n                }\n            }\n            else {\n                resourceDictionary.update(key, value);\n            }\n        }\n        else if (Array.isArray(value)) {\n            var oldArray_1 = resourceDictionary.get(key); // eslint-disable-line\n            if (oldArray_1) {\n                var hasNew_2 = false;\n                value.forEach(function (entry) {\n                    if (oldArray_1.indexOf(entry) === -1) {\n                        oldArray_1.push(entry);\n                        hasNew_2 = true;\n                    }\n                });\n                if (hasNew_2) {\n                    resourceDictionary._updated = true;\n                }\n            }\n            else {\n                resourceDictionary.update(key, value);\n            }\n        }\n    };\n    PdfDocument.prototype.save = function (filename) {\n        this._doPostProcess(this._flatten);\n        if (typeof filename === 'string') {\n            Save.save(filename, new Blob([this._crossReference._save()], { type: 'application/pdf' }));\n        }\n        else {\n            return this._crossReference._save();\n        }\n    };\n    /**\n     * Saves the document to the specified output stream and return the stream as Blob.\n     *\n     * @returns {Promise<{ blobData: Blob }>} Saved PDF data as `Blob`.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Save the document\n     * let data: Promise<{ blobData: Blob }> = document.saveAsBlob();\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.saveAsBlob = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var obj = { blobData: new Blob([_this._crossReference._save()], { type: 'application/pdf' }) };\n            resolve(obj);\n        });\n    };\n    PdfDocument.prototype.exportAnnotations = function (arg1, arg2) {\n        this._isExport = true;\n        this._doPostProcessOnAnnotations();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfAnnotationExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfAnnotationExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument();\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument();\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument();\n            }\n            else {\n                return undefined;\n            }\n            helper.exportAppearance = settings.exportAppearance;\n        }\n        else {\n            helper = new _XfdfDocument();\n        }\n        var result = helper._exportAnnotations(this);\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([result], { type: 'text/plain' }));\n        }\n        else {\n            return result;\n        }\n    };\n    PdfDocument.prototype.exportFormData = function (arg1, arg2) {\n        this._doPostProcessOnFormFields();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfFormFieldExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfFormFieldExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.xml) {\n                helper = new _XmlDocument(settings.exportName);\n            }\n            else {\n                return undefined;\n            }\n            helper._asPerSpecification = settings.asPerSpecification;\n        }\n        else {\n            helper = new _XfdfDocument();\n            helper._asPerSpecification = false;\n        }\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([helper._exportFormFields(this)], { type: 'text/plain' }));\n        }\n        else {\n            return helper._exportFormFields(this);\n        }\n    };\n    PdfDocument.prototype.importAnnotations = function (data, dataFormat) {\n        if (dataFormat === DataFormat.xfdf) {\n            var xfdf = new _XfdfDocument();\n            xfdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.json) {\n            var json = new _JsonDocument();\n            json._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.fdf) {\n            var fdf = new _FdfDocument();\n            fdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n    };\n    PdfDocument.prototype.importFormData = function (data, dataFormat) {\n        if (this.form.count > 0) {\n            if (dataFormat === DataFormat.xfdf) {\n                var xfdf = new _XfdfDocument();\n                xfdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.json) {\n                var json = new _JsonDocument();\n                json._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.fdf) {\n                var fdf = new _FdfDocument();\n                fdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.xml) {\n                var xml = new _XmlDocument();\n                xml._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n        }\n    };\n    /**\n     * Disposes the current instance of `PdfDocument` class.\n     *\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        if (this._crossReference) {\n            this._crossReference._destroy();\n            this._crossReference = undefined;\n        }\n        if (this._catalog) {\n            this._catalog._destroy();\n            this._catalog = undefined;\n        }\n        this._endObjSignature = undefined;\n        this._headerSignature = undefined;\n        if (this._pages && this._pages.size > 0) {\n            this._pages.forEach(function (value) {\n                value._destroy();\n            });\n        }\n        this._pages.clear();\n        this._pages = undefined;\n        this._startXrefSignature = undefined;\n        this._stream = undefined;\n        this._form = undefined;\n        _clearPrimitiveCaches();\n    };\n    Object.defineProperty(PdfDocument.prototype, \"_destinationCollection\", {\n        get: function () {\n            if (this._namedDestinationCollection === null || typeof this._namedDestinationCollection === 'undefined') {\n                if (this._catalog._catalogDictionary.has('Names')) {\n                    var names = this._catalog._catalogDictionary.get('Names');\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection(names, this._crossReference);\n                }\n                else {\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection();\n                }\n            }\n            return this._namedDestinationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype._getLinearizationPage = function (pageIndex) {\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization, _crossReference = _a._crossReference;\n        var ref = _PdfReference.get(_linearization.objectNumberFirst, 0);\n        try {\n            var obj = _crossReference._fetch(ref); // eslint-disable-line\n            if (obj instanceof _PdfDictionary) {\n                var type = obj.get('Type');\n                if (_isName(type, 'Page') || (!obj.has('Type') && !obj.has('Kids'))) {\n                    if (!_catalog.pageKidsCountCache.has(ref)) {\n                        _catalog.pageKidsCountCache.put(ref, 1);\n                    }\n                    if (!_catalog.pageIndexCache.has(ref)) {\n                        _catalog.pageIndexCache.put(ref, 0);\n                    }\n                    return { dictionary: obj, reference: ref };\n                }\n            }\n            throw new FormatError('The Linearization dictionary does not point to a valid Page dictionary.');\n        }\n        catch (reason) {\n            return _catalog.getPageDictionary(pageIndex);\n        }\n    };\n    PdfDocument.prototype._checkHeader = function () {\n        var stream = this._stream;\n        stream.reset();\n        if (!this._find(stream, this._headerSignature)) {\n            return;\n        }\n        stream.moveStart();\n        var version = '';\n        var ch = stream.getByte();\n        while (ch > 0x20) {\n            if (version.length >= 12) {\n                break;\n            }\n            version += String.fromCharCode(ch);\n            ch = stream.getByte();\n        }\n        if (!this._version) {\n            this._version = version.substring(5);\n        }\n    };\n    PdfDocument.prototype._parse = function (recoveryMode) {\n        this._crossReference._parse(recoveryMode);\n        this._catalog = new _PdfCatalog(this._crossReference);\n        if (this._catalog.version) {\n            this._version = this._catalog.version;\n        }\n    };\n    PdfDocument.prototype._find = function (stream, signature, limit, backwards) {\n        if (limit === void 0) { limit = 1024; }\n        if (backwards === void 0) { backwards = false; }\n        var signatureLength = signature.length;\n        var scanBytes = stream.peekBytes(limit);\n        var scanLength = scanBytes.length - signatureLength;\n        if (scanLength <= 0) {\n            return false;\n        }\n        if (backwards) {\n            var signatureEnd = signatureLength - 1;\n            var position = scanBytes.length - 1;\n            while (position >= signatureEnd) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position - j] === signature[signatureEnd - j]) {\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position - signatureEnd;\n                    return true;\n                }\n                position--;\n            }\n        }\n        else {\n            var position = 0;\n            while (position <= scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return true;\n                }\n                position++;\n            }\n        }\n        return false;\n    };\n    PdfDocument.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._doPostProcessOnFormFields(isFlatten);\n        this._doPostProcessOnAnnotations(isFlatten);\n    };\n    PdfDocument.prototype._doPostProcessOnFormFields = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._catalog._catalogDictionary.has('AcroForm')) {\n            this.form._doPostProcess(isFlatten);\n            if (isFlatten) {\n                var formObject = this._catalog._catalogDictionary.getRaw('AcroForm');\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary._updated = true;\n                if (formObject instanceof _PdfReference) {\n                    this._crossReference._cacheMap.set(formObject, dictionary);\n                }\n                else {\n                    this.form._dictionary = dictionary;\n                    this._crossReference._allowCatalog = true;\n                }\n                this.form._clear();\n            }\n        }\n    };\n    PdfDocument.prototype._doPostProcessOnAnnotations = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        for (var i = 0; i < this.pageCount; i++) {\n            var page = this.getPage(i);\n            page.annotations._isExport = this._isExport;\n            page.annotations._doPostProcess(isFlatten);\n            if (isFlatten) {\n                if (page._pageDictionary.has('Annots')) {\n                    delete page._pageDictionary._map.Annots;\n                    page._pageDictionary._updated = true;\n                }\n                page.annotations._clear();\n            }\n        }\n    };\n    PdfDocument.prototype._addWatermarkText = function () {\n        if (this.pageCount > 0) {\n            for (var index = 0; index < this._pageCount; index++) {\n                var page = this.getPage(index);\n                if (page) {\n                    try {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        graphics.setTransparency(0.20);\n                        graphics.drawRectangle(0, 0, page.size[0], 33.75, new PdfBrush([255, 255, 255]));\n                        graphics.restore();\n                        graphics.save();\n                        graphics.setTransparency(0.50);\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.regular);\n                        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        graphics.drawString('Created with a trial version of Syncfusion Essential PDF', font, [0, 0, page.size[0], 33.75], null, new PdfBrush([0, 0, 0]), format);\n                        graphics.restore();\n                    }\n                    catch (e) { } // eslint-disable-line\n                }\n            }\n        }\n    };\n    return PdfDocument;\n}());\nexport { PdfDocument };\n/**\n * Represents annotation export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * // Set the data format defined in annotation export settings\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationExportSettings = /** @class */ (function () {\n    function PdfAnnotationExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportAppearance = false;\n    }\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in annotation export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Get the data format defined in annotation export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in annotation export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the data format defined in annotation export settings\n         * settings.dataFormat = DataFormat.json;\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"exportAppearance\", {\n        /**\n         * Gets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Get the boolean value indicating whether the appearance of a particular object can be exported or not\n         * let appearance: boolean = settings.exportAppearance;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportAppearance;\n        },\n        /**\n         * Sets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the boolean value indicating whether the appearance of a particular object can be exported or not\n         * settings.exportAppearance = true;\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportAppearance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationExportSettings;\n}());\nexport { PdfAnnotationExportSettings };\n/**\n * Represents form fields export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Sets the form field data export settings with output data format.\n * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n * // Set the data format defined in form field export settings.\n * settings.dataFormat = DataFormat.json;\n * // Export form field to JSON format\n * let json: Uint8Array = document.exportFormData(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFormFieldExportSettings = /** @class */ (function () {\n    function PdfFormFieldExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportName = '';\n        this._asPerSpecification = true;\n    }\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in form field export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the data format defined in form field export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in form field export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the data format defined in form field export settings.\n         * settings.dataFormat = DataFormat.json;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"exportName\", {\n        /**\n         * Gets the export name defined in form field export settings.\n         *\n         * @returns {string} - Returns the string value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the export name defined in form field export settings\n         * let name: boolean = settings.exportName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportName;\n        },\n        /**\n         * Sets the export name defined in form field export settings.\n         *\n         * @param {string} name - Specifies the export name of the form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the export name defined in form field export settings.\n         * settings.exportName = ‘JobApplication’.\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (name) {\n            this._exportName = name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"asPerSpecification\", {\n        /**\n         * Gets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let asPerSpecification: boolean = settings.asPerSpecification;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._asPerSpecification;\n        },\n        /**\n         * Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * settings.asPerSpecification = true;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._asPerSpecification = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFormFieldExportSettings;\n}());\nexport { PdfFormFieldExportSettings };\n/**\n * The class provides various settings related to PDF pages.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Create a new PDF page settings instance\n * let pageSettings: PdfPageSettings = new PdfPageSettings();\n * // Sets the margins\n * pageSettings.margins = new PdfMargins(40);\n * // Sets the page size\n * pageSettings.size = [595, 842];\n * // Sets the page orientation\n * pageSettings.orientation = PdfPageOrientation.landscape;\n * // Add a new PDF page with page settings\n * page = document.addPage(pageSettings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPageSettings = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPageSettings` class\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Create a new PDF page settings instance\n     * let pageSettings: PdfPageSettings = new PdfPageSettings();\n     * // Sets the margins\n     * pageSettings.margins = new PdfMargins(40);\n     * // Sets the page size\n     * pageSettings.size = [595, 842];\n     * // Sets the page orientation\n     * pageSettings.orientation = PdfPageOrientation.landscape;\n     * // Add a new PDF page with page settings\n     * page = document.addPage(pageSettings);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfPageSettings() {\n        this._size = [595, 842];\n        this._isOrientation = false;\n        this._orientation = PdfPageOrientation.portrait;\n        this._size = [595, 842];\n        this._margins = new PdfMargins();\n        this._rotation = PdfRotationAngle.angle0;\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets the orientation of the page.\n         *\n         * @returns {PdfPageOrientation} The orientation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page size\n         * pageSettings.size = [842, 595];\n         * // Gets the page orientation\n         * let orientation: PdfPageOrientation = pageSettings.orientation;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._orientation;\n        },\n        /**\n         * Sets the orientation of the page.\n         *\n         * @param {PdfPageOrientation} value The orientation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._isOrientation = true;\n            if (this._orientation !== value) {\n                this._orientation = value;\n                this._updateSize(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        /**\n         * Gets the size of the page.\n         *\n         * @returns {number[]} The width and height of the page as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the width and height of the PDF page as number array\n         * let size: number[] = page.size;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        /**\n         * Sets the width and height of the page.\n         *\n         * @param {number[]} value The width and height of the page as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isOrientation) {\n                this._updateSize(value);\n            }\n            else {\n                this._size = value;\n                this._updateOrientation();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets the margin value of the page.\n         *\n         * @returns {PdfMargins} PDF margins\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the margins\n         * let margins: PdfMargins = pageSettings.margins;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._margins;\n        },\n        /**\n         * Sets the margin value of the page.\n         *\n         * @param {PdfMargins} value PDF margins\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * pageSettings.margins = new PdfMargins(40);\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._margins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the PDF page.\n         *\n         * @returns {PdfRotationAngle} PDF rotation angle\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the rotation angle\n         * let rotation: PdfRotationAngle = pageSettings.rotation;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the PDF page.\n         *\n         * @param {PdfRotationAngle} value PDF rotation angle\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the rotation angle\n         * pageSettings.rotation = PdfRotationAngle.angle90;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._rotation = value;\n            if (value >= 4) {\n                this._rotation = (value % 4);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPageSettings.prototype._updateSize = function (value) {\n        var pageOrientation;\n        var pageSize;\n        if (Array.isArray(value)) {\n            pageOrientation = this.orientation;\n            pageSize = value;\n        }\n        else {\n            pageOrientation = value;\n            pageSize = this._size;\n        }\n        if (pageOrientation === PdfPageOrientation.portrait) {\n            this._size = [Math.min(pageSize[0], pageSize[1]), Math.max(pageSize[0], pageSize[1])];\n        }\n        else {\n            this._size = [Math.max(pageSize[0], pageSize[1]), Math.min(pageSize[0], pageSize[1])];\n        }\n    };\n    PdfPageSettings.prototype._updateOrientation = function () {\n        this._orientation = (this._size[1] >= this._size[0]) ? PdfPageOrientation.portrait : PdfPageOrientation.landscape;\n    };\n    PdfPageSettings.prototype._getActualSize = function () {\n        var width = this._size[0] - (this._margins._left + this._margins._right);\n        var height = this._size[1] - (this._margins._top + this._margins._bottom);\n        return [width, height];\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n/**\n * A class representing PDF page margins.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Create a new PDF page settings instance\n * let pageSettings: PdfPageSettings = new PdfPageSettings();\n * // Sets the margins\n * pageSettings.margins = new PdfMargins(40);\n * // Sets the page size\n * pageSettings.size = [595, 842];\n * // Sets the page orientation\n * pageSettings.orientation = PdfPageOrientation.landscape;\n * // Add a new PDF page with page settings\n * page = document.addPage(pageSettings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfMargins = /** @class */ (function () {\n    function PdfMargins(all) {\n        if (typeof all === 'undefined') {\n            this._left = this._right = this._top = this._bottom = 40;\n        }\n        else {\n            this._left = this._right = this._top = this._bottom = all;\n        }\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        /**\n         * Gets the left margin value of the page.\n         *\n         * @returns {number} Left margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the left margin\n         * let left: number = pageSettings.margins.left;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._left;\n        },\n        /**\n         * Sets the left margin value of the page.\n         *\n         * @param {number} value Left margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._left = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets the right margin value of the page.\n         *\n         * @returns {number} Right margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the right margin\n         * let right: number = pageSettings.margins.right;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._right;\n        },\n        /**\n         * Sets the right margin value of the page.\n         *\n         * @param {number} value - Right margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._right = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets the top margin value of the page.\n         *\n         * @returns {number} Top margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the top margin\n         * let top: number = pageSettings.margins.top;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._top;\n        },\n        /**\n         *Sets the top margin value of the page.\n         *\n         * @param {number} value Top margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._top = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Get the bottom margin value of the page.\n         *\n         * @returns {number} Bottom margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the bottom margin\n         * let bottom: number = pageSettings.margins.bottom;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._bottom;\n        },\n        /**\n         * Sets the bottom margin value of the page.\n         *\n         * @param {number} value Bottom margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._bottom = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","var _PdfPaddings = /** @class */ (function () {\n    function _PdfPaddings(left, top, right, bottom) {\n        this._left = 0;\n        this._right = 0;\n        this._top = 0;\n        this._bottom = 0;\n        if (typeof left === 'undefined') {\n            this._left = 0.5;\n            this._right = 0.5;\n            this._top = 0.5;\n            this._bottom = 0.5;\n        }\n        else {\n            this._left = left;\n            this._right = right;\n            this._top = top;\n            this._bottom = bottom;\n        }\n    }\n    return _PdfPaddings;\n}());\nexport { _PdfPaddings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfImage } from './pdf-image';\nimport { _PdfName } from './../../pdf-primitives';\nimport { _decode, _getDecoder } from './../../utils';\nimport { _PdfColorSpace } from './../../enumerator';\nimport { _PngDecoder } from './png-decoder';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        _this._imageStatus = true;\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            _this._initializeAsync(encodedString);\n        }\n        else {\n            _this._initializeAsync(encodedString);\n        }\n        return _this;\n    }\n    PdfBitmap.prototype._initializeAsync = function (encodedString) {\n        var byteArray = new Uint8Array(encodedString.length);\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            byteArray = _decode(encodedString, false);\n        }\n        else if (encodedString instanceof Uint8Array) {\n            byteArray = encodedString;\n        }\n        this._decoder = _getDecoder(byteArray);\n        this.height = this._decoder._height;\n        this.width = this._decoder._width;\n        this._bitsPerComponent = this._decoder._bitsPerComponent;\n    };\n    PdfBitmap.prototype._save = function () {\n        this._imageStatus = true;\n        this._imageStream = this._decoder._getImageDictionary();\n        if (this._decoder && this._decoder instanceof _PngDecoder) {\n            var decoder = this._decoder;\n            this._maskStream = decoder._maskStream;\n            if (decoder._isDecode) {\n                if (decoder._colorSpace) {\n                    this._setColorSpace();\n                }\n            }\n            else {\n                this._setColorSpace();\n            }\n        }\n        else {\n            this._setColorSpace();\n        }\n    };\n    PdfBitmap.prototype._setColorSpace = function () {\n        var stream = this._imageStream;\n        var dictionary = stream.dictionary;\n        var color = dictionary.get('ColorSpace');\n        var colorSpace;\n        if (color.name === 'DeviceCMYK') {\n            colorSpace = _PdfColorSpace.cmyk;\n        }\n        else if (color.name === 'DeviceGray') {\n            colorSpace = _PdfColorSpace.grayScale;\n        }\n        if (this._decoder instanceof _PngDecoder) {\n            var cs = this._decoder._colorSpace; // eslint-disable-line\n            if (typeof cs !== 'undefined' && cs !== null) {\n                colorSpace = _PdfColorSpace.indexed;\n            }\n        }\n        switch (colorSpace) {\n            case _PdfColorSpace.cmyk:\n                dictionary.update('Decode', [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceCMYK'));\n                break;\n            case _PdfColorSpace.grayScale:\n                dictionary.update('Decode', [0.0, 1.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceGray'));\n                break;\n            case _PdfColorSpace.rgb:\n                dictionary.update('Decode', [0.0, 1.0, 0.0, 1.0, 0.0, 1.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceRGB'));\n                break;\n            case _PdfColorSpace.indexed:\n                dictionary.update('ColorSpace', this._decoder._colorSpace);\n                break;\n            default:\n                break;\n        }\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n"],"names":["_toUnsigned","value","bits","Math","pow","_toSigned16","_toSigned32","_copyRange","target","at","source","start","end","length","max","min","i","j","Number","parseInt","toString","_checkType","imageData","header","_getDecoder","decoder","_JpegDecoder","Error","_PngDecoder","_checkRotation","page","height","left","topValue","rotation","PdfRotationAngle","angle90","angle180","angle270","size","_getPageIndex","loadedDocument","pageDictionary","index","pageCount","getPage","_pageDictionary","_annotationFlagsToString","flag","values","PdfAnnotationFlag","hidden","push","invisible","locked","noRotate","noView","noZoom","print","readOnly","toggleNoView","default","join","_stringToAnnotationFlags","_stringToPdfString","charCodeAt","encoding","TextDecoder","fatal","decode","_stringToBytes","e","buffer","translateTable","code","String","fromCharCode","charAt","isDirect","isPassword","destination","bytes","charCode","Uint8Array","_areArrayEqual","first","second","_numberToString","isInteger","toFixed","_areNotEqual","current","result","_bytesToString","isJson","stringBuffer","_decodeUTF8","apply","chunkEnd","chunk","subarray","byte","codePoint","_stringToUnicodeArray","output","_byteArrayToHexString","byteArray","nextHexByte","toUpperCase","_hexStringToByteArray","hexString","array","substring","_hexStringToString","_isWhiteSpace","ch","_decode","input","chr1","chr2","chr3","enc2","enc3","key","resultIndex","totalLength","replace","Array","indexOf","_encode","currentChar","_getInheritableProperty","dictionary","isArray","stopWhenFound","parentKey","_i","arguments","refSet","Set","_PdfDictionary","objId","has","add","getArray","get","undefined","hasParent","element","_parseRectangle","isWidget","rectangle","x","y","width","elements","x1","y1","x2","y2","parseFloat","_calculateBounds","rect","mBox","mediaBox","cropBox","_toRectangle","abs","_fromRectangle","_getUpdatedBounds","pageWidth","pageHeight","_convertToColor","colorString","color","_getColorValue","exec","_parseColor","entry","round","r","g","b","c","m","k","fBlack","_mapBorderStyle","style","token","PdfBorderStyle","dot","dashed","beveled","inset","underline","_PdfName","_mapBorderEffectStyle","PdfBorderEffectStyle","solid","cloudy","_reverseMapEndingStyle","PdfLineEndingStyle","openArrow","closedArrow","rOpenArrow","rClosedArrow","butt","diamond","circle","square","slash","_mapLineEndingStyle","defaultValue","none","toLowerCase","_mapHighlightMode","mode","PdfHighlightMode","noHighlighting","outline","invert","_reverseMapHighlightMode","_reverseMapBlendMode","PdfBlendMode","multiply","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","hue","saturation","luminosity","_mapBlendMode","normal","name","_floatToString","returnString","_addProcSet","procset","update","_getNewGuidString","random","_escapePdfName","char","_getBezierArc","extent","swap","angle","count","ceil","firstAngle","secondAngle","half","PI","cos","sin","points","zero","one","cosZero","cosOne","sinZero","sinOne","_findPage","document","reference","annots","ref","_PdfReference","_checkField","check","state","actual","_getItemValue","itemDictionary","itemValue","appearance","_PdfBaseStream","keys_1","forEach","_getStateTemplate","item","template","_PdfCheckFieldState","checked","_dictionary","stream","getRaw","PdfTemplate","_crossReference","colorName","_setMatrix","box","_content","set","matrix","_PdfTransformationMatrix","_translate","_rotate","_matrix","_elements","_styleToString","PdfCheckBoxStyle","cross","star","_stringToStyle","_mapMeasurementUnit","unitString","unit","PdfMeasurementUnit","centimeter","inch","millimeter","pica","point","_mapMarkupAnnotationType","text","type","PdfTextMarkupAnnotationType","highlight","squiggly","strikeOut","_reverseMarkupAnnotationType","_mapGraphicsUnit","_PdfGraphicsUnit","_mapRubberStampIcon","iconString","icon","PdfRubberStampAnnotationIcon","approved","asIs","completed","confidential","departmental","draft","experimental","expired","final","forComment","forPublicRelease","informationOnly","notApproved","notForPublicRelease","preliminaryResults","sold","topSecret","void","_mapPopupIcon","PdfPopupIcon","note","comment","help","insert","newParagraph","paragraph","_reverseMapAnnotationState","PdfAnnotationState","accepted","rejected","cancel","marked","unmarked","unknown","_mapAnnotationState","_reverseMapAnnotationStateModel","PdfAnnotationStateModel","review","_mapAnnotationStateModel","_mapAttachmentIcon","PdfAttachmentIcon","pushPin","tag","graph","paperClip","_mapAnnotationIntent","intentString","intent","PdfAnnotationIntent","freeTextCallout","freeTextTypeWriter","_reverseMapPdfFontStyle","PdfFontStyle","regular","bold","italic","strikeout","_getSpecialCharacter","_getLatinCharacter","_checkReview","_checkComment","_updateVisibility","_map","F","_updated","PdfFormFieldVisibility","hiddenPrintable","visible","DV","mkDict","BG","_removeDuplicateReference","crossTable","oldAppearance","_isNew","_fetch","appearanceDictionary","_removeDuplicateFromResources","_cacheMap","delete","resources","_removeReferences","crossReference","firstKey","secondKey","normalElement","_PdfStream","_defaultToString","Object","prototype","call","_obtainFontDetails","form","widget","field","fontSize","font","defaultAppearance","fontFamily","textCollection","split","trim","fonts","fontDictionary","baseFont","textFontStyle","_getFontStyle","includes","_mapFont","PdfStandardFont","PdfFontFamily","helvetica","_circleCaptionFont","fontFamilyString","position","annotation","PdfLineAnnotation","_isLoaded","courier","symbol","timesRoman","zapfDingbats","PdfCjkStandardFont","PdfCjkFontFamily","monotypeSungLight","sinoTypeSongLight","monotypeHeiMedium","hanyangSystemsGothicMedium","hanyangSystemsShinMyeongJoMedium","heiseiKakuGothicW5","heiseiMinchoW3","fontData","_tryParseFontStream","_hasData","base64String","PdfTrueTypeFont","PdfAnnotation","_type","_PdfAnnotationType","widgetAnnotation","PdfField","widgetDictionary","apperance","resourcesDictionary","descendant","descendantFont","fontDescriptor","fontFile","getByteRange","_checkInkPoints","inkPointsCollection","previousCollection","_obtainDestination","destinationArray","_document","bottom","right","zoom","pageNumber","document_1","leftValue","angle0","PdfDestination","_index","_setValidation","PdfDestinationMode","fitR","fitH","fitToPage","_updateBounds","bounds","_bounds","_page","_pageSettings","pageSettings","pageBounds","margins","top","_decodeText","isColorSpace","startsWith","endsWith","codeUnit","_getSize","_stringToBigEndianBytes","_clearPrimitiveCaches","nameCache","create","cmdCache","refCache","_isName","_isCommand","command","_PdfCommand","PdfLineIntent","PdfLineCaptionType","PdfCrossReferenceType","PdfTextAlignment","PdfCircleMeasurementType","DataFormat","PdfFormFieldsTabOrder","_FieldFlag","_SignatureFlag","PdfPermissionFlag","PdfPageOrientation","PdfTextDirection","PdfSubSuperScript","PdfFillMode","PdfDashStyle","PdfLineCap","PdfLineJoin","_PdfWordWrapType","_FontDescriptorFlag","_TrueTypeCmapFormat","_TrueTypeCmapEncoding","_TrueTypePlatformID","_TrueTypeMicrosoftEncodingID","_TrueTypeMacintoshEncodingID","_TrueTypeCompositeGlyphFlag","_ImageFormat","_TokenType","PdfTextStyle","_PdfColorSpace","_PdfStreamWriter","this","_newLine","_whiteSpace","_stream","_writeOperator","write","_saveGraphicsState","_restoreGraphicsState","_writeComment","_setGraphicsState","_modifyCtm","_toString","_modifyTM","_setColorSpace","forStroking","_setColor","_appendRectangle","_writePoint","_clipPath","isEvenOdd","_fillPath","_closeFillPath","_strokePath","_closeStrokePath","_fillStrokePath","_closeFillStrokePath","_endPath","_setFont","_setTextScaling","textScaling","_closePath","_startNextLine","_showText","_writeText","_write","string","builder","data","_escapeSymbols","_beginText","_endText","_beginPath","_appendLineSegment","_appendBezierSegment","x3","y3","_setTextRenderingMode","renderingMode","_setCharacterSpacing","charSpacing","_setWordSpacing","wordSpacing","_showNextLineText","unicode","_setLineDashPattern","pattern","patternOffset","tempPattern","_setMiterLimit","miterLimit","_setLineWidth","_setLineCap","lineCapStyle","_setLineJoin","lineJoinStyle","_executeObject","_beginMarkupSequence","_endMarkupSequence","_clear","_bytes","currentData","PdfStringFormat","arg1","arg2","horizontalScalingFactor","rightToLeft","_wordWrapType","word","lineLimit","alignment","lineAlignment","PdfVerticalAlignment","characterSpacing","lineSpacing","clipPath","firstLineIndent","_internalParagraphIndent","measureTrailingSpaces","noClip","defineProperty","enumerable","configurable","_pdfSubSuperScript","__extends","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","_PdfFontMetrics","_lineGap","_getAscent","format","_ascent","_getDescent","_descent","_getLineGap","_getHeight","clearTypeFonts","clearTypeFontCollection","_size","subSuperScript","subScript","_subScriptSizeFactor","superScript","_superscriptSizeFactor","_WidthTable","_StandardWidthTable","_super","widths","_this","_itemAt","_toArray","_CjkWidthTable","defaultWidth","_defaultWidth","_from","_to","_appendToArray","_add","_CjkWidth","_CjkSameWidth","from","to","_widthFrom","_widthTo","_width","_CjkDifferentWidth","_widths","_PdfStringLayouter","_layout","_initialize","_doLayout","_font","_format","_rectangle","_reader","_StringTokenizer","_pageHeight","_close","_PdfStringLayoutResult","lineResult","lines","line","_peekLine","lineIndent","_getLineIndent","_layoutLine","numSymbolsInserted","returnedValue","_copyToResult","success","_read","_readLine","_finalizeResult","firstLine","paragraphIndent","_getLineHeight","_metrics","_getLineWidth","getLineWidth","_lineHeight","maxWidth","lineWidth","lineType","_LineType","firstParagraphLine","readWord","_addToLineResult","newLineBreak","curLine","curIndent","reader","_peekWord","_length","_position","curLineWidth","_getWrapType","wordOnly","_remainder","_peek","_wordWrap","character","stringValue","layoutBreak","_readWord","lastParagraphLine","_layoutLines","breakType","info","_LineInfo","_text","_lineType","_actualSize","allowPartialLines","maxHeight","_lines","len","expHeight","_trimLine","_end","_readToEnd","_empty","textValue","text2","_tab","_spaces","_TrueTypeTableInfo","_offset","_checksum","_TrueTypeOS2Table","_TrueTypePostTable","_TrueTypeNameTable","_TrueTypeMicrosoftCmapSubTable","_TrueTypeHorizontalHeaderTable","_TrueTypeHeadTable","_TrueTypeCmapTable","_TrueTypeCmapSubTable","_TrueTypeAppleCmapSubTable","_TrueTypeTrimmedCmapSubTable","_TrueTypeReader","_int32Size","_isFont","_isMacTtf","_isMacFont","_missedGlyphs","_tableNames","_entrySelectors","_fontData","_macintoshDictionary","Dictionary","_microsoftDictionary","_internalMacintoshGlyphs","_internalMicrosoftGlyphs","_TrueTypeMetrics","_readFontDictionary","nameTable","_readNameTable","headTable","_readHeadTable","_initializeFontName","_macStyle","_check","table","_readInt16","_tableDirectory","table_1","tableKey","_readString","_readInt32","setValue","_lowestPosition","_fixOffsets","minOffset","MAX_VALUE","tableKeys","keys","offset","getValue","shift","version","tableInfo","_getTable","_formatSelector","_readUInt16","_recordsCount","_nameRecords","record","_TrueTypeNameRecord","_platformID","_encodingID","_languageID","_nameID","_name","_version","_readFixed","_fontRevision","_checkSumAdjustment","_readUInt32","_magicNumber","_flags","_unitsPerEm","_created","_readInt64","_modified","_xMin","_yMin","_xMax","_yMax","_lowestReadableSize","_fontDirectionHint","_indexToLocalFormat","_glyphDataFormat","_readHorizontalHeaderTable","_ascender","_descender","_advanceWidthMax","_minLeftSideBearing","_minRightSideBearing","_xMaxExtent","_caretSlopeRise","_caretSlopeRun","_metricDataFormat","_numberOfHMetrics","_readOS2Table","_xAvgCharWidth","_usWeightClass","_usWidthClass","_fsType","_ySubscriptXSize","_ySubscriptYSize","_ySubscriptXOffset","_ySubscriptYOffset","_ySuperscriptXSize","_ySuperscriptYSize","_ySuperscriptXOffset","_ySuperscriptYOffset","_yStrikeoutSize","_yStrikeoutPosition","_sFamilyClass","_panose","_readBytes","_ulUnicodeRange1","_ulUnicodeRange2","_ulUnicodeRange3","_ulUnicodeRange4","_vendorIdentifier","_fsSelection","_usFirstCharIndex","_usLastCharIndex","_sTypoAscender","_sTypoDescender","_sTypoLineGap","_usWinAscent","_usWinDescent","_ulCodePageRange1","_ulCodePageRange2","_sxHeight","_sCapHeight","_usDefaultChar","_usBreakChar","_usMaxContext","_readPostTable","_formatType","_italicAngle","_underlinePosition","_underlineThickness","_isFixedPitch","_minType42","_maxType42","_minType1","_maxType1","_readWidthTable","glyphCount","unitsPerEm","glyph","_TrueTypeLongHorMetric","_advanceWidth","_lsb","glyphWidth","floor","_readCmapTable","_tablesCount","subTables","subTable","_readCmapSubTable","_getCmapEncoding","apple","_readAppleCmapTable","microsoft","_readMicrosoftCmapTable","trimmed","_readTrimmedCmapTable","_maxMacIndex","glyphInfo","_TrueTypeGlyph","_readByte","_getWidth","_charCode","macintosh","_addGlyph","collection","_microsoft","_segCountX2","_searchRange","_entrySelector","_rangeShift","segCount","_endCount","_readUShortArray","_reservedPad","_startCount","_idDelta","_idRangeOffset","_glyphID","codeOffset","id","_firstCode","_entryCount","_fontFamily","_postScriptName","obj","containsKey","glyphCode","platformID","encodingID","roman","_microsoftGlyphs","_macintoshGlyphs","_initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","_isSymbol","factor","_winAscent","_macAscent","_capHeight","_winDescent","_macDescent","_leading","_fontBox","_stemV","_widthTable","_updateWidth","_contains","_getGlyph","byteToProcess","space","_getString","_getDefaultGlyph","_setOffset","_readFontProgram","chars","glyphChars","_getGlyphChars","locaTable","_readLocaTable","_bIsLocaShort","_updateGlyphChars","result1","_generateGlyphTable","glyphTableSize","newLocaTable","newGlyphTable","result2","_updateLocaTable","newLocaSize","newLocaUpdated","_getFontProgram","activeGlyphs","sort","a","glyphSize","glyphIndex","_offsets","glyphSizeAligned","_align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","bShort","_TrueTypeLocaTable","clone","glyphCharKeys","nextKey","_processCompositeGlyph","glyphOffset","glyphHeader","_TrueTypeGlyphHeader","numberOfContours","xMin","yMin","xMax","yMax","skipBytes","flags","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","bLocaIsShort","writer","_BigEndianWriter","_writeShort","_writeInt","_data","newLocaTableOut","locaTableSize","_getFontProgramLength","fontProgramLength","entrySelector","_writeCheckSums","_writeGlyphs","tableNames","tableName","charKeys","usedTablesSize","nextTableSize","_writeString","checksum","_calculateCheckSum","_writeUInt","pos","byte1","byte2","byte3","byte4","_writeBytes","buff","i_1","written","read","_createInternals","obj1","_isFontPresent","isUnicode","i1","i2","i3","i4","low","n","_getCharacterWidth","_convertString","capacity","int32Size","int16Size","int64Size","_bufferLength","_buffer","length_1","_internalPosition","_flush","_UnicodeTrueTypeFont","_nameString","_isEmbedFont","_cmapPrefix","_cmapEndCodeSpaceRange","_cmapBeginRange","_cmapEndRange","_cmapSuffix","_fontSize","_fontString","_Initialize","_beginSave","_descendantFontBeginSave","_cmapBeginSave","_fontDictionaryBeginSave","_fontProgramBeginSave","_fontDescriptor","_fontProgram","_usedChars","_getDescendantWidth","_descendantFont","_fontDictionary","_cmap","_ttfReader","_ttfMetrics","_subsetName","_getFontName","_createDescendantFont","_createFontDictionary","_getInternals","ttfMetrics","_height","_isBold","_createFontDescriptor","systemInfo","_createSystemInfo","descriptor","metrics","_getDescriptorFlags","_getBoundBox","_generateFontProgram","fontProgram","_clearStream","_generateCmap","_toHexString","isCaseChange","s","last","middlePart","nextRange","_currentObj","fixedPitch","symbolic","nonSymbolic","_isItalic","forceBold","_setSymbols","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","_ArabicShapeRenderer","_arabicCharTable","_alef","_alefHamza","_alefHamzaBelow","_alefMadda","_lam","_hamza","_zeroWidthJoiner","_hamzaAbove","_hamzaBelow","_wawHamza","_yehHamza","_waw","_alefsura","_yeh","_farsiYeh","_shadda","_madda","_lwa","_lwawh","_lwawhb","_lwawm","_bwhb","_fathatan","_superalef","_vowel","_arabicMapTable","Map","_getCharacterShape","_shape","_doShape","level","str","next","previous","_ArabicShape","present","_ligature","shapeCount","_getShapeCount","_shapes","_shapeValue","_append","_shapeLigature","shape","_shapeType","_shapeVowel","_Bidirectional","_indexes","_indexLevels","_mirroringShape","_update","_doMirrorShaping","res","_getLogicalToVisualString","inputText","isRtl","rtlCharacters","_RtlCharacters","_getVisualOrder","_setDefaultIndexLevel","_doOrder","resultBuilder","sIndex","eIndex","odd","even","pstart","pend","_reArrange","temp","_textOrder","_rtlCharacterTypes","L","lre","lro","R","AL","rle","rlo","pdf","EN","ES","ET","AN","CS","nsm","BN","B","S","WS","ON","_charTypes","_getCharacterCode","_doVisualOrder","_levels","characterCodes","_setDefaultLevels","_setLevels","_updateLevels","_result","_getEmbeddedCharactersLength","preview","preType","_checkEmbeddedCharacters","startType","endType","charType","_checkEuropeanDigits","_checkArabicCharacters","_checkEuropeanNumberSeparator","_checkEuropeanNumberTerminator","l","_getLength","_checkOtherNeutrals","_checkOtherCharacters","pst","_checkCharacters","validSet","t","lt","tt","rt","_RtlRenderer","_openBracket","_closeBracket","rtl","wordSpace","_isUnicode","_customLayout","_splitLayout","words","_customSplitLayout","_getGlyphIndex","glyphs","_glyphIndex","ttfReader","_fontInternal","unicodeLine","_UnicodeLine","textDirection","layouted","txt","_addCharacter","PdfFont","_style","_fontMetrics","_setInternals","internals","_pdfFontInternals","_getCharacterCount","symbols","numSymbols","curIndex","measureString","arg3","arg4","arg5","temparg2","layoutArea","temparg3","_applyFormatSettings","realWidth","_checkStyle","_initializeInternals","_getCharacterWidthInternal","_PdfStandardFontMetricsFactory","_getMetrics","_PdfCjkStandardFontMetricsFactory","_getEncoding","_getDescendantFont","_PdfCjkFontDescriptorFactory","_getFontDescriptor","_getSystemInformation","systemInformation","_createFontInternal","_calculateStyle","iStyle","_isEmbed","_isUnicodeFont","_getUnicodeLineWidth","codeWidth","internalFont","fontStyle","_getHelveticaMetrics","_getCourierMetrics","_getTimesMetrics","_getSymbolMetrics","_getZapfDingbatsMetrics","_subSuperScriptFactor","_helveticaBoldItalicAscent","_helveticaBoldItalicDescent","_helveticaBoldItalicName","_arialBoldWidth","_helveticaBoldAscent","_helveticaBoldDescent","_helveticaBoldName","_helveticaItalicAscent","_helveticaItalicDescent","_helveticaItalicName","_arialWidth","_helveticaAscent","_helveticaDescent","_helveticaName","_courierBoldItalicAscent","_courierBoldItalicDescent","_courierBoldItalicName","_fixedWidth","_courierBoldAscent","_courierBoldDescent","_courierBoldName","_courierItalicAscent","_courierItalicDescent","_courierItalicName","_courierAscent","_courierDescent","_courierName","_timesBoldItalicAscent","_timesBoldItalicDescent","_timesBoldItalicName","_timesRomanBoldItalicWidths","_timesBoldAscent","_timesBoldDescent","_timesBoldName","_timesRomanBoldWidth","_timesItalicAscent","_timesItalicDescent","_timesItalicName","_timesRomanItalicWidth","_timesAscent","_timesDescent","_timesName","_timesRomanWidth","_symbolAscent","_symbolDescent","_symbolName","_symbolWidth","_zapfDingbatsAscent","_zapfDingbatsDescent","_zapfDingbatsName","_zapfDingbatsWidth","_getHanyangSystemsGothicMedium","widthTable","_getHanyangSystemsShinMyeongJoMedium","_getHeiseiKakuGothicW5","_getHeiseiMinchoW3","_getMonotypeHeiMedium","_getMonotypeSungLight","_getSinoTypeSongLight","_fillMonotypeSungLight","fontMetrics","_fillFontBox","_fillKnownInformation","_fillHeiseiKakuGothicW5","_fillHanyangSystemsShinMyeongJoMedium","_fillHeiseiMinchoW3","_fillSinoTypeSongLight","_fillMonotypeHeiMedium","_fillHanyangSystemsGothicMedium","fontBox","_PdfPath","_isRoundedRectangle","_fillMode","winding","_points","_pathTypes","_isStart","_addLine","_addPoints","_PathPointType","_addLines","linePoints","_addPoint","startIndex","endIndex","_lastPoint","_addArc","startAngle","sweepAngle","list","bezier","_addRectangle","_startFigure","_closeFigure","_addPolygon","newPoints","_addEllipse","_addBezierPoints","pointsCollection","inner1","inner2","_addBezier","firstX","firstY","secondX","secondY","endX","endY","closePath","_getBounds","xmin","xmax","ymin","ymax","PdfImage","_imageWidth","_imageHeight","_imagePhysicalDimension","_getPointSize","_horizontalResolution","draw","graphics","needSave","save","translateTransform","drawImage","restore","horizontalResolution","ucX","_PdfUnitConvertor","ucY","_convertUnits","pixel","PdfGraphics","content","xref","_pendingResource","_hasResourceReference","PdfPage","_source","_template","_resourceObject","_sw","_clipBounds","_m","_resourceMap","other","_transparencies","_setTransparencyData","PdfGraphicsState","_textRenderingMode","_charSpacing","_characterSpacing","_textScaling","_wordSpacing","_currentBrush","_currentPen","_currentFont","_graphicsState","_doRestore","pop","_transformationMatrix","drawRectangle","pen","brush","PdfPen","_stateControl","_drawGraphicsPath","drawPolygon","drawEllipse","_constructArcPath","drawArc","physicalDimension","_save","_getTranslateTransform","_getScaleTransform","sourceDictionary","keyName","isNew","_updateImageResource","resource","drawTemplate","_isExported","_importStream","scaleX","scaleY","needScale","needTransform","_origin","_isAnnotationTemplate","_needScale","scaleApplied","templateMatrix","templateBox","templateScaleX","templateScaleY","roundScaleX","roundScaleY","_scale","keyName_1","ref_1","isReference","_resources","base","_getNextReference","_processResources","_updatePendingResource","_reference","_updateFontResource","image","_imageStream","_maskStream","_maskReference","internal","_drawPath","path","_buildUpPath","drawRoundedRectangle","radius","diameter","arc","sweep","_writePen","_dashPattern","_dashOffset","_lineJoin","_lineCap","_miterLimit","_color","drawString","_checkCorrectLayoutRectangle","_drawStringLayoutResult","types","_getBezierPoint","_mediaBoxUpperRightBound","_colorSpaceInitialized","_startCutIndex","_initializeCurrentColorSpace","_brushControl","_penControl","_fontControl","hasResource","layoutRectangle","shouldClip","clipRegion","clipBounds","middle","setClip","_applyStringSettings","verticalAlignShift","_getTextVerticalAlignShift","_drawLayoutResult","_underlineStrikeoutText","_getNextPage","_pageIndex","tm","_TextRenderingMode","fill","fillStroke","stroke","clipFlag","cs","ws","lineInfo","hAlignShift","_getHorizontalAlignShift","_drawUnicodeLine","_drawAsciiLine","vAlignShift","baseline","useWordSpace","justify","ttfFont","_justifyLine","rtlRender","blocks","rightAlign","_drawUnicodeBlocks","_breakUnicodeLine","tokens","_convertToUnicode","xShift","spaceWidth","tokenWidth","textHeight","boundsHeight","boundsWidth","center","shouldJustify","_shouldJustify","hasWordSpacing","whitespacesCount","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","isUnderline","isStrikeout","linePen","_createUnderlineStrikeoutPen","underlineYOffset","strikeoutYOffset","_lineCount","hShift","drawLine","textSize","layoutedRectangle","fillMode","needClosing","isBrush","isPen","alternate","_initializeCoordinates","cbox","location_1","needTransformation","mbox","_cropBox","scaleTransform","_multiply","rotateTransform","setTransparency","transparencyData","transparencyKey","_TransparencyData","transparencyDict","_key","tkey","tdata","_clipTranslateMargins","_Matrix","arg6","_clone","slice","_transform","_offsetX","_offsetY","_g","PdfBrush","_dashStyle","flat","miter","_proportions","_updateProportions","_convertFromPixels","_convertToPixels","_XmlWriter","isAppearance","_bufferText","_namespaceStack","_elementStack","_currentState","_skipNamespace","_Namespace","_XmlElement","_set","_attributeStack","_writeStartDocument","standalone","_rawText","_writeStartElement","localName","prefix","namespace","_checkName","_startElementContent","_lookupPrefix","_lookupNamespace","_writeStartElementInternal","_writeEndElement","_writeEndElementInternal","_prefix","_localName","splice","_previousTop","_writeElementString","_writeAttributeString","_writeStartAttribute","_writeStringInternal","_writeEndAttribute","_writeInternal","_writeRaw","isRawString","_destroy","_writeStartAttributePrefixAndNameSpace","_writeStartAttributeSpecialAttribute","_skipPushAndWrite","_pushNamespaceExplicit","_pushNamespaceImplicit","_writeStartAttributeInternal","_writeNamespaceDeclaration","namespaceUri","_writeStartNamespaceDeclaration","inAttributeValue","_kind","_namespaceUri","_addNamespace","ns","kind","_lookupNamespaceIndex","existingNsIndex","isValid","_addAttribute","namespaceName","_XmlAttribute","_isDuplicate","test","previousTop","_ExportHelper","_asPerSpecification","_fileName","_formKey","_exportEmptyFields","_groupReferences","_groupHolders","_richTextPrefix","_table","_fields","_richTextValues","_jsonData","_openingBrace","_openingBracket","_closingBrace","_closingBracket","_colon","_doubleQuotes","_comma","_space","fdfString","_xmlImport","_exportFormFieldsData","export","_getEncodedFontDictionary","fieldName","_getEncodedValue","selectedValue","_getExportValue","PdfListBoxField","PdfComboBoxField","_obtainSelectedValue","radioButton","PdfRadioButtonListField","selectedIndex","options","isNaN","PdfCheckBoxField","_getAppearanceStateValue","itemAt","_defaultIndex","_exportFormFieldData","replaceValue","PdfTextBoxField","multiLine","PdfListField","_getAnnotationType","subtype","_getValue","primitive","_getValidString","colorArray","_getColor","kids","kid","structure","_encodeDictionary","_FontStructure","_replaceNotUsedCharacters","root","pdfEncoding","encodingDictionary","fontEncodeDictionary","differencesDictionary","result_1","isSkip_1","holder","updatedString","_fontType","_baseFontEncoding","_fontEncoding","_fontName","_addReferenceToGroup","_handlePopup","annotations","annotationDictionary","popupReference","popup","popupAnnotation","_parseAnnotation","_annotations","_parsedAnnotations","_importField","richTextValue","_getFieldIndex","fieldAt","_importFieldData","selectedValues_1","indexes_1","options_1","_options","option","AP","lowerCase","_containsExportValue","_kidsCount","_checkSelected","asEntry","normalTemplate","toLocaleLowerCase","_dispose","exportAppearance","_skipBorderStyle","_isAnnotationExport","_isAnnotationImport","_annotationTypes","_annotationAttributes","_xmlDocument","_parser","_XfdfDocument","fileName","_exportAnnotations","_exportFormFields","_checkAnnotationType","_exportAnnotationData","exportEmptyFields","_writeFormFieldData","isAcrobat","_getElements","flag_1","_writeFieldName","hasId","_root","parentElements","newTable","pageIndex","PdfFileLinkAnnotation","PdfTextWebLinkAnnotation","PdfDocumentLinkAnnotation","PdfUriAnnotation","_writeAnnotationData","hasAppearance","borderEffect","_writeDictionary","isBorderStyle","_writeAttribute","_getAppearanceString","_exportMeasureDictionary","sound","soundDictionary","getBytes","fsDictionary","efDictionary","fStream","fDictionary","paramsDictionary","vertices","elementCount","_writeRawData","defaultStyle","inkList","textWriter","_writeAppearanceDictionary","_writeObject","_writePrefix","_writeArray","streamDictionary","getString","_getFormatedString","isParsing","_writeColor","attribute","isLowerCase","_exportMeasureFormatDetails","measurementDetails","_importAnnotations","xml","DOMParser","parseFromString","_readXmlData","documentElement","_importFormData","nodeType","_checkXfdf","xList","getElementsByTagName","child","hasChildNodes","childeNodes","childNodes","childNode","_parseAnnotationData","inReplyTo","IRT","_parseFormData","nodeName","fileNameElement","hasAttribute","getAttribute","fieldList","filedElement","_importFormNodes","node","textName","skip","name_1","parentElement","dataValues","textContent","name_2","richText","innerHTML","hasAttributes","_getAnnotationDictionary","_isImported","_ref","isValidType","points_1","_addLineEndStyle","_addAnnotationData","_addBorderStyle","_applyAttributeValues","attributes","_parseInnerElements","_addMeasureDictionary","borderEffectDictionary","borderStyleDictionary","isBasicStyle","dashes_1","leaderExtend","_addString","_obtainPoints","_addInt","_addFloatPoints","_addFloat","annotFlag","flagType","_allowImportCustomData","children","_loop_1","childElement","popupDictionary","this_1","vertices_1","innerValue","verticesArray_1","_addAppearanceData","inkListCollection","_loop_2","inkChild","inkChildElement","points_2","pointsArray_1","_addStreamData","parent","raw","_addFileAttachment","_addSound","soundStream","_PdfContentStream","soundReference","fileDictionary","fileStream","param","embeddedFile","fileReference","innerText","atob","rootNode","rootElement","_getAppearance","_getStream","_addKey","_getDictionary","_getArray","_getFixed","_getInt","_getName","_getBoolean","_getData","isImage","_isCompress","Length","Filter","_addArrayElements","name_3","floatValue","intValue","bool","measurement","area","distance","xformat","measureDictionary","dDict","aDict","xDict","dArray","aArray","xArray","_addElements","beginLineStyle","endLineStyle","lineEndingStyles","_differencesDictionary","_getDifferencesDictionary","_getFontEncoding","baseFontEncoding","fontEncoding","differences","fontName","lastIndexOf","_decodeHexFontName","hexValue","_JsonDocument","_isImport","_isColorSpace","isAnnotationAdded","_exportAnnotation","_convertToJson","clear","rectArray","_writeInkList","_writeVertices","styleTable","textStyle","vertice","json","details","parentTable","appearanceTable","_writeTable","_convertToJsonArray","dataTable","streamTable","baseStream","isImageStream","flateStream","map","_parseJson","stringData","JSON","parse","pageAnnotations_1","pdfAnnotation","pageCount_1","pageKeys","page_1","pageAnnotation","pageAnnotationKeys","annotationKeys","annotations_1","annotation_1","dataStream","_addLinePoints","color_1","_parseFloatPoints","_addBoolean","styleKeys_1","style_1","count_1","styleKey","styleValue","gestureKeys","gesture","stringify","objectNumber","generationNumber","dashArray","dash","tArray","vArray","_readDictionaryElements","soundStream_1","fileDictionary_1","fileStream_1","param_1","decoded","_parseDictionary","_parseAppearance","int","fixed","boolean","dict","_parseStream","unicodeData","dataKeys","byteString","_parseStreamElements","_pendingResources","_isReadOnly","_writeTransformation","_isTemplateGraphics","_exportStream","jsonDocument","resourceTable","_appearance","hasCrossReference","PdfGoToAction","arg","_destination","PdfAction","_next","PdfFieldActions","_field","_mouseEnter","_getPdfAction","_updateAction","_mouseLeave","_mouseUp","_mouseDown","_gotFocus","_lostFocus","action","_destinationMode","location","_visible","_isTransparentBackColor","_isTransparentBorderColor","_defaultFont","_appearanceFont","_defaultItemFont","_flatten","_kids","_form","names","_actualName","_mappingName","mappingName","_alternateName","toolTip","_hasFlags","visibleNotPrintable","flagValue","_visibility","visibility","rotate","_defaultAppearance","_da","_PdfDefaultAppearance","_parseBackColor","_updateBackColor","_parseBorderColor","_updateBorderColor","_fieldFlags","required","border","PdfInteractiveBorder","PdfButtonField","borderStyle","_dash","_updateBorder","rotationAngle","noExport","index1","_tabIndex","_tabOrder","manual","tabOrder","annotationCollection","PdfAnnotationCollection","_annotationIndex","widgetRef","_gray","_silver","_white","_black","mkDictionary","_mkDictionary","hasTransparency","_hasBackColor","backColor","bgArray","_hasBorderColor","borderColor","BC","bsDictionary","W","_parsedItems","PdfWidgetAnnotation","_load","setAppearance","_setAppearance","removeItemAt","itemsCount","_getPage","_removeAnnotation","parsedItems_1","removeItem","da","bs","_checkFieldFlag","_initializeFont","fontDict","_drawRectangularControl","parameter","backBrush","_drawBorder","borderPen","borderWidth","_drawLeftTopShadow","_grayBrush","_drawRightBottomShadow","_silverBrush","_whiteBrush","shadowBrush","_drawRadioButton","checkSymbol","unchecked","pressedChecked","pressedUnchecked","_drawRoundBorder","_drawRoundShadow","outward","foreBrush","_drawCheckBox","inflateValue","shadowColor","leftTop","rightBottom","_blackBrush","yOffset","extraBorder","xPosition","xOffset","pageRotationAngle","state_1","size_1","z","_addToKid","currentIndex","_drawTemplate","_addToOptions","_listValues","_value","_pdfFont","_addAppearance","_rotateTextBox","_checkIndex","_getTextAlignment","_textAlignment","_setTextAlignment","_stringFormat","_parseItems","_autoResizeText","_defaultValue","password","doNotScroll","doNotSpellCheck","comb","fileSelect","highlightMode","_maxLength","maxLength","_isAutoResize","_spellCheck","_insertSpaces","_multiline","_password","_scrollable","_createItem","_create","textAlignment","actualName","_doPostProcess","isFlatten","_postProcess","_createAppearance","appearanceStream","_PaintParameter","backcolor","insertSpaces","_drawTextBox","scrollable","multiline","scroll","startlocation","isAutoFontSize","_actions","_assignText","fieldDictionary","pushButton","pressed","isPressed","_drawPressedButton","_drawButton","PdfStateItem","V","AS","_drawAppearance","normalChecked","normalCheckedReference","normalUnchecked","normalUncheckedReference","normalDictionary","normalReference","pressChecked","pressCheckedReference","pressUnchecked","pressUncheckedReference","pressedDictionary","pressedReference","_selectedIndex","_retrieveOptionValue","_obtainSelectedIndex","name_5","PdfRadioButtonListItem","_setField","parsedItems_2","radio","_optionValue","checkName","asName","values_1","_tryGetIndex","values_2","indices_1","multiSelect","_multiSelect","edit","_editable","_optionArray","PdfListFieldItem","addItem","parsedItems_3","fieldItem","_addEmptyWidget","_obtainFont","_getFontHeight","selectedIndexes","combo","acroForm","fontString","verticalAlignment","stringFormat","_drawComboBox","doubleBorderWidth","padding","itemTextBound","itemFont","widths_1","h","textWidth","_drawListBox","location_2","selected","PdfSignatureField","_isSigned","_checkSigned","needAppearance","firstItemTemplate","_getItemTemplate","_flattenSignature","signatureTemplate","_calculateTemplateBounds","graphicsRotation","_obtainGraphicsRotation","atan2","sliced","PdfAppearance","annot","_templateNormal","_isExport","_opacity","_isAllRotation","_popUpFont","_authorBoldFont","_lineCaptionFont","_isTransparentColor","_author","author","hasKey","_border","PdfAnnotationBorder","_hRadius","_vRadius","hRadius","vRadius","_isWidget","_annotFlags","extColor","_innerColor","innerColor","_creationDate","_stringToDate","_dateToString","_modifiedDate","_isBounds","_caption","PdfAnnotationCaption","_cap","capType","inline","caption","cap","opacity","_subject","prevRotate","_getRotationAngle","_isFlattenPopups","_ratio","getValues","setValues","assignXref","_getBoundsValue","_validateTemplateMatrix","isRotatedMatrix","isValidMatrix","locationX","locationY","templateX","templateY","annotationBounds","_locationDisplaced","_removeAnnotationFromPage","_flattenAnnotationTemplate","isNormalMatrix","currentBounds","lineAnnotation","_needInitializeGraphics","rubberStampAnnotation","_o","radians","_drawCloudStyle","overlap","_isClockWise","sortedPoints","circles","circleOverlap","previousPoint","currentPoint","dx","dy","sqrt","cur","_CloudStyleArc","previousCurvedStyleArc","currentCurvedStyleArc","_getIntersectionDegrees","endAngle","sweepAngel","tempPoints","pdfpath","incise","sum","radian","cosvalue","acos","_obtainStyle","dashPattern","isDash","intensity","_createRectangleAppearance","rdArray","cloudRectangle","RD","nativeRectangle","_drawRectangleAppearance","graphicsPath","sublist","_createCircleAppearance","nativeBounds","_drawCircleAppearance","top_1","controlPointList","startPointList","endPointList","_createBezier","third","bezierPoints","_populateBezierPoints","currentIteration","midPoint1","_midPoint","midPoint2","midPoint3","_getAngle","angleRatio","atan","_getAxisValue","_degreeToRadian","_drawLineEndStyle","axisPoint","isBegin","arraowAngle","startPoint","fourth","_pen","_drawLineStyle","lineStyle","begin","styleArray","_getEqualPdfGraphicsUnit","measurementUnit","graphicsUnit","_createMeasureDictionary","_colorToHex","col","_componentToHex","hex","_getRotatedBounds","rotateAngle","corners","minX","maxX","minY","maxY","_flattenPopUp","_flattenPop","subject","boundsValue","clientSize","annotBounds","rectValue","top_2","track","aBrush","_getForeColor","_drawAuthor","titleRect","_saveGraphics","contentRect","_drawSubject","_flattenLoadedPopUp","_getRectangleBoundsValue","trackingHeight","blendMode","_getBorderColorString","date","dateFormat","Date","year","month","day","hour","minute","timeZone","signature","timeZoneHour","timeZonMinute","setTime","getTime","dateTime","getMonth","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","getFullYear","_obtainNativeRectangle","cropBoxOrMediaBox","PdfComment","_comments","PdfPopupAnnotationCollection","_reviewHistory","_unit","_unitString","_linePoints","_leaderExt","leaderExt","_leaderLine","leaderLine","_lineEndingStyle","PdfAnnotationLineEndingStyle","lineStyles","_begin","lineEndingStyle","_leaderOffset","leaderOffset","_lineIntent","lineIntent","lineDimension","lineArrow","_measure","flatten","_appearanceTemplate","_createLineMeasureAppearance","boundsArray","_obtainLineBounds","updatedBounds","flattenPopups","measure","reference_1","_isFlatten","_convertToUnit","linePoints1","_obtainLinePoints","rectPath","lineAngle","endPoint","lineDistance","centerWidth","beginLineExt","endLineExt","beginLeaderLine","endLeaderLine","midpoint","centerPoint","captionPosition","nativeRectangle1","ds","dic","_calculateAngle","startPointX","startPointY","endPointX","endPointY","_calculateLineBounds","leaderLineExt","leaderLines","x1y1","x2y2","offsetPoint1","offsetPoint2","startingPoint","endingPoint","beginLineLeader","endLineLeader","beginLinePoint","_getLinePoint","endLinePoint","widthX","heightY","_drawLine","rectangleBounds","PdfCircleAnnotation","_measureType","circleAnnotation","_createCircleMeasureAppearance","reference_2","fontsize","converter","PdfEllipseAnnotation","ellipseAnnotation","reference_3","PdfSquareAnnotation","squareAnnotation","_borderEffect","PdfBorderEffect","_intensity","_createSquareMeasureAppearance","reference_4","_calculateAreaOfSquare","appearanceBounds","tem","PdfRectangleAnnotation","rectangleAnnotation","_isValidTemplateMatrix","reference_5","appearanceTemplate","pointF","PdfPolygonAnnotation","polygonAnnotation","_lineExtension","lineExt","lineExtension","polygonBounds","_createPolygonAppearance","reference_6","backgroundBrush","_getLinePoints","polygonPoints","pageSize","PdfPolyLineAnnotation","_beginLine","_endLine","polyLineAnnotation","pathTypes","_polylinePoints","polyLineBounds","_createPolyLineAppearance","reference_7","polyLinepoints_1","PdfAngleMeasurementAnnotation","_firstIntersectionPoint","_secondIntersectionPoint","_pointArray","angleMeasurementAnnotation","_createAngleMeasureAppearance","v","dDictionary","tDictionary","aDictionary","vDictionary","xDictionary","_getAngleBoundsValue","_radius","midPoint","_startAngle","_sweepAngle","xDiff","yDiff","midpointAngle","up","down","reference1","point1","point2","point3","firstLineDistance","secondLineDistance","intersectionPoint1","intersectionPoint2","_findLineCircleIntersectionPoints","centerX","centerY","intersection1","intersection2","NaN","PdfInkAnnotation","_inkPointsCollection","_previousCollection","_isModified","inkAnnotation","_addInkPoints","_createInkAppearance","_obtainInkListCollection","_getInkBoundsValue","inkPoints","pathPointCont","pathPoints","p1","p2","_getControlPoints","controlP1","controlP2","point_1","path1","path2","pointCount","rightVector","xValue","_getSingleControlPoint","yValue","vector","tmpVector","divisor","inkCollection","unshift","isEqual","termsList","subList","isTwoPoints","pointCollection","_calculateInkBounds","innerList","PdfPopupAnnotation","_icon","_iconString","_stateModel","_state","_open","_isReview","_isComment","_obtainIconName","_createPopupAppearance","pen1","template_1","fileLinkAnnotation","_action","actionDictionary","_addAction","nextAction","uri","_uri","uriAnnotation","linkDict","documentLinkAnnotation","_addDocument","top_3","top_4","referenceArray","referenceValue","top_5","top_6","top_7","_array","brushColor","penColor","penWidth","_isActionAdded","_textWebLink","_brush","textWebLinkAnnotation","_url","linkSource","_get","PdfAttachmentAnnotation","fileAttachmentAnnotation","_addAttachment","fileSpecification","fileSpectDictionary","toTimeString","efileDictionary","fsReference","Pdf3DAnnotation","movieAnnotation","PdfTextMarkupAnnotation","_textMarkupType","_quadPoints","_boundsCollection","textMarkupAnnotation","_textMarkUpColor","isChanged","boundsCollection","_setQuadPoints","_createMarkupAppearance","native","pdfPath","quadPoints","textMarkUpColor","pdfPen","w1","h1","textMarkupType","_drawSquiggly","pathPointsCount","zigZag","textQuadLocation","noofRect","PdfWatermarkAnnotation","_watermarkText","watermarkAnnotation","_createWatermarkAppearance","_rotateAngle","PdfRubberStampAnnotation","_stampWidth","_stampAppearanceFont","createTemplate","templateDictionary","mMatrix","_transformBBox","_createRubberStampAppearance","innerBounds","_obtainInnerBounds","bBoxValue","xCoordinate","yCoordinate","_transformPoint","point4","_minValue","_maxValue","minimum","maximum","isTransformBBox","isStamp","isRotated","_drawStampAppearance","_obtainBackGroundColor","_obtainBorderColor","rubberFont","_drawRubberStamp","pdfBrush","normalAppearance","normalAppearanceDictionary","PdfSoundAnnotation","soundAnnotation","PdfFreeTextAnnotation","_intentString","_markUpFont","_cropBoxValueX","_cropBoxValueY","freeTextAnnotation","_calloutLines","_getCalloutLinePoints","_obtainLineEndingStyle","collections","_borderColor","_obtainColor","_annotationIntent","_obtainAnnotationIntent","_setPaddings","paddings","_paddings","_updateCropBoxValues","_saveFreeTextDictionary","cropOrMediaBox","reference_8","_obtainAppearanceBounds","_obtainText","_obtainTextAlignment","calloutLines","_drawCallOuts","_calculateRectangle","outerRectangle","_drawFreeTextRectangle","_drawFreeMarkUpText","innerRectangle","isRotation","bounds_1","_left","top_8","_top","_right","_bottom","checkPaddingWithFontHeight","_drawFreeTextAnnotation","isSkipDrawRectangle","calloutLinepoints","pointArray","length_2","_obtainCallOutsNative","_calloutsClone","_expandAppearance","markUpText","_rcText","hasAlignment","pointY","pointX","annotationIntent","_getXmlFormattedString","markupText","PdfRedactionAnnotation","redactionAnnotation","_repeat","_textColor","textColor","_overlayText","_createRedactionAppearance","_createNormalAppearance","borderTemplate","_createBorderAppearance","actualWidth","textcolor","overlayText","row","diff","textsize","repeatText","PdfRichMediaAnnotation","richMediaAnnotation","_rotationAngle","_highlightMode","_addWidget","recreateAppearance","reference_9","document_2","_backColor","_initializeItem","_getBorderEffect","_styleToEffect","isAdded","_addCommentsAndReview","_updateCustomAppearanceResource","remove","removeAt","_getProperty","actualIndex","_reorderParsedAnnotations","_updateChildReference","comments","reviewHistory","childAnnotation","_collection","link","isTextWebLink","_hasValidBorder","_getLinkAnnotation","remote","val","tabIndex","parentReference","isReview","_annotation","_parentDictionary","_parseCommentsOrReview","nextAnnotation","_parseReview","_parseComments","remaining","_isAnnotationParsed","widgets_1","_catalog","_catalogDictionary","_parseWidgetReferences","validAnnotations_1","_rotation","_obtainTabOrder","tabs","column","_cBox","_mBox","_orientation","landscape","portrait","_parseGraphics","merge","_loadContents","saveStream","saveReference","_contents","restoreStream","restoreReference","contentStream","contentReference","_initializeGraphics","contents","isInvalidCase","llx","lly","urx","ury","cx","cy","crx","cry","origin","sign","clip","_getActualBounds","actualSize","_getActualSize","_fetchResources","_getCropOrMediaBox","_location","_zoom","_isValid","_destinationBounds","_initializePrimitive","_parent","_ImageDecoder","_bitsPerComponent","_noOfComponents","_reset","_getBuffer","outputBuffer","_seek","byteLength","_toUnsigned16","_readUnsigned32","_imageData","jpeg","_readHeader","imgData","isLengthExceed","_readExceededJpegImage","_getImageDictionary","tempString","decodedString","_imageDataAsNumberArray","_getColorSpace","_getDecodeParams","decodeParams","_skipStream","isContinueReading","_getMarker","skippedByte","marker","_InflaterState","_BlockType","_PngChunkTypes","_DecompressedOutput","_usedBytes","_dOutput","_dOutSize","_dOutMask","_writeLD","copyStart","_copyFrom","copied","tailLen","_copyTo","sourceStart","sourceStartIndex_1","sourceStartIndex","_InBuffer","_bBuffer","_bInBuffer","_needsInput","_availableBits","_load16Bits","_getBitMask","_getBits","bitBuffer","avail","_setInput","_skipBits","_skipByteBoundary","_HuffmanTree","_clArray","_loadTree","isLengthTree","_getLengthTree","_getDepthTree","_maxLengthTree","_tBits","_tMask","_createTable","lTree","_maxDepthTree","_calculateHashCode","bit","_bitReverse","newcode","codeArray","ofBits","bitMask","_getNextSymbol","mask","codeLength","_nCLength","_Inflater","_extraLengthBits","_staticDistanceTreeTable","_lengthBase","_distanceBasePosition","_codeOrder","_bfinal","_bLength","_blBuffer","_blockType","unCompressedType","_caSize","_clCodeCount","_extraBits","_lengthCode","_llCodeCount","_output","_input","_loopCounter","_codeList","_cltcl","_inflaterState","readingBFinal","done","vFooter","inputBytes","_inflate","_finished","eob","readingBType","_getBlockType","dynamicType","readingNlCodes","staticType","_llTree","_distanceTree","decodeTop","unCompressedAligning","_getInflaterStateValue","_decodeDynamicBlockHeader","_decodeBlock","_decodeUncompressedBlock","endBlock","unCompressedByte1","_unCompressedByte","unCompressedByte2","unCompressedByte3","unCompressedByte4","decodeUnCompressedBytes","_unusedBytes","inflaterstate","unCompressedByte","_getInflaterState","fb","dCodeResult","fLengthResult","inLengthResult","_inLength","iLength","fLength","_fLength","dCode","_dcode","_distanceCode","readingNdCodes","_readingNDCodes","readingCodes","_readingCodes","readingClCodes","_readingCLCodes","readingTcBefore","readingTcAfter","_readingTCBefore","literalTreeCodeLength","distanceTreeCodeLength","_dCodeCount","_clTree","repeatCount","previousCode","readingHeader","srFooter","rFooter","_DeflateStream","leaveOpen","_leaveOpen","_inflater","cOffset","rCount","inflateResult","png","_isRedGreenBlue","_isDecode","_shades","_ideateDecode","_colors","_bitsPerPixel","_idatLength","_inputBands","_hasValidChunkType","hasValidChunk","iHDR","iDAT","_readImageData","sRGB","_ignoreChunk","pLTE","_readPhotoPlate","iEND","_decodeImageData","tRNS","_readTransparency","tEXt","iTXt","zTXt","hIST","sBIT","iCCP","pHYs","tIME","bKGD","gAMA","cHRM","_currentChunkLength","_getChunkType","_header","_PngHeader","_bitDepth","_colorType","_compression","_filter","_getFilterType","_interlace","_setBitsPerPixel","_encodedStream","_colorSpace","_getPngColorSpace","alpha","_alpha","sh","colorspace","calRGB","whitePoint","alphaY","redY","alphaZ","blueY","blueX","blueZ","colorY","bY","alphaX","_maskData","_dataStream","_getDeflatedData","_dataStreamOffset","_decodedImageData","_readDecodeData","idatData","deflateStream","numRead","outputData","_decodeData","xStep","yStep","bytesPerRow","prior","sourceY","destinationY","filter","_readStream","_PngFilterTypes","sub","_decompressSub","_decompressUp","average","_decompressAverage","paeth","_decompressPaeth","_processPixels","tmp","streamOffset","bitsPerPixel","pData","pp","pr","prp","_paethPredictor","pa","pb","pc","step","sourceX","destX","_getPixel","depth","_setPixel","unsigned","dt","hb","bitDepth","bpr","_setMask","BaseException","message","FormatError","ParserEndOfFileException","gen","_PdfReferenceSet","put","_PdfReferenceSetCache","toStringFunction","nElements","toStr","pair","keysArray","namesOfKeys","pair1","getRawValues","key1","key2","key3","callback","prevValue","getEmpty","emptyDict","dictionaryArray","mergeSubDictionary","mergedDictionary","properties","dictionaryArray_1","_a","_b","_c","property","_d","properties_1","_e","subDict","_f","_h","_j","suppressEncryption","isCatalog","_PdfNull","getByte","peekByte","peekedByte","peekBytes","getUnsignedInteger16","b0","b1","getInt32","makeSubStream","readBlock","reset","moveStart","isHex","getBaseStreams","arrayBuffer","dataStream2","strEnd","_PdfNullStream","_ContentParser","_recordCollection","_operands","_lexer","_ContentLexer","_readContent","_parseObject","eof","tokenType","_getNextToken","number","_operatorParams","real","unicodeHexString","unicodeString","operator","_createRecord","beginArray","endArray","operand","_PdfRecord","_tokenType","_currentCharacter","_nextCharacter","_moveToNextChar","_getComment","_getLiteralString","_getNumber","_getEncodedDecimalString","_getOperator","_consumeValue","_getNextChar","_isOperator","literal","beginChar","_getLiteralStringValue","parentLevel","parenthesesCount","operands","_operator","_PdfDecodeStream","maybeMinBufferLength","_rawMinBufferLength","bufferLength","minBufferLength","ensureBuffer","requested","buffer2","bufEnd","_PdfDecryptStream","maybeLength","cipher","_chunkSize","_cipher","_nextChunk","_initialized","hasMoreData","_decryptBlock","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","_PdfFlateStream","cmf","flg","codeSize","codeBuffer","getBits","getCode","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","maximumLength","code2","hdr","blockLen","block","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","codeLengths","bitsLength","bitsOffset","what","repeatLength","limit","code1","dist","_PdfCatalog","_getCatalogObj","_topPagesDictionary","pageKidsCountCache","pageIndexCache","_createForm","_allowCatalog","getPageDictionary","nodesToVisit","visitedNodes","pagesRef","currentPageIndex","currentNode","PdfPredictorStream","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","compArray","kk","prevRow","upLeft","specialChars","_PdfLexicalOperator","nextChar","_hexStringNumber","beginInlineImagePosition","peekChar","getNumber","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","numParen","charBuffered","getName","previousCh","_toHexDigit","getHexString","firstDigit","secondDigit","isFirstHex","getObject","nextCh","possibleCommand","peekObj","nextObj","streamPos","ex","skipToNextLine","_PdfParser","lexicalOperator","allowStreams","recoveryMode","_isPassword","imageCache","refill","tryShift","cipherTransform","makeInlineImage","_checkEnd","makeStream","decryptString","findDiscreteDecodeInlineStreamEnd","markerLength","startPos","foundEnd","findDefaultInlineStreamEnd","inlineStreamSkipEI","findDecodeInlineStreamEnd","tildePos","maybeEI","findHexDecodeInlineStreamEnd","dictLength","filterName","filterZero","cacheKey","imageStream","imageBytes","initialStreamPos","dictBytes","_computeMaxNumber","cacheEntry","createStream","bytesLength","startPosition","endStreamSignature","actualLength","_findStreamLength","truncatedSignature","makeFilter","filterArray","paramsArray","signatureLength","scanBytes","scanLength","endImagePosition","followingBytes","ii","endOffset","_Linearization","parser","obj2","obj3","getInt","hints","getHints","objectNumberFirst","endFirst","mainXRefEntriesOffset","pageFirst","allowZeroValue","hintsLength","hint","_PdfEncryptor","_isUserPassword","_hasUserPasswordOnly","_encryptOnlyAttachment","_encryptMetaData","_defaultPasswordBytes","_filterName","algorithm","_algorithm","keyLength","cfDictionary","streamCryptoName","handlerDictionary","ownerPassword","userPassword","revision","passwordBytes","fileIdBytes","encodeURIComponent","encryptionKey","_prepareKeyData","decodedPassword","_decodeUserPassword","ownerEncryptionKey","algorithm_1","ownerValidationKey","ownerValidationSalt","ownerKeySalt","userValidationKey","uBytes","userValidationSalt","userKeySalt","ownerEncryption","userEncryption","_AdvancedEncryption","_BasicEncryption","_checkUserPassword","_createEncryptionKey","_checkOwnerPassword","cipherDictionary","standardCryptFilter","event_1","_cipherDictionary","_string","_eff","_encryptionKey","_messageDigest","_MD5","isUserKey","_getUserKey","_getOwnerKey","encryptMetaData","hashData","hash","_md5","keyLengthInBytes","checkData","_NormalCipherFour","_encryptBlock","derivedKey","_createCipherTransform","stringCipher","_buildCipherConstructor","streamCipher","_CipherTransform","_buildObjectKey","cfm","cryptFilter","_NullCipher","_AdvancedEncryption128Cipher","_AdvancedEncryption256Cipher","isAdvancedEncryption","_r","_k","h0","h2","h3","paddedLength","padded","w","f","_Sha256","_rotateRight","_sigma","_sigmaPrime","_littleSigma","_littleSigmaPrime","_hash","h4","h5","h6","h7","Uint32Array","t1","t2","_Sha512","_Word64","assign","rotateRight","xor","shiftRight","isMode384","buffer3","buffer1","high","and","not","copyTo","or","places","shiftLeft","lowAdd","highAdd","_EncryptionKey","_sha256Obj","_sha512Obj","userBytes","_sha256","encrypted","combinedLength","combinedArray","writeOffset","k1","_encrypt","remainder","_sha512","_Cipher","_s","_AdvancedEncryptionBaseCipher","_inverseS","_mix","_mixC","_decrypt","u","_keySize","_cyclesOfRepetition","s0","s1","s2","s3","_mixCol","_decryptBlockHelper","finalize","sourceLength","iv","_iv","plain","outputLength","lastBlock","_expandKey","cipherKey","rcon","t3","t4","_stringCipher","_streamCipher","encryptString","pad","repeat","crypto","getRandomValues","_PdfCrossReference","_entries","_crossReferencePosition","_pendingRefs","_setStartXRef","startXRef","_startXRefQueue","_prevStartXref","_prevXRefOffset","_parse","trailerDictionary","_indexObjects","_readXRef","_nextReferenceNumber","_trailer","encrypt","_isEncrypted","_ids","_permissionFlags","fileId","_fileStructure","_crossReferenceType","hasRoot","_getEntry","xrefEntry","free","uncompressed","_fetchUncompressed","_fetchCompressed","tableOffset","nums","offsets","entries","startXRefParsedCache","_processXRefTable","_topDictionary","_processXRefStream","_readToken","_skipUntil","dataLength","skipped","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","crossReferencePosition","contentLength","updateEntries","subStream","_PdfObjectInformation","endPos","checkPos","tokenStr","objToken","xrefTagOffset","trailerDict","rootDict","pagesDict","pagesCount","_tableState","tableState","_PdfCrossTableState","entryNum","parserBuf1","parserBuf2","_readXRefTable","topDictionary","firstEntryNum","entryCount","_streamState","streamParameters","streamState","_PdfStreamState","entryRanges","byteWidths","_readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","typeByte","offsetByte","generationByte","currentLength","updatedCount","uncompressedCount","updatedStream_1","archiveXRef_1","collection_1","uncompressedOffsets_1","cipher_1","archiveOffset","archiveRef","newDict","archiveStream","cipher_2","formatValue","newRef","newStartXref","newXref","_copyTrailer","_computeMessageDigest","newXrefData","_writeLong","newXrefStream","tempBuffer_1","offsetString","genString","now","crossReferenceInfo","transform","isCrossReference","_writeStream","spaceChar","_writeFontDictionary","_writeValue","streamBuffer","dataArray","sw","CompressedStreamWriter","close","getCompressedString","value_1","_writeUnicodeString","_escapeString","byteValues","PdfForm","_hasKids","_fieldCollection","_signFlag","_parsedFields","_createFields","_needAppearances","fieldFlags","_signatureFlag","signatureExists","appendOnly","removeField","removeFieldAt","setDefaultAppearance","orderFormFields","tab","setTabOrder","_tabCollection","fieldCollection","_getFields","_sortItemByPageIndex","fieldsCount_1","fields","pdfField1","pdfField2","_compareFields","fieldIndex","_getOrder","nodes","fieldKids","kidsDict","_isNode","isNode","_widgetReferences","fieldReference","kidReference","kidDictionary","_fieldNames","_indexedFieldNames","_actualFieldNames","_indexedActualFieldNames","nameIndex","field1","field2","xdiff","page1","page2","page1Index","page2Index","rectangle1","_getItemRectangle","_getRectangle","rectangle2","firstHeight","secondHeight","_compare","field1Index","field2Index","_compareKidsElement","yDictionary","xRect","yRect","hasPageTabOrder","_sortFieldItems","item1","item2","_compareFieldItem","array1","array2","_FdfDocument","_annotationObjects","_specialCharacters","objectID","objectArray","_stringToHexString","ArrayBuffer","_checkFdf","_readFdfData","FDF","Fields","objects","mappedObjects","trailer","rootKey","fdf","genNumber","helper","_FdfHelper","startObject","_annotationID","streamReference","annotValue","_getEntries","Page","_appendStream","compressString","listDictionary","_getFormattedString","_appendArray","value_2","_appendElement","PdfBookmarkBase","_bookMarkList","_isExpanded","_isLoadedBookmark","_reproduceTree","bookmark","contains","_getFirstBookmark","isBookmark","bookmarkBase","bookMark","bookmarkBaseDictionary","bookMarkDictionary","PdfBookmark","namedDestination","_obtainNamedDestination","_namedDestination","_title","_obtainTitle","_textStyle","_obtainTextStyle","nextBookmark","destinationCollection","_destinationCollection","namedDestinations","_namedDestinations","PdfNamedDestination","_PdfNamedDestinationCollection","_addCollection","destinationElement","destinationObject","_XmlDocument","_checkXml","tagName","xmlDocument","PdfFileStructure","PdfDocument","_headerSignature","_startXrefSignature","_endObjSignature","_permissions","_allowCustomData","_pages","_checkHeader","_startXRef","_linear","err","_linearization","_find","startXRefLength","found","_pageCount","catalog","outlines","_bookmarkBase","cachedPage","promise","_getLinearizationPage","addPage","settings","_checkPageNumber","PdfPageSettings","sectionDictionary","_updatePageSettings","sectionReference","pageReference","lastPage_1","parentDictionary","newKids_1","_updatePageCache","_updatePageCount","removePage","argument","targetPage","_removePage","valueToIncrement","isIncrement","updatedData","pageToRemove","bookMarkMap","_parseBookmarkDestination","bookmarks","bookmarkDictionary","_removePageTemplates","_removeParent","referenceToRemove","_bookmarkHashTable","stack","nodeInformation","_removeInternalTemplates","namedObject","nameCollection","namedPageCollection","_getUpdatedPageTemplates","namedPageDictionary","namedPages","reorderPages","orderArray","sortedArray","_sortedArray","ascendingOrder","pagesToRemove","_","newkids","newPages","indexPage","_cloneResources","order","num","resourceDictionary_1","_cloneInnerResources","resourceDictionary","oldObject_1","hasNew_1","innerKey","oldArray_1","hasNew_2","filename","Save","Blob","saveAsBlob","Promise","resolve","blobData","exportAnnotations","_doPostProcessOnAnnotations","PdfAnnotationExportSettings","dataFormat","xfdf","exportFormData","_doPostProcessOnFormFields","PdfFormFieldExportSettings","exportName","asPerSpecification","importAnnotations","importFormData","destroy","_namedDestinationCollection","reason","backwards","signatureEnd","formObject","Annots","_addWatermarkText","_exportAppearance","_exportName","_isOrientation","_margins","PdfMargins","_updateSize","_updateOrientation","pageOrientation","orientation","all","_PdfPaddings","PdfBitmap","encodedString","_imageStatus","_initializeAsync","_decoder","colorSpace","cmyk","grayScale","indexed","rgb"],"mappings":"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BAAqB,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MAC/F,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MACxG,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,MACxG,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MACxG,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MACxG,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,MACxE,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MACxE,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MACxG,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MACpH,IAAU,IAAU,IAAU,I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AM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,OACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,OACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,OACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,OACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,OACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAM,MACpCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,MACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,MACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,MACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,MACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,MACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,MACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,MACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,KAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ,KAAKwpB,gBAAgBjZ,SAAS,MAAO,OACrCvQ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IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAETtD,EAA+BsE,cAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAExCtE,EAA+B0E,oBAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,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AAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OA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IAAIA,GAAQ,UAAY,YAAa,IAAIA,GAAQ,WAAY,YAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,YAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,UAAY,YAC7D,IAAIA,GAAQ,UAAY,YAAa,IAAIA,GAAQ,WAAY,YAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,WAC7D,IAAIA,GAAQ,WAAY,WAAa,IAAIA,GAAQ,WAAY,YAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,WAC7D,IAAIA,GAAQ,UAAY,YAAa,IAAIA,GAAQ,UAAY,YAC7D,IAAIA,GAAQ,UAAY,YAAa,IAAIA,GAAQ,WAAY,YAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,YAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,WAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,YAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,YAC7D,IAAIA,GAAQ,UAAY,YAAa,IAAIA,GAAQ,UAAY,WAC7D,IAAIA,GAAQ,UAAY,YAAa,IAAIA,GAAQ,UAAY,YAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,YAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,YAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,WAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,YAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,WAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,YAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,UAAY,WAC7D,IAAIA,GAAQ,UAAY,YAAa,IAAIA,GAAQ,UAAY,YAC7D,IAAIA,GAAQ,UAAY,YAAa,IAAIA,GAAQ,UAAY,YAC7D,IAAIA,GAAQ,UAAY,YAAa,IAAIA,GAAQ,WAAY,YAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,YAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,YAC7D,IAAIA,GAAQ,WAAY,YAAa,IAAIA,GAAQ,WAAY,WA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MuhG,GAAK,IAAI/mH,YACX,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAClE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAClE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAClE,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAClE,EAAM,IAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAAM,EAAM,GAAM,IAAM,IAClE,IAAM,GAAM,IAAM,IAAM,EAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAClE,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAClE,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAClE,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAClE,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAClE,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAClE,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAClE,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAClE,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,EAAM,GAAM,GAClE,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAClE,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAClE,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAClE,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAClE,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAClE,IAAM,IAAM,IAAM,IAA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"}