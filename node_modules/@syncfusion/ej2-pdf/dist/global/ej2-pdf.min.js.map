{"version":3,"file":"ej2-pdf.min.js","sources":["../../src/pdf/core/utils.js","../../src/pdf/core/pdf-primitives.js","../../src/pdf/core/enumerator.js","../../src/pdf/core/graphics/pdf-stream-writer.js","../../src/pdf/core/fonts/pdf-string-format.js","../../src/pdf/core/fonts/pdf-font-metrics.js","../../src/pdf/core/fonts/string-layouter.js","../../src/pdf/core/fonts/ttf-table.js","../../src/pdf/core/fonts/ttf-reader.js","../../src/pdf/core/fonts/unicode-true-type-font.js","../../src/pdf/core/graphics/rightToLeft/text-shape.js","../../src/pdf/core/graphics/rightToLeft/bidirectional.js","../../src/pdf/core/graphics/rightToLeft/text-renderer.js","../../src/pdf/core/fonts/pdf-standard-font.js","../../src/pdf/core/graphics/pdf-path.js","../../src/pdf/core/graphics/images/pdf-image.js","../../src/pdf/core/graphics/pdf-graphics.js","../../src/pdf/core/import-export/xml-writer.js","../../src/pdf/core/import-export/xfdf-document.js","../../src/pdf/core/import-export/json-document.js","../../src/pdf/core/graphics/pdf-template.js","../../src/pdf/core/pdf-action.js","../../src/pdf/core/form/field.js","../../src/pdf/core/annotations/pdf-appearance.js","../../src/pdf/core/annotations/annotation.js","../../src/pdf/core/annotations/annotation-collection.js","../../src/pdf/core/pdf-page.js","../../src/pdf/core/graphics/images/image-decoder.js","../../src/pdf/core/graphics/images/jpeg-decoder.js","../../src/pdf/core/compression/enum.js","../../src/pdf/core/compression/decompressed-output.js","../../src/pdf/core/graphics/images/png-decoder.js","../../src/pdf/core/compression/in-buffer.js","../../src/pdf/core/compression/huffman-tree.js","../../src/pdf/core/compression/inflater.js","../../src/pdf/core/compression/deflate-stream.js","../../src/pdf/core/base-stream.js","../../src/pdf/core/content-parser.js","../../src/pdf/core/decode-stream.js","../../src/pdf/core/decrypt-stream.js","../../src/pdf/core/flate-stream.js","../../src/pdf/core/pdf-catalog.js","../../src/pdf/core/predictor-stream.js","../../src/pdf/core/pdf-parser.js","../../src/pdf/core/security/encryptor.js","../../src/pdf/core/pdf-cross-reference.js","../../src/pdf/core/form/form.js","../../src/pdf/core/import-export/fdf-document.js","../../src/pdf/core/pdf-outline.js","../../src/pdf/core/import-export/xml-document.js","../../src/pdf/core/pdf-file-structure.js","../../src/pdf/core/pdf-document.js","../../src/pdf/core/annotations/pdf-paddings.js","../../src/pdf/core/graphics/images/pdf-bitmap.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { PdfDestination } from './pdf-page';\nimport { PdfFormFieldVisibility, PdfAnnotationFlag, PdfCheckBoxStyle, PdfHighlightMode, PdfBorderStyle, PdfBorderEffectStyle, PdfLineEndingStyle, _PdfCheckFieldState, PdfMeasurementUnit, _PdfGraphicsUnit, PdfTextMarkupAnnotationType, PdfRotationAngle, PdfAnnotationState, PdfAnnotationStateModel, PdfPopupIcon, PdfRubberStampAnnotationIcon, PdfAttachmentIcon, PdfAnnotationIntent, PdfBlendMode, _PdfAnnotationType, PdfDestinationMode } from './enumerator';\nimport { _PdfTransformationMatrix } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nimport { PdfAnnotation, PdfLineAnnotation } from './annotations/annotation';\nimport { PdfTemplate } from './graphics/pdf-template';\nimport { PdfField } from './form/field';\nimport { PdfCjkFontFamily, PdfCjkStandardFont, PdfFontFamily, PdfFontStyle, PdfStandardFont, PdfTrueTypeFont } from './fonts/pdf-standard-font';\nimport { _JpegDecoder } from './graphics/images/jpeg-decoder';\nimport { _PngDecoder } from './graphics/images/png-decoder';\n/**\n * Gets the unsigned value.\n *\n * @param {number} value input value.\n * @param {number} bits bits to process.\n * @returns {number} unsigned value.\n */\nexport function _toUnsigned(value, bits) {\n    return (value & ((Math.pow(2, bits)) - 1));\n}\n/**\n * Gets the signed 16 bit value.\n *\n * @param {number} value input value.\n * @returns {number} unsigned value.\n */\nexport function _toSigned16(value) {\n    return (value << 16) >> 16;\n}\n/**\n * Gets the signed 32 bit value.\n *\n * @param {number} value input value.\n * @returns {number} unsigned value.\n */\nexport function _toSigned32(value) {\n    return (value << 0);\n}\n/**\n * Copy values from one array to another.\n *\n * @param {number[]} target destination array.\n * @param {number} at target index.\n * @param {number[]} source source array.\n * @param {number} start start index.\n * @param {number} end end index.\n * @returns {void} Returns nothing.\n */\nexport function _copyRange(target, at, source, start, end) {\n    if (start === null || typeof start === 'undefined') {\n        start = 0;\n    }\n    end = (typeof end === 'undefined') ? source.length : end;\n    start = Math.max(0, Math.min(source.length, start));\n    end = Math.max(0, Math.min(source.length, end));\n    if (at + (end - start) > target.length) {\n        target.length = at + (end - start);\n    }\n    for (var i = start, j = at; i < end; i++, j++) {\n        target[Number.parseInt(j.toString(), 10)] = source[Number.parseInt(i.toString(), 10)];\n    }\n}\n/**\n * Checks the type of the image using header bytes.\n *\n * @param {Uint8Array} imageData image data.\n * @param {number[]} header header bytes.\n * @returns {boolean} Header matched or not.\n */\nexport function _checkType(imageData, header) {\n    for (var i = 0; i < header.length; i++) {\n        if (header[Number.parseInt(i.toString(), 10)] !== imageData[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Gets the image decoder.\n *\n * @param {Uint8Array} imageData image data.\n * @returns {_ImageDecoder} Image decoder.\n */\nexport function _getDecoder(imageData) {\n    var decoder;\n    if (_checkType(imageData, [255, 216])) {\n        decoder = new _JpegDecoder(imageData);\n    }\n    else if (_checkType(imageData, [137, 80, 78, 71, 13, 10, 26, 10])) {\n        decoder = new _PngDecoder(imageData);\n    }\n    else {\n        throw new Error('Unsupported image format');\n    }\n    return decoder;\n}\n/**\n * Gets the page rotation.\n *\n * @param {PdfPage} page Page.\n * @param {number} height Height.\n * @param {number} left Left.\n * @returns {number} Page rotation.\n */\nexport function _checkRotation(page, height, left) {\n    var topValue = 0;\n    left = (typeof left === 'undefined' || left === null) ? 0 : left;\n    if (page.rotation === PdfRotationAngle.angle90) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : left;\n    }\n    else if (page.rotation === PdfRotationAngle.angle180) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : height;\n    }\n    else if (page.rotation === PdfRotationAngle.angle270) {\n        var size = page.size;\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : size[0] - left;\n    }\n    return topValue;\n}\n/**\n * Gets the page index.\n *\n * @param {PdfDocument} loadedDocument Loaded document.\n * @param {_PdfDictionary} pageDictionary Page dictionary.\n * @returns {number} Page index.\n */\nexport function _getPageIndex(loadedDocument, pageDictionary) {\n    var index = -1;\n    for (var i = 0; i < loadedDocument.pageCount; i++) {\n        var page = loadedDocument.getPage(i);\n        if (page._pageDictionary === pageDictionary) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * Convert string value from annotation flag\n *\n * @private\n * @param {PdfAnnotationFlag} flag Annotation flag.\n * @returns {string} Valid string to write into XML.\n */\nexport function _annotationFlagsToString(flag) {\n    var values = [];\n    if ((flag & PdfAnnotationFlag.hidden) !== 0) {\n        values.push('hidden');\n    }\n    if ((flag & PdfAnnotationFlag.invisible) !== 0) {\n        values.push('invisible');\n    }\n    if ((flag & PdfAnnotationFlag.locked) !== 0) {\n        values.push('locked');\n    }\n    if ((flag & PdfAnnotationFlag.noRotate) !== 0) {\n        values.push('norotate');\n    }\n    if ((flag & PdfAnnotationFlag.noView) !== 0) {\n        values.push('noview');\n    }\n    if ((flag & PdfAnnotationFlag.noZoom) !== 0) {\n        values.push('nozoom');\n    }\n    if ((flag & PdfAnnotationFlag.print) !== 0) {\n        values.push('print');\n    }\n    if ((flag & PdfAnnotationFlag.readOnly) !== 0) {\n        values.push('readonly');\n    }\n    if ((flag & PdfAnnotationFlag.toggleNoView) !== 0) {\n        values.push('togglenoview');\n    }\n    if ((flag & PdfAnnotationFlag.default) !== 0) {\n        values.push('default');\n    }\n    return values.join(',');\n}\n/**\n * Convert string value to annotation flag\n *\n * @private\n * @param {string} flag String value to map\n * @returns {PdfAnnotationFlag} Annotation flag\n */\nexport function _stringToAnnotationFlags(flag) {\n    switch (flag) {\n        case 'hidden':\n            return PdfAnnotationFlag.hidden;\n        case 'invisible':\n            return PdfAnnotationFlag.invisible;\n        case 'locked':\n            return PdfAnnotationFlag.locked;\n        case 'norotate':\n            return PdfAnnotationFlag.noRotate;\n        case 'noview':\n            return PdfAnnotationFlag.noView;\n        case 'nozoom':\n            return PdfAnnotationFlag.noZoom;\n        case 'print':\n            return PdfAnnotationFlag.print;\n        case 'readonly':\n            return PdfAnnotationFlag.readOnly;\n        case 'togglenoview':\n            return PdfAnnotationFlag.toggleNoView;\n        default:\n            return PdfAnnotationFlag.default;\n    }\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @returns {string} Valid string to write into PDF.\n */\nexport function _stringToPdfString(value) {\n    if (value.charCodeAt(0) >= '\\xEF'.charCodeAt(0)) {\n        var encoding = void 0;\n        if (value[0] === '\\xEF' && value[1] === '\\xBB' && value[2] === '\\xBF') {\n            encoding = 'utf-8';\n        }\n        else if (value[0] === '\\xFF' && value[1] === '\\xFE') {\n            encoding = 'utf-16le';\n        }\n        else if (value[0] === '\\xFE' && value[1] === '\\xFF') {\n            encoding = 'utf-16be';\n        }\n        if (encoding) {\n            try {\n                return (new TextDecoder(encoding, { fatal: true })).decode(_stringToBytes(value));\n            }\n            catch (e) { } // eslint-disable-line\n        }\n    }\n    var buffer = [];\n    var translateTable = [\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n        0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n        0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n        0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n        0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac\n    ];\n    for (var i = 0; i < value.length; i++) {\n        var code = translateTable[value.charCodeAt(i)];\n        buffer.push(code ? String.fromCharCode(code) : value.charAt(i));\n    }\n    return buffer.join('');\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @param {boolean} isDirect Whether to return a number[] or Uint8Array.\n * @param {boolean} isPassword Whether the string is a password.\n * @returns {number[] | Uint8Array} Byte array\n */\nexport function _stringToBytes(value, isDirect, isPassword, destination) {\n    if (isDirect === void 0) { isDirect = false; }\n    if (isPassword === void 0) { isPassword = false; }\n    var bytes = [];\n    if (destination) {\n        bytes = destination;\n    }\n    if (isPassword) {\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n    }\n    else {\n        for (var i = 0; i < value.length; i++) {\n            var charCode = value.charCodeAt(i);\n            if (charCode < 0x80) {\n                bytes.push(charCode);\n            }\n            else if (charCode < 0x800) {\n                bytes.push((charCode >> 6) | 0xC0);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n            else if (charCode < 0xD800 || charCode >= 0xE000) {\n                bytes.push((charCode >> 12) | 0xE0);\n                bytes.push(((charCode >> 6) & 0x3F) | 0x80);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n            else {\n                i++;\n                charCode = 0x10000 + (((charCode & 0x3FF) << 10) | (value.charCodeAt(i) & 0x3FF));\n                bytes.push((charCode >> 18) | 0xF0);\n                bytes.push(((charCode >> 12) & 0x3F) | 0x80);\n                bytes.push(((charCode >> 6) & 0x3F) | 0x80);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n        }\n    }\n    return isDirect ? bytes : new Uint8Array(bytes);\n}\n/**\n * Check equal or not.\n *\n * @private\n * @param {number[]} first byte array.\n * @param {number[]} second byte array.\n * @returns {boolean} Equal or not\n */\nexport function _areArrayEqual(first, second) {\n    if (first.length !== second.length) {\n        return false;\n    }\n    for (var i = 0; i < first.length; i++) {\n        if (first[Number.parseInt(i.toString(), 10)] !== second[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Convert number to string as round value with fixed decimal points 2.\n *\n * @private\n * @param {number[]} value number value.\n * @returns {boolean} Equal string.\n */\nexport function _numberToString(value) {\n    if (Number.isInteger(value)) {\n        return value.toString();\n    }\n    return value.toFixed(7);\n}\n/**\n * Check whether entries in two array are equal or not.\n *\n * @private\n * @param {number[]} value first array.\n * @param {number[]} current second array.\n * @returns {boolean} Return true if for each elements are equal in both array.\n */\nexport function _areNotEqual(value, current) {\n    var result = false;\n    if (value.length !== current.length) {\n        return true;\n    }\n    for (var i = 0; i < value.length; i++) {\n        if (value[i] !== current[i]) { // eslint-disable-line\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n/**\n * Process bytes and convert as string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @returns {string} String value processed from input bytes.\n */\nexport function _bytesToString(bytes, isJson) {\n    if (isJson === void 0) { isJson = false; }\n    var length = bytes.length;\n    var max = 8192;\n    var stringBuffer = [];\n    if (length < max) {\n        return (isJson ? _decodeUTF8(bytes) : String.fromCharCode.apply(null, bytes));\n    }\n    for (var i = 0; i < length; i += max) {\n        var chunkEnd = Math.min(i + max, length);\n        var chunk = bytes.subarray(i, chunkEnd);\n        stringBuffer.push(isJson ? _decodeUTF8(chunk) : String.fromCharCode.apply(null, chunk));\n    }\n    return stringBuffer.join('');\n}\n/**\n * Decode unicode string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @returns {string} String value processed from input bytes.\n */\nexport function _decodeUTF8(bytes) {\n    var result = '';\n    var i = 0;\n    while (i < bytes.length) {\n        var byte = bytes[i++];\n        if (byte < 0x80) {\n            result += String.fromCharCode(byte);\n        }\n        else if (byte < 0xE0) {\n            result += String.fromCharCode(((byte & 0x1F) << 6) | (bytes[i++] & 0x3F));\n        }\n        else if (byte < 0xF0) {\n            result += String.fromCharCode(((byte & 0x0F) << 12) | ((bytes[i++] & 0x3F) << 6) | (bytes[i++] & 0x3F));\n        }\n        else {\n            var codePoint = ((byte & 0x07) << 18) | ((bytes[i++] & 0x3F) << 12) | ((bytes[i++] & 0x3F) << 6) | (bytes[i++] & 0x3F) - 0x10000;\n            result += String.fromCharCode((codePoint >> 10) + 0xD800, (codePoint & 0x03FF) + 0xDC00);\n        }\n    }\n    return result;\n}\n/**\n * Convert string to unicode array.\n *\n * @private\n * @param {string} value string value.\n * @returns {Uint8Array} unicode array\n */\nexport function _stringToUnicodeArray(value) {\n    var output = [];\n    if (value !== null && typeof value !== 'undefined') {\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n    }\n    var unicodeArray = new Uint8Array(output);\n    return unicodeArray;\n}\n/**\n * Convert byte array to hex string.\n *\n * @private\n * @param {Uint8Array} byteArray Byte array.\n * @returns {string} Hex string.\n */\nexport function _byteArrayToHexString(byteArray) {\n    var nextHexByte;\n    var stringBuffer = [];\n    for (var i = 0; i < byteArray.length; i++) {\n        nextHexByte = byteArray[Number.parseInt(i.toString(), 10)].toString(16).toUpperCase();\n        if (nextHexByte.length < 2) {\n            nextHexByte = '0' + nextHexByte;\n        }\n        stringBuffer.push(nextHexByte);\n    }\n    return stringBuffer.join('');\n}\n/**\n * Convert hex string to byte array.\n *\n * @private\n * @param {string} hexString Hex string.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Byte array.\n */\nexport function _hexStringToByteArray(hexString, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var array = [];\n    if (hexString) {\n        for (var i = 0; i < hexString.length; i += 2) {\n            array.push(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n    }\n    return isDirect ? array : new Uint8Array(array);\n}\n/**\n * Convert hex string to normal string.\n *\n * @private\n * @param {string} hexString Hex string.\n * @returns {string} Normal string.\n */\nexport function _hexStringToString(hexString) {\n    var result = '';\n    if (hexString && hexString[0] === '#') {\n        hexString = hexString.substring(1);\n        for (var i = 0; i < hexString.length; i += 2) {\n            result += String.fromCharCode(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n        return result;\n    }\n    return hexString;\n}\n/**\n * Check whether the character code is white space.\n *\n * @private\n * @param {number} ch The character code to check.\n * @returns {boolean} True if the character is space, otherwise false.\n */\nexport function _isWhiteSpace(ch) {\n    return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n/**\n * Decode bytes from base64 string.\n *\n * @private\n * @param {string} input The base64 string to decode.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Decoded bytes.\n */\nexport function _decode(input, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var chr1;\n    var chr2;\n    var chr3;\n    var enc1;\n    var enc2;\n    var enc3;\n    var enc4;\n    var i = 0;\n    var resultIndex = 0;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, ''); // eslint-disable-line\n    var totalLength = input.length * 3 / 4;\n    if (input.charAt(input.length - 1) === key.charAt(64)) {\n        totalLength--;\n    }\n    var output = new Array(totalLength | 0);\n    while (i < input.length) {\n        enc1 = key.indexOf(input.charAt(i++));\n        enc2 = key.indexOf(input.charAt(i++));\n        enc3 = key.indexOf(input.charAt(i++));\n        enc4 = key.indexOf(input.charAt(i++));\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr1;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr2;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr3;\n        }\n    }\n    return isDirect ? output : new Uint8Array(output);\n}\n/**\n * Encode bytes to base64 string.\n *\n * @private\n * @param {Uint8Array} bytes Bytes to encode.\n * @returns {string} Decoded string.\n */\nexport function _encode(bytes) {\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var output = '';\n    var currentChar = 0;\n    for (var i = 0; i < bytes.length; i++) {\n        if (i % 3 === 0) {\n            currentChar = (bytes[Number.parseInt(i.toString(), 10)] >> 2);\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n            currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 4) & 63;\n        }\n        else if (i % 3 === 1) {\n            currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 4);\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n            currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 2) & 63;\n        }\n        else if (i % 3 === 2) {\n            currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 6);\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n            currentChar = bytes[Number.parseInt(i.toString(), 10)] & 63;\n            output += key[Number.parseInt(currentChar.toString(), 10)];\n        }\n    }\n    if (bytes.length % 3 === 1) {\n        output += key[Number.parseInt(currentChar.toString(), 10)] + \"==\";\n    }\n    if (bytes.length % 3 === 2) {\n        output += key[Number.parseInt(currentChar.toString(), 10)] + \"=\";\n    }\n    return output;\n}\n/**\n * Get property value in inheritable mode.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} key Input dictionary.\n * @param {boolean} isArray Search array.\n * @param {boolean} stopWhenFound Stop when found.\n * @param {string[]} parentKey Key string for parent node.\n * @returns {any} Property value.\n */\nexport function _getInheritableProperty(dictionary, key, isArray, stopWhenFound) {\n    if (isArray === void 0) { isArray = false; }\n    if (stopWhenFound === void 0) { stopWhenFound = true; }\n    var parentKey = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        parentKey[_i - 4] = arguments[_i];\n    }\n    var values; // eslint-disable-line\n    var refSet = new Set(); // eslint-disable-line\n    while (dictionary instanceof _PdfDictionary && dictionary.objId && !refSet.has(dictionary.objId)) {\n        if (dictionary.objId) {\n            refSet.add(dictionary.objId);\n        }\n        var value = isArray ? dictionary.getArray(key) : dictionary.get(key); // eslint-disable-line\n        if (value !== undefined) {\n            if (stopWhenFound) {\n                return value;\n            }\n            if (!values) {\n                values = [];\n            }\n            values.push(value);\n        }\n        var index = 0;\n        var hasParent = false;\n        while (index < parentKey.length) {\n            var element = parentKey[index]; // eslint-disable-line\n            if (dictionary.has(element)) {\n                dictionary = dictionary.get(element);\n                hasParent = true;\n                break;\n            }\n            index++;\n        }\n        if (!hasParent) {\n            break;\n        }\n    }\n    return values;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {boolean} isWidget Input page.\n * @returns {any} Bounds value.\n */\nexport function _parseRectangle(dictionary, isWidget) {\n    var rectangle = { x: 0, y: 0, width: 0, height: 0 };\n    var elements = dictionary.getArray('Rect');\n    if (elements && Array.isArray(elements)) {\n        var x1 = elements[0];\n        var y1 = elements[1];\n        var x2 = elements[2];\n        var y2 = elements[3];\n        if (typeof x1 !== 'undefined' && typeof y1 !== 'undefined' && typeof x2 !== 'undefined' && typeof y2 !== 'undefined') {\n            rectangle.x = Math.min(x1, x2);\n            rectangle.y = Math.min(y1, y2);\n            rectangle.width = Math.max(x1, x2) - rectangle.x;\n            rectangle.height = Math.max(y1, y2) - rectangle.y;\n            if (isWidget) {\n                rectangle.height = parseFloat(rectangle.height.toFixed(3));\n                if (elements[1] < 0) {\n                    rectangle.y = elements[1];\n                    if (elements[1] > elements[3]) {\n                        rectangle.y -= rectangle.height;\n                    }\n                }\n            }\n        }\n    }\n    return rectangle;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} page Input page.\n * @returns {any} Bounds value.\n */\nexport function _calculateBounds(dictionary, page) {\n    var rect;\n    if (dictionary.has('Rect')) {\n        rect = _parseRectangle(dictionary);\n        if (page) {\n            var size = page.size;\n            var mBox = page.mediaBox;\n            var cropBox = page.cropBox;\n            if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && page._pageDictionary.has('CropBox')) {\n                if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                    size[1] === cropBox[3]) && (rect.x !== cropBox[0])) {\n                    rect.x -= cropBox[0];\n                    rect.y = cropBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else if (mBox && Array.isArray(mBox) && mBox.length === 4 && page._pageDictionary.has('MediaBox')) {\n                if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                    rect.x -= mBox[0];\n                    rect.y = mBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else {\n                rect.y = size[1] - (rect.y + rect.height);\n            }\n        }\n        else {\n            rect.y = rect.y + rect.height;\n        }\n    }\n    return rect;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value array value.\n * @returns {any} Rectangle value.\n */\nexport function _toRectangle(value) {\n    return {\n        x: Math.min(value[0], value[2]),\n        y: Math.min(value[1], value[3]),\n        width: Math.abs(value[0] - value[2]),\n        height: Math.abs(value[1] - value[3])\n    };\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {any} value Rectangle value.\n * @param {any} value.x X value.\n * @param {any} value.y Y value.\n * @param {any} value.width Width value.\n * @param {any} value.height Height value.\n * @returns {number[]} Bounds value.\n */\nexport function _fromRectangle(value) {\n    return [value.x, value.y, value.x + value.width, value.y + value.height];\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value Input dictionary.\n * @param {string} page Input page.\n * @returns {number[]} Bounds value.\n */\nexport function _getUpdatedBounds(value, page) {\n    var x = value[0];\n    var y = value[1];\n    var width = value[2];\n    var height = value[3];\n    if (page) {\n        var size = page.size;\n        var pageWidth = size[0];\n        var pageHeight = size[1];\n        var mBox = page.mediaBox;\n        var cropBox = page.cropBox;\n        if (cropBox && Array.isArray(cropBox) && cropBox.length === 4) {\n            if (cropBox[0] !== 0 || cropBox[1] !== 0 || pageWidth === cropBox[2] || pageHeight === cropBox[3]) {\n                x += cropBox[0];\n                y = cropBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else if (mBox && Array.isArray(mBox) && mBox.length === 4) {\n            if (mBox[0] > 0 || mBox[1] > 0 || pageWidth === mBox[2] || pageHeight === mBox[3]) {\n                x -= mBox[0];\n                y = mBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else {\n            y = pageHeight - (y + height);\n        }\n    }\n    return [x, y, x + width, y + height];\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {string} colorString Color value in string format.\n * @returns {number[]} RGB color value.\n */\nexport function _convertToColor(colorString) {\n    var color = _getColorValue(colorString);\n    if (!color) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(colorString);\n        if (result) {\n            color = [Number.parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\n        }\n    }\n    return color;\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {number[]} array Color array in dictionary.\n * @returns {number[]} RGB color value.\n */\nexport function _parseColor(array) {\n    var color;\n    if (array) {\n        if (array.length === 1) {\n            var entry = array[0];\n            if (typeof entry !== 'undefined') {\n                var round = Math.round(entry * 255);\n                color = [round, round, round];\n            }\n        }\n        else if (array.length === 3) {\n            var r = array[0];\n            var g = array[1];\n            var b = array[2];\n            if (typeof r !== 'undefined' && typeof g !== 'undefined' && typeof b !== 'undefined') {\n                color = [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n            }\n        }\n        else if (array.length === 4) {\n            var c = array[0];\n            var m = array[1];\n            var y = array[2];\n            var k = array[3];\n            if (typeof c !== 'undefined' && typeof m !== 'undefined' && typeof y !== 'undefined' && typeof k !== 'undefined') {\n                var fBlack = k * 255;\n                color = [Math.round(255 - Math.min(255, ((c * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((m * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((y * (255 - fBlack)) + fBlack)))];\n            }\n        }\n    }\n    return color;\n}\n/**\n * Get the border style in _PdfName.\n *\n * @private\n * @param {PdfBorderStyle} style border style in enum.\n * @returns {_PdfName} border style in _PdfName.\n */\nexport function _mapBorderStyle(style) {\n    var token = 'S';\n    switch (style) {\n        case PdfBorderStyle.dot:\n        case PdfBorderStyle.dashed:\n            token = 'D';\n            break;\n        case PdfBorderStyle.beveled:\n            token = 'B';\n            break;\n        case PdfBorderStyle.inset:\n            token = 'I';\n            break;\n        case PdfBorderStyle.underline:\n            token = 'U';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Get the border effect style in _PdfName.\n *\n * @private\n * @param {string} style border effect style as string.\n * @returns {PdfBorderEffectStyle} border effect style.\n */\nexport function _mapBorderEffectStyle(style) {\n    var value = PdfBorderEffectStyle.solid;\n    switch (style) {\n        case 'C':\n            value = PdfBorderEffectStyle.cloudy;\n            break;\n    }\n    return value;\n}\n/**\n * Get the string value for line ending style.\n *\n * @private\n * @param {PdfLineEndingStyle} style style in enum.\n * @returns {string} value default None.\n */\nexport function _reverseMapEndingStyle(style) {\n    var value = 'None';\n    if (typeof style !== 'undefined') {\n        switch (style) {\n            case PdfLineEndingStyle.openArrow:\n                value = 'OpenArrow';\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                value = 'ClosedArrow';\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                value = 'ROpenArrow';\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                value = 'RClosedArrow';\n                break;\n            case PdfLineEndingStyle.butt:\n                value = 'Butt';\n                break;\n            case PdfLineEndingStyle.diamond:\n                value = 'Diamond';\n                break;\n            case PdfLineEndingStyle.circle:\n                value = 'Circle';\n                break;\n            case PdfLineEndingStyle.square:\n                value = 'Square';\n                break;\n            case PdfLineEndingStyle.slash:\n                value = 'Slash';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Get the enum value for line ending style.\n *\n * @private\n * @param {string} style Style value in string.\n * @param {PdfLineEndingStyle} defaultValue Default style value to return.\n * @returns {PdfLineEndingStyle} enum value default 0.\n */\nexport function _mapLineEndingStyle(style, defaultValue) {\n    var value = typeof defaultValue !== 'undefined' ? defaultValue : PdfLineEndingStyle.none;\n    switch (style.toLowerCase()) {\n        case 'openarrow':\n            value = PdfLineEndingStyle.openArrow;\n            break;\n        case 'closedarrow':\n            value = PdfLineEndingStyle.closedArrow;\n            break;\n        case 'ropenarrow':\n            value = PdfLineEndingStyle.rOpenArrow;\n            break;\n        case 'rclosedarrow':\n            value = PdfLineEndingStyle.rClosedArrow;\n            break;\n        case 'butt':\n            value = PdfLineEndingStyle.butt;\n            break;\n        case 'diamond':\n            value = PdfLineEndingStyle.diamond;\n            break;\n        case 'circle':\n            value = PdfLineEndingStyle.circle;\n            break;\n        case 'square':\n            value = PdfLineEndingStyle.square;\n            break;\n        case 'slash':\n            value = PdfLineEndingStyle.slash;\n            break;\n    }\n    return value;\n}\n/**\n * Get highlight mode.\n *\n * @private\n * @param {string} mode Mode entry in dictionary.\n * @returns {PdfHighlightMode} Highlight mode.\n */\nexport function _mapHighlightMode(mode) {\n    switch (mode) {\n        case 'P':\n            return PdfHighlightMode.push;\n        case 'N':\n            return PdfHighlightMode.noHighlighting;\n        case 'O':\n            return PdfHighlightMode.outline;\n        default:\n            return PdfHighlightMode.invert;\n    }\n}\n/**\n * Get highlight mode as string.\n *\n * @private\n * @param {PdfHighlightMode} mode Mode entry.\n * @returns {_PdfName} Highlight mode as PDF name.\n */\nexport function _reverseMapHighlightMode(mode) {\n    switch (mode) {\n        case PdfHighlightMode.push:\n            return _PdfName.get('P');\n        case PdfHighlightMode.noHighlighting:\n            return _PdfName.get('N');\n        case PdfHighlightMode.outline:\n            return _PdfName.get('O');\n        default:\n            return _PdfName.get('I');\n    }\n}\n/**\n * Reverse map blend mode.\n *\n * @private\n * @param {PdfBlendMode} mode Mode entry.\n * @returns {_PdfName} Blend mode as name.\n */\nexport function _reverseMapBlendMode(mode) {\n    var token = 'Normal';\n    switch (mode) {\n        case PdfBlendMode.multiply:\n            token = 'Multiply';\n            break;\n        case PdfBlendMode.screen:\n            token = 'Screen';\n            break;\n        case PdfBlendMode.overlay:\n            token = 'Overlay';\n            break;\n        case PdfBlendMode.darken:\n            token = 'Darken';\n            break;\n        case PdfBlendMode.lighten:\n            token = 'Lighten';\n            break;\n        case PdfBlendMode.colorDodge:\n            token = 'ColorDodge';\n            break;\n        case PdfBlendMode.colorBurn:\n            token = 'ColorBurn';\n            break;\n        case PdfBlendMode.hardLight:\n            token = 'HardLight';\n            break;\n        case PdfBlendMode.softLight:\n            token = 'SoftLight';\n            break;\n        case PdfBlendMode.difference:\n            token = 'Difference';\n            break;\n        case PdfBlendMode.exclusion:\n            token = 'Exclusion';\n            break;\n        case PdfBlendMode.hue:\n            token = 'Hue';\n            break;\n        case PdfBlendMode.saturation:\n            token = 'Saturation';\n            break;\n        case PdfBlendMode.color:\n            token = 'Color';\n            break;\n        case PdfBlendMode.luminosity:\n            token = 'Luminosity';\n            break;\n        default:\n            token = 'Normal';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Map blend mode.\n *\n * @private\n * @param {_PdfName} token Blend mode as name.\n * @returns {PdfBlendMode} Mode value;\n */\nexport function _mapBlendMode(token) {\n    var style = PdfBlendMode.normal;\n    switch (token.name) {\n        case 'Multiply':\n            style = PdfBlendMode.multiply;\n            break;\n        case 'Screen':\n            style = PdfBlendMode.screen;\n            break;\n        case 'Overlay':\n            style = PdfBlendMode.overlay;\n            break;\n        case 'Darken':\n            style = PdfBlendMode.darken;\n            break;\n        case 'Lighten':\n            style = PdfBlendMode.lighten;\n            break;\n        case 'ColorDodge':\n            style = PdfBlendMode.colorDodge;\n            break;\n        case 'ColorBurn':\n            style = PdfBlendMode.colorBurn;\n            break;\n        case 'HardLight':\n            style = PdfBlendMode.hardLight;\n            break;\n        case 'SoftLight':\n            style = PdfBlendMode.softLight;\n            break;\n        case 'Difference':\n            style = PdfBlendMode.difference;\n            break;\n        case 'Exclusion':\n            style = PdfBlendMode.exclusion;\n            break;\n        case 'Hue':\n            style = PdfBlendMode.hue;\n            break;\n        case 'Saturation':\n            style = PdfBlendMode.saturation;\n            break;\n        case 'Color':\n            style = PdfBlendMode.color;\n            break;\n        case 'Luminosity':\n            style = PdfBlendMode.luminosity;\n            break;\n        default:\n            style = PdfBlendMode.normal;\n            break;\n    }\n    return style;\n}\n/**\n * Convert float to string.\n *\n * @private\n * @param {number} value number value.\n * @returns {string} equal fixed length string value;\n */\nexport function _floatToString(value) {\n    var returnString = value.toFixed(2);\n    if (returnString === '0.00') {\n        returnString = '.00';\n    }\n    return returnString;\n}\n/**\n * Check and add proc set value.\n *\n * @private\n * @param {string} value entry.\n * @param {_PdfDictionary} dictionary source dictionary.\n * @returns {void} Nothing;\n */\nexport function _addProcSet(value, dictionary) {\n    var name = _PdfName.get(value);\n    if (dictionary.has('ProcSet')) {\n        var procset = dictionary.getArray('ProcSet');\n        if (procset && procset.indexOf(name) === -1) {\n            procset.push(name);\n            dictionary.update('ProcSet', procset);\n        }\n    }\n    else {\n        dictionary.update('ProcSet', [name]);\n    }\n}\n/**\n * Get new GUID string.\n *\n * @private\n * @returns {string} A new GUID string;\n */\nexport function _getNewGuidString() {\n    return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n        var random = Math.random() * 16 | 0;\n        var result = c === 'a' ? random : (random & 0x3 | 0x8);\n        return result.toString(16);\n    });\n}\n/**\n * Escape PDF name.\n *\n * @private\n * @param {string} value name value.\n * @returns {string} equal and processed name value;\n */\nexport function _escapePdfName(value) {\n    var buffer = [];\n    var start = 0;\n    for (var i = 0; i < value.length; i++) {\n        var char = value.charCodeAt(i);\n        if (char < 0x21 ||\n            char > 0x7e ||\n            char === 0x23 ||\n            char === 0x28 ||\n            char === 0x29 ||\n            char === 0x3c ||\n            char === 0x3e ||\n            char === 0x5b ||\n            char === 0x5d ||\n            char === 0x7b ||\n            char === 0x7d ||\n            char === 0x2f ||\n            char === 0x25) {\n            if (start < i) {\n                buffer.push(value.substring(start, i));\n            }\n            buffer.push(\"#\" + char.toString(16));\n            start = i + 1;\n        }\n    }\n    if (buffer.length === 0) {\n        return value;\n    }\n    if (start < value.length) {\n        buffer.push(value.substring(start, value.length));\n    }\n    return buffer.join('');\n}\n/**\n * Calculate bezier arc points.\n *\n * @private\n * @param {number} x1 value.\n * @param {number} y1 value.\n * @param {number} x2 value.\n * @param {number} y2 value.\n * @param {number} start value.\n * @param {number} extent value.\n * @returns {number[]} bezier arc points;\n */\nexport function _getBezierArc(x1, y1, x2, y2, start, extent) {\n    if (x1 > x2) {\n        var swap = x1;\n        x1 = x2;\n        x2 = swap;\n    }\n    if (y2 > y1) {\n        var swap = y1;\n        y1 = y2;\n        y2 = swap;\n    }\n    var angle;\n    var count;\n    if (Math.abs(extent) <= 90) {\n        angle = extent;\n        count = 1;\n    }\n    else {\n        count = Math.ceil(Math.abs(extent) / 90);\n        angle = extent / count;\n    }\n    var first = ((x1 + x2) / 2);\n    var second = ((y1 + y2) / 2);\n    var firstAngle = ((x2 - x1) / 2);\n    var secondAngle = ((y2 - y1) / 2);\n    var half = (angle * (Math.PI / 360));\n    var value = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(half)) / Math.sin(half)));\n    var points = [];\n    for (var i = 0; (i < count); i++) {\n        var zero = (((start + (i * angle)) * (Math.PI / 180)));\n        var one = (((start + ((i + 1) * angle)) * (Math.PI / 180)));\n        var cosZero = (Math.cos(zero));\n        var cosOne = (Math.cos(one));\n        var sinZero = (Math.sin(zero));\n        var sinOne = (Math.sin(one));\n        if ((angle > 0)) {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero - (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero + (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne + (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne - (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n        else {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero + (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero - (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne - (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne + (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n    }\n    return points;\n}\n/**\n * Find page of the annotation.\n *\n * @private\n * @param {PdfDocument} document PDF document.\n * @param {_PdfReference} reference Annotation reference.\n * @returns {PdfPage} Page of the annotation;\n */\nexport function _findPage(document, reference) {\n    var page;\n    for (var i = 0; i < document.pageCount && typeof page === 'undefined'; i++) {\n        var entry = document.getPage(i);\n        if (entry && entry._pageDictionary.has('Annots')) {\n            var annots = entry._pageDictionary.get('Annots');\n            if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                for (var j = 0; j < annots.length && typeof page === 'undefined'; j++) {\n                    var ref = annots[Number.parseInt(j.toString(), 10)];\n                    if (ref !== null && typeof ref !== 'undefined' && ref instanceof _PdfReference && ref === reference) {\n                        page = entry;\n                    }\n                }\n            }\n        }\n    }\n    return page;\n}\n/**\n * Check the field is checked or not.\n *\n * @private\n * @param {_PdfDictionary} dictionary PDF dictionary.\n * @returns {boolean} True if the field is checked, otherwise false;\n */\nexport function _checkField(dictionary) {\n    var check = false;\n    if (dictionary.has('AS')) {\n        var state = dictionary.get('AS');\n        if (state) {\n            check = state.name !== 'Off';\n        }\n        else {\n            var actual = dictionary.get('V');\n            if (actual) {\n                check = actual.name === _getItemValue(dictionary);\n            }\n        }\n    }\n    return check;\n}\n/**\n * Get item value from state item field.\n *\n * @private\n * @param {_PdfDictionary} itemDictionary PDF document.\n * @returns {string} value of item;\n */\nexport function _getItemValue(itemDictionary) {\n    var itemValue = '';\n    var name;\n    if (itemDictionary.has('AS')) {\n        name = itemDictionary.get('AS');\n        if (name !== null && name.name !== 'Off') {\n            itemValue = name.name;\n        }\n    }\n    if (itemValue === '' && itemDictionary.has('AP')) {\n        var dictionary = itemDictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary) {\n                var keys_1 = [];\n                appearance.forEach(function (key, value) {\n                    keys_1.push(key);\n                });\n                for (var i = 0; i < keys_1.length; i++) {\n                    if (keys_1[Number.parseInt(i.toString(), 10)] !== 'Off') {\n                        itemValue = keys_1[Number.parseInt(i.toString(), 10)];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return itemValue;\n}\n/**\n * Get state item template.\n *\n * @private\n * @param {_PdfCheckFieldState} state Check field state.\n * @param {PdfStateItem | PdfField} item source to check.\n * @returns {PdfTemplate} Appearance template;\n */\nexport function _getStateTemplate(state, item) {\n    var value = state === _PdfCheckFieldState.checked ? _getItemValue(item._dictionary) : 'Off';\n    var template;\n    if (item._dictionary.has('AP')) {\n        var dictionary = item._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance && appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary && (value && value !== '' && appearance.has(value))) {\n                var stream = appearance.get(value);\n                var reference = appearance.getRaw(value);\n                if (reference) {\n                    stream.reference = reference;\n                }\n                if (stream) {\n                    template = new PdfTemplate(stream, item._crossReference);\n                }\n            }\n        }\n    }\n    return template;\n}\n/**\n * Get color value\n *\n * @private\n * @param {string} colorName name of the color.\n * @returns {number[]} return color value as number array.\n */\nexport function _getColorValue(colorName) {\n    var color;\n    switch (colorName) {\n        case 'transparent':\n            color = [255, 255, 255];\n            break;\n        case 'aliceblue':\n            color = [240, 248, 255];\n            break;\n        case 'antiquewhite':\n            color = [250, 235, 215];\n            break;\n        case 'aqua':\n            color = [0, 255, 255];\n            break;\n        case 'aquamarine':\n            color = [127, 255, 212];\n            break;\n        case 'azure':\n            color = [240, 255, 255];\n            break;\n        case 'beige':\n            color = [245, 245, 220];\n            break;\n        case 'bisque':\n            color = [255, 228, 196];\n            break;\n        case 'black':\n            color = [0, 0, 0];\n            break;\n        case 'blanchedalmond':\n            color = [255, 235, 205];\n            break;\n        case 'blue':\n            color = [0, 0, 255];\n            break;\n        case 'blueviolet':\n            color = [138, 43, 226];\n            break;\n        case 'brown':\n            color = [165, 42, 42];\n            break;\n        case 'burlywood':\n            color = [222, 184, 135];\n            break;\n        case 'cadetBlue':\n            color = [95, 158, 160];\n            break;\n        case 'chartreuse':\n            color = [127, 255, 0];\n            break;\n        case 'chocolate':\n            color = [210, 105, 30];\n            break;\n        case 'coral':\n            color = [255, 127, 80];\n            break;\n        case 'cornflowerblue':\n            color = [100, 149, 237];\n            break;\n        case 'cornsilk':\n            color = [255, 248, 220];\n            break;\n        case 'crimson':\n            color = [220, 20, 60];\n            break;\n        case 'cyan':\n            color = [0, 255, 255];\n            break;\n        case 'darkblue':\n            color = [0, 0, 139];\n            break;\n        case 'darkcyan':\n            color = [0, 139, 139];\n            break;\n        case 'darkgoldenrod':\n            color = [184, 134, 11];\n            break;\n        case 'darkgray':\n            color = [169, 169, 169];\n            break;\n        case 'darkgreen':\n            color = [0, 100, 0];\n            break;\n        case 'darkkhaki':\n            color = [189, 183, 107];\n            break;\n        case 'darkmagenta':\n            color = [139, 0, 139];\n            break;\n        case 'darkolivegreen':\n            color = [85, 107, 47];\n            break;\n        case 'darkorange':\n            color = [255, 140, 0];\n            break;\n        case 'darkorchid':\n            color = [153, 50, 204];\n            break;\n        case 'darkred':\n            color = [139, 0, 0];\n            break;\n        case 'darksalmon':\n            color = [233, 150, 122];\n            break;\n        case 'darkseagreen':\n            color = [143, 188, 139];\n            break;\n        case 'darkslateblue':\n            color = [72, 61, 139];\n            break;\n        case 'darkslategray':\n            color = [47, 79, 79];\n            break;\n        case 'darkturquoise':\n            color = [0, 206, 209];\n            break;\n        case 'darkviolet':\n            color = [148, 0, 211];\n            break;\n        case 'deeppink':\n            color = [255, 20, 147];\n            break;\n        case 'deepskyblue':\n            color = [0, 191, 255];\n            break;\n        case 'dimgray':\n            color = [105, 105, 105];\n            break;\n        case 'dodgerblue':\n            color = [30, 144, 255];\n            break;\n        case 'firebrick':\n            color = [178, 34, 34];\n            break;\n        case 'floralwhite':\n            color = [255, 250, 240];\n            break;\n        case 'forestgreen':\n            color = [34, 139, 34];\n            break;\n        case 'fuchsia':\n            color = [255, 0, 255];\n            break;\n        case 'gainsboro':\n            color = [220, 220, 220];\n            break;\n        case 'ghostwhite':\n            color = [248, 248, 255];\n            break;\n        case 'gold':\n            color = [255, 215, 0];\n            break;\n        case 'goldenrod':\n            color = [218, 165, 32];\n            break;\n        case 'gray':\n            color = [128, 128, 128];\n            break;\n        case 'green':\n            color = [0, 128, 0];\n            break;\n        case 'greenyellow':\n            color = [173, 255, 47];\n            break;\n        case 'honeydew':\n            color = [240, 255, 240];\n            break;\n        case 'hotpink':\n            color = [255, 105, 180];\n            break;\n        case 'indianred':\n            color = [205, 92, 92];\n            break;\n        case 'indigo':\n            color = [75, 0, 130];\n            break;\n        case 'ivory':\n            color = [255, 255, 240];\n            break;\n        case 'khaki':\n            color = [240, 230, 140];\n            break;\n        case 'lavender':\n            color = [230, 230, 250];\n            break;\n        case 'lavenderblush':\n            color = [255, 240, 245];\n            break;\n        case 'lawngreen':\n            color = [124, 252, 0];\n            break;\n        case 'lemonchiffon':\n            color = [255, 250, 205];\n            break;\n        case 'lightblue':\n            color = [173, 216, 230];\n            break;\n        case 'lightcoral':\n            color = [240, 128, 128];\n            break;\n        case 'lightcyan':\n            color = [224, 255, 255];\n            break;\n        case 'lightgoldenrodyellow':\n            color = [250, 250, 210];\n            break;\n        case 'lightgreen':\n            color = [144, 238, 144];\n            break;\n        case 'lightgray':\n            color = [211, 211, 211];\n            break;\n        case 'LightPink':\n            color = [255, 182, 193];\n            break;\n        case 'lightsalmon':\n            color = [255, 160, 122];\n            break;\n        case 'lightseagreen':\n            color = [32, 178, 170];\n            break;\n        case 'lightskyblue':\n            color = [135, 206, 250];\n            break;\n        case 'lightslategray':\n            color = [119, 136, 153];\n            break;\n        case 'lightsteelblue':\n            color = [176, 196, 222];\n            break;\n        case 'lightyellow':\n            color = [255, 255, 224];\n            break;\n        case 'lime':\n            color = [0, 255, 0];\n            break;\n        case 'limeGreen':\n            color = [50, 205, 50];\n            break;\n        case 'linen':\n            color = [250, 240, 230];\n            break;\n        case 'magenta':\n            color = [255, 0, 255];\n            break;\n        case 'maroon':\n            color = [128, 0, 0];\n            break;\n        case 'mediumaquamarine':\n            color = [102, 205, 170];\n            break;\n        case 'mediumblue':\n            color = [0, 0, 205];\n            break;\n        case 'mediumorchid':\n            color = [186, 85, 211];\n            break;\n        case 'mediumpurple':\n            color = [147, 112, 219];\n            break;\n        case 'mediumseagreen':\n            color = [60, 179, 113];\n            break;\n        case 'mediumslateblue':\n            color = [123, 104, 238];\n            break;\n        case 'mediumspringgreen':\n            color = [0, 250, 154];\n            break;\n        case 'mediumturquoise':\n            color = [72, 209, 204];\n            break;\n        case 'mediumvioletred':\n            color = [199, 21, 133];\n            break;\n        case 'midnightblue':\n            color = [25, 25, 112];\n            break;\n        case 'mintcream':\n            color = [245, 255, 250];\n            break;\n        case 'mistyrose':\n            color = [255, 228, 225];\n            break;\n        case 'moccasin':\n            color = [255, 228, 181];\n            break;\n        case 'navajowhite':\n            color = [255, 222, 173];\n            break;\n        case 'navy':\n            color = [0, 0, 128];\n            break;\n        case 'oldLace':\n            color = [253, 245, 230];\n            break;\n        case 'olive':\n            color = [128, 128, 0];\n            break;\n        case 'olivedrab':\n            color = [107, 142, 35];\n            break;\n        case 'orange':\n            color = [255, 165, 0];\n            break;\n        case 'orangered':\n            color = [255, 69, 0];\n            break;\n        case 'orchid':\n            color = [218, 112, 214];\n            break;\n        case 'palegoldenrod':\n            color = [238, 232, 170];\n            break;\n        case 'palegreen':\n            color = [152, 251, 152];\n            break;\n        case 'paleturquoise':\n            color = [175, 238, 238];\n            break;\n        case 'palebioletred':\n            color = [219, 112, 147];\n            break;\n        case 'papayawhip':\n            color = [255, 239, 213];\n            break;\n        case 'peachpuff':\n            color = [255, 218, 185];\n            break;\n        case 'peru':\n            color = [205, 133, 63];\n            break;\n        case 'pink':\n            color = [255, 192, 203];\n            break;\n        case 'plum':\n            color = [221, 160, 221];\n            break;\n        case 'powderblue':\n            color = [176, 224, 230];\n            break;\n        case 'purple':\n            color = [128, 0, 128];\n            break;\n        case 'red':\n            color = [255, 0, 0];\n            break;\n        case 'rosybrown':\n            color = [188, 143, 143];\n            break;\n        case 'royalblue':\n            color = [65, 105, 225];\n            break;\n        case 'saddlebrown':\n            color = [139, 69, 19];\n            break;\n        case 'salmon':\n            color = [250, 128, 114];\n            break;\n        case 'sandybrown':\n            color = [244, 164, 96];\n            break;\n        case 'seagreen':\n            color = [46, 139, 87];\n            break;\n        case 'seashell':\n            color = [255, 245, 238];\n            break;\n        case 'sienna':\n            color = [160, 82, 45];\n            break;\n        case 'silver':\n            color = [192, 192, 192];\n            break;\n        case 'skyblue':\n            color = [135, 206, 235];\n            break;\n        case 'slateblue':\n            color = [106, 90, 205];\n            break;\n        case 'slategray':\n            color = [112, 128, 144];\n            break;\n        case 'snow':\n            color = [255, 250, 250];\n            break;\n        case 'springgreen':\n            color = [0, 255, 127];\n            break;\n        case 'steelblue':\n            color = [70, 130, 180];\n            break;\n        case 'tan':\n            color = [210, 180, 140];\n            break;\n        case 'teal':\n            color = [0, 128, 128];\n            break;\n        case 'thistle':\n            color = [216, 191, 216];\n            break;\n        case 'tomato':\n            color = [255, 99, 71];\n            break;\n        case 'turquoise':\n            color = [64, 224, 208];\n            break;\n        case 'violet':\n            color = [238, 130, 238];\n            break;\n        case 'wheat':\n            color = [245, 222, 179];\n            break;\n        case 'white':\n            color = [255, 255, 255];\n            break;\n        case 'whitesmoke':\n            color = [245, 245, 245];\n            break;\n        case 'yellow':\n            color = [255, 255, 0];\n            break;\n        case 'yellowgreen':\n            color = [154, 205, 50];\n            break;\n    }\n    return color;\n}\n/**\n * Update box value in template bounds.\n *\n * @private\n * @param {PdfTemplate} template Template object.\n * @param {number} angle Angle value.\n * @returns {void} Nothing.\n */\nexport function _setMatrix(template, angle) {\n    var box = template._content.dictionary.getArray('BBox');\n    if (box && typeof angle !== 'undefined' && angle !== null) {\n        if (angle === 0) {\n            template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n        else {\n            var matrix = new _PdfTransformationMatrix();\n            if (angle === 90) {\n                matrix._translate(box[3], -box[0]);\n            }\n            else if (angle === 180) {\n                matrix._translate(box[2], box[3]);\n            }\n            else if (angle === 270) {\n                matrix._translate(-box[1], box[2]);\n            }\n            matrix._rotate(angle);\n            template._content.dictionary.set('Matrix', matrix._matrix._elements);\n        }\n    }\n}\n/**\n * Get the state item style to string\n *\n * @private\n * @param {PdfCheckBoxStyle} style State item style.\n * @returns {string} return as string value.\n */\nexport function _styleToString(style) {\n    var value = '4';\n    switch (style) {\n        case PdfCheckBoxStyle.circle:\n            value = 'l';\n            break;\n        case PdfCheckBoxStyle.cross:\n            value = '8';\n            break;\n        case PdfCheckBoxStyle.diamond:\n            value = 'u';\n            break;\n        case PdfCheckBoxStyle.square:\n            value = 'n';\n            break;\n        case PdfCheckBoxStyle.star:\n            value = 'H';\n            break;\n    }\n    return value;\n}\n/**\n * Get the string to state item style\n *\n * @private\n * @param {string} style State item style as string.\n * @returns {PdfCheckBoxStyle} return as state item style.\n */\nexport function _stringToStyle(style) {\n    var value = PdfCheckBoxStyle.check;\n    switch (style) {\n        case 'l':\n            value = PdfCheckBoxStyle.circle;\n            break;\n        case '8':\n            value = PdfCheckBoxStyle.cross;\n            break;\n        case 'u':\n            value = PdfCheckBoxStyle.diamond;\n            break;\n        case 'n':\n            value = PdfCheckBoxStyle.square;\n            break;\n        case 'H':\n            value = PdfCheckBoxStyle.star;\n            break;\n    }\n    return value;\n}\n/**\n * Map measurement unit type.\n *\n * @private\n * @param {string} unitString measurement unit as string.\n * @returns {PdfMeasurementUnit} measurement unit.\n */\nexport function _mapMeasurementUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n        case 'in':\n            unit = PdfMeasurementUnit.inch;\n            break;\n        case 'mm':\n            unit = PdfMeasurementUnit.millimeter;\n            break;\n        case 'p':\n            unit = PdfMeasurementUnit.pica;\n            break;\n        case 'pt':\n            unit = PdfMeasurementUnit.point;\n            break;\n        default:\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map markup annotation type.\n *\n * @private\n * @param {string} text markup type as string.\n * @returns {PdfTextMarkupAnnotationType} markup type as name.\n */\nexport function _mapMarkupAnnotationType(text) {\n    var type;\n    switch (text) {\n        case 'Highlight':\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n        case 'Squiggly':\n            type = PdfTextMarkupAnnotationType.squiggly;\n            break;\n        case 'StrikeOut':\n            type = PdfTextMarkupAnnotationType.strikeOut;\n            break;\n        case 'Underline':\n            type = PdfTextMarkupAnnotationType.underline;\n            break;\n        default:\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n    }\n    return type;\n}\n/**\n * Reverse text markup annotation type.\n *\n * @private\n * @param {PdfTextMarkupAnnotationType} type markup type.\n * @returns {string} markup type as name.\n */\nexport function _reverseMarkupAnnotationType(type) {\n    var token = 'Highlight';\n    switch (type) {\n        case PdfTextMarkupAnnotationType.highlight:\n            token = 'Highlight';\n            break;\n        case PdfTextMarkupAnnotationType.squiggly:\n            token = 'Squiggly';\n            break;\n        case PdfTextMarkupAnnotationType.strikeOut:\n            token = 'StrikeOut';\n            break;\n        case PdfTextMarkupAnnotationType.underline:\n            token = 'Underline';\n            break;\n        default:\n            token = 'Highlight';\n            break;\n    }\n    return token;\n}\n/**\n * Map graphics unit.\n *\n * @private\n * @param {string} unitString String value.\n * @returns {_PdfGraphicsUnit} PDF graphics unit.\n */\nexport function _mapGraphicsUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n        case 'in':\n            unit = _PdfGraphicsUnit.inch;\n            break;\n        case 'mm':\n            unit = _PdfGraphicsUnit.millimeter;\n            break;\n        case 'p':\n            unit = _PdfGraphicsUnit.pica;\n            break;\n        case 'pt':\n            unit = _PdfGraphicsUnit.point;\n            break;\n        default:\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map rubber stamp icon.\n *\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Rubber stamp icon.\n */\nexport function _mapRubberStampIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case '#Approved':\n        case 'SBApproved':\n            icon = PdfRubberStampAnnotationIcon.approved;\n            break;\n        case '#AsIs':\n        case 'SBAsIs':\n            icon = PdfRubberStampAnnotationIcon.asIs;\n            break;\n        case '#Completed':\n        case 'SBCompleted':\n            icon = PdfRubberStampAnnotationIcon.completed;\n            break;\n        case '#Confidential':\n        case 'SBConfidential':\n            icon = PdfRubberStampAnnotationIcon.confidential;\n            break;\n        case '#Departmental':\n        case 'SBDepartmental':\n            icon = PdfRubberStampAnnotationIcon.departmental;\n            break;\n        case '#Draft':\n        case 'SBDraft':\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n        case '#Experimental':\n        case 'SBExperimental':\n            icon = PdfRubberStampAnnotationIcon.experimental;\n            break;\n        case '#Expired':\n        case 'SBExpired':\n            icon = PdfRubberStampAnnotationIcon.expired;\n            break;\n        case '#Final':\n        case 'SBFinal':\n            icon = PdfRubberStampAnnotationIcon.final;\n            break;\n        case '#ForComment':\n        case 'SBForComment':\n            icon = PdfRubberStampAnnotationIcon.forComment;\n            break;\n        case '#ForPublicRelease':\n        case 'SBForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.forPublicRelease;\n            break;\n        case '#InformationOnly':\n        case 'SBInformationOnly':\n            icon = PdfRubberStampAnnotationIcon.informationOnly;\n            break;\n        case '#NotApproved':\n        case 'SBNotApproved':\n            icon = PdfRubberStampAnnotationIcon.notApproved;\n            break;\n        case '#NotForPublicRelease':\n        case 'SBNotForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.notForPublicRelease;\n            break;\n        case '#PreliminaryResults':\n        case 'SBPreliminaryResults':\n            icon = PdfRubberStampAnnotationIcon.preliminaryResults;\n            break;\n        case '#Sold':\n        case 'SBSold':\n            icon = PdfRubberStampAnnotationIcon.sold;\n            break;\n        case '#TopSecret':\n        case 'SBTopSecret':\n            icon = PdfRubberStampAnnotationIcon.topSecret;\n            break;\n        case '#Void':\n        case 'SBVoid':\n            icon = PdfRubberStampAnnotationIcon.void;\n            break;\n        default:\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n    }\n    return icon;\n}\n/**\n * Map popup icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Popup icon.\n */\nexport function _mapPopupIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'Note':\n            icon = PdfPopupIcon.note;\n            break;\n        case 'Comment':\n            icon = PdfPopupIcon.comment;\n            break;\n        case 'Help':\n            icon = PdfPopupIcon.help;\n            break;\n        case 'Insert':\n            icon = PdfPopupIcon.insert;\n            break;\n        case 'Key':\n            icon = PdfPopupIcon.key;\n            break;\n        case 'NewParagraph':\n            icon = PdfPopupIcon.newParagraph;\n            break;\n        case 'Paragraph':\n            icon = PdfPopupIcon.paragraph;\n            break;\n        default:\n            icon = PdfPopupIcon.note;\n            break;\n    }\n    return icon;\n}\n/**\n * Convert annotation state to string value.\n *\n * @private\n * @param {PdfAnnotationState} type Annotation state.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationState(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationState.none:\n            token = 'None';\n            break;\n        case PdfAnnotationState.accepted:\n            token = 'Accepted';\n            break;\n        case PdfAnnotationState.rejected:\n            token = 'Rejected';\n            break;\n        case PdfAnnotationState.cancel:\n            token = 'Cancelled';\n            break;\n        case PdfAnnotationState.completed:\n            token = 'Completed';\n            break;\n        case PdfAnnotationState.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationState.unmarked:\n            token = 'Unmarked';\n            break;\n        case PdfAnnotationState.unknown:\n            token = 'Unknown';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationState} Annotation state.\n */\nexport function _mapAnnotationState(type) {\n    var token = PdfAnnotationState.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationState.none;\n            break;\n        case 'Accepted':\n            token = PdfAnnotationState.accepted;\n            break;\n        case 'Rejected':\n            token = PdfAnnotationState.rejected;\n            break;\n        case 'Cancelled':\n            token = PdfAnnotationState.cancel;\n            break;\n        case 'Completed':\n            token = PdfAnnotationState.completed;\n            break;\n        case 'Marked':\n            token = PdfAnnotationState.marked;\n            break;\n        case 'Unmarked':\n            token = PdfAnnotationState.unmarked;\n            break;\n        case 'Unknown':\n            token = PdfAnnotationState.unknown;\n            break;\n    }\n    return token;\n}\n/**\n * Convert annotation state model to string value.\n *\n * @private\n * @param {PdfAnnotationStateModel} type Annotation state model.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationStateModel(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationStateModel.none:\n            token = 'None';\n            break;\n        case PdfAnnotationStateModel.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationStateModel.review:\n            token = 'Review';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state model.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationStateModel} Annotation state model.\n */\nexport function _mapAnnotationStateModel(type) {\n    var token = PdfAnnotationStateModel.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationStateModel.none;\n            break;\n        case 'Marked':\n            token = PdfAnnotationStateModel.marked;\n            break;\n        case 'Review':\n            token = PdfAnnotationStateModel.review;\n            break;\n    }\n    return token;\n}\n/**\n * Map attachment icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfAttachmentIcon} Icon.\n */\nexport function _mapAttachmentIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'PushPin':\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n        case 'Tag':\n            icon = PdfAttachmentIcon.tag;\n            break;\n        case 'Graph':\n            icon = PdfAttachmentIcon.graph;\n            break;\n        case 'Paperclip':\n            icon = PdfAttachmentIcon.paperClip;\n            break;\n        default:\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n    }\n    return icon;\n}\n/**\n * Map attachment intent.\n *\n * @private\n * @param {string} intentString String value.\n * @returns {PdfAnnotationIntent} intent.\n */\nexport function _mapAnnotationIntent(intentString) {\n    var intent;\n    switch (intentString) {\n        case 'None':\n            intent = PdfAnnotationIntent.none;\n            break;\n        case 'FreeTextCallout':\n            intent = PdfAnnotationIntent.freeTextCallout;\n            break;\n        case 'FreeTextTypeWriter':\n            intent = PdfAnnotationIntent.freeTextTypeWriter;\n            break;\n        default:\n            intent = PdfAnnotationIntent.none;\n            break;\n    }\n    return intent;\n}\n/**\n * Convert PDF font style to string value.\n *\n * @private\n * @param {PdfFontStyle} style Font style.\n * @returns {string} String value.\n */\nexport function _reverseMapPdfFontStyle(style) {\n    var value = '';\n    switch (style) {\n        case PdfFontStyle.regular:\n            value = 'Regular';\n            break;\n        case PdfFontStyle.bold:\n            value = 'Bold';\n            break;\n        case PdfFontStyle.italic:\n            value = 'Italic';\n            break;\n        case PdfFontStyle.underline:\n            value = 'Underline';\n            break;\n        case PdfFontStyle.strikeout:\n            value = 'Strikeout';\n            break;\n        default:\n            value = 'Regular';\n            break;\n    }\n    return value;\n}\n/**\n * Get special character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getSpecialCharacter(input) {\n    var result;\n    switch (input) {\n        case 'head2right':\n            result = '\\u27A2';\n            break;\n        case 'aacute':\n            result = 'a\\u0301';\n            break;\n        case 'eacute':\n            result = 'e\\u0301';\n            break;\n        case 'iacute':\n            result = 'i\\u0301';\n            break;\n        case 'oacute':\n            result = 'o\\u0301';\n            break;\n        case 'uacute':\n            result = 'u\\u0301';\n            break;\n        case 'circleright':\n            result = '\\u27B2';\n            break;\n        case 'bleft':\n            result = '\\u21E6';\n            break;\n        case 'bright':\n            result = '\\u21E8';\n            break;\n        case 'bup':\n            result = '\\u21E7';\n            break;\n        case 'bdown':\n            result = '\\u21E9';\n            break;\n        case 'barb4right':\n            result = '\\u2794';\n            break;\n        case 'bleftright':\n            result = '\\u2B04';\n            break;\n        case 'bupdown':\n            result = '\\u21F3';\n            break;\n        case 'bnw':\n            result = '\\u2B00';\n            break;\n        case 'bne':\n            result = '\\u2B01';\n            break;\n        case 'bsw':\n            result = '\\u2B03';\n            break;\n        case 'bse':\n            result = '\\u2B02';\n            break;\n        case 'bdash1':\n            result = '\\u25AD';\n            break;\n        case 'bdash2':\n            result = '\\u25AB';\n            break;\n        case 'xmarkbld':\n            result = '\\u2717';\n            break;\n        case 'checkbld':\n            result = '\\u2713';\n            break;\n        case 'boxxmarkbld':\n            result = '\\u2612';\n            break;\n        case 'boxcheckbld':\n            result = '\\u2611';\n            break;\n        case 'space':\n            result = '\\u0020';\n            break;\n        case 'pencil':\n            result = '\\u270F';\n            break;\n        case 'scissors':\n            result = '\\u2702';\n            break;\n        case 'scissorscutting':\n            result = '\\u2701';\n            break;\n        case 'readingglasses':\n            result = '\\u2701';\n            break;\n        case 'bell':\n            result = '\\u2701';\n            break;\n        case 'book':\n            result = '\\u2701';\n            break;\n        case 'telephonesolid':\n            result = '\\u2701';\n            break;\n        case 'telhandsetcirc':\n            result = '\\u2701';\n            break;\n        case 'envelopeback':\n            result = '\\u2701';\n            break;\n        case 'hourglass':\n            result = '\\u231B';\n            break;\n        case 'keyboard':\n            result = '\\u2328';\n            break;\n        case 'tapereel':\n            result = '\\u2707';\n            break;\n        case 'handwrite':\n            result = '\\u270D';\n            break;\n        case 'handv':\n            result = '\\u270C';\n            break;\n        case 'handptleft':\n            result = '\\u261C';\n            break;\n        case 'handptright':\n            result = '\\u261E';\n            break;\n        case 'handptup':\n            result = '\\u261D';\n            break;\n        case 'handptdown':\n            result = '\\u261F';\n            break;\n        case 'smileface':\n            result = '\\u263A';\n            break;\n        case 'frownface':\n            result = '\\u2639';\n            break;\n        case 'skullcrossbones':\n            result = '\\u2620';\n            break;\n        case 'flag':\n            result = '\\u2690';\n            break;\n        case 'pennant':\n            result = '\\u1F6A9';\n            break;\n        case 'airplane':\n            result = '\\u2708';\n            break;\n        case 'sunshine':\n            result = '\\u263C';\n            break;\n        case 'droplet':\n            result = '\\u1F4A7';\n            break;\n        case 'snowflake':\n            result = '\\u2744';\n            break;\n        case 'crossshadow':\n            result = '\\u271E';\n            break;\n        case 'crossmaltese':\n            result = '\\u2720';\n            break;\n        case 'starofdavid':\n            result = '\\u2721';\n            break;\n        case 'crescentstar':\n            result = '\\u262A';\n            break;\n        case 'yinyang':\n            result = '\\u262F';\n            break;\n        case 'om':\n            result = '\\u0950';\n            break;\n        case 'wheel':\n            result = '\\u2638';\n            break;\n        case 'aries':\n            result = '\\u2648';\n            break;\n        case 'taurus':\n            result = '\\u2649';\n            break;\n        case 'gemini':\n            result = '\\u264A';\n            break;\n        case 'cancer':\n            result = '\\u264B';\n            break;\n        case 'leo':\n            result = '\\u264C';\n            break;\n        case 'virgo':\n            result = '\\u264D';\n            break;\n        case 'libra':\n            result = '\\u264E';\n            break;\n        case 'scorpio':\n            result = '\\u264F';\n            break;\n        case 'saggitarius':\n            result = '\\u2650';\n            break;\n        case 'capricorn':\n            result = '\\u2651';\n            break;\n        case 'aquarius':\n            result = '\\u2652';\n            break;\n        case 'pisces':\n            result = '\\u2653';\n            break;\n        case 'ampersanditlc':\n            result = '\\u0026';\n            break;\n        case 'ampersandit':\n            result = '\\u0026';\n            break;\n        case 'circle6':\n            result = '\\u25CF';\n            break;\n        case 'circleshadowdwn':\n            result = '\\u274D';\n            break;\n        case 'square6':\n            result = '\\u25A0';\n            break;\n        case 'box3':\n            result = '\\u25A1';\n            break;\n        case 'boxshadowdwn':\n            result = '\\u2751';\n            break;\n        case 'boxshadowup':\n            result = '\\u2752';\n            break;\n        case 'lozenge4':\n            result = '\\u2B27';\n            break;\n        case 'lozenge6':\n            result = '\\u29EB';\n            break;\n        case 'rhombus6':\n            result = '\\u25C6';\n            break;\n        case 'xrhombus':\n            result = '\\u2756';\n            break;\n        case 'rhombus4':\n            result = '\\u2B25';\n            break;\n        case 'clear':\n            result = '\\u2327';\n            break;\n        case 'escape':\n            result = '\\u2353';\n            break;\n        case 'command':\n            result = '\\u2318';\n            break;\n        case 'rosette':\n            result = '\\u2740';\n            break;\n        case 'rosettesolid':\n            result = '\\u273F';\n            break;\n        case 'quotedbllftbld':\n            result = '\\u275D';\n            break;\n        case 'quotedblrtbld':\n            result = '\\u275E';\n            break;\n        case '.notdef':\n            result = '\\u25AF';\n            break;\n        case 'zerosans':\n            result = '\\u24EA';\n            break;\n        case 'onesans':\n            result = '\\u2460';\n            break;\n        case 'twosans':\n            result = '\\u2461';\n            break;\n        case 'threesans':\n            result = '\\u2462';\n            break;\n        case 'foursans':\n            result = '\\u2463';\n            break;\n        case 'fivesans':\n            result = '\\u2464';\n            break;\n        case 'sixsans':\n            result = '\\u2465';\n            break;\n        case 'sevensans':\n            result = '\\u2466';\n            break;\n        case 'eightsans':\n            result = '\\u2467';\n            break;\n        case 'ninesans':\n            result = '\\u2468';\n            break;\n        case 'tensans':\n            result = '\\u2469';\n            break;\n        case 'zerosansinv':\n            result = '\\u24FF';\n            break;\n        case 'onesansinv':\n            result = '\\u2776';\n            break;\n        case 'twosansinv':\n            result = '\\u2777';\n            break;\n        case 'threesansinv':\n            result = '\\u2778';\n            break;\n        case 'foursansinv':\n            result = '\\u2779';\n            break;\n        case 'circle2':\n            result = '\\u00B7';\n            break;\n        case 'circle4':\n            result = '\\u2022';\n            break;\n        case 'square2':\n            result = '\\u25AA';\n            break;\n        case 'ring2':\n            result = '\\u25CB';\n            break;\n        case 'ringbutton2':\n            result = '\\u25C9';\n            break;\n        case 'target':\n            result = '\\u25CE';\n            break;\n        case 'square4':\n            result = '\\u25AA';\n            break;\n        case 'box2':\n            result = '\\u25FB';\n            break;\n        case 'crosstar2':\n            result = '\\u2726';\n            break;\n        case 'pentastar2':\n            result = '\\u2605';\n            break;\n        case 'hexstar2':\n            result = '\\u2736';\n            break;\n        case 'octastar2':\n            result = '\\u2734';\n            break;\n        case 'dodecastar3':\n            result = '\\u2739';\n            break;\n        case 'octastar4':\n            result = '\\u2735';\n            break;\n        case 'registercircle':\n            result = '\\u2316';\n            break;\n        case 'cuspopen':\n            result = '\\u27E1';\n            break;\n        case 'cuspopen1':\n            result = '\\u2311';\n            break;\n        case 'circlestar':\n            result = '\\u2605';\n            break;\n        case 'starshadow':\n            result = '\\u2730';\n            break;\n        case 'deleteleft':\n            result = '\\u232B';\n            break;\n        case 'deleteright':\n            result = '\\u2326';\n            break;\n        case 'scissorsoutline':\n            result = '\\u2704';\n            break;\n        case 'telephone':\n            result = '\\u260F';\n            break;\n        case 'telhandset':\n            result = '\\u1F4DE';\n            break;\n        case 'handptlft1':\n            result = '\\u261C';\n            break;\n        case 'handptrt1':\n            result = '\\u261E';\n            break;\n        case 'handptlftsld1':\n            result = '\\u261A';\n            break;\n        case 'handptrtsld1':\n            result = '\\u261B';\n            break;\n        case 'handptup1':\n            result = '\\u261D';\n            break;\n        case 'handptdwn1':\n            result = '\\u261F';\n            break;\n        case 'xmark':\n            result = '\\u2717';\n            break;\n        case 'check':\n            result = '\\u2713';\n            break;\n        case 'boxcheck':\n            result = '\\u2611';\n            break;\n        case 'boxx':\n            result = '\\u2612';\n            break;\n        case 'boxxbld':\n            result = '\\u2612';\n            break;\n        case 'circlex':\n            result = '=\\u2314';\n            break;\n        case 'circlexbld':\n            result = '\\u2314';\n            break;\n        case 'prohibit':\n        case 'prohibitbld':\n            result = '\\u29B8';\n            break;\n        case 'ampersanditaldm':\n        case 'ampersandbld':\n        case 'ampersandsans':\n        case 'ampersandsandm':\n            result = '\\u0026';\n            break;\n        case 'interrobang':\n        case 'interrobangdm':\n        case 'interrobangsans':\n        case 'interrobngsandm':\n            result = '\\u203D';\n            break;\n        case 'sacute':\n            result = 'ś';\n            break;\n        case 'Sacute':\n            result = 'Ś';\n            break;\n        case 'eogonek':\n            result = 'ę';\n            break;\n        case 'cacute':\n            result = 'ć';\n            break;\n        case 'aogonek':\n            result = 'ą';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Get latin character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getLatinCharacter(input) {\n    var result;\n    switch (input) {\n        case 'zero':\n            result = '0';\n            break;\n        case 'one':\n            result = '1';\n            break;\n        case 'two':\n            result = '2';\n            break;\n        case 'three':\n            result = '3';\n            break;\n        case 'four':\n            result = '4';\n            break;\n        case 'five':\n            result = '5';\n            break;\n        case 'six':\n            result = '6';\n            break;\n        case 'seven':\n            result = '7';\n            break;\n        case 'eight':\n            result = '8';\n            break;\n        case 'nine':\n            result = '9';\n            break;\n        case 'aacute':\n            result = 'á';\n            break;\n        case 'asciicircum':\n            result = '^';\n            break;\n        case 'asciitilde':\n            result = '~';\n            break;\n        case 'asterisk':\n            result = '*';\n            break;\n        case 'at':\n            result = '@';\n            break;\n        case 'atilde':\n            result = 'ã';\n            break;\n        case 'backslash':\n            result = '\\\\';\n            break;\n        case 'bar':\n            result = '|';\n            break;\n        case 'braceleft':\n            result = '{';\n            break;\n        case 'braceright':\n            result = '}';\n            break;\n        case 'bracketleft':\n            result = '[';\n            break;\n        case 'bracketright':\n            result = ']';\n            break;\n        case 'breve':\n            result = '˘';\n            break;\n        case 'brokenbar':\n            result = '|';\n            break;\n        case 'bullet3':\n            result = '•';\n            break;\n        case 'bullet':\n            result = '•';\n            break;\n        case 'caron':\n            result = 'ˇ';\n            break;\n        case 'ccedilla':\n            result = 'ç';\n            break;\n        case 'cedilla':\n            result = '¸';\n            break;\n        case 'cent':\n            result = '¢';\n            break;\n        case 'circumflex':\n            result = 'ˆ';\n            break;\n        case 'colon':\n            result = ':';\n            break;\n        case 'comma':\n            result = ',';\n            break;\n        case 'copyright':\n            result = '©';\n            break;\n        case 'currency1':\n            result = '¤';\n            break;\n        case 'dagger':\n            result = '†';\n            break;\n        case 'daggerdbl':\n            result = '‡';\n            break;\n        case 'degree':\n            result = '°';\n            break;\n        case 'dieresis':\n            result = '¨';\n            break;\n        case 'divide':\n            result = '÷';\n            break;\n        case 'dollar':\n            result = '$';\n            break;\n        case 'dotaccent':\n            result = '˙';\n            break;\n        case 'dotlessi':\n            result = 'ı';\n            break;\n        case 'eacute':\n            result = 'é';\n            break;\n        case 'middot':\n            result = '˙';\n            break;\n        case 'edieresis':\n            result = 'ë';\n            break;\n        case 'egrave':\n            result = 'è';\n            break;\n        case 'ellipsis':\n            result = '...';\n            break;\n        case 'emdash':\n            result = '—';\n            break;\n        case 'endash':\n            result = '–';\n            break;\n        case 'equal':\n            result = '=';\n            break;\n        case 'eth':\n            result = 'ð';\n            break;\n        case 'exclam':\n            result = '!';\n            break;\n        case 'exclamdown':\n            result = '¡';\n            break;\n        case 'florin':\n            result = 'ƒ';\n            break;\n        case 'fraction':\n            result = '⁄';\n            break;\n        case 'germandbls':\n            result = 'ß';\n            break;\n        case 'grave':\n            result = '`';\n            break;\n        case 'greater':\n            result = '>';\n            break;\n        case 'guillemotleft4':\n            result = '«';\n            break;\n        case 'guillemotright4':\n            result = '»';\n            break;\n        case 'guilsinglleft':\n            result = '‹';\n            break;\n        case 'guilsinglright':\n            result = '›';\n            break;\n        case 'hungarumlaut':\n            result = '˝';\n            break;\n        case 'hyphen5':\n            result = '-';\n            break;\n        case 'iacute':\n            result = 'í';\n            break;\n        case 'icircumflex':\n            result = 'î';\n            break;\n        case 'idieresis':\n            result = 'ï';\n            break;\n        case 'igrave':\n            result = 'ì';\n            break;\n        case 'less':\n            result = '<';\n            break;\n        case 'logicalnot':\n            result = '¬';\n            break;\n        case 'lslash':\n            result = 'ł';\n            break;\n        case 'Lslash':\n            result = 'Ł';\n            break;\n        case 'macron':\n            result = '¯';\n            break;\n        case 'minus':\n            result = '−';\n            break;\n        case 'mu':\n            result = 'μ';\n            break;\n        case 'multiply':\n            result = '×';\n            break;\n        case 'ntilde':\n            result = 'ñ';\n            break;\n        case 'numbersign':\n            result = '#';\n            break;\n        case 'oacute':\n            result = 'ó';\n            break;\n        case 'ocircumflex':\n            result = 'ô';\n            break;\n        case 'odieresis':\n            result = 'ö';\n            break;\n        case 'oe':\n            result = 'oe';\n            break;\n        case 'ogonek':\n            result = '˛';\n            break;\n        case 'ograve':\n            result = 'ò';\n            break;\n        case 'onehalf':\n            result = '1/2';\n            break;\n        case 'onequarter':\n            result = '1/4';\n            break;\n        case 'onesuperior':\n            result = '¹';\n            break;\n        case 'ordfeminine':\n            result = 'ª';\n            break;\n        case 'ordmasculine':\n            result = 'º';\n            break;\n        case 'otilde':\n            result = 'õ';\n            break;\n        case 'paragraph':\n            result = '¶';\n            break;\n        case 'parenleft':\n            result = '(';\n            break;\n        case 'parenright':\n            result = ')';\n            break;\n        case 'percent':\n            result = '%';\n            break;\n        case 'period':\n            result = '.';\n            break;\n        case 'periodcentered':\n            result = '·';\n            break;\n        case 'perthousand':\n            result = '‰';\n            break;\n        case 'plus':\n            result = '+';\n            break;\n        case 'plusminus':\n            result = '±';\n            break;\n        case 'question':\n            result = '?';\n            break;\n        case 'questiondown':\n            result = '¿';\n            break;\n        case 'quotedbl':\n            result = '\\'';\n            break;\n        case 'quotedblbase':\n            result = '„';\n            break;\n        case 'quotedblleft':\n            result = '“';\n            break;\n        case 'quotedblright':\n            result = '”';\n            break;\n        case 'quoteleft':\n            result = '‘';\n            break;\n        case 'quoteright':\n            result = '’';\n            break;\n        case 'quotesinglbase':\n            result = '‚';\n            break;\n        case 'quotesingle':\n            result = '\\'';\n            break;\n        case 'registered':\n            result = '®';\n            break;\n        case 'ring':\n            result = '˚';\n            break;\n        case 'scaron':\n            result = 'š';\n            break;\n        case 'section':\n            result = '§';\n            break;\n        case 'semicolon':\n            result = ';';\n            break;\n        case 'slash':\n            result = '/';\n            break;\n        case 'space6':\n            result = ' ';\n            break;\n        case 'space':\n            result = ' ';\n            break;\n        case 'udieresis':\n            result = 'ü';\n            break;\n        case 'uacute':\n            result = 'ú';\n            break;\n        case 'Ecircumflex':\n            result = 'Ê';\n            break;\n        case 'hyphen':\n            result = '-';\n            break;\n        case 'underscore':\n            result = '_';\n            break;\n        case 'adieresis':\n            result = 'ä';\n            break;\n        case 'ampersand':\n            result = '&';\n            break;\n        case 'Adieresis':\n            result = 'Ä';\n            break;\n        case 'Udieresis':\n            result = 'Ü';\n            break;\n        case 'ccaron':\n            result = 'č';\n            break;\n        case 'Scaron':\n            result = 'Š';\n            break;\n        case 'zcaron':\n            result = 'ž';\n            break;\n        case 'sterling':\n            result = '£';\n            break;\n        case 'agrave':\n            result = 'à';\n            break;\n        case 'ecircumflex':\n            result = 'ê';\n            break;\n        case 'acircumflex':\n            result = 'â';\n            break;\n        case 'Oacute':\n            result = 'Ó';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Encode value to string.\n *\n * @private\n * @param {string} value Input string.\n * @returns {string} result.\n */\nexport function _encodeValue(value) {\n    var name = '';\n    for (var i = 0; i < value.length; i++) {\n        var code = value.charCodeAt(i) & 0xff;\n        var entry = String.fromCharCode(code);\n        var hex = '';\n        switch (entry) {\n            case ' ':\n            case '%':\n            case '(':\n            case ')':\n            case '<':\n            case '>':\n            case '[':\n            case ']':\n            case '{':\n            case '}':\n            case '/':\n            case '#':\n                name += '#';\n                hex = code.toString(16).toUpperCase();\n                name += (hex.length === 1 ? ('0' + hex) : hex);\n                break;\n            default:\n                if (code > 126 || code < 37) {\n                    name += '#';\n                    hex = code.toString(16).toUpperCase();\n                    name += (hex.length === 1 ? ('0' + hex) : hex);\n                }\n                else {\n                    name += entry;\n                }\n                break;\n        }\n    }\n    return name;\n}\n/**\n * Parse and retrieve comments and review history from the annotation.\n *\n * @private\n * @param {PdfComment} annotation Input annotation.\n * @param {boolean} isReview Input is review or not.\n * @returns {PdfPopupAnnotationCollection} result.\n */\nexport function _getCommentsOrReview(annotation, isReview) {\n    if (isReview) {\n        return annotation.reviewHistory;\n    }\n    else {\n        return annotation.comments;\n    }\n}\n/**\n * Returns true if input dictionary is belongs to the review history.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is review or not.\n */\nexport function _checkReview(dictionary) {\n    var flag = dictionary.get('F');\n    return ((dictionary.has('State') || dictionary.has('StateModel')) && (flag === 30 || flag === 128));\n}\n/**\n * Returns true if input dictionary is belongs to the comments.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is comments or not.\n */\nexport function _checkComment(dictionary) {\n    var flag = dictionary.get('F');\n    return (!(dictionary.has('State') || dictionary.has('StateModel')) && (flag === 28 || flag === 128));\n}\n/**\n * Update visibility.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {PdfFormFieldVisibility} value Visibility.\n * @returns {void} Nothing.\n */\nexport function _updateVisibility(dictionary, value) {\n    if (dictionary.has('F')) {\n        delete dictionary._map.F;\n        dictionary._updated = true;\n    }\n    switch (value) {\n        case PdfFormFieldVisibility.hidden:\n            dictionary.update('F', PdfAnnotationFlag.hidden);\n            break;\n        case PdfFormFieldVisibility.hiddenPrintable:\n            dictionary.update('F', (PdfAnnotationFlag.noView | PdfAnnotationFlag.print));\n            break;\n        case PdfFormFieldVisibility.visible:\n            if (dictionary.has('DV')) {\n                delete dictionary._map.DV;\n                dictionary._updated = true;\n            }\n            if (dictionary.has('MK')) {\n                var mkDict = dictionary.get('MK');\n                if (mkDict && mkDict.has('BG')) {\n                    delete mkDict._map.BG;\n                    mkDict._updated = true;\n                }\n            }\n            break;\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @param {string} key Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateReference(dictionary, crossTable, key) {\n    if (dictionary && dictionary.has(key)) {\n        var oldAppearance = dictionary.getRaw(key);\n        if (oldAppearance && oldAppearance instanceof _PdfReference && oldAppearance._isNew) {\n            var appearance = dictionary.get(key); // eslint-disable-line\n            if (appearance) {\n                if (appearance instanceof _PdfReference) {\n                    appearance = crossTable._fetch(appearance);\n                }\n                var appearanceDictionary = void 0;\n                if (appearance instanceof _PdfDictionary) {\n                    appearanceDictionary = appearance;\n                }\n                else if (appearance instanceof _PdfBaseStream) {\n                    appearanceDictionary = appearance.dictionary;\n                }\n                if (appearanceDictionary && appearanceDictionary.has('Resources')) {\n                    _removeDuplicateFromResources(appearanceDictionary.get('Resources'), crossTable);\n                }\n            }\n            crossTable._cacheMap.delete(oldAppearance);\n        }\n    }\n}\n/**\n * Remove duplicate reference from resources.\n *\n * @private\n * @param {_PdfDictionary} resources Input resources.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateFromResources(resources, crossTable) {\n    if (resources && resources.size > 0) {\n        resources.forEach(function (key, value) {\n            if (typeof key !== 'undefined' && typeof value !== 'undefined') {\n                if (value instanceof _PdfReference) {\n                    var reference = value;\n                    if (reference._isNew) {\n                        var dictionary = resources.get(key);\n                        if (dictionary && dictionary instanceof _PdfDictionary) {\n                            if (key === 'XObject' && dictionary.has('Resources')) {\n                                _removeDuplicateFromResources(dictionary.get('Resources'), crossTable);\n                            }\n                            crossTable._cacheMap.delete(reference);\n                        }\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    if (value.has('Resources')) {\n                        _removeDuplicateFromResources(value.get('Resources'), crossTable);\n                    }\n                    if (key === 'Font' || key === 'XObject' || key === 'ExtGState') {\n                        _removeDuplicateFromResources(value, crossTable);\n                    }\n                }\n            }\n        });\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {any} normal Input.\n * @param {_PdfCrossReference} crossReference Cross reference table.\n * @param {string} firstKey Key string for appearance type.\n * @param {string} secondKey Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeReferences(normal, crossReference, firstKey, secondKey) {\n    var normalElement;\n    if (normal) {\n        if (normal instanceof _PdfDictionary) {\n            normalElement = normal;\n        }\n        else if (normal instanceof _PdfStream) {\n            normalElement = normal.dictionary;\n        }\n    }\n    if (normalElement) {\n        _removeDuplicateReference(normalElement, crossReference, firstKey);\n        _removeDuplicateReference(normalElement, crossReference, secondKey);\n    }\n}\nvar BaseException = /** @class */ (function () {\n    function BaseException(message, name) {\n        this.message = message;\n        this.name = name;\n    }\n    return BaseException;\n}());\nexport { BaseException };\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(message) {\n        return _super.call(this, message, 'FormatError') || this;\n    }\n    return FormatError;\n}(BaseException));\nexport { FormatError };\nvar ParserEndOfFileException = /** @class */ (function (_super) {\n    __extends(ParserEndOfFileException, _super);\n    function ParserEndOfFileException(message) {\n        return _super.call(this, message, 'ParserEndOfFileException') || this;\n    }\n    return ParserEndOfFileException;\n}(BaseException));\nexport { ParserEndOfFileException };\n/**\n * Gets the default string.\n *\n * @param {string} item Input string.\n * @returns {string} result.\n */\nexport function _defaultToString(item) {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n/**\n * Gets the form field font.\n *\n * @param {PdfForm} form form.\n * @param {PdfWidgetAnnotation} widget widget annotation.\n * @param {PdfField} field field.\n * @returns {PdfFont} font.\n */\nexport function _obtainFontDetails(form, widget, field) {\n    var fontFamily = '';\n    var fontSize;\n    var font;\n    var defaultAppearance;\n    if (widget && widget._dictionary.has('DA') || field._dictionary.has('DA')) {\n        if (widget && widget._dictionary.has('DA')) {\n            defaultAppearance = widget._dictionary.get('DA');\n        }\n        else {\n            defaultAppearance = field._dictionary.get('DA');\n        }\n    }\n    if (defaultAppearance && defaultAppearance !== '' && defaultAppearance.indexOf('Tf') !== -1) {\n        var textCollection = defaultAppearance.split(' ');\n        for (var i = 0; i < textCollection.length; i++) {\n            if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                fontFamily = textCollection[i - 2];\n                while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                    fontFamily = fontFamily.substring(1);\n                }\n                fontSize = Number.parseFloat(textCollection[i - 1]);\n            }\n        }\n    }\n    if (fontFamily) {\n        fontFamily = fontFamily.trim();\n    }\n    if (form && form._dictionary.has('DR')) {\n        var resources = form._dictionary.get('DR');\n        if (resources.has('Font')) {\n            var fonts = resources.get('Font');\n            if (fonts.has(fontFamily)) {\n                var fontDictionary = fonts.get(fontFamily);\n                if (fontDictionary && fontFamily && fontDictionary.has('BaseFont')) {\n                    var baseFont = fontDictionary.get('BaseFont');\n                    var textFontStyle = PdfFontStyle.regular;\n                    if (baseFont) {\n                        defaultAppearance = baseFont.name;\n                        textFontStyle = _getFontStyle(baseFont.name);\n                        if (defaultAppearance.includes('-')) {\n                            defaultAppearance = defaultAppearance.substring(0, defaultAppearance.indexOf('-'));\n                        }\n                        if (widget && widget._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, widget);\n                        }\n                        else if (field && field._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, field);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if ((font === null || typeof font === 'undefined') && fontSize) {\n        font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n    }\n    if ((font === null || typeof font === 'undefined') || (font && font.size === 1)) {\n        if (widget) {\n            font = widget._circleCaptionFont;\n        }\n        else if (field) {\n            font = field._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font style.\n *\n * @param {string} fontFamilyString Font family string.\n * @returns {PdfFontStyle} result.\n */\nexport function _getFontStyle(fontFamilyString) {\n    var position = fontFamilyString.indexOf('-');\n    if (position < 0) {\n        position = fontFamilyString.indexOf(',');\n    }\n    var style = PdfFontStyle.regular;\n    if (position >= 0) {\n        var standardName = fontFamilyString.substring(position + 1, fontFamilyString.length);\n        switch (standardName) {\n            case 'Bold':\n            case 'BoldMT':\n                style = PdfFontStyle.bold;\n                break;\n            case 'Italic':\n            case 'ItalicMT':\n            case 'Oblique':\n            case 'It':\n                style = PdfFontStyle.italic;\n                break;\n            case 'BoldItalic':\n            case 'BoldItalicMT':\n            case 'BoldOblique':\n                style = PdfFontStyle.bold | PdfFontStyle.italic;\n                break;\n        }\n    }\n    return style;\n}\n/**\n * Map the font.\n *\n * @param {string} name Font name.\n * @param {number} size Font size.\n * @param {PdfFontStyle} style Font style.\n * @param {PdfAnnotation} annotation Annotation or Field.\n * @returns {PdfFont} result.\n */\nexport function _mapFont(name, size, style, annotation) {\n    var font;\n    var fontFamily = name ? name : '';\n    if (fontFamily.includes('-')) {\n        fontFamily = fontFamily.substring(0, fontFamily.indexOf('-'));\n    }\n    if (typeof size === 'undefined' && annotation instanceof PdfLineAnnotation && annotation._isLoaded) {\n        size = 10;\n    }\n    var fontSize = typeof size !== 'undefined' ? size : 1;\n    if (annotation._dictionary.has('DS') || annotation._dictionary.has('DA')) {\n        switch (fontFamily) {\n            case 'Helvetica':\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n                break;\n            case 'Courier':\n                font = new PdfStandardFont(PdfFontFamily.courier, fontSize, style);\n                break;\n            case 'Symbol':\n                font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, style);\n                break;\n            case 'Times':\n            case 'TimesRoman':\n                font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, style);\n                break;\n            case 'ZapfDingbats':\n                font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, style);\n                break;\n            case 'MonotypeSungLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeSungLight, fontSize, style);\n                break;\n            case 'SinoTypeSongLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.sinoTypeSongLight, fontSize, style);\n                break;\n            case 'MonotypeHeiMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeHeiMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsGothicMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsGothicMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsShinMyeongJoMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium, fontSize, style);\n                break;\n            case 'HeiseiKakuGothicW5':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiKakuGothicW5, fontSize, style);\n                break;\n            case 'HeiseiMinchoW3':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, fontSize, style);\n                break;\n            default:\n                if (annotation._dictionary.has('AP')) {\n                    var fontData = _tryParseFontStream(annotation._dictionary, annotation._crossReference, annotation);\n                    if (annotation._hasData) {\n                        var base64String = _encode(fontData);\n                        font = new PdfTrueTypeFont(base64String, fontSize, style);\n                    }\n                }\n                break;\n        }\n    }\n    if (font === null || typeof font === 'undefined') {\n        if (annotation instanceof PdfAnnotation) {\n            if (annotation._type !== _PdfAnnotationType.widgetAnnotation) {\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n            }\n            else {\n                font = annotation._circleCaptionFont;\n            }\n        }\n        else if (annotation instanceof PdfField) {\n            font = annotation._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font stream.\n *\n * @param {_PdfDictionary} widgetDictionary Widget dictionary.\n * @param {_PdfCrossReference} crossReference Cross reference.\n * @param {PdfAnnotation} annotation Annotation.\n * @returns {Uint8Array} result.\n */\nexport function _tryParseFontStream(widgetDictionary, crossReference, annotation) {\n    var fontData;\n    var apperance = widgetDictionary.get('AP');\n    if (apperance && apperance.has('N')) {\n        var normal = apperance.get('N');\n        if (normal && normal instanceof _PdfStream && normal.dictionary.has('Resources')) {\n            var resourcesDictionary = normal.dictionary.get('Resources');\n            if (resourcesDictionary && resourcesDictionary.has('Font')) {\n                var fontDictionary = resourcesDictionary.get('Font');\n                if (fontDictionary && fontDictionary instanceof _PdfDictionary) {\n                    fontDictionary.forEach(function (key, value) {\n                        if (value) {\n                            var dictionary = crossReference._fetch(value);\n                            if (dictionary && dictionary.has('DescendantFonts')) {\n                                var descendant = dictionary.getArray('DescendantFonts'); // eslint-disable-line\n                                if (descendant && descendant.length > 0) {\n                                    for (var i = 0; i < descendant.length; i++) {\n                                        var descendantFont = descendant[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                                        if (descendantFont && descendantFont instanceof _PdfDictionary && descendantFont.has('FontDescriptor')) {\n                                            var fontDescriptor = descendantFont.get('FontDescriptor');\n                                            if (fontDescriptor && fontDescriptor.has('FontFile2')) {\n                                                var fontFile = fontDescriptor.get('FontFile2');\n                                                if (fontFile && fontFile instanceof _PdfStream && fontFile.length > 0) {\n                                                    fontData = fontFile.getByteRange(fontFile.start, fontFile.end);\n                                                    if (fontData && fontData.length > 0) {\n                                                        annotation._hasData = true;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        }\n    }\n    return fontData;\n}\n/**\n * Gets the boolean if two arrays are equal.\n *\n * @param {Array<number[]>} inkPointsCollection Ink points collection.\n * @param {Array<number[]>} previousCollection Previous collection.\n * @returns {boolean} result.\n */\nexport function _checkInkPoints(inkPointsCollection, previousCollection) {\n    if (inkPointsCollection.length !== previousCollection.length) {\n        return false;\n    }\n    for (var i = 0; i < inkPointsCollection.length; i++) {\n        if (!_areArrayEqual(inkPointsCollection[Number.parseInt(i.toString(), 10)], previousCollection[Number.parseInt(i.toString(), 10)])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Gets the Destination.\n *\n * @param {_PdfDictionary} dictionary widget dictionary.\n * @param {string} key bookmark or action dictionary key.\n * @returns {PdfDestination} destination.\n */\nexport function _obtainDestination(dictionary, key) {\n    var page;\n    var destination;\n    if (dictionary) {\n        var destinationArray = void 0; // eslint-disable-line\n        if (dictionary.has(key)) {\n            destinationArray = dictionary.getArray(key);\n        }\n        var loadedDocument = dictionary._crossReference._document;\n        var mode = void 0;\n        if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n            var value = destinationArray[0]; // eslint-disable-line\n            var left = void 0;\n            var height = void 0;\n            var bottom = void 0;\n            var right = void 0;\n            var zoom = void 0;\n            if (typeof value === 'number') {\n                var pageNumber = destinationArray[0];\n                if (pageNumber >= 0) {\n                    var document_1 = dictionary._crossReference._document;\n                    if (document_1 && document_1.pageCount > pageNumber) {\n                        page = document_1.getPage(pageNumber);\n                    }\n                    if (destinationArray.length > 1) {\n                        mode = destinationArray[1];\n                    }\n                    if (mode && mode.name === 'XYZ') {\n                        if (destinationArray.length > 2) {\n                            left = destinationArray[2];\n                        }\n                        if (destinationArray.length > 3) {\n                            height = destinationArray[3];\n                        }\n                        if (destinationArray.length > 4) {\n                            zoom = destinationArray[4];\n                        }\n                        if (page) {\n                            var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                            var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                            if (page.rotation !== PdfRotationAngle.angle0) {\n                                _checkRotation(page, height, left);\n                            }\n                            destination = new PdfDestination(page, [leftValue, topValue]);\n                            destination._index = pageNumber;\n                            destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                            if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                destination._setValidation(false);\n                            }\n                        }\n                    }\n                }\n            }\n            if (value instanceof _PdfDictionary) {\n                var pageDictionary = value;\n                var index = void 0;\n                if (loadedDocument && pageDictionary) {\n                    index = _getPageIndex(loadedDocument, pageDictionary);\n                }\n                if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                    page = loadedDocument.getPage(index);\n                }\n                if (destinationArray.length > 1) {\n                    mode = destinationArray[1];\n                }\n                if (mode) {\n                    if (mode.name === 'XYZ') {\n                        if (destinationArray.length > 2) {\n                            left = destinationArray[2];\n                        }\n                        if (destinationArray.length > 3) {\n                            height = destinationArray[3];\n                        }\n                        if (destinationArray.length > 4) {\n                            zoom = destinationArray[4];\n                        }\n                        if (page) {\n                            var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                            var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                            if (page.rotation !== PdfRotationAngle.angle0) {\n                                topValue = _checkRotation(page, height, left);\n                            }\n                            destination = new PdfDestination(page, [leftValue, topValue]);\n                            destination._index = index;\n                            destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                            if (left === null || height === null || zoom === null || typeof left === 'undefined' ||\n                                typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                destination._setValidation(false);\n                            }\n                        }\n                    }\n                    else {\n                        if (mode.name === 'FitR') {\n                            if (destinationArray.length > 2) {\n                                left = destinationArray[2];\n                            }\n                            if (destinationArray.length > 3) {\n                                bottom = destinationArray[3];\n                            }\n                            if (destinationArray.length > 4) {\n                                right = destinationArray[4];\n                            }\n                            if (destinationArray.length > 5) {\n                                height = destinationArray[5];\n                            }\n                            if (page) {\n                                left = (left === null || typeof left === 'undefined') ? 0 : left;\n                                bottom = (bottom === null || typeof bottom === 'undefined') ? 0 : bottom;\n                                height = (height === null || typeof height === 'undefined') ? 0 : height;\n                                right = (right === null || typeof right === 'undefined') ? 0 : right;\n                                destination = new PdfDestination(page, [left, bottom, right, height]);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitR;\n                            }\n                        }\n                        else if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                            if (destinationArray.length >= 3) {\n                                height = destinationArray[2];\n                            }\n                            if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                page = loadedDocument.getPage(index);\n                            }\n                            if (page && page.size) {\n                                var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                                destination = new PdfDestination(page, [0, topValue]);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitH;\n                                if (height === null || typeof height === 'undefined') {\n                                    destination._setValidation(false);\n                                }\n                            }\n                        }\n                        else {\n                            if (page && mode.name === 'Fit') {\n                                destination = new PdfDestination(page);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return destination;\n}\n/**\n * Update the annotation bounds.\n *\n * @param {PdfAnnotation} annotation annotation.\n * @param {number[]} bounds annotation bounds.\n * @returns {number[]} bounds.\n */\nexport function _updateBounds(annotation, bounds) {\n    if (bounds) {\n        annotation._bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n    }\n    var rect;\n    if (annotation._page && annotation.bounds) {\n        rect = [annotation.bounds.x, annotation.bounds.y + annotation.bounds.height,\n            annotation.bounds.width, annotation.bounds.height];\n        if (annotation._page._isNew && annotation._page._pageSettings) {\n            var pageSettings = annotation._page._pageSettings;\n            var pageBounds = [pageSettings.margins.left, pageSettings.margins.top, pageSettings.size[0] -\n                    (pageSettings.margins.left + pageSettings.margins.right),\n                pageSettings.size[1] - (pageSettings.margins.top + pageSettings.margins.bottom)];\n            rect[0] += pageBounds[0];\n            rect[1] = pageSettings.size[1] - (pageBounds[1] + rect[1]);\n        }\n        else {\n            rect = [annotation.bounds.x,\n                annotation._page.size[1] - (annotation.bounds.y + annotation.bounds.height),\n                annotation.bounds.width,\n                annotation.bounds.height];\n        }\n        return [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]];\n    }\n    return rect;\n}\n/**\n * Decode text.\n *\n * @param {string} text Text to decode.\n * @param {boolean} isColorSpace Color space or not\n * @param {boolean} isPassword Password or not\n * @returns {string} Decoded text.\n */\nexport function _decodeText(text, isColorSpace, isPassword) {\n    if (text && typeof text === 'string' && !isColorSpace && !isPassword) {\n        if (text.startsWith('þÿ')) {\n            text = text.substring(2);\n            if (text.endsWith('ÿý')) {\n                text = text.substring(0, text.length - 2);\n            }\n            var bytes = _stringToBytes(text);\n            var result = '';\n            for (var i = 0; i < bytes.length; i += 2) {\n                var x = bytes[Number.parseInt(i.toString(), 10)] << 8;\n                var y = bytes[Number.parseInt((i + 1).toString(), 10)];\n                var codeUnit = x | y;\n                result += String.fromCharCode(codeUnit);\n            }\n            text = result;\n        }\n    }\n    return text;\n}\n/**\n * Number of bytes required to save the number.\n *\n * @param {number} input number.\n * @returns {number} number of bytes.\n */\nexport function _getSize(input) {\n    var size = 0;\n    var uintMaxValue = 0xFFFFFFFF;\n    var ushortMaxValue = 0xFFFF;\n    var byteMaxValue = 0xFF;\n    if (input <= uintMaxValue) {\n        if (input <= ushortMaxValue) {\n            if (input <= byteMaxValue) {\n                size = 1;\n            }\n            else {\n                size = 2;\n            }\n        }\n        else {\n            if (input <= (ushortMaxValue | (ushortMaxValue << 8))) {\n                size = 3;\n            }\n            else {\n                size = 4;\n            }\n        }\n    }\n    else {\n        size = 8;\n    }\n    return size;\n}\n/**\n * Convert the string to big endian bytes.\n *\n * @param {string} input string.\n * @returns {number[]} bytes.\n */\nexport function _stringToBigEndianBytes(input) {\n    var bytes = [];\n    for (var i = 0; i < input.length; i++) {\n        var charCode = input.charCodeAt(Number.parseInt(i.toString(), 10));\n        if (charCode <= 0xFFFF) {\n            bytes.push((charCode >> 8) & 0xFF);\n            bytes.push(charCode & 0xFF);\n        }\n    }\n    return bytes;\n}\n","import { _defaultToString } from './utils';\n/* eslint-disable */\nvar nameCache = Object.create(null);\nvar cmdCache = Object.create(null);\nvar refCache = Object.create(null);\nvar _PdfName = /** @class */ (function () {\n    function _PdfName(name) {\n        this.name = name;\n    }\n    _PdfName.get = function (name) {\n        return nameCache[name] || (nameCache[name] = new _PdfName(name));\n    };\n    return _PdfName;\n}());\nexport { _PdfName };\nvar _PdfCommand = /** @class */ (function () {\n    function _PdfCommand(command) {\n        this.command = command;\n    }\n    _PdfCommand.get = function (command) {\n        return cmdCache[command] || (cmdCache[command] = new _PdfCommand(command));\n    };\n    return _PdfCommand;\n}());\nexport { _PdfCommand };\nvar _PdfReference = /** @class */ (function () {\n    function _PdfReference(objectNumber, gen) {\n        this._isNew = false;\n        this.objectNumber = objectNumber;\n        this.generationNumber = gen;\n    }\n    _PdfReference.prototype.toString = function () {\n        return this.objectNumber + \" \" + this.generationNumber;\n    };\n    _PdfReference.get = function (objectNumber, generationNumber) {\n        var key = generationNumber === 0 ? objectNumber + \"R\" : objectNumber + \"R\" + generationNumber;\n        return refCache[key] || (refCache[key] = new _PdfReference(objectNumber, generationNumber));\n    };\n    return _PdfReference;\n}());\nexport { _PdfReference };\nvar _PdfReferenceSet = /** @class */ (function () {\n    function _PdfReferenceSet(parent) {\n        if (parent === void 0) { parent = null; }\n        this._set = new Set(parent && parent._set);\n    }\n    _PdfReferenceSet.prototype.has = function (ref) {\n        return this._set.has(ref.toString());\n    };\n    _PdfReferenceSet.prototype.put = function (ref) {\n        this._set.add(ref.toString());\n    };\n    _PdfReferenceSet.prototype.remove = function (ref) {\n        this._set.delete(ref.toString());\n    };\n    _PdfReferenceSet.prototype.clear = function () {\n        this._set.clear();\n    };\n    return _PdfReferenceSet;\n}());\nexport { _PdfReferenceSet };\nvar _PdfReferenceSetCache = /** @class */ (function () {\n    function _PdfReferenceSetCache() {\n        this._map = new Map();\n    }\n    Object.defineProperty(_PdfReferenceSetCache.prototype, \"size\", {\n        get: function () {\n            return this._map.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfReferenceSetCache.prototype.get = function (ref) {\n        return this._map.get(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.has = function (ref) {\n        return this._map.has(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.put = function (ref, obj) {\n        this._map.set(ref.toString(), obj);\n    };\n    _PdfReferenceSetCache.prototype.set = function (objId, obj) {\n        this._map.set(objId, obj);\n    };\n    _PdfReferenceSetCache.prototype.clear = function () {\n        this._map.clear();\n    };\n    return _PdfReferenceSetCache;\n}());\nexport { _PdfReferenceSetCache };\nvar Dictionary = /** @class */ (function () {\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || _defaultToString;\n    }\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    Dictionary.prototype.setValue = function (key, value) {\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        this.nElements++;\n        ret = undefined;\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n        }\n        return keysArray;\n    };\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    Dictionary.prototype._size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}());\nexport { Dictionary };\nvar _PdfDictionary = /** @class */ (function () {\n    function _PdfDictionary(xref) {\n        this._isFont = false;\n        this._initialize(xref);\n    }\n    Object.defineProperty(_PdfDictionary.prototype, \"size\", {\n        get: function () {\n            return Object.keys(this._map).length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDictionary.prototype.assignXref = function (xref) {\n        this._crossReference = xref;\n    };\n    _PdfDictionary.prototype.getRaw = function (key) {\n        return this._map[key];\n    };\n    _PdfDictionary.prototype.getRawValues = function () {\n        return this._map.values;\n    };\n    _PdfDictionary.prototype.get = function (key1, key2, key3) {\n        var value = this._get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && value instanceof _PdfReference) {\n            value = this._crossReference._fetch(value);\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.getArray = function (key1, key2, key3) {\n        var value = this.get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && Array.isArray(value)) {\n            value = value.slice();\n            for (var i = 0; i < value.length; i++) {\n                var reference = value[Number.parseInt(i.toString(), 10)];\n                if (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) {\n                    value[Number.parseInt(i.toString(), 10)] = this._crossReference._fetch(reference);\n                }\n            }\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.set = function (key, value) {\n        this._map[key] = value;\n    };\n    _PdfDictionary.prototype.has = function (key) {\n        return typeof this._map[key] !== 'undefined';\n    };\n    _PdfDictionary.prototype.forEach = function (callback) {\n        for (var key in this._map) {\n            callback(key, this.getRaw(key));\n        }\n    };\n    _PdfDictionary.prototype.update = function (key, value) {\n        if (this.has(key)) {\n            var prevValue = this._map[key];\n            if (prevValue !== null && typeof prevValue !== 'undefined' && prevValue instanceof _PdfReference && this._crossReference) {\n                prevValue = this._crossReference._fetch(prevValue);\n            }\n            if (prevValue !== value) {\n                this._map[key] = value;\n                this._updated = true;\n            }\n        }\n        else {\n            this._map[key] = value;\n            this._updated = true;\n        }\n    };\n    _PdfDictionary.getEmpty = function (xref) {\n        var emptyDict = new _PdfDictionary(xref);\n        emptyDict.set = function (key, value) {\n            throw new Error('Should not call set on the empty dictionary.');\n        };\n        return emptyDict;\n    };\n    _PdfDictionary.merge = function (xref, dictionaryArray, mergeSubDictionary) {\n        if (mergeSubDictionary === void 0) { mergeSubDictionary = false; }\n        var mergedDictionary = new _PdfDictionary(xref);\n        var properties = Object.create(null);\n        for (var _i = 0, dictionaryArray_1 = dictionaryArray; _i < dictionaryArray_1.length; _i++) {\n            var dictionary = dictionaryArray_1[_i];\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            for (var _a = 0, _b = dictionary._map; _a < _b.length; _a++) {\n                var _c = _b[_a], key = _c[0], value = _c[1];\n                var property = properties.get(key);\n                if (typeof property === 'undefined') {\n                    property = [];\n                    properties.set(key, property);\n                }\n                else if (!mergeSubDictionary || !(value instanceof _PdfDictionary)) {\n                    continue;\n                }\n                property.push(value);\n            }\n        }\n        for (var _d = 0, properties_1 = properties; _d < properties_1.length; _d++) {\n            var _e = properties_1[_d], name_1 = _e[0], values = _e[1];\n            if (values.length === 1 || !(values[0] instanceof _PdfDictionary)) {\n                mergedDictionary._map[name_1] = values[0];\n                continue;\n            }\n            var subDict = new _PdfDictionary(xref);\n            for (var _f = 0, values_1 = values; _f < values_1.length; _f++) {\n                var dictionary = values_1[_f];\n                for (var _g = 0, _h = dictionary._map; _g < _h.length; _g++) {\n                    var _j = _h[_g], key = _j[0], value = _j[1];\n                    if (typeof subDict._map[key] === 'undefined') {\n                        subDict._map[key] = value;\n                    }\n                }\n            }\n            if (subDict.size > 0) {\n                mergedDictionary._map[name_1] = subDict;\n            }\n        }\n        properties.clear();\n        return mergedDictionary.size > 0 ? mergedDictionary : _PdfDictionary.getEmpty(xref);\n    };\n    _PdfDictionary.prototype._initialize = function (xref) {\n        this._map = Object.create(null);\n        this.suppressEncryption = false;\n        this._updated = false;\n        this.isCatalog = false;\n        this._isNew = false;\n        if (xref) {\n            this._crossReference = xref;\n        }\n    };\n    _PdfDictionary.prototype._get = function (key1, key2, key3) {\n        var value = this._map[key1];\n        if (typeof value === 'undefined') {\n            value = this._map[key2];\n            if (typeof key2 !== 'undefined' && key2 !== null) {\n                value = this._map[key2];\n            }\n            else if (typeof key3 !== 'undefined' && key3 !== null) {\n                value = this._map[key3];\n            }\n        }\n        return value;\n    };\n    return _PdfDictionary;\n}());\nexport { _PdfDictionary };\nvar _PdfNull = /** @class */ (function () {\n    function _PdfNull(value) {\n        if (value === void 0) { value = []; }\n        this.value = value;\n    }\n    return _PdfNull;\n}());\nexport { _PdfNull };\nexport function _clearPrimitiveCaches() {\n    nameCache = Object.create(null);\n    cmdCache = Object.create(null);\n    refCache = Object.create(null);\n}\nexport function _isName(value, name) {\n    return value instanceof _PdfName && (typeof name === 'undefined' || value.name === name);\n}\nexport function _isCommand(value, command) {\n    return value instanceof _PdfCommand && (typeof command === 'undefined' || value.command === command);\n}\n","/**\n * Public Enum to define annotation flag types.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the annotation flag to enable print\n * annotation.flags = PdfAnnotationFlag.print;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationFlag;\n(function (PdfAnnotationFlag) {\n    /**\n     * Specifies the type of `default`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the type of `invisible`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"invisible\"] = 1] = \"invisible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"hidden\"] = 2] = \"hidden\";\n    /**\n     * Specifies the type of `print`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the type of `noZoom`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noZoom\"] = 8] = \"noZoom\";\n    /**\n     * Specifies the type of `noRotate`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noRotate\"] = 16] = \"noRotate\";\n    /**\n     * Specifies the type of `noView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noView\"] = 32] = \"noView\";\n    /**\n     * Specifies the type of `readOnly`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"readOnly\"] = 64] = \"readOnly\";\n    /**\n     * Specifies the type of `locked`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"locked\"] = 128] = \"locked\";\n    /**\n     * Specifies the type of `toggleNoView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"toggleNoView\"] = 256] = \"toggleNoView\";\n})(PdfAnnotationFlag || (PdfAnnotationFlag = {}));\n/**\n * Public Enum to define line ending style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n * // Sets the begin line end style as openArrow\n * annotation.beginLineStyle = PdfLineEndingStyle.openArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineEndingStyle;\n(function (PdfLineEndingStyle) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `openArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"openArrow\"] = 1] = \"openArrow\";\n    /**\n     * Specifies the type of `closedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"closedArrow\"] = 2] = \"closedArrow\";\n    /**\n     * Specifies the type of `rOpenArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rOpenArrow\"] = 3] = \"rOpenArrow\";\n    /**\n     * Specifies the type of `rClosedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rClosedArrow\"] = 4] = \"rClosedArrow\";\n    /**\n     * Specifies the type of `butt`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"butt\"] = 5] = \"butt\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"diamond\"] = 6] = \"diamond\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"circle\"] = 7] = \"circle\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"square\"] = 8] = \"square\";\n    /**\n     * Specifies the type of `slash`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"slash\"] = 9] = \"slash\";\n})(PdfLineEndingStyle || (PdfLineEndingStyle = {}));\n/**\n * Public Enum to define line indent.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Sets the line intent as lineArrow\n * annotation.lineIntent = PdfLineIntent.lineArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineIntent;\n(function (PdfLineIntent) {\n    /**\n     * Specifies the type of `lineArrow`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineArrow\"] = 0] = \"lineArrow\";\n    /**\n     * Specifies the type of `lineDimension`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineDimension\"] = 1] = \"lineDimension\";\n})(PdfLineIntent || (PdfLineIntent = {}));\n/**\n * Public Enum to define line caption type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the line caption type as inline\n * annotation.caption.type = PdfLineCaptionType.inline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCaptionType;\n(function (PdfLineCaptionType) {\n    /**\n     * Specifies the type of `inline`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"inline\"] = 0] = \"inline\";\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"top\"] = 1] = \"top\";\n})(PdfLineCaptionType || (PdfLineCaptionType = {}));\n/**\n * Public Enum to define border style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border style as underline\n * annotation.border.style = PdfBorderStyle.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderStyle;\n(function (PdfBorderStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dashed`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dashed\"] = 1] = \"dashed\";\n    /**\n     * Specifies the type of `beveled`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"beveled\"] = 2] = \"beveled\";\n    /**\n     * Specifies the type of `inset`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"inset\"] = 3] = \"inset\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dot\"] = 5] = \"dot\";\n})(PdfBorderStyle || (PdfBorderStyle = {}));\n/**\n * Public Enum to define border effect style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border effect as underline\n * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderEffectStyle;\n(function (PdfBorderEffectStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `cloudy`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"cloudy\"] = 1] = \"cloudy\";\n})(PdfBorderEffectStyle || (PdfBorderEffectStyle = {}));\n/**\n * Public Enum to define rotation of the interactive elements.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Gets the rotation of the field\n * let rotation: PdfRotationAngle = field.rotationAngle;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRotationAngle;\n(function (PdfRotationAngle) {\n    /**\n     * Specifies the type of `angle0`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle0\"] = 0] = \"angle0\";\n    /**\n     * Specifies the type of `angle90`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle90\"] = 1] = \"angle90\";\n    /**\n     * Specifies the type of `angle180`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle180\"] = 2] = \"angle180\";\n    /**\n     * Specifies the type of `angle270`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle270\"] = 3] = \"angle270\";\n})(PdfRotationAngle || (PdfRotationAngle = {}));\n/**\n * Public Enum to define cross reference type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Save the document with cross reference type as stream\n * document.save('output.pdf', PdfCrossReferenceType.stream);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCrossReferenceType;\n(function (PdfCrossReferenceType) {\n    /**\n     * Specifies the type of `table`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"table\"] = 0] = \"table\";\n    /**\n     * Specifies the type of `stream`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"stream\"] = 1] = \"stream\";\n})(PdfCrossReferenceType || (PdfCrossReferenceType = {}));\n/**\n * Public Enum to define highlight mode of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the highlight mode of text box field as outline\n * field.highlightMode = PdfHighlightMode.outline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfHighlightMode;\n(function (PdfHighlightMode) {\n    /**\n     * Specifies the type of `noHighlighting`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"noHighlighting\"] = 0] = \"noHighlighting\";\n    /**\n     * Specifies the type of `invert`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"invert\"] = 1] = \"invert\";\n    /**\n     * Specifies the type of `outline`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"outline\"] = 2] = \"outline\";\n    /**\n     * Specifies the type of `push`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"push\"] = 3] = \"push\";\n})(PdfHighlightMode || (PdfHighlightMode = {}));\n/**\n * Public Enum to define text alignment of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the text alignment of form field as center\n * field.textAlignment = PdfTextAlignment.center;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `left`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"left\"] = 0] = \"left\";\n    /**\n     * Specifies the type of `center`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"center\"] = 1] = \"center\";\n    /**\n     * Specifies the type of `right`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"right\"] = 2] = \"right\";\n    /**\n     * Specifies the type of `justify`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"justify\"] = 3] = \"justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * Public Enum to define visibility of form field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Sets the visibility of form field as hidden\n * field.visibility = PdfFormFieldVisibility.hidden;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldVisibility;\n(function (PdfFormFieldVisibility) {\n    /**\n     * Specifies the type of `visible`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visible\"] = 0] = \"visible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hidden\"] = 1] = \"hidden\";\n    /**\n     * Specifies the type of `visibleNotPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visibleNotPrintable\"] = 2] = \"visibleNotPrintable\";\n    /**\n     * Specifies the type of `hiddenPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hiddenPrintable\"] = 3] = \"hiddenPrintable\";\n})(PdfFormFieldVisibility || (PdfFormFieldVisibility = {}));\n/**\n * Public Enum to define measurement unit of line measurement annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) PdfLineAnnotation;\n * // Sets the measurement unit of line measurement annoation as centimeter\n * annotation.unit = PdfMeasurementUnit.centimeter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfMeasurementUnit;\n(function (PdfMeasurementUnit) {\n    /**\n     * Specifies the type of `inch`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"inch\"] = 0] = \"inch\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `point`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"centimeter\"] = 4] = \"centimeter\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(PdfMeasurementUnit || (PdfMeasurementUnit = {}));\n/**\n * Public Enum to define measurement type of circle annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfCircleAnnotation = page.annotations.at(0) PdfCircleAnnotation;\n * // Sets the measurement type of circle annotation as diameter\n * annotation.measureType = PdfCircleMeasurementType.diameter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCircleMeasurementType;\n(function (PdfCircleMeasurementType) {\n    /**\n     * Specifies the type of `diameter`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"diameter\"] = 0] = \"diameter\";\n    /**\n     * Specifies the type of `radius`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"radius\"] = 1] = \"radius\";\n})(PdfCircleMeasurementType || (PdfCircleMeasurementType = {}));\n/**\n * Public Enum to define icon type of rubber stamp annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) PdfRubberStampAnnotation;\n * // Sets the rubber stamp annotation icon type as confidential\n * annotation.icon = PdfRubberStampAnnotationIcon.confidential;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRubberStampAnnotationIcon;\n(function (PdfRubberStampAnnotationIcon) {\n    /**\n     * Specifies the type of `approved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"approved\"] = 0] = \"approved\";\n    /**\n     * Specifies the type of `asIs`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"asIs\"] = 1] = \"asIs\";\n    /**\n     * Specifies the type of `confidential`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"confidential\"] = 2] = \"confidential\";\n    /**\n     * Specifies the type of `departmental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"departmental\"] = 3] = \"departmental\";\n    /**\n     * Specifies the type of `draft`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"draft\"] = 4] = \"draft\";\n    /**\n     * Specifies the type of `experimental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"experimental\"] = 5] = \"experimental\";\n    /**\n     * Specifies the type of `expired`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"expired\"] = 6] = \"expired\";\n    /**\n     * Specifies the type of `final`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"final\"] = 7] = \"final\";\n    /**\n     * Specifies the type of `forComment`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forComment\"] = 8] = \"forComment\";\n    /**\n     * Specifies the type of `forPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forPublicRelease\"] = 9] = \"forPublicRelease\";\n    /**\n     * Specifies the type of `notApproved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notApproved\"] = 10] = \"notApproved\";\n    /**\n     * Specifies the type of `notForPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notForPublicRelease\"] = 11] = \"notForPublicRelease\";\n    /**\n     * Specifies the type of `sold`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"sold\"] = 12] = \"sold\";\n    /**\n     * Specifies the type of `topSecret`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"topSecret\"] = 13] = \"topSecret\";\n    /**\n     * Specifies the type of `completed`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"completed\"] = 14] = \"completed\";\n    /**\n     * Specifies the type of `void`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"void\"] = 15] = \"void\";\n    /**\n     * Specifies the type of `informationOnly`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"informationOnly\"] = 16] = \"informationOnly\";\n    /**\n     * Specifies the type of `preliminaryResults`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"preliminaryResults\"] = 17] = \"preliminaryResults\";\n})(PdfRubberStampAnnotationIcon || (PdfRubberStampAnnotationIcon = {}));\n/**\n * Public Enum to define check box style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCheckBoxStyle;\n(function (PdfCheckBoxStyle) {\n    /**\n     * Specifies the type of `check`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"check\"] = 0] = \"check\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"circle\"] = 1] = \"circle\";\n    /**\n     * Specifies the type of `cross`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"cross\"] = 2] = \"cross\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"diamond\"] = 3] = \"diamond\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"square\"] = 4] = \"square\";\n    /**\n     * Specifies the type of `star`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"star\"] = 5] = \"star\";\n})(PdfCheckBoxStyle || (PdfCheckBoxStyle = {}));\n/**\n * Public Enum to define type of text markup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) PdfTextMarkupAnnotation;\n * // Sets the type of the text markup annotation as underline\n * annotation.textMarkupType = PdfTextMarkupAnnotationType.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextMarkupAnnotationType;\n(function (PdfTextMarkupAnnotationType) {\n    /**\n     * Specifies the type of `highlight`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the type of `squiggly`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"squiggly\"] = 2] = \"squiggly\";\n    /**\n     * Specifies the type of `strikeOut`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"strikeOut\"] = 3] = \"strikeOut\";\n})(PdfTextMarkupAnnotationType || (PdfTextMarkupAnnotationType = {}));\n/**\n * Public Enum to define icon type of popup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the icon type of the popup annotation as comment\n * annotation.icon = PdfPopupIcon.comment;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPopupIcon;\n(function (PdfPopupIcon) {\n    /**\n     * Specifies the type of `note`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"note\"] = 0] = \"note\";\n    /**\n     * Specifies the type of `comment`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"comment\"] = 1] = \"comment\";\n    /**\n     * Specifies the type of `help`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"help\"] = 2] = \"help\";\n    /**\n     * Specifies the type of `insert`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"insert\"] = 3] = \"insert\";\n    /**\n     * Specifies the type of `key`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"key\"] = 4] = \"key\";\n    /**\n     * Specifies the type of `new paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"newParagraph\"] = 5] = \"newParagraph\";\n    /**\n     * Specifies the type of `paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"paragraph\"] = 6] = \"paragraph\";\n})(PdfPopupIcon || (PdfPopupIcon = {}));\n/**\n * Public Enum to define annotation state.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state of the popup annotation as accepted\n * annotation.state = PdfAnnotationState.accepted;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationState;\n(function (PdfAnnotationState) {\n    /**\n     * Specifies the default state of `none`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the state of `accepted`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"accepted\"] = 1] = \"accepted\";\n    /**\n     * Specifies the state of `rejected`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"rejected\"] = 2] = \"rejected\";\n    /**\n     * Specifies the state of `cancel`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"cancel\"] = 3] = \"cancel\";\n    /**\n     * Specifies the state of `completed`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"completed\"] = 4] = \"completed\";\n    /**\n     * Specifies the state of `marked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"marked\"] = 5] = \"marked\";\n    /**\n     * Specifies the state of `unmarked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unmarked\"] = 6] = \"unmarked\";\n    /**\n     * Specifies the state of `unknown`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unknown\"] = 7] = \"unknown\";\n})(PdfAnnotationState || (PdfAnnotationState = {}));\n/**\n * Public Enum to define annotation state model.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state model of the popup annotation as marked\n * annotation.stateModel = PdfAnnotationStateModel.marked;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationStateModel;\n(function (PdfAnnotationStateModel) {\n    /**\n     * Specifies the default model of `none`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the model of `marked`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"marked\"] = 1] = \"marked\";\n    /**\n     * Specifies the model of `review`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"review\"] = 2] = \"review\";\n})(PdfAnnotationStateModel || (PdfAnnotationStateModel = {}));\n/**\n * Public Enum to define icon type of attachment annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) PdfAttachmentAnnotation;\n * // Sets the icon type of attachment annotation to pushPin\n * annotation.icon = PdfAttachmentIcon.pushPin;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAttachmentIcon;\n(function (PdfAttachmentIcon) {\n    /**\n     * Specifies the default icon of `pushPin`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"pushPin\"] = 0] = \"pushPin\";\n    /**\n     * Specifies the icon of `tag`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"tag\"] = 1] = \"tag\";\n    /**\n     * Specifies the icon of `graph`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"graph\"] = 2] = \"graph\";\n    /**\n     * Specifies the icon of `paperClip`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"paperClip\"] = 3] = \"paperClip\";\n})(PdfAttachmentIcon || (PdfAttachmentIcon = {}));\n/**\n * Public Enum to define annotation intent of free text annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) PdfFreeTextAnnotation;\n * // Sets the free text annotation intent to freeTextCallout\n * annotation.annotationIntent = PdfAnnotationIntent.freeTextCallout;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationIntent;\n(function (PdfAnnotationIntent) {\n    /**\n     * Specifies the default intent of `none`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the intent of `freeTextCallout`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextCallout\"] = 1] = \"freeTextCallout\";\n    /**\n     * Specifies the intent of `freeTextTypeWriter`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextTypeWriter\"] = 2] = \"freeTextTypeWriter\";\n})(PdfAnnotationIntent || (PdfAnnotationIntent = {}));\n/**\n * Public Enum to define destination mode of document link annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) PdfDocumentLinkAnnotation;\n * // Sets the destination mode as fitToPage\n * annotation.destination.mode = PdfDestinationMode.fitToPage;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the default intent of `location`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"location\"] = 0] = \"location\";\n    /**\n     * Specifies the intent of `FitToPage`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitToPage\"] = 1] = \"fitToPage\";\n    /**\n     * Specifies the intent of `fitR`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitR\"] = 2] = \"fitR\";\n    /**\n     * Specifies the intent of `fitH`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitH\"] = 3] = \"fitH\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n/**\n * Public Enum to define export or import data format.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DataFormat;\n(function (DataFormat) {\n    /**\n     * Specifies the intent of `FDF`.\n     */\n    DataFormat[DataFormat[\"fdf\"] = 0] = \"fdf\";\n    /**\n     * Specifies the intent of `XFDF`.\n     */\n    DataFormat[DataFormat[\"xfdf\"] = 1] = \"xfdf\";\n    /**\n     * Specifies the intent of `JSON`.\n     */\n    DataFormat[DataFormat[\"json\"] = 2] = \"json\";\n    /**\n     * Specifies the intent of `XML`.\n     */\n    DataFormat[DataFormat[\"xml\"] = 3] = \"xml\";\n})(DataFormat || (DataFormat = {}));\n/**\n * Public enum to define form fields tab order.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Set a PDF form's tab order.\n * document.form.orderFormFields(PdfFormFieldsTabOrder.row);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldsTabOrder;\n(function (PdfFormFieldsTabOrder) {\n    /**\n     * Specifies that no tab order is defined.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the tab order is defined by the document's rows.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"row\"] = 1] = \"row\";\n    /**\n     * Specifies the tab order is defined by the document's columns.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"column\"] = 2] = \"column\";\n    /**\n     * Specifies the tab order is defined by the document's structure tree.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"structure\"] = 3] = \"structure\";\n    /**\n     * Specifies the tab order is defined manually.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"manual\"] = 4] = \"manual\";\n    /**\n     * Specifies the tab order is defined by the widget annotations in the document.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"widget\"] = 5] = \"widget\";\n})(PdfFormFieldsTabOrder || (PdfFormFieldsTabOrder = {}));\n/**\n * Enum for PDF loaded annotation type.\n */\nexport var _PdfAnnotationType;\n(function (_PdfAnnotationType) {\n    /**\n     * Specifies the intent of `highlight`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the intent of `underline`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the intent of `strikeOut`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"strikeOut\"] = 2] = \"strikeOut\";\n    /**\n     * Specifies the intent of `squiggly`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squiggly\"] = 3] = \"squiggly\";\n    /**\n     * Specifies the intent of `redactionAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"redactionAnnotation\"] = 4] = \"redactionAnnotation\";\n    /**\n     * Specifies the intent of `textAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textAnnotation\"] = 5] = \"textAnnotation\";\n    /**\n     * Specifies the intent of `linkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"linkAnnotation\"] = 6] = \"linkAnnotation\";\n    /**\n     * Specifies the intent of `documentLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"documentLinkAnnotation\"] = 7] = \"documentLinkAnnotation\";\n    /**\n     * Specifies the intent of `uriAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"uriAnnotation\"] = 8] = \"uriAnnotation\";\n    /**\n     * Specifies the intent of `fileLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileLinkAnnotation\"] = 9] = \"fileLinkAnnotation\";\n    /**\n     * Specifies the intent of `freeTextAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"freeTextAnnotation\"] = 10] = \"freeTextAnnotation\";\n    /**\n     * Specifies the intent of `lineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"lineAnnotation\"] = 11] = \"lineAnnotation\";\n    /**\n     * Specifies the intent of `circleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"circleAnnotation\"] = 12] = \"circleAnnotation\";\n    /**\n     * Specifies the intent of `ellipseAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"ellipseAnnotation\"] = 13] = \"ellipseAnnotation\";\n    /**\n     * Specifies the intent of `squareAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squareAnnotation\"] = 14] = \"squareAnnotation\";\n    /**\n     * Specifies the intent of `rectangleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rectangleAnnotation\"] = 15] = \"rectangleAnnotation\";\n    /**\n     * Specifies the intent of `polygonAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polygonAnnotation\"] = 16] = \"polygonAnnotation\";\n    /**\n     * Specifies the intent of `polyLineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polyLineAnnotation\"] = 17] = \"polyLineAnnotation\";\n    /**\n     * Specifies the intent of `textMarkupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textMarkupAnnotation\"] = 18] = \"textMarkupAnnotation\";\n    /**\n     * Specifies the intent of `caretAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"caretAnnotation\"] = 19] = \"caretAnnotation\";\n    /**\n     * Specifies the intent of `rubberStampAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rubberStampAnnotation\"] = 20] = \"rubberStampAnnotation\";\n    /**\n     * Specifies the intent of `popupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"popupAnnotation\"] = 21] = \"popupAnnotation\";\n    /**\n     * Specifies the intent of `fileAttachmentAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileAttachmentAnnotation\"] = 22] = \"fileAttachmentAnnotation\";\n    /**\n     * Specifies the intent of `soundAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"soundAnnotation\"] = 23] = \"soundAnnotation\";\n    /**\n     * Specifies the intent of `movieAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"movieAnnotation\"] = 24] = \"movieAnnotation\";\n    /**\n     * Specifies the intent of `screenAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"screenAnnotation\"] = 25] = \"screenAnnotation\";\n    /**\n     * Specifies the intent of `widgetAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"widgetAnnotation\"] = 26] = \"widgetAnnotation\";\n    /**\n     * Specifies the intent of `printerMarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"printerMarkAnnotation\"] = 27] = \"printerMarkAnnotation\";\n    /**\n     * Specifies the intent of `trapNetworkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"trapNetworkAnnotation\"] = 28] = \"trapNetworkAnnotation\";\n    /**\n     * Specifies the intent of `watermarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"watermarkAnnotation\"] = 29] = \"watermarkAnnotation\";\n    /**\n     * Specifies the intent of `textWebLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textWebLinkAnnotation\"] = 30] = \"textWebLinkAnnotation\";\n    /**\n     * Specifies the intent of `inkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"inkAnnotation\"] = 31] = \"inkAnnotation\";\n    /**\n     * Specifies the intent of `richMediaAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"richMediaAnnotation\"] = 32] = \"richMediaAnnotation\";\n    /**\n     * Specifies the intent of `angleMeasurementAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"angleMeasurementAnnotation\"] = 33] = \"angleMeasurementAnnotation\";\n    /**\n     * Specifies the intent of `null`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"null\"] = 34] = \"null\";\n})(_PdfAnnotationType || (_PdfAnnotationType = {}));\n/**\n * Enum for PDF graphics unit.\n */\nexport var _PdfGraphicsUnit;\n(function (_PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"centimeter\"] = 0] = \"centimeter\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `pixel`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pixel\"] = 2] = \"pixel\";\n    /**\n     * Specifies the type of `point`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `inch`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"inch\"] = 4] = \"inch\";\n    /**\n     * Specifies the type of `document`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"document\"] = 5] = \"document\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(_PdfGraphicsUnit || (_PdfGraphicsUnit = {}));\nexport var _FieldFlag;\n(function (_FieldFlag) {\n    _FieldFlag[_FieldFlag[\"default\"] = 0] = \"default\";\n    _FieldFlag[_FieldFlag[\"readOnly\"] = 1] = \"readOnly\";\n    _FieldFlag[_FieldFlag[\"required\"] = 2] = \"required\";\n    _FieldFlag[_FieldFlag[\"noExport\"] = 4] = \"noExport\";\n    _FieldFlag[_FieldFlag[\"multiLine\"] = 4096] = \"multiLine\";\n    _FieldFlag[_FieldFlag[\"password\"] = 8192] = \"password\";\n    _FieldFlag[_FieldFlag[\"fileSelect\"] = 1048576] = \"fileSelect\";\n    _FieldFlag[_FieldFlag[\"doNotSpellCheck\"] = 4194304] = \"doNotSpellCheck\";\n    _FieldFlag[_FieldFlag[\"doNotScroll\"] = 8388608] = \"doNotScroll\";\n    _FieldFlag[_FieldFlag[\"comb\"] = 16777216] = \"comb\";\n    _FieldFlag[_FieldFlag[\"richText\"] = 33554432] = \"richText\";\n    _FieldFlag[_FieldFlag[\"noToggleToOff\"] = 16384] = \"noToggleToOff\";\n    _FieldFlag[_FieldFlag[\"radio\"] = 32768] = \"radio\";\n    _FieldFlag[_FieldFlag[\"pushButton\"] = 65536] = \"pushButton\";\n    _FieldFlag[_FieldFlag[\"radiosInUnison\"] = 33554432] = \"radiosInUnison\";\n    _FieldFlag[_FieldFlag[\"combo\"] = 131072] = \"combo\";\n    _FieldFlag[_FieldFlag[\"edit\"] = 262144] = \"edit\";\n    _FieldFlag[_FieldFlag[\"sort\"] = 524288] = \"sort\";\n    _FieldFlag[_FieldFlag[\"multiSelect\"] = 2097152] = \"multiSelect\";\n    _FieldFlag[_FieldFlag[\"commitOnSelectChange\"] = 67108864] = \"commitOnSelectChange\";\n})(_FieldFlag || (_FieldFlag = {}));\nexport var _SignatureFlag;\n(function (_SignatureFlag) {\n    _SignatureFlag[_SignatureFlag[\"none\"] = 0] = \"none\";\n    _SignatureFlag[_SignatureFlag[\"signatureExists\"] = 1] = \"signatureExists\";\n    _SignatureFlag[_SignatureFlag[\"appendOnly\"] = 2] = \"appendOnly\";\n})(_SignatureFlag || (_SignatureFlag = {}));\nexport var _PdfCheckFieldState;\n(function (_PdfCheckFieldState) {\n    _PdfCheckFieldState[_PdfCheckFieldState[\"unchecked\"] = 0] = \"unchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"checked\"] = 1] = \"checked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedUnchecked\"] = 2] = \"pressedUnchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedChecked\"] = 3] = \"pressedChecked\";\n})(_PdfCheckFieldState || (_PdfCheckFieldState = {}));\n/**\n * Public enum to define the PDF document permission flags.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the permission flag\n * let permission: PdfPermissionFlag = document.permissions;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPermissionFlag;\n(function (PdfPermissionFlag) {\n    /**\n     * Specifies the default permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the edit content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editContent\"] = 8] = \"editContent\";\n    /**\n     * Specifies the copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"copyContent\"] = 16] = \"copyContent\";\n    /**\n     * Specifies the edit annotations permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editAnnotations\"] = 32] = \"editAnnotations\";\n    /**\n     * Specifies the fill fields permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fillFields\"] = 256] = \"fillFields\";\n    /**\n     * Specifies the accessibility copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"accessibilityCopyContent\"] = 512] = \"accessibilityCopyContent\";\n    /**\n     * Specifies the assemble document permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"assembleDocument\"] = 1024] = \"assembleDocument\";\n    /**\n     * Specifies the full quality print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fullQualityPrint\"] = 2048] = \"fullQualityPrint\";\n})(PdfPermissionFlag || (PdfPermissionFlag = {}));\n/**\n * Public enum to define the PDF page orientation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Get the page orientation\n * let orientation: PdfPageOrientation = page.orientation;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `portrait`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"portrait\"] = 0] = \"portrait\";\n    /**\n     * Specifies the type of `landscape`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"landscape\"] = 1] = \"landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * Public enum to define the text direction.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Load the font file\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(read('./resources/Fonts/', 'Arial.ttf'), 10);\n * // Add a string format\n * let format: PdfStringFormat = new PdfStringFormat();\n * format.alignment = PdfTextAlignment.right;\n * format.textDirection = PdfTextDirection.rightToLeft;\n * // Draw a text with right to left direction\n * page.graphics.drawString('Hello World مرحبا بالعالم', font, [10, 20, 300, 200], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfTextDirection[PdfTextDirection[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `leftToRight`.\n     */\n    PdfTextDirection[PdfTextDirection[\"leftToRight\"] = 1] = \"leftToRight\";\n    /**\n     * Specifies the type of `rightToLeft`.\n     */\n    PdfTextDirection[PdfTextDirection[\"rightToLeft\"] = 2] = \"rightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n/**\n * Public enum to define the subscript or superscript mode.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n * // Set a new paragraph indent\n * format.paragraphIndent = 20;\n * // Set the subscript or superscript mode\n * format.subSuperScript = PdfSubSuperScript.subScript;\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `superScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"superScript\"] = 1] = \"superScript\";\n    /**\n     * Specifies the type of `subScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"subScript\"] = 2] = \"subScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * Public enum to define blend mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the blend mode\n * graphics.setTransparency(0.5, 0.5, PdfBlendMode.hardLight);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `normal`.\n     */\n    PdfBlendMode[PdfBlendMode[\"normal\"] = 0] = \"normal\";\n    /**\n     * Specifies the type of `multiply`.\n     */\n    PdfBlendMode[PdfBlendMode[\"multiply\"] = 1] = \"multiply\";\n    /**\n     * Specifies the type of `screen`.\n     */\n    PdfBlendMode[PdfBlendMode[\"screen\"] = 2] = \"screen\";\n    /**\n     * Specifies the type of `overlay`.\n     */\n    PdfBlendMode[PdfBlendMode[\"overlay\"] = 3] = \"overlay\";\n    /**\n     * Specifies the type of `darken`.\n     */\n    PdfBlendMode[PdfBlendMode[\"darken\"] = 4] = \"darken\";\n    /**\n     * Specifies the type of `lighten`.\n     */\n    PdfBlendMode[PdfBlendMode[\"lighten\"] = 5] = \"lighten\";\n    /**\n     * Specifies the type of `colorDodge`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorDodge\"] = 6] = \"colorDodge\";\n    /**\n     * Specifies the type of `colorBurn`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorBurn\"] = 7] = \"colorBurn\";\n    /**\n     * Specifies the type of `hardLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hardLight\"] = 8] = \"hardLight\";\n    /**\n     * Specifies the type of `softLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"softLight\"] = 9] = \"softLight\";\n    /**\n     * Specifies the type of `difference`.\n     */\n    PdfBlendMode[PdfBlendMode[\"difference\"] = 10] = \"difference\";\n    /**\n     * Specifies the type of `exclusion`.\n     */\n    PdfBlendMode[PdfBlendMode[\"exclusion\"] = 11] = \"exclusion\";\n    /**\n     * Specifies the type of `hue`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hue\"] = 12] = \"hue\";\n    /**\n     * Specifies the type of `saturation`.\n     */\n    PdfBlendMode[PdfBlendMode[\"saturation\"] = 13] = \"saturation\";\n    /**\n     * Specifies the type of `color`.\n     */\n    PdfBlendMode[PdfBlendMode[\"color\"] = 14] = \"color\";\n    /**\n     * Specifies the type of `luminosity`.\n     */\n    PdfBlendMode[PdfBlendMode[\"luminosity\"] = 15] = \"luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * Public enum to define fill mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the fill mode\n * graphics.setClip([0, 0, 100, 100], PdfFillMode.winding);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `winding`.\n     */\n    PdfFillMode[PdfFillMode[\"winding\"] = 0] = \"winding\";\n    /**\n     * Specifies the type of `alternate`.\n     */\n    PdfFillMode[PdfFillMode[\"alternate\"] = 1] = \"alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * Public enum to define the dash style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfDashStyle[PdfDashStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dash`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dash\"] = 1] = \"dash\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dot\"] = 2] = \"dot\";\n    /**\n     * Specifies the type of `dashDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDot\"] = 3] = \"dashDot\";\n    /**\n     * Specifies the type of `dashDotDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDotDot\"] = 4] = \"dashDotDot\";\n    /**\n     * Specifies the type of `custom`.\n     */\n    PdfDashStyle[PdfDashStyle[\"custom\"] = 5] = \"custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * Public enum to define the line cap.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line cap\n * pen._lineCap = PdfLineCap.round;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `flat`.\n     */\n    PdfLineCap[PdfLineCap[\"flat\"] = 0] = \"flat\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineCap[PdfLineCap[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineCap[PdfLineCap[\"square\"] = 2] = \"square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * Public enum to define the line join.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line join\n * pen._lineJoin = PdfLineJoin.bevel;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `miter`.\n     */\n    PdfLineJoin[PdfLineJoin[\"miter\"] = 0] = \"miter\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineJoin[PdfLineJoin[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `bevel`.\n     */\n    PdfLineJoin[PdfLineJoin[\"bevel\"] = 2] = \"bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\nexport var _PdfWordWrapType;\n(function (_PdfWordWrapType) {\n    /**\n     * Specifies the type of `none`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `word`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"word\"] = 1] = \"word\";\n    /**\n     * Specifies the type of `wordOnly`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"wordOnly\"] = 2] = \"wordOnly\";\n    /**\n     * Specifies the type of `character`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"character\"] = 3] = \"character\";\n})(_PdfWordWrapType || (_PdfWordWrapType = {}));\nexport var _FontDescriptorFlag;\n(function (_FontDescriptorFlag) {\n    _FontDescriptorFlag[_FontDescriptorFlag[\"fixedPitch\"] = 1] = \"fixedPitch\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"serif\"] = 2] = \"serif\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"symbolic\"] = 4] = \"symbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"script\"] = 8] = \"script\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"nonSymbolic\"] = 32] = \"nonSymbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"italic\"] = 64] = \"italic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"forceBold\"] = 262144] = \"forceBold\";\n})(_FontDescriptorFlag || (_FontDescriptorFlag = {}));\nexport var _TrueTypeCmapFormat;\n(function (_TrueTypeCmapFormat) {\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"apple\"] = 0] = \"apple\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"microsoft\"] = 4] = \"microsoft\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"trimmed\"] = 6] = \"trimmed\";\n})(_TrueTypeCmapFormat || (_TrueTypeCmapFormat = {}));\nexport var _TrueTypeCmapEncoding;\n(function (_TrueTypeCmapEncoding) {\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unknown\"] = 0] = \"unknown\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"symbol\"] = 1] = \"symbol\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unicode\"] = 2] = \"unicode\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"macintosh\"] = 3] = \"macintosh\";\n})(_TrueTypeCmapEncoding || (_TrueTypeCmapEncoding = {}));\nexport var _TrueTypePlatformID;\n(function (_TrueTypePlatformID) {\n    _TrueTypePlatformID[_TrueTypePlatformID[\"appleUnicode\"] = 0] = \"appleUnicode\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"macintosh\"] = 1] = \"macintosh\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"iSO\"] = 2] = \"iSO\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"microsoft\"] = 3] = \"microsoft\";\n})(_TrueTypePlatformID || (_TrueTypePlatformID = {}));\nexport var _TrueTypeMicrosoftEncodingID;\n(function (_TrueTypeMicrosoftEncodingID) {\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"undefined\"] = 0] = \"undefined\";\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"unicode\"] = 1] = \"unicode\";\n})(_TrueTypeMicrosoftEncodingID || (_TrueTypeMicrosoftEncodingID = {}));\nexport var _TrueTypeMacintoshEncodingID;\n(function (_TrueTypeMacintoshEncodingID) {\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"roman\"] = 0] = \"roman\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"japanese\"] = 1] = \"japanese\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"chinese\"] = 2] = \"chinese\";\n})(_TrueTypeMacintoshEncodingID || (_TrueTypeMacintoshEncodingID = {}));\nexport var _TrueTypeCompositeGlyphFlag;\n(function (_TrueTypeCompositeGlyphFlag) {\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Reserved\"] = 16] = \"Reserved\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(_TrueTypeCompositeGlyphFlag || (_TrueTypeCompositeGlyphFlag = {}));\nexport var _ImageFormat;\n(function (_ImageFormat) {\n    /**\n     * Specifies the type of `unknown`.\n     */\n    _ImageFormat[_ImageFormat[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * Specifies the type of `bmp`.\n     */\n    _ImageFormat[_ImageFormat[\"bmp\"] = 1] = \"bmp\";\n    /**\n     * Specifies the type of `emf`.\n     */\n    _ImageFormat[_ImageFormat[\"emf\"] = 2] = \"emf\";\n    /**\n     * Specifies the type of `gif`.\n     */\n    _ImageFormat[_ImageFormat[\"gif\"] = 3] = \"gif\";\n    /**\n     * Specifies the type of `jpeg`.\n     */\n    _ImageFormat[_ImageFormat[\"jpeg\"] = 4] = \"jpeg\";\n    /**\n     * Specifies the type of `png`.\n     */\n    _ImageFormat[_ImageFormat[\"png\"] = 5] = \"png\";\n    /**\n     * Specifies the type of `wmf`.\n     */\n    _ImageFormat[_ImageFormat[\"wmf\"] = 6] = \"wmf\";\n    /**\n     * Specifies the type of `icon`.\n     */\n    _ImageFormat[_ImageFormat[\"icon\"] = 7] = \"icon\";\n})(_ImageFormat || (_ImageFormat = {}));\nexport var _TokenType;\n(function (_TokenType) {\n    _TokenType[_TokenType[\"none\"] = 0] = \"none\";\n    _TokenType[_TokenType[\"comment\"] = 1] = \"comment\";\n    _TokenType[_TokenType[\"number\"] = 2] = \"number\";\n    _TokenType[_TokenType[\"real\"] = 3] = \"real\";\n    _TokenType[_TokenType[\"string\"] = 4] = \"string\";\n    _TokenType[_TokenType[\"hexString\"] = 5] = \"hexString\";\n    _TokenType[_TokenType[\"unicodeString\"] = 6] = \"unicodeString\";\n    _TokenType[_TokenType[\"unicodeHexString\"] = 7] = \"unicodeHexString\";\n    _TokenType[_TokenType[\"name\"] = 8] = \"name\";\n    _TokenType[_TokenType[\"operator\"] = 9] = \"operator\";\n    _TokenType[_TokenType[\"beginArray\"] = 10] = \"beginArray\";\n    _TokenType[_TokenType[\"endArray\"] = 11] = \"endArray\";\n    _TokenType[_TokenType[\"eof\"] = 12] = \"eof\";\n})(_TokenType || (_TokenType = {}));\n/**\n * Public enum to define text style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets bookmark at the specified index\n * let bookmark : PdfBookMark = bookmarks.at(0) as PdfBookMark;\n * // Gets the textStyle\n * let textStyle: PdfTextStyle = bookmark.textStyle;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextStyle;\n(function (PdfTextStyle) {\n    /**\n     * Specifies the `regular` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the `italic` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"italic\"] = 1] = \"italic\";\n    /**\n     * Specifies the `bold` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"bold\"] = 2] = \"bold\";\n})(PdfTextStyle || (PdfTextStyle = {}));\nexport var _PdfColorSpace;\n(function (_PdfColorSpace) {\n    _PdfColorSpace[_PdfColorSpace[\"rgb\"] = 0] = \"rgb\";\n    _PdfColorSpace[_PdfColorSpace[\"cmyk\"] = 1] = \"cmyk\";\n    _PdfColorSpace[_PdfColorSpace[\"grayScale\"] = 2] = \"grayScale\";\n    _PdfColorSpace[_PdfColorSpace[\"indexed\"] = 3] = \"indexed\";\n})(_PdfColorSpace || (_PdfColorSpace = {}));\n","import { _escapePdfName } from './../utils';\nvar _PdfStreamWriter = /** @class */ (function () {\n    function _PdfStreamWriter(stream) {\n        this._newLine = '\\r\\n';\n        this._whiteSpace = ' ';\n        this._stream = stream;\n    }\n    _PdfStreamWriter.prototype._writeOperator = function (value) {\n        this._stream.write(value);\n        this._stream.write(this._newLine);\n    };\n    _PdfStreamWriter.prototype._saveGraphicsState = function () {\n        this._writeOperator('q');\n    };\n    _PdfStreamWriter.prototype._restoreGraphicsState = function () {\n        this._writeOperator('Q');\n    };\n    _PdfStreamWriter.prototype._writeComment = function (comment) {\n        if (comment && comment.length > 0) {\n            this._writeOperator('% ' + comment);\n        }\n    };\n    _PdfStreamWriter.prototype._setGraphicsState = function (value) {\n        this._stream.write(\"/\" + _escapePdfName(value.name) + \" \");\n        this._writeOperator('gs');\n    };\n    _PdfStreamWriter.prototype._modifyCtm = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('cm');\n    };\n    _PdfStreamWriter.prototype._modifyTM = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('Tm');\n    };\n    _PdfStreamWriter.prototype._setColorSpace = function (value, forStroking) {\n        this._stream.write(\"/\" + value + \" \");\n        this._writeOperator(forStroking ? 'CS' : 'cs');\n    };\n    _PdfStreamWriter.prototype._setColor = function (color, forStroking) {\n        this._stream.write((color[0] / 255).toFixed(3) + \" \" + (color[1] / 255).toFixed(3) + \" \" + (color[2] / 255).toFixed(3) + \" \");\n        this._writeOperator(forStroking ? 'RG' : 'rg');\n    };\n    _PdfStreamWriter.prototype._appendRectangle = function (x, y, width, height) {\n        this._writePoint(x, y);\n        this._writePoint(width, height);\n        this._writeOperator('re');\n    };\n    _PdfStreamWriter.prototype._writePoint = function (x, y) {\n        this._stream.write(x.toFixed(3) + \" \" + (-y).toFixed(3) + \" \");\n    };\n    _PdfStreamWriter.prototype._clipPath = function (isEvenOdd) {\n        this._stream.write((isEvenOdd ? 'W*' : 'W') + \" n\" + this._newLine);\n    };\n    _PdfStreamWriter.prototype._fillPath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'f*' : 'f');\n    };\n    _PdfStreamWriter.prototype._closeFillPath = function (isEvenOdd) {\n        this._writeOperator('h');\n        this._fillPath(isEvenOdd);\n    };\n    _PdfStreamWriter.prototype._strokePath = function () {\n        this._writeOperator('S');\n    };\n    _PdfStreamWriter.prototype._closeStrokePath = function () {\n        this._writeOperator('s');\n    };\n    _PdfStreamWriter.prototype._fillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'B*' : 'B');\n    };\n    _PdfStreamWriter.prototype._closeFillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'b*' : 'b');\n    };\n    _PdfStreamWriter.prototype._endPath = function () {\n        this._writeOperator('n');\n    };\n    _PdfStreamWriter.prototype._setFont = function (name, size) {\n        this._stream.write(\"/\" + name + \" \" + size.toFixed(3) + \" \");\n        this._writeOperator('Tf');\n    };\n    _PdfStreamWriter.prototype._setTextScaling = function (textScaling) {\n        this._stream.write(textScaling.toFixed(3) + \" \");\n        this._writeOperator('Tz');\n    };\n    _PdfStreamWriter.prototype._closePath = function () {\n        this._writeOperator('h');\n    };\n    _PdfStreamWriter.prototype._startNextLine = function (x, y) {\n        if (typeof x === 'undefined') {\n            this._writeOperator('T*');\n        }\n        else {\n            this._writePoint(x, y);\n            this._writeOperator('Td');\n        }\n    };\n    _PdfStreamWriter.prototype._showText = function (text) {\n        this._writeText(text);\n        this._writeOperator('Tj');\n    };\n    _PdfStreamWriter.prototype._write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += '\\r\\n';\n        this._writeOperator(builder);\n    };\n    _PdfStreamWriter.prototype._writeText = function (text) {\n        var result = '';\n        var data = this._escapeSymbols(text);\n        for (var i = 0; i < data.length; i++) {\n            result += String.fromCharCode(data[i]); // eslint-disable-line\n        }\n        result = '(' + result + ')';\n        this._stream.write(result);\n    };\n    _PdfStreamWriter.prototype._beginText = function () {\n        this._writeOperator('BT');\n    };\n    _PdfStreamWriter.prototype._endText = function () {\n        this._writeOperator('ET');\n    };\n    _PdfStreamWriter.prototype._beginPath = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('m');\n    };\n    _PdfStreamWriter.prototype._appendLineSegment = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('l');\n    };\n    _PdfStreamWriter.prototype._appendBezierSegment = function (x1, y1, x2, y2, x3, y3) {\n        this._writePoint(x1, y1);\n        this._writePoint(x2, y2);\n        this._writePoint(x3, y3);\n        this._writeOperator('c');\n    };\n    _PdfStreamWriter.prototype._setTextRenderingMode = function (renderingMode) {\n        this._stream.write(renderingMode.toString() + \" \");\n        this._writeOperator('Tr');\n    };\n    _PdfStreamWriter.prototype._setCharacterSpacing = function (charSpacing) {\n        this._stream.write(charSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tc');\n    };\n    _PdfStreamWriter.prototype._setWordSpacing = function (wordSpacing) {\n        this._stream.write(wordSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tw');\n    };\n    _PdfStreamWriter.prototype._showNextLineText = function (text, unicode) {\n        if (unicode !== null && typeof unicode !== 'undefined' && unicode) {\n            this._writeText(text);\n            this._writeOperator('\\'');\n        }\n        else {\n            this._stream.write(text);\n            this._writeOperator('\\'');\n        }\n    };\n    _PdfStreamWriter.prototype._setLineDashPattern = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString(); // eslint-disable-line\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' '; // eslint-disable-line\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' d';\n        this._writeOperator(tempPattern);\n    };\n    _PdfStreamWriter.prototype._setMiterLimit = function (miterLimit) {\n        this._stream.write(miterLimit.toFixed(3) + \" \");\n        this._writeOperator('M');\n    };\n    _PdfStreamWriter.prototype._setLineWidth = function (width) {\n        this._stream.write(width.toFixed(3) + \" \");\n        this._writeOperator('w');\n    };\n    _PdfStreamWriter.prototype._setLineCap = function (lineCapStyle) {\n        this._stream.write(lineCapStyle + \" \");\n        this._writeOperator('J');\n    };\n    _PdfStreamWriter.prototype._setLineJoin = function (lineJoinStyle) {\n        this._stream.write(lineJoinStyle + \" \");\n        this._writeOperator('j');\n    };\n    _PdfStreamWriter.prototype._executeObject = function (name) {\n        this._stream.write(\"/\" + name.name + \" \");\n        this._writeOperator('Do');\n    };\n    _PdfStreamWriter.prototype._beginMarkupSequence = function (name) {\n        this._stream.write(\"/\" + name + \" \");\n        this._writeOperator('BMC');\n    };\n    _PdfStreamWriter.prototype._endMarkupSequence = function () {\n        this._writeOperator('EMC');\n    };\n    _PdfStreamWriter.prototype._clear = function () {\n        this._stream._bytes = [];\n    };\n    _PdfStreamWriter.prototype._escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    return _PdfStreamWriter;\n}());\nexport { _PdfStreamWriter };\n","import { PdfSubSuperScript, _PdfWordWrapType } from './../enumerator';\n/**\n * Represents the text layout information.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        this.horizontalScalingFactor = 100.0;\n        this.rightToLeft = false;\n        this._wordWrapType = _PdfWordWrapType.word;\n        this.lineLimit = true;\n        if (typeof arg1 !== 'undefined') {\n            this.alignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.lineAlignment = arg2;\n        }\n        else {\n            this.lineAlignment = PdfVerticalAlignment.top;\n        }\n        this.characterSpacing = 0;\n        this.wordSpacing = 0;\n        this.lineSpacing = 0;\n        this.clipPath = false;\n        this.firstLineIndent = 0;\n        this._internalParagraphIndent = 0;\n        this.measureTrailingSpaces = false;\n        this.noClip = false;\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets the paragraph indent from string format.\n         *\n         * @returns {number} Returns the paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Get the default paragraph indent\n         * let paragraph: number = format.paragraphIndent;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._internalParagraphIndent;\n        },\n        /**\n         * Sets the paragraph indent to string format.\n         *\n         * @param {number} value paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets the subscript or superscript mode from string format.\n         *\n         * @returns {PdfSubSuperScript} Returns the subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Get the subscript or superscript mode\n         * let script: PdfSubSuperScript = format.subSuperScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pdfSubSuperScript === 'undefined' || this._pdfSubSuperScript === null) {\n                return PdfSubSuperScript.none;\n            }\n            else {\n                return this._pdfSubSuperScript;\n            }\n        },\n        /**\n         * Sets the subscript or superscript mode to string format.\n         *\n         * @param {PdfSubSuperScript} value subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Set the subscript or superscript mode\n         * format.subSuperScript = PdfSubSuperScript.subScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"_wordWrap\", {\n        get: function () {\n            return this._wordWrapType;\n        },\n        set: function (value) {\n            this._wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n/**\n * Public enum to define vertical alignment.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.top);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"top\"] = 0] = \"top\";\n    /**\n     * Specifies the type of `middle`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"middle\"] = 1] = \"middle\";\n    /**\n     * Specifies the type of `bottom`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"bottom\"] = 2] = \"bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfSubSuperScript } from './../enumerator';\nvar _PdfFontMetrics = /** @class */ (function () {\n    function _PdfFontMetrics() {\n        this._lineGap = 0;\n    }\n    _PdfFontMetrics.prototype._getAscent = function (format) {\n        return this._ascent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getDescent = function (format) {\n        return this._descent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getLineGap = function (format) {\n        return this._lineGap * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            clearTypeFontCollection.push(clearTypeFonts[Number.parseInt(index.toString(), 10)]);\n        }\n        if (this._getDescent(format) < 0) {\n            height = (this._getAscent(format) - this._getDescent(format) + this._getLineGap(format));\n        }\n        else {\n            height = (this._getAscent(format) + this._getDescent(format) + this._getLineGap(format));\n        }\n        return height;\n    };\n    _PdfFontMetrics.prototype._getSize = function (format) {\n        var size = this._size;\n        if (format !== null && typeof format !== 'undefined') {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.subScript:\n                    size /= this._subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.superScript:\n                    size /= this._superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    return _PdfFontMetrics;\n}());\nexport { _PdfFontMetrics };\nvar _WidthTable = /** @class */ (function () {\n    function _WidthTable() {\n    }\n    return _WidthTable;\n}());\nexport { _WidthTable };\nvar _StandardWidthTable = /** @class */ (function (_super) {\n    __extends(_StandardWidthTable, _super);\n    function _StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        _this.widths = widths;\n        return _this;\n    }\n    _StandardWidthTable.prototype._itemAt = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('The character is not supported by the font.');\n        }\n        return this.widths[Number.parseInt(index.toString(), 10)];\n    };\n    _StandardWidthTable.prototype._toArray = function () {\n        return this.widths;\n    };\n    return _StandardWidthTable;\n}(_WidthTable));\nexport { _StandardWidthTable };\nvar _CjkWidthTable = /** @class */ (function (_super) {\n    __extends(_CjkWidthTable, _super);\n    function _CjkWidthTable(defaultWidth) {\n        var _this = _super.call(this) || this;\n        _this._defaultWidth = defaultWidth;\n        _this.widths = [];\n        return _this;\n    }\n    _CjkWidthTable.prototype._itemAt = function (index) {\n        var width = this._defaultWidth;\n        this.widths.forEach(function (entry) {\n            if (index >= entry._from && index <= entry._to) {\n                width = entry._itemAt(index);\n            }\n        });\n        return width;\n    };\n    _CjkWidthTable.prototype._toArray = function () {\n        var array = [];\n        this.widths.forEach(function (width) {\n            width._appendToArray(array);\n        });\n        return array;\n    };\n    _CjkWidthTable.prototype._add = function (width) {\n        this.widths.push(width);\n    };\n    return _CjkWidthTable;\n}(_WidthTable));\nexport { _CjkWidthTable };\nvar _CjkWidth = /** @class */ (function () {\n    function _CjkWidth() {\n    }\n    return _CjkWidth;\n}());\nexport { _CjkWidth };\nvar _CjkSameWidth = /** @class */ (function (_super) {\n    __extends(_CjkSameWidth, _super);\n    function _CjkSameWidth(from, to, width) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widthTo = to;\n        _this._width = width;\n        return _this;\n    }\n    Object.defineProperty(_CjkSameWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkSameWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthTo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkSameWidth.prototype._itemAt = function (index) {\n        if (index < this._from || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._width;\n    };\n    _CjkSameWidth.prototype._appendToArray = function (array) {\n        array.push(this._from, this._to, this._width);\n    };\n    return _CjkSameWidth;\n}(_CjkWidth));\nexport { _CjkSameWidth };\nvar _CjkDifferentWidth = /** @class */ (function (_super) {\n    __extends(_CjkDifferentWidth, _super);\n    function _CjkDifferentWidth(from, widths) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widths = widths;\n        return _this;\n    }\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthFrom + this._widths.length - 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkDifferentWidth.prototype._itemAt = function (index) {\n        if (index < this._widthFrom || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._widths[Number.parseInt(index.toString(), 10)];\n    };\n    _CjkDifferentWidth.prototype._appendToArray = function (array) {\n        array.push(this._from);\n        array.forEach(function (entry) {\n            array.push(entry);\n        });\n    };\n    return _CjkDifferentWidth;\n}(_CjkWidth));\nexport { _CjkDifferentWidth };\n","import { _PdfWordWrapType } from './../enumerator';\nvar _PdfStringLayouter = /** @class */ (function () {\n    function _PdfStringLayouter() {\n    }\n    _PdfStringLayouter.prototype._layout = function (text, font, format, size) {\n        this._initialize(text, font, format, size);\n        var result = this._doLayout();\n        this._clear();\n        return result;\n    };\n    _PdfStringLayouter.prototype._initialize = function (text, font, format, size) {\n        this._font = font;\n        this._format = format;\n        this._size = size;\n        this._rectangle = [0, 0, size[0], size[1]];\n        this._reader = new _StringTokenizer(text);\n        this._pageHeight = 0;\n    };\n    _PdfStringLayouter.prototype._clear = function () {\n        this._font = null;\n        this._format = null;\n        this._reader._close();\n        this._reader = null;\n    };\n    _PdfStringLayouter.prototype._doLayout = function () {\n        var result = new _PdfStringLayoutResult();\n        var lineResult = new _PdfStringLayoutResult();\n        var lines = [];\n        var line = this._reader._peekLine();\n        var lineIndent = this._getLineIndent(true);\n        while (line !== null) {\n            lineResult = this._layoutLine(line, lineIndent);\n            if (typeof lineResult !== 'undefined' && lineResult !== null) {\n                var numSymbolsInserted = 0;\n                var returnedValue = this._copyToResult(result, lineResult, lines, numSymbolsInserted);\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.flag;\n                if (!success) {\n                    this._reader._read(numSymbolsInserted);\n                    break;\n                }\n            }\n            this._reader._readLine();\n            line = this._reader._peekLine();\n            lineIndent = this._getLineIndent(false);\n        }\n        this._finalizeResult(result, lines);\n        return result;\n    };\n    _PdfStringLayouter.prototype._getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this._format) {\n            lineIndent = (firstLine) ? this._format.firstLineIndent : this._format.paragraphIndent;\n            lineIndent = (this._size[0] > 0) ? Math.min(this._size[0], lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    _PdfStringLayouter.prototype._getLineHeight = function () {\n        var height = this._font._metrics._getHeight();\n        if (this._format && this._format.lineSpacing !== 0) {\n            height = this._format.lineSpacing + this._font._metrics._getHeight();\n        }\n        return height;\n    };\n    _PdfStringLayouter.prototype._getLineWidth = function (line) {\n        return this._font.getLineWidth(line, this._format);\n    };\n    _PdfStringLayouter.prototype._layoutLine = function (line, lineIndent) {\n        var lineResult = new _PdfStringLayoutResult();\n        lineResult._lineHeight = this._getLineHeight();\n        var lines = [];\n        var maxWidth = this._size[0];\n        var lineWidth = this._getLineWidth(line) + lineIndent;\n        var lineType = _LineType.firstParagraphLine;\n        var readWord = true;\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this._addToLineResult(lineResult, lines, line, lineWidth, _LineType.newLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new _StringTokenizer(line);\n            var word = reader._peekWord();\n            if (word.length !== reader._length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader._position += 1;\n                    word = reader._peekWord();\n                }\n            }\n            while (word !== null) {\n                curLine = curLine + word;\n                var curLineWidth = this._getLineWidth(curLine.toString()) + curIndent;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this._getWrapType() === _PdfWordWrapType.none) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        if (this._getWrapType() === _PdfWordWrapType.wordOnly) {\n                            lineResult._remainder = line.substring(reader._position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader._peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this._getLineWidth(word.toString()) > maxWidth) {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.character;\n                            }\n                        }\n                        else {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.word;\n                            }\n                        }\n                        if (this._getWrapType() !== _PdfWordWrapType.character || !readWord) {\n                            var stringValue = builder.toString();\n                            if (stringValue !== ' ') {\n                                this._addToLineResult(lineResult, lines, stringValue, lineWidth, _LineType.layoutBreak | lineType);\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = _LineType.none;\n                            word = (readWord) ? word : reader._peekWord();\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader._peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader._readWord();\n                    word = reader._peekWord();\n                }\n                else {\n                    reader._read();\n                    word = reader._peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                this._addToLineResult(lineResult, lines, builder.toString(), lineWidth, _LineType.newLineBreak | _LineType.lastParagraphLine);\n            }\n            reader._close();\n        }\n        lineResult._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        lines = [];\n        return lineResult;\n    };\n    _PdfStringLayouter.prototype._addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new _LineInfo();\n        info._text = line;\n        info._width = lineWidth;\n        info._lineType = breakType;\n        lines.push(info);\n        var size = lineResult._actualSize;\n        size[1] = size[1] + this._getLineHeight();\n        size[0] = Math.max(size[0], lineWidth);\n        lineResult._size = size;\n    };\n    _PdfStringLayouter.prototype._copyToResult = function (result, lineResult, lines, flag) {\n        var success = true;\n        var allowPartialLines = (this._format && !this._format.lineLimit);\n        var height = result._actualSize[1];\n        var maxHeight = this._size[1];\n        if ((this._pageHeight > 0) && (maxHeight + this._rectangle[1] > this._pageHeight)) {\n            maxHeight = this._rectangle[1] - this._pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        flag = 0;\n        if (lineResult._lines !== null) {\n            for (var i = 0, len = lineResult._lines.length; i < len; i++) {\n                var expHeight = height + lineResult._lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult._lines[i]; // eslint-disable-line\n                    flag += info._text.length;\n                    info = this._trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    var size = result._actualSize;\n                    size[0] = Math.max(size[0], info._width);\n                    result._size = size;\n                    height = expHeight;\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height !== result._size[1]) {\n            result._size = [result._actualSize[0], height];\n        }\n        return { success: success, flag: flag };\n    };\n    _PdfStringLayouter.prototype._finalizeResult = function (result, lines) {\n        result._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        result._lineHeight = this._getLineHeight();\n        if (!this._reader._end) {\n            result._remainder = this._reader._readToEnd();\n        }\n        lines = [];\n    };\n    _PdfStringLayouter.prototype._trimLine = function (info, firstLine) {\n        var line = info._text.trim();\n        var lineWidth = info._width;\n        if (line.length !== info._text.length) {\n            lineWidth = this._getLineWidth(line);\n            if ((info._lineType & _LineType.firstParagraphLine) > 0) {\n                lineWidth += this._getLineIndent(firstLine);\n            }\n        }\n        info._text = line;\n        info._width = lineWidth;\n        return info;\n    };\n    _PdfStringLayouter.prototype._getWrapType = function () {\n        var wrapType = (this._format !== null && typeof this._format !== 'undefined') ?\n            this._format._wordWrap : _PdfWordWrapType.word;\n        return wrapType;\n    };\n    return _PdfStringLayouter;\n}());\nexport { _PdfStringLayouter };\nvar _PdfStringLayoutResult = /** @class */ (function () {\n    function _PdfStringLayoutResult() {\n    }\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_actualSize\", {\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                this._size = [0, 0];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lines\", {\n        get: function () {\n            return this._layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_empty\", {\n        get: function () {\n            return (this._layoutLines === null || this._layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lineCount\", {\n        get: function () {\n            return (!this._empty) ? this._layoutLines.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _PdfStringLayoutResult;\n}());\nexport { _PdfStringLayoutResult };\nvar _LineInfo = /** @class */ (function () {\n    function _LineInfo() {\n    }\n    return _LineInfo;\n}());\nexport { _LineInfo };\nexport var _LineType;\n(function (_LineType) {\n    _LineType[_LineType[\"none\"] = 0] = \"none\";\n    _LineType[_LineType[\"newLineBreak\"] = 1] = \"newLineBreak\";\n    _LineType[_LineType[\"layoutBreak\"] = 2] = \"layoutBreak\";\n    _LineType[_LineType[\"firstParagraphLine\"] = 4] = \"firstParagraphLine\";\n    _LineType[_LineType[\"lastParagraphLine\"] = 8] = \"lastParagraphLine\";\n})(_LineType || (_LineType = {}));\nvar _StringTokenizer = /** @class */ (function () {\n    function _StringTokenizer(textValue) {\n        this._position = 0;\n        if (typeof textValue === 'undefined' || textValue === null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this._text = textValue;\n    }\n    Object.defineProperty(_StringTokenizer.prototype, \"_length\", {\n        get: function () {\n            return this._text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_StringTokenizer.prototype, \"_end\", {\n        get: function () {\n            return (this._position === this._text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _StringTokenizer.prototype._readLine = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekLine = function () {\n        var position = this._position;\n        var line = this._readLine();\n        this._position = position;\n        return line;\n    };\n    _StringTokenizer.prototype._readWord = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position - this._position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n                case ' ':\n                case '\\t':\n                    if (position === this._position) {\n                        position++;\n                    }\n                    text = this._text.substring(this._position, position);\n                    this._position = position;\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekWord = function () {\n        var position = this._position;\n        var word = this._readWord();\n        this._position = position;\n        return word;\n    };\n    _StringTokenizer.prototype._read = function (count) {\n        if (typeof count === 'undefined') {\n            var character = '0';\n            if (!this._end) {\n                character = this._text[this._position];\n                this._position++;\n            }\n            return character;\n        }\n        else {\n            var value = 0;\n            var builder = '';\n            while (!this._end && value < count) {\n                builder += this._read();\n                value++;\n            }\n            return builder;\n        }\n    };\n    _StringTokenizer.prototype._peek = function () {\n        return this._end ? '0' : this._text[this._position];\n    };\n    _StringTokenizer.prototype._close = function () {\n        this._text = null;\n    };\n    _StringTokenizer.prototype._readToEnd = function () {\n        var text;\n        if (this._position === 0) {\n            text = this._text;\n        }\n        else {\n            text = this._text.substring(this._position);\n        }\n        this._position = this._length;\n        return text;\n    };\n    _StringTokenizer._whiteSpace = ' ';\n    _StringTokenizer._tab = '\\t';\n    _StringTokenizer._spaces = [_StringTokenizer._whiteSpace, _StringTokenizer._tab];\n    return _StringTokenizer;\n}());\nexport { _StringTokenizer };\n","var _TrueTypeTableInfo = /** @class */ (function () {\n    function _TrueTypeTableInfo() {\n    }\n    Object.defineProperty(_TrueTypeTableInfo.prototype, \"_empty\", {\n        get: function () {\n            var empty = (this._offset === this._length && this._length === this._checksum && this._checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeTableInfo;\n}());\nexport { _TrueTypeTableInfo };\nvar _TrueTypeOS2Table = /** @class */ (function () {\n    function _TrueTypeOS2Table() {\n    }\n    return _TrueTypeOS2Table;\n}());\nexport { _TrueTypeOS2Table };\nvar _TrueTypePostTable = /** @class */ (function () {\n    function _TrueTypePostTable() {\n    }\n    return _TrueTypePostTable;\n}());\nexport { _TrueTypePostTable };\nvar _TrueTypeNameTable = /** @class */ (function () {\n    function _TrueTypeNameTable() {\n    }\n    return _TrueTypeNameTable;\n}());\nexport { _TrueTypeNameTable };\nvar _TrueTypeMicrosoftCmapSubTable = /** @class */ (function () {\n    function _TrueTypeMicrosoftCmapSubTable() {\n    }\n    return _TrueTypeMicrosoftCmapSubTable;\n}());\nexport { _TrueTypeMicrosoftCmapSubTable };\nvar _TrueTypeHorizontalHeaderTable = /** @class */ (function () {\n    function _TrueTypeHorizontalHeaderTable() {\n    }\n    return _TrueTypeHorizontalHeaderTable;\n}());\nexport { _TrueTypeHorizontalHeaderTable };\nvar _TrueTypeHeadTable = /** @class */ (function () {\n    function _TrueTypeHeadTable() {\n    }\n    return _TrueTypeHeadTable;\n}());\nexport { _TrueTypeHeadTable };\nvar _TrueTypeCmapTable = /** @class */ (function () {\n    function _TrueTypeCmapTable() {\n    }\n    return _TrueTypeCmapTable;\n}());\nexport { _TrueTypeCmapTable };\nvar _TrueTypeCmapSubTable = /** @class */ (function () {\n    function _TrueTypeCmapSubTable() {\n    }\n    return _TrueTypeCmapSubTable;\n}());\nexport { _TrueTypeCmapSubTable };\nvar _TrueTypeAppleCmapSubTable = /** @class */ (function () {\n    function _TrueTypeAppleCmapSubTable() {\n    }\n    return _TrueTypeAppleCmapSubTable;\n}());\nexport { _TrueTypeAppleCmapSubTable };\nvar _TrueTypeTrimmedCmapSubTable = /** @class */ (function () {\n    function _TrueTypeTrimmedCmapSubTable() {\n    }\n    return _TrueTypeTrimmedCmapSubTable;\n}());\nexport { _TrueTypeTrimmedCmapSubTable };\n","import { _TrueTypeTableInfo, _TrueTypeHorizontalHeaderTable, _TrueTypeNameTable, _TrueTypeHeadTable, _TrueTypeOS2Table, _TrueTypePostTable, _TrueTypeCmapSubTable, _TrueTypeCmapTable, _TrueTypeAppleCmapSubTable, _TrueTypeMicrosoftCmapSubTable, _TrueTypeTrimmedCmapSubTable } from './ttf-table';\nimport { Dictionary } from '../pdf-primitives';\nimport { _StringTokenizer } from './string-layouter';\nimport { _TrueTypeCmapFormat, _TrueTypeCmapEncoding, _TrueTypePlatformID, _TrueTypeMicrosoftEncodingID, _TrueTypeMacintoshEncodingID, _TrueTypeCompositeGlyphFlag } from '../../core/enumerator';\nvar _TrueTypeReader = /** @class */ (function () {\n    function _TrueTypeReader(fontData) {\n        this._int32Size = 4;\n        this._isFont = false;\n        this._isMacTtf = false;\n        this._isMacFont = false;\n        this._missedGlyphs = 0;\n        this._tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this._entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this._fontData = fontData;\n        this._initialize();\n    }\n    Object.defineProperty(_TrueTypeReader.prototype, \"macintosh\", {\n        get: function () {\n            if (this._macintoshDictionary === null || typeof this._macintoshDictionary === 'undefined') {\n                this._macintoshDictionary = new Dictionary();\n            }\n            return this._macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoft\", {\n        get: function () {\n            if (this._microsoftDictionary === null || typeof this._microsoftDictionary === 'undefined') {\n                this._microsoftDictionary = new Dictionary();\n            }\n            return this._microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_macintoshGlyphs\", {\n        get: function () {\n            if (this._internalMacintoshGlyphs === null || typeof this._internalMacintoshGlyphs === 'undefined') {\n                this._internalMacintoshGlyphs = new Dictionary();\n            }\n            return this._internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoftGlyphs\", {\n        get: function () {\n            if (this._internalMicrosoftGlyphs === null || typeof this._internalMicrosoftGlyphs === 'undefined') {\n                this._internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this._internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _TrueTypeReader.prototype._initialize = function () {\n        if (typeof this._metrics === 'undefined' || this._metrics === null) {\n            this._metrics = new _TrueTypeMetrics();\n        }\n        this._readFontDictionary();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._initializeFontName(nameTable);\n        this._metrics._macStyle = headTable._macStyle;\n    };\n    _TrueTypeReader.prototype._readFontDictionary = function () {\n        this._offset = 0;\n        this._check();\n        var table = this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        if (typeof this._tableDirectory === 'undefined' || this._tableDirectory === null) {\n            this._tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < table; ++i) {\n            var table_1 = new _TrueTypeTableInfo();\n            var tableKey = this._readString(this._int32Size);\n            table_1._checksum = this._readInt32(this._offset);\n            table_1._offset = this._readInt32(this._offset);\n            table_1._length = this._readInt32(this._offset);\n            this._tableDirectory.setValue(tableKey, table_1);\n        }\n        this._lowestPosition = this._offset;\n        if (!this._isFont) {\n            this._fixOffsets();\n        }\n    };\n    _TrueTypeReader.prototype._fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        var tableKeys = this._tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n            var offset = value._offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this._lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this._lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n                value._offset -= shift;\n                table.setValue(tableKeys[Number.parseInt(i.toString(), 10)], value);\n            }\n            this._tableDirectory = table;\n        }\n    };\n    _TrueTypeReader.prototype._check = function () {\n        var version = this._readInt32(this._offset);\n        this._isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this._isFont = true;\n            this._offset = 0;\n            var fontTag = this._readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset += 4;\n            var ttcIdentificationNumber = this._readInt32(this._offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset = this._readInt32(this._offset);\n            version = this._readInt32(this._offset);\n        }\n        return version;\n    };\n    _TrueTypeReader.prototype._readNameTable = function () {\n        var tableInfo = this._getTable('name');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeNameTable();\n        table._formatSelector = this._readUInt16(this._offset);\n        table._recordsCount = this._readUInt16(this._offset);\n        table._offset = this._readUInt16(this._offset);\n        table._nameRecords = [];\n        var recordSize = 12;\n        var position = this._offset;\n        for (var i = 0; i < table._recordsCount; i++) {\n            this._offset = position;\n            var record = new _TrueTypeNameRecord();\n            record._platformID = this._readUInt16(this._offset);\n            record._encodingID = this._readUInt16(this._offset);\n            record._languageID = this._readUInt16(this._offset);\n            record._nameID = this._readUInt16(this._offset);\n            record._length = this._readUInt16(this._offset);\n            record._offset = this._readUInt16(this._offset);\n            this._offset = tableInfo._offset + table._offset + record._offset;\n            var unicode = (record._platformID === 0 || record._platformID === 3);\n            record._name = this._readString(record._length, unicode);\n            table._nameRecords[Number.parseInt(i.toString(), 10)] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readHeadTable = function () {\n        var tableInfo = this._getTable('head');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHeadTable();\n        table._version = this._readFixed(this._offset);\n        table._fontRevision = this._readFixed(this._offset);\n        table._checkSumAdjustment = this._readUInt32(this._offset);\n        table._magicNumber = this._readUInt32(this._offset);\n        table._flags = this._readUInt16(this._offset);\n        table._unitsPerEm = this._readUInt16(this._offset);\n        table._created = this._readInt64(this._offset);\n        table._modified = this._readInt64(this._offset);\n        table._xMin = this._readInt16(this._offset);\n        table._yMin = this._readInt16(this._offset);\n        table._xMax = this._readInt16(this._offset);\n        table._yMax = this._readInt16(this._offset);\n        table._macStyle = this._readUInt16(this._offset);\n        table._lowestReadableSize = this._readUInt16(this._offset);\n        table._fontDirectionHint = this._readInt16(this._offset);\n        table._indexToLocalFormat = this._readInt16(this._offset);\n        table._glyphDataFormat = this._readInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readHorizontalHeaderTable = function () {\n        var tableInfo = this._getTable('hhea');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHorizontalHeaderTable();\n        table._version = this._readFixed(this._offset);\n        table._ascender = this._readInt16(this._offset);\n        table._descender = this._readInt16(this._offset);\n        table._lineGap = this._readInt16(this._offset);\n        table._advanceWidthMax = this._readUInt16(this._offset);\n        table._minLeftSideBearing = this._readInt16(this._offset);\n        table._minRightSideBearing = this._readInt16(this._offset);\n        table._xMaxExtent = this._readInt16(this._offset);\n        table._caretSlopeRise = this._readInt16(this._offset);\n        table._caretSlopeRun = this._readInt16(this._offset);\n        this._offset += 10;\n        table._metricDataFormat = this._readInt16(this._offset);\n        table._numberOfHMetrics = this._readUInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readOS2Table = function () {\n        var tableInfo = this._getTable('OS/2');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeOS2Table();\n        table._version = this._readUInt16(this._offset);\n        table._xAvgCharWidth = this._readInt16(this._offset);\n        table._usWeightClass = this._readUInt16(this._offset);\n        table._usWidthClass = this._readUInt16(this._offset);\n        table._fsType = this._readInt16(this._offset);\n        table._ySubscriptXSize = this._readInt16(this._offset);\n        table._ySubscriptYSize = this._readInt16(this._offset);\n        table._ySubscriptXOffset = this._readInt16(this._offset);\n        table._ySubscriptYOffset = this._readInt16(this._offset);\n        table._ySuperscriptXSize = this._readInt16(this._offset);\n        table._ySuperscriptYSize = this._readInt16(this._offset);\n        table._ySuperscriptXOffset = this._readInt16(this._offset);\n        table._ySuperscriptYOffset = this._readInt16(this._offset);\n        table._yStrikeoutSize = this._readInt16(this._offset);\n        table._yStrikeoutPosition = this._readInt16(this._offset);\n        table._sFamilyClass = this._readInt16(this._offset);\n        table._panose = this._readBytes(10);\n        table._ulUnicodeRange1 = this._readUInt32(this._offset);\n        table._ulUnicodeRange2 = this._readUInt32(this._offset);\n        table._ulUnicodeRange3 = this._readUInt32(this._offset);\n        table._ulUnicodeRange4 = this._readUInt32(this._offset);\n        table._vendorIdentifier = this._readBytes(4);\n        table._fsSelection = this._readUInt16(this._offset);\n        table._usFirstCharIndex = this._readUInt16(this._offset);\n        table._usLastCharIndex = this._readUInt16(this._offset);\n        table._sTypoAscender = this._readInt16(this._offset);\n        table._sTypoDescender = this._readInt16(this._offset);\n        table._sTypoLineGap = this._readInt16(this._offset);\n        table._usWinAscent = this._readUInt16(this._offset);\n        table._usWinDescent = this._readUInt16(this._offset);\n        table._ulCodePageRange1 = this._readUInt32(this._offset);\n        table._ulCodePageRange2 = this._readUInt32(this._offset);\n        if (table._version > 1) {\n            table._sxHeight = this._readInt16(this._offset);\n            table._sCapHeight = this._readInt16(this._offset);\n            table._usDefaultChar = this._readUInt16(this._offset);\n            table._usBreakChar = this._readUInt16(this._offset);\n            table._usMaxContext = this._readUInt16(this._offset);\n        }\n        else {\n            table._sxHeight = 0;\n            table._sCapHeight = 0;\n            table._usDefaultChar = 0;\n            table._usBreakChar = 0;\n            table._usMaxContext = 0;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readPostTable = function () {\n        var tableInfo = this._getTable('post');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypePostTable();\n        table._formatType = this._readFixed(this._offset);\n        table._italicAngle = this._readFixed(this._offset);\n        table._underlinePosition = this._readInt16(this._offset);\n        table._underlineThickness = this._readInt16(this._offset);\n        table._isFixedPitch = this._readUInt32(this._offset);\n        table._minType42 = this._readUInt32(this._offset);\n        table._maxType42 = this._readUInt32(this._offset);\n        table._minType1 = this._readUInt32(this._offset);\n        table._maxType1 = this._readUInt32(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this._getTable('hmtx');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new _TrueTypeLongHorMetric();\n            glyph._advanceWidth = this._readUInt16(this._offset);\n            glyph._lsb = this._readInt16(this._offset);\n            var glyphWidth = glyph._advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    _TrueTypeReader.prototype._readCmapTable = function () {\n        var tableInfo = this._getTable('cmap');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeCmapTable();\n        table._version = this._readUInt16(this._offset);\n        table._tablesCount = this._readUInt16(this._offset);\n        var position = this._offset;\n        var subTables = [];\n        for (var i = 0; i < table._tablesCount; i++) {\n            this._offset = position;\n            var subTable = new _TrueTypeCmapSubTable();\n            subTable._platformID = this._readUInt16(this._offset);\n            subTable._encodingID = this._readUInt16(this._offset);\n            subTable._offset = this._readUInt32(this._offset);\n            position = this._offset;\n            this._readCmapSubTable(subTable);\n            subTables[Number.parseInt(i.toString(), 10)] = subTable;\n        }\n        return subTables;\n    };\n    _TrueTypeReader.prototype._readCmapSubTable = function (subTable) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var format = this._readUInt16(this._offset);\n        var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n        if (encoding !== _TrueTypeCmapEncoding.unknown) {\n            switch (format) {\n                case _TrueTypeCmapFormat.apple:\n                    this._readAppleCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.microsoft:\n                    this._readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.trimmed:\n                    this._readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeAppleCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        if (this._maxMacIndex === null || typeof this._maxMacIndex === 'undefined') {\n            this._maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readByte(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var collection = (encoding === _TrueTypeCmapEncoding.unicode) ? this._microsoft\n            : this.macintosh;\n        var table = new _TrueTypeMicrosoftCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._segCountX2 = this._readUInt16(this._offset);\n        table._searchRange = this._readUInt16(this._offset);\n        table._entrySelector = this._readUInt16(this._offset);\n        table._rangeShift = this._readUInt16(this._offset);\n        var segCount = table._segCountX2 / 2;\n        table._endCount = this._readUShortArray(segCount);\n        table._reservedPad = this._readUInt16(this._offset);\n        table._startCount = this._readUShortArray(segCount);\n        table._idDelta = this._readUShortArray(segCount);\n        table._idRangeOffset = this._readUShortArray(segCount);\n        var length = (table._length / 2 - 8) - (segCount * 4);\n        table._glyphID = this._readUShortArray(length);\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table._startCount[Number.parseInt(j.toString(), 10)]; k <=\n                table._endCount[Number.parseInt(j.toString(), 10)] && k !== 65535; k++) {\n                if (table._idRangeOffset[Number.parseInt(j.toString(), 10)] === 0) {\n                    codeOffset = (k + table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                else {\n                    index = j + table._idRangeOffset[Number.parseInt(j.toString(), 10)] / 2 - segCount +\n                        k - table._startCount[Number.parseInt(j.toString(), 10)];\n                    if (index >= table._glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table._glyphID[Number.parseInt(index.toString(), 10)] +\n                        table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                var glyph = new _TrueTypeGlyph();\n                glyph._index = codeOffset;\n                glyph._width = this._getWidth(glyph._index);\n                var id = (encoding === _TrueTypeCmapEncoding.symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph._charCode = id;\n                collection.setValue(id, glyph);\n                this._addGlyph(glyph, encoding);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeTrimmedCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._firstCode = this._readUInt16(this._offset);\n        table._entryCount = this._readUInt16(this._offset);\n        for (var i = 0; i < table._entryCount; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readUInt16(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i + table._firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable._recordsCount; i++) {\n            var record = nameTable._nameRecords[Number.parseInt(i.toString(), 10)];\n            if (record._nameID === 1) {\n                this._metrics._fontFamily = record._name;\n            }\n            else if (record._nameID === 6) {\n                this._metrics._postScriptName = record._name;\n            }\n            if (this._metrics._fontFamily !== null && this._metrics._fontFamily !== 'undefined' &&\n                this._metrics._postScriptName !== null && this._metrics._postScriptName !== 'undefined') {\n                break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._getTable = function (name) {\n        var table = new _TrueTypeTableInfo();\n        var obj;\n        if (this._tableDirectory.containsKey(name)) {\n            obj = this._tableDirectory.getValue(name);\n        }\n        if (obj !== null && typeof obj !== 'undefined') {\n            table = obj;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this._width.length) ? glyphCode : this._width.length - 1;\n        return this._width[Number.parseInt(glyphCode.toString(), 10)];\n    };\n    _TrueTypeReader.prototype._getCmapEncoding = function (platformID, encodingID) {\n        var format = _TrueTypeCmapEncoding.unknown;\n        if (platformID === _TrueTypePlatformID.microsoft &&\n            encodingID === _TrueTypeMicrosoftEncodingID.undefined) {\n            format = _TrueTypeCmapEncoding.symbol;\n        }\n        else if (platformID === _TrueTypePlatformID.microsoft\n            && encodingID === _TrueTypeMicrosoftEncodingID.unicode) {\n            format = _TrueTypeCmapEncoding.unicode;\n        }\n        else if (platformID === _TrueTypePlatformID.macintosh\n            && encodingID === _TrueTypeMacintoshEncodingID.roman) {\n            format = _TrueTypeCmapEncoding.macintosh;\n        }\n        return format;\n    };\n    _TrueTypeReader.prototype._addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case _TrueTypeCmapEncoding.unicode:\n                collection = this._microsoftGlyphs;\n                break;\n            case _TrueTypeCmapEncoding.macintosh:\n            case _TrueTypeCmapEncoding.symbol:\n                collection = this._macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph._index, glyph);\n    };\n    _TrueTypeReader.prototype._initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        this._initializeFontName(nameTable);\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[Number.parseInt(i.toString(), 10)];\n            var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n            if (encoding === _TrueTypeCmapEncoding.symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this._metrics._isSymbol = bSymbol;\n        this._metrics._macStyle = headTable._macStyle;\n        this._metrics._isFixedPitch = (postTable._isFixedPitch !== 0);\n        this._metrics._italicAngle = postTable._italicAngle;\n        var factor = 1000 / headTable._unitsPerEm;\n        this._metrics._winAscent = os2Table._sTypoAscender * factor;\n        this._metrics._macAscent = horizontalHeadTable._ascender * factor;\n        this._metrics._capHeight = (os2Table._sCapHeight !== 0) ? os2Table._sCapHeight : 0.7 * headTable._unitsPerEm * factor;\n        this._metrics._winDescent = os2Table._sTypoDescender * factor;\n        this._metrics._macDescent = horizontalHeadTable._descender * factor;\n        this._metrics._leading = (os2Table._sTypoAscender - os2Table._sTypoDescender + os2Table._sTypoLineGap) * factor;\n        this._metrics._lineGap = Math.ceil(horizontalHeadTable._lineGap * factor);\n        var left = headTable._xMin * factor;\n        var top = Math.ceil(this._metrics._macAscent + this._metrics._lineGap);\n        var right = headTable._xMax * factor;\n        var bottom = this._metrics._macDescent;\n        this._metrics._fontBox = [left, top, right, bottom];\n        this._metrics._stemV = 80;\n        this._metrics._widthTable = this._updateWidth();\n        this._metrics._contains = this._tableDirectory.containsKey('CFF');\n        this._metrics._subScriptSizeFactor = headTable._unitsPerEm / os2Table._ySubscriptYSize;\n        this._metrics._superscriptSizeFactor = headTable._unitsPerEm / os2Table._ySuperscriptYSize;\n    };\n    _TrueTypeReader.prototype._updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this._metrics._isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this._getGlyph(String.fromCharCode(Number.parseInt(i.toString(), 10)));\n                bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = Number.parseInt(i.toString(), 10);\n                var text = this._getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    bytes[Number.parseInt(i.toString(), 10)] = glyphInfo._width;\n                }\n                else {\n                    glyphInfo = this._getGlyph(space);\n                    bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n                }\n            }\n        }\n        return bytes;\n    };\n    _TrueTypeReader.prototype._getDefaultGlyph = function () {\n        var glyph = this._getGlyph(_StringTokenizer._whiteSpace);\n        return glyph;\n    };\n    _TrueTypeReader.prototype._getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._setOffset = function (offset) {\n        this._offset = offset;\n    };\n    _TrueTypeReader.prototype._readFontProgram = function (chars) {\n        var glyphChars = this._getGlyphChars(chars);\n        var locaTable = this._readLocaTable(this._bIsLocaShort);\n        if (glyphChars && glyphChars._size() < chars._size()) {\n            this._missedGlyphs = chars._size() - glyphChars._size();\n        }\n        this._updateGlyphChars(glyphChars, locaTable);\n        var result1 = this._generateGlyphTable(glyphChars, locaTable, null, null);\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this._updateLocaTable(newLocaTable, this._bIsLocaShort);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this._getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    _TrueTypeReader.prototype._generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        newLocaTable = [];\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[Number.parseInt(i.toString(), 10)];\n            if (locaTable._offsets.length > 0) {\n                glyphSize += locaTable._offsets[glyphIndex + 1] - locaTable._offsets[Number.parseInt(glyphIndex.toString(), 10)];\n            }\n        }\n        var glyphSizeAligned = this._align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this._getTable('glyf');\n        for (var i = 0; i < locaTable._offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[Number.parseInt(nextGlyphIndex.toString(), 10)] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[Number.parseInt(i.toString(), 10)] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable._offsets[Number.parseInt(i.toString(), 10)];\n                var oldNextGlyphOffset = locaTable._offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this._offset = table._offset + oldGlyphOffset;\n                    var result = this._read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    _TrueTypeReader.prototype._readLocaTable = function (bShort) {\n        var tableInfo = this._getTable('loca');\n        this._offset = tableInfo._offset;\n        var table = new _TrueTypeLocaTable();\n        var buffer = [];\n        if (bShort) {\n            var len = tableInfo._length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo._length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt32(this._offset);\n            }\n        }\n        table._offsets = buffer;\n        return table;\n    };\n    _TrueTypeReader.prototype._updateGlyphChars = function (glyphChars, locaTable) {\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[Number.parseInt(i.toString(), 10)], glyphChars.getValue(glyphCharKeys[Number.parseInt(i.toString(), 10)]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[Number.parseInt(i.toString(), 10)];\n            this._processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    _TrueTypeReader.prototype._processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        if (glyph < locaTable._offsets.length - 1) {\n            var glyphOffset = locaTable._offsets[Number.parseInt(glyph.toString(), 10)];\n            if (glyphOffset !== locaTable._offsets[glyph + 1]) {\n                var tableInfo = this._getTable('glyf');\n                this._offset = tableInfo._offset + glyphOffset;\n                var glyphHeader = new _TrueTypeGlyphHeader();\n                glyphHeader.numberOfContours = this._readInt16(this._offset);\n                glyphHeader.xMin = this._readInt16(this._offset);\n                glyphHeader.yMin = this._readInt16(this._offset);\n                glyphHeader.xMax = this._readInt16(this._offset);\n                glyphHeader.yMax = this._readInt16(this._offset);\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this._readUInt16(this._offset);\n                        var glyphIndex = this._readUInt16(this._offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & _TrueTypeCompositeGlyphFlag.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & _TrueTypeCompositeGlyphFlag.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this._offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._updateLocaTable = function (newLocaTable, bLocaIsShort) {\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this._align(size);\n        var writer = new _BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[Number.parseInt(i.toString(), 10)];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer._writeShort(value);\n            }\n            else {\n                writer._writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer._data, newLocaSize: size };\n    };\n    _TrueTypeReader.prototype._align = function (value) {\n        return (value + 3) & (~3);\n    };\n    _TrueTypeReader.prototype._getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        var result = this._getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var table = result.table;\n        var writer = new _BigEndianWriter(fontProgramLength);\n        writer._writeInt(0x10000);\n        writer._writeShort(table);\n        var entrySelector = this._entrySelectors[Number.parseInt(table.toString(), 10)];\n        writer._writeShort((1 << (entrySelector & 31)) * 16);\n        writer._writeShort(entrySelector);\n        writer._writeShort((table - (1 << (entrySelector & 31))) * 16);\n        this._writeCheckSums(writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        this._writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer._data;\n    };\n    _TrueTypeReader.prototype._getFontProgramLength = function (newLocaTableOut, newGlyphTable, table) {\n        var fontProgramLength = 0;\n        if (newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' && newLocaTableOut.length > 0 &&\n            newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            table = 2;\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                if (tableName !== 'glyf' && tableName !== 'loca') {\n                    var tableInfo = this._getTable(tableName);\n                    if (!tableInfo._empty) {\n                        ++table;\n                        fontProgramLength += this._align(tableInfo._length);\n                    }\n                }\n            }\n            fontProgramLength += newLocaTableOut.length;\n            fontProgramLength += newGlyphTable.length;\n            var usedTablesSize = table * 16 + (3 * 4);\n            fontProgramLength += usedTablesSize;\n        }\n        return { fontProgramLength: fontProgramLength, table: table };\n    };\n    _TrueTypeReader.prototype._getGlyphChars = function (chars) {\n        var dictionary = new Dictionary();\n        if (chars !== null && typeof chars !== 'undefined') {\n            var charKeys = chars.keys();\n            for (var i = 0; i < charKeys.length; i++) {\n                var ch = charKeys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._getGlyph(ch);\n                if (!glyph._empty) {\n                    dictionary.setValue(glyph._index, ch.charCodeAt(0));\n                }\n            }\n        }\n        return dictionary;\n    };\n    _TrueTypeReader.prototype._writeCheckSums = function (writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' &&\n            newLocaTableOut.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            var usedTablesSize = table * 16 + (3 * 4);\n            var nextTableSize = 0;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                writer._writeString(tableName);\n                if (tableName === 'glyf') {\n                    var checksum = this._calculateCheckSum(newGlyphTable);\n                    writer._writeInt(checksum);\n                    nextTableSize = glyphTableSize;\n                }\n                else if (tableName === 'loca') {\n                    var checksum = this._calculateCheckSum(newLocaTableOut);\n                    writer._writeInt(checksum);\n                    nextTableSize = locaTableSize;\n                }\n                else {\n                    writer._writeInt(tableInfo._checksum);\n                    nextTableSize = tableInfo._length;\n                }\n                writer._writeUInt(usedTablesSize);\n                writer._writeUInt(nextTableSize);\n                usedTablesSize += this._align(nextTableSize);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._calculateCheckSum = function (bytes) {\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        var result = 0;\n        if (bytes !== null && typeof bytes !== 'undefined' && bytes.length > 0) {\n            for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n                byte4 += (bytes[pos++] & 255);\n                byte3 += (bytes[pos++] & 255);\n                byte2 += (bytes[pos++] & 255);\n                byte1 += (bytes[pos++] & 255);\n            }\n            result = byte1;\n            result += (byte2 << 8);\n            result += (byte3 << 16);\n            result += (byte4 << 24);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTable !== null && typeof newLocaTable !== 'undefined' &&\n            newLocaTable.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                if (tableName === 'glyf') {\n                    writer._writeBytes(newGlyphTable);\n                }\n                else if (tableName === 'loca') {\n                    writer._writeBytes(newLocaTable);\n                }\n                else {\n                    var count = this._align(tableInfo._length);\n                    var buff = [];\n                    for (var i_1 = 0; i_1 < count; i_1++) {\n                        buff.push(0);\n                    }\n                    this._offset = tableInfo._offset;\n                    var result = this._read(buff, 0, tableInfo._length);\n                    writer._writeBytes(result.buffer);\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._read = function (buffer, index, count) {\n        var written = 0;\n        if (buffer !== null && typeof buffer !== 'undefined' && buffer.length > 0) {\n            var read = 0;\n            do {\n                for (var i = 0; (i < count - written) && (this._offset + i < this._fontData.length); i++) {\n                    buffer[index + i] = this._fontData[this._offset + i];\n                }\n                read = count - written;\n                this._offset += read;\n                written += read;\n            } while (written < count);\n        }\n        return { buffer: buffer, written: written };\n    };\n    _TrueTypeReader.prototype._createInternals = function () {\n        this._metrics = new _TrueTypeMetrics();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._bIsLocaShort = (headTable._indexToLocalFormat === 0);\n        var horizontalHeadTable = this._readHorizontalHeaderTable();\n        var os2Table = this._readOS2Table();\n        var postTable = this._readPostTable();\n        this._width = this._readWidthTable(horizontalHeadTable._numberOfHMetrics, headTable._unitsPerEm);\n        var subTables = this._readCmapTable();\n        this._initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    _TrueTypeReader.prototype._getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this._metrics._isSymbol && this._microsoftGlyphs !== null) {\n                if (this._microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this._microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this._metrics._isSymbol && this._macintoshGlyphs !== null) {\n                if (this._macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this._macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 !== null) ? obj1 : this._getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this._metrics._isSymbol && this._microsoft !== null) {\n                if (this._microsoft.containsKey(code)) {\n                    obj = this._microsoft.getValue(code);\n                    if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                        this._isFontPresent = true;\n                    }\n                }\n                else if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                    this._isFontPresent = false;\n                }\n            }\n            else if (this._metrics._isSymbol && this.macintosh !== null || this._isMacFont) {\n                if (this._maxMacIndex !== 0) {\n                    code %= this._maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this._isFontPresent = true;\n                }\n            }\n            if (charCode === _StringTokenizer._whiteSpace && obj === null) {\n                obj = new _TrueTypeGlyph();\n            }\n            var glyph = (obj !== null) ? obj : this._getDefaultGlyph();\n            return glyph;\n        }\n    };\n    _TrueTypeReader.prototype._readString = function (length, isUnicode) {\n        if (typeof isUnicode === 'undefined' || isUnicode === null) {\n            return this._readString(length, false);\n        }\n        else {\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this._fontData[this._offset]);\n                    }\n                    this._offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this._fontData[this._offset]);\n                    this._offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    _TrueTypeReader.prototype._readFixed = function (offset) {\n        var integer = this._readInt16(offset);\n        var sFraction = this._readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    _TrueTypeReader.prototype._readInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    _TrueTypeReader.prototype._readUInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    _TrueTypeReader.prototype._readInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) +\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readInt64 = function (offset) {\n        var low = this._readInt32(offset + 4);\n        var n = this._readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    _TrueTypeReader.prototype._readUInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) |\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readUShortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset);\n        }\n        return buffer;\n    };\n    _TrueTypeReader.prototype._readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this._fontData[Number.parseInt(this._offset.toString(), 10)]);\n            this._offset += 1;\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._readByte = function (offset) {\n        var result = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 1;\n        return result;\n    };\n    _TrueTypeReader.prototype._getCharacterWidth = function (code) {\n        var glyphInfo = this._getGlyph(code);\n        glyphInfo = (!glyphInfo._empty) ? glyphInfo : this._getDefaultGlyph();\n        var codeWidth = (!glyphInfo._empty) ? glyphInfo._width : 0;\n        return codeWidth;\n    };\n    _TrueTypeReader.prototype._convertString = function (text) {\n        var glyph = '';\n        if (text !== null && text !== undefined && text.length > 0) {\n            for (var k = 0; k < text.length; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    glyph += String.fromCharCode(glyphInfo._index);\n                }\n            }\n        }\n        return glyph;\n    };\n    return _TrueTypeReader;\n}());\nexport { _TrueTypeReader };\nvar _TrueTypeNameRecord = /** @class */ (function () {\n    function _TrueTypeNameRecord() {\n    }\n    return _TrueTypeNameRecord;\n}());\nexport { _TrueTypeNameRecord };\nvar _TrueTypeMetrics = /** @class */ (function () {\n    function _TrueTypeMetrics() {\n    }\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isItalic\", {\n        get: function () {\n            return ((this._macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isBold\", {\n        get: function () {\n            return ((this._macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeMetrics;\n}());\nexport { _TrueTypeMetrics };\nvar _TrueTypeLongHorMetric = /** @class */ (function () {\n    function _TrueTypeLongHorMetric() {\n    }\n    return _TrueTypeLongHorMetric;\n}());\nexport { _TrueTypeLongHorMetric };\nvar _TrueTypeGlyph = /** @class */ (function () {\n    function _TrueTypeGlyph() {\n    }\n    Object.defineProperty(_TrueTypeGlyph.prototype, \"_empty\", {\n        get: function () {\n            return (this._index === this._width && this._width === this._charCode && this._charCode === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeGlyph;\n}());\nexport { _TrueTypeGlyph };\nvar _TrueTypeLocaTable = /** @class */ (function () {\n    function _TrueTypeLocaTable() {\n    }\n    return _TrueTypeLocaTable;\n}());\nexport { _TrueTypeLocaTable };\nvar _TrueTypeGlyphHeader = /** @class */ (function () {\n    function _TrueTypeGlyphHeader() {\n    }\n    return _TrueTypeGlyphHeader;\n}());\nexport { _TrueTypeGlyphHeader };\nvar _BigEndianWriter = /** @class */ (function () {\n    function _BigEndianWriter(capacity) {\n        this.int32Size = 4;\n        this.int16Size = 2;\n        this.int64Size = 8;\n        this._bufferLength = capacity;\n        this._buffer = [];\n    }\n    Object.defineProperty(_BigEndianWriter.prototype, \"_data\", {\n        get: function () {\n            if (this._buffer.length < this._bufferLength) {\n                var length_1 = this._bufferLength - this._buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this._buffer.push(0);\n                }\n            }\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_BigEndianWriter.prototype, \"_position\", {\n        get: function () {\n            if (typeof this._internalPosition === 'undefined' || this._internalPosition === null) {\n                this._internalPosition = 0;\n            }\n            return this._internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _BigEndianWriter.prototype._writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeInt = function (value) {\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(buff);\n    };\n    _BigEndianWriter.prototype._writeString = function (value) {\n        if (value !== null && typeof value !== 'undefined') {\n            var bytes = [];\n            for (var i = 0; i < value.length; i++) {\n                bytes.push(value.charCodeAt(i));\n            }\n            this._flush(bytes);\n        }\n    };\n    _BigEndianWriter.prototype._writeBytes = function (value) {\n        this._flush(value);\n    };\n    _BigEndianWriter.prototype._flush = function (buff) {\n        if (buff !== null && typeof buff !== 'undefined') {\n            var position = this._position;\n            for (var i = 0; i < buff.length; i++) {\n                this._buffer[Number.parseInt(position.toString(), 10)] = buff[Number.parseInt(i.toString(), 10)];\n                position++;\n            }\n            this._internalPosition += buff.length;\n        }\n    };\n    return _BigEndianWriter;\n}());\nexport { _BigEndianWriter };\n","import { _TrueTypeReader } from './ttf-reader';\nimport { _PdfDictionary, _PdfName, Dictionary } from './../pdf-primitives';\nimport { _PdfFontMetrics } from './pdf-font-metrics';\nimport { _StandardWidthTable } from './pdf-font-metrics';\nimport { _FontDescriptorFlag } from '../enumerator';\nimport { _decode } from '../utils';\nimport { _PdfStream } from './../base-stream';\nvar _UnicodeTrueTypeFont = /** @class */ (function () {\n    function _UnicodeTrueTypeFont(base64String, size) {\n        this._nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        this._isEmbedFont = false;\n        this._cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + '\\r\\n' + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 beginCodeSpacerange' + '\\r\\n';\n        this._cmapEndCodeSpaceRange = 'endCodeSpacerange' + '\\r\\n';\n        this._cmapBeginRange = 'beginbfrange' + '\\r\\n';\n        this._cmapEndRange = 'endbfrange' + '\\r\\n';\n        this._cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + '\\r\\n';\n        if (base64String === null || typeof base64String === 'undefined') {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this._fontSize = size;\n        this._fontString = base64String;\n        this._Initialize();\n    }\n    _UnicodeTrueTypeFont.prototype._beginSave = function () {\n        this._descendantFontBeginSave();\n        this._cmapBeginSave();\n        this._fontDictionaryBeginSave();\n        this._fontProgramBeginSave();\n        if (this._fontDescriptor) {\n            this._fontDescriptor.update('FontFile2', this._fontProgram);\n            this._fontDescriptor._updated = true;\n            this._fontDescriptor._isFont = true;\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._descendantFontBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var width = this._getDescendantWidth(); // eslint-disable-line\n            if (width !== null) {\n                this._descendantFont.set('W', width);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._fontDictionaryBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            this._fontDictionary.update('ToUnicode', this._cmap);\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._Initialize = function () {\n        var byteArray = _decode(this._fontString);\n        this._fontData = byteArray;\n        this._ttfReader = new _TrueTypeReader(this._fontData);\n        this._ttfMetrics = this._ttfReader._metrics;\n    };\n    _UnicodeTrueTypeFont.prototype._createInternals = function () {\n        this._fontDictionary = new _PdfDictionary();\n        this._descendantFont = new _PdfDictionary();\n        this._metrics = new _PdfFontMetrics();\n        this._ttfReader._createInternals();\n        this._usedChars = null;\n        var data = []; // eslint-disable-line\n        this._fontProgram = new _PdfStream(data, new _PdfDictionary());\n        this._cmap = new _PdfStream(data, new _PdfDictionary());\n        this._ttfMetrics = this._ttfReader._metrics;\n        this._initializeMetrics();\n        this._subsetName = this._getFontName();\n        this._createDescendantFont();\n        this._createFontDictionary();\n    };\n    _UnicodeTrueTypeFont.prototype._getInternals = function () {\n        return this._fontDictionary;\n    };\n    _UnicodeTrueTypeFont.prototype._initializeMetrics = function () {\n        var ttfMetrics = this._ttfReader._metrics;\n        this._metrics._ascent = ttfMetrics._macAscent;\n        this._metrics._descent = ttfMetrics._macDescent;\n        this._metrics._height = ttfMetrics._macAscent - ttfMetrics._macDescent + ttfMetrics._lineGap;\n        this._metrics._name = ttfMetrics._fontFamily;\n        this._metrics._postScriptName = ttfMetrics._postScriptName;\n        this._metrics._size = this._fontSize;\n        this._metrics._widthTable = new _StandardWidthTable(ttfMetrics._widthTable);\n        this._metrics._lineGap = ttfMetrics._lineGap;\n        this._metrics._subScriptSizeFactor = ttfMetrics._subScriptSizeFactor;\n        this._metrics._superscriptSizeFactor = ttfMetrics._superscriptSizeFactor;\n        this._metrics._isBold = ttfMetrics._isBold;\n    };\n    _UnicodeTrueTypeFont.prototype._getFontName = function () {\n        var builder = '';\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this._nameString[Number.parseInt(index.toString(), 10)];\n        }\n        builder += '+';\n        builder += this._ttfReader._metrics._postScriptName;\n        return builder.toString();\n    };\n    _UnicodeTrueTypeFont.prototype._createDescendantFont = function () {\n        this._descendantFont = new _PdfDictionary();\n        this._descendantFont._updated = true;\n        this._descendantFont.set('Type', new _PdfName('Font'));\n        this._descendantFont.set('Subtype', new _PdfName('CIDFontType2'));\n        this._descendantFont.set('BaseFont', new _PdfName(this._subsetName));\n        this._descendantFont.set('CIDToGIDMap', new _PdfName('Identity'));\n        this._descendantFont.set('DW', 1000);\n        this._fontDescriptor = this._createFontDescriptor();\n        this._descendantFont.set('FontDescriptor', this._fontDescriptor);\n        var systemInfo = this._createSystemInfo();\n        this._descendantFont.set('CIDSystemInfo', systemInfo);\n        this._descendantFont._isFont = true;\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDescriptor = function () {\n        var descriptor = new _PdfDictionary();\n        var metrics = this._ttfReader._metrics;\n        descriptor.set('Type', new _PdfName('FontDescriptor'));\n        descriptor.set('FontName', new _PdfName(this._subsetName));\n        descriptor.set('Flags', this._getDescriptorFlags());\n        descriptor.set('FontBBox', this._getBoundBox());\n        descriptor.set('MissingWidth', metrics._widthTable[32]);\n        descriptor.set('StemV', metrics._stemV);\n        descriptor.set('ItalicAngle', metrics._italicAngle);\n        descriptor.set('CapHeight', metrics._capHeight);\n        descriptor.set('Ascent', metrics._winAscent);\n        descriptor.set('Descent', metrics._winDescent);\n        descriptor.set('Leading', metrics._leading);\n        descriptor.set('AvgWidth', metrics._widthTable[32]);\n        descriptor.set('MaxWidth', metrics._widthTable[32]);\n        descriptor.set('XHeight', 0);\n        descriptor.set('StemH', 0);\n        descriptor._updated = true;\n        return descriptor;\n    };\n    _UnicodeTrueTypeFont.prototype._generateFontProgram = function () {\n        var fontProgram = [];\n        this._usedChars = (this._usedChars === null || typeof this._usedChars === 'undefined') ? new Dictionary()\n            : this._usedChars;\n        this._ttfReader._setOffset(0);\n        fontProgram = this._ttfReader._readFontProgram(this._usedChars);\n        this._fontProgram._clearStream();\n        this._fontProgram._writeBytes(fontProgram);\n    };\n    _UnicodeTrueTypeFont.prototype._getBoundBox = function () {\n        var rect = this._ttfReader._metrics._fontBox;\n        var width = Math.abs(rect[2] - rect[0]);\n        var height = Math.abs(rect[1] - rect[3]);\n        var rectangle = [rect[0], rect[3], width, height];\n        return rectangle;\n    };\n    _UnicodeTrueTypeFont.prototype._cmapBeginSave = function () {\n        this._generateCmap();\n    };\n    _UnicodeTrueTypeFont.prototype._fontProgramBeginSave = function () {\n        this._generateFontProgram();\n    };\n    _UnicodeTrueTypeFont.prototype._toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    _UnicodeTrueTypeFont.prototype._generateCmap = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphChars = this._ttfReader._getGlyphChars(this._usedChars);\n            if (glyphChars._size() > 0) {\n                var keys = glyphChars.keys().sort();\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this._toHexString(first, false) + this._toHexString(last, false) + '\\r\\n';\n                var builder = '';\n                builder += this._cmapPrefix;\n                builder += middlePart;\n                builder += this._cmapEndCodeSpaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this._cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += ' ';\n                        builder += this._cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    builder += this._toHexString(key, true) + this._toHexString(key, true);\n                    builder += this._toHexString(glyphChars.getValue(key), true) + '\\n';\n                }\n                builder += this._cmapSuffix;\n                this._cmap._clearStream();\n                this._cmap._write(builder);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDictionary = function () {\n        this._fontDictionary._updated = true;\n        this._fontDictionary.set('Type', _PdfName.get('Font'));\n        this._fontDictionary.set('Subtype', _PdfName.get('Type0'));\n        this._fontDictionary.set('BaseFont', new _PdfName(this._subsetName));\n        this._fontDictionary.set('Encoding', _PdfName.get('Identity-H'));\n        this._fontDictionary.set('DescendantFonts', this._descendantFont);\n        this._fontDictionary._isFont = true;\n        this._fontDictionary._currentObj = this;\n    };\n    _UnicodeTrueTypeFont.prototype._createSystemInfo = function () {\n        var systemInfo = new _PdfDictionary();\n        systemInfo._updated = true;\n        systemInfo.set('Registry', 'Adobe');\n        systemInfo.set('Ordering', 'Identity');\n        systemInfo.set('Supplement', 0);\n        return systemInfo;\n    };\n    _UnicodeTrueTypeFont.prototype._getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this._ttfReader._metrics;\n        if (metrics._isFixedPitch) {\n            flags |= _FontDescriptorFlag.fixedPitch;\n        }\n        if (metrics._isSymbol) {\n            flags |= _FontDescriptorFlag.symbolic;\n        }\n        else {\n            flags |= _FontDescriptorFlag.nonSymbolic;\n        }\n        if (metrics._isItalic) {\n            flags |= _FontDescriptorFlag.italic;\n        }\n        if (metrics._isBold) {\n            flags |= _FontDescriptorFlag.forceBold;\n        }\n        return flags;\n    };\n    _UnicodeTrueTypeFont.prototype._getCharacterWidth = function (charCode) {\n        var codeWidth = this._ttfReader._getCharacterWidth(charCode);\n        return codeWidth;\n    };\n    _UnicodeTrueTypeFont.prototype._setSymbols = function (text) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._usedChars === null || typeof this._usedChars === 'undefined') {\n                this._usedChars = new Dictionary();\n            }\n            for (var i = 0; i < text.length; i++) {\n                var ch = text[Number.parseInt(i.toString(), 10)];\n                this._usedChars.setValue(ch, String.fromCharCode(0));\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._getDescendantWidth = function () {\n        var array = new Array(); // eslint-disable-line\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphInfo = [];\n            var keys = this._usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._ttfReader._getGlyph(chLen);\n                glyphInfo.push(glyph);\n            }\n            glyphInfo.sort(function (a, b) { return a._index - b._index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new Array(); // eslint-disable-line\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[Number.parseInt(i.toString(), 10)];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph._index;\n                    lastGlyphIndex = glyph._index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph._index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    array.push(Number(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.push(widthDetails);\n                    }\n                    firstGlyphIndex = glyph._index;\n                    widthDetails = new Array(); // eslint-disable-line\n                }\n                widthDetails.push(Number(glyph._width));\n                if ((i + 1) === glyphInfo.length) {\n                    array.push(Number(firstGlyphIndex));\n                    array.push(widthDetails);\n                }\n                lastGlyphIndex = glyph._index;\n            }\n        }\n        return array;\n    };\n    return _UnicodeTrueTypeFont;\n}());\nexport { _UnicodeTrueTypeFont };\n","var _ArabicShapeRenderer = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'ArabicShapeRenderer' class.\n     *\n     * @private\n     */\n    function _ArabicShapeRenderer() {\n        this._arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'], ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'], ['\\u0625', '\\uFE87', '\\uFE88'], ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'], ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'], ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'], ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'], ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'], ['\\u062F', '\\uFEA9', '\\uFEAA'], ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'], ['\\u0632', '\\uFEAF', '\\uFEB0'], ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'], ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'], ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'], ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'], ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'], ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'], ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'], ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'], ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'], ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'], ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'], ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'], ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'], ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'], ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'], ['\\u0688', '\\uFB88', '\\uFB89'], ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'], ['\\u068E', '\\uFB86', '\\uFB87'], ['\\u0691', '\\uFB8C', '\\uFB8D'], ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'], ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'], ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'], ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'], ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'], ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'], ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'], ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'], ['\\u06C7', '\\uFBD7', '\\uFBD8'], ['\\u06C8', '\\uFBDB', '\\uFBDC'], ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'], ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'], ['\\u06D2', '\\uFBAE', '\\uFBAF'], ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this._alef = '\\u0627';\n        this._alefHamza = '\\u0623';\n        this._alefHamzaBelow = '\\u0625';\n        this._alefMadda = '\\u0622';\n        this._lam = '\\u0644';\n        this._hamza = '\\u0621';\n        this._zeroWidthJoiner = '\\u200D';\n        this._hamzaAbove = '\\u0654';\n        this._hamzaBelow = '\\u0655';\n        this._wawHamza = '\\u0624';\n        this._yehHamza = '\\u0626';\n        this._waw = '\\u0648';\n        this._alefsura = '\\u0649';\n        this._yeh = '\\u064A';\n        this._farsiYeh = '\\u06CC';\n        this._shadda = '\\u0651';\n        this._madda = '\\u0653';\n        this._lwa = '\\uFEFB';\n        this._lwawh = '\\uFEF7';\n        this._lwawhb = '\\uFEF9';\n        this._lwawm = '\\uFEF5';\n        this._bwhb = '\\u06D3';\n        this._fathatan = '\\u064B';\n        this._superalef = '\\u0670';\n        this._vowel = 0x1;\n        this._arabicMapTable = new Map();\n        for (var i = 0; i < this._arabicCharTable.length; i++) {\n            this._arabicMapTable.set(this._arabicCharTable[Number.parseInt(i.toString(), 10)][0], this._arabicCharTable[Number.parseInt(i.toString(), 10)]);\n        }\n    }\n    _ArabicShapeRenderer.prototype._getCharacterShape = function (input, index) {\n        if ((input >= this._hamza) && (input <= this._bwhb)) {\n            var value = [];\n            if (this._arabicMapTable.get(input)) {\n                value = this._arabicMapTable.get(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this._lwawm && input <= this._lwa) {\n            return (input);\n        }\n        return input;\n    };\n    _ArabicShapeRenderer.prototype._shape = function (text) {\n        var builder = '';\n        var value = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[Number.parseInt(i.toString(), 10)];\n            if (c >= '؀' && c <= 'ۿ') {\n                value = value + c;\n            }\n            else {\n                if (value.length > 0) {\n                    var shapeText = this._doShape(value.toString(), 0);\n                    builder = builder + shapeText;\n                    value = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (value.length > 0) {\n            var shapeText = this._doShape(value.toString(), 0);\n            builder = builder + shapeText;\n        }\n        return builder.toString();\n    };\n    _ArabicShapeRenderer.prototype._doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new _ArabicShape();\n        var present = new _ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this._ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this._getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous._shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present._shapes);\n                present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n                str = this._append(str, previous, level);\n                previous = present;\n                present = new _ArabicShape();\n                present._shapeValue = next;\n                present._shapes = shapeCount;\n                present._shapeLigature++;\n            }\n        }\n        len = (previous._shapes > 2) ? 1 : 0;\n        len = len % (present._shapes);\n        present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n        str = this._append(str, previous, level);\n        str = this._append(str, present, level);\n        return str.toString();\n    };\n    _ArabicShapeRenderer.prototype._append = function (builder, shape, level) {\n        if (shape._shapeValue !== '') {\n            builder = builder + shape._shapeValue;\n            shape._shapeLigature -= 1;\n            if (shape._shapeType !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeType;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n            if (shape._shapeVowel !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeVowel;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    _ArabicShapeRenderer.prototype._ligature = function (value, shape) {\n        if (shape._shapeValue !== '') {\n            var result = 0;\n            if ((value >= this._fathatan && value <= this._hamzaBelow) || value === this._superalef) {\n                result = 1;\n                if ((shape._shapeVowel !== '') && (value !== this._shadda)) {\n                    result = 2;\n                }\n                if (value === this._shadda) {\n                    if (shape._shapeType === '') {\n                        shape._shapeType = this._shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this._hamzaBelow) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaBelow;\n                    }\n                }\n                else if (value === this._hamzaAbove) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawh;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._waw) {\n                        shape._shapeValue = this._wawHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._yeh || shape._shapeValue === this._alefsura ||\n                        shape._shapeValue === this._farsiYeh) {\n                        shape._shapeValue = this._yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaAbove;\n                    }\n                }\n                else if (value === this._madda) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape._shapeVowel = value;\n                }\n                if (result === 1) {\n                    shape._shapeLigature++;\n                }\n                return result;\n            }\n            if (shape._shapeVowel !== '') {\n                return 0;\n            }\n            if (shape._shapeValue === this._lam) {\n                if (value === this._alef) {\n                    shape._shapeValue = this._lwa;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamza) {\n                    shape._shapeValue = this._lwawh;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamzaBelow) {\n                    shape._shapeValue = this._lwawhb;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefMadda) {\n                    shape._shapeValue = this._lwawm;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n            }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    _ArabicShapeRenderer.prototype._getShapeCount = function (shape) {\n        if ((shape >= this._hamza) && (shape <= this._bwhb) && !((shape >= this._fathatan && shape <= this._hamzaBelow)\n            || shape === this._superalef)) {\n            var c = [];\n            if (this._arabicMapTable.get(shape)) {\n                c = this._arabicMapTable.get(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this._zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return _ArabicShapeRenderer;\n}());\nexport { _ArabicShapeRenderer };\nvar _ArabicShape = /** @class */ (function () {\n    function _ArabicShape() {\n        this._shapeValue = '';\n        this._shapeType = '';\n        this._shapeVowel = '';\n        this._shapeLigature = 0;\n        this._shapes = 1;\n    }\n    return _ArabicShape;\n}());\nexport { _ArabicShape };\n","import { Dictionary } from './../../pdf-primitives';\nvar _Bidirectional = /** @class */ (function () {\n    /**\n     * Creates a new instance of the `_Bidirectional` class.\n     *\n     * @private\n     */\n    function _Bidirectional() {\n        this._indexes = [];\n        this._indexLevels = [];\n        this._mirroringShape = new Dictionary();\n        this._update();\n    }\n    _Bidirectional.prototype._doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this._indexLevels[Number.parseInt(i.toString(), 10)] & 1) === 1)\n                && this._mirroringShape.containsKey(text[Number.parseInt(i.toString(), 10)].charCodeAt(0))) {\n                var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n                result[Number.parseInt(i.toString(), 10)] = String.fromCharCode(this._mirroringShape.getValue(value));\n            }\n            else {\n                result[Number.parseInt(i.toString(), 10)] = text[Number.parseInt(i.toString(), 10)].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[Number.parseInt(j.toString(), 10)];\n        }\n        return res;\n    };\n    _Bidirectional.prototype._getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new _RtlCharacters();\n        this._indexLevels = rtlCharacters._getVisualOrder(inputText, isRtl);\n        this._setDefaultIndexLevel();\n        this._doOrder(0, this._indexLevels.length - 1);\n        var text = this._doMirrorShaping(inputText);\n        var resultBuilder = '';\n        for (var i = 0; i < this._indexes.length; i++) {\n            var index = this._indexes[Number.parseInt(i.toString(), 10)];\n            resultBuilder += text[Number.parseInt(index.toString(), 10)];\n        }\n        return resultBuilder.toString();\n    };\n    _Bidirectional.prototype._setDefaultIndexLevel = function () {\n        for (var i = 0; i < this._indexLevels.length; i++) {\n            this._indexes[Number.parseInt(i.toString(), 10)] = i;\n        }\n    };\n    _Bidirectional.prototype._doOrder = function (sIndex, eIndex) {\n        var max = this._indexLevels[Number.parseInt(sIndex.toString(), 10)];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this._indexLevels[Number.parseInt(i.toString(), 10)];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this._reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            while (true) { // eslint-disable-line\n                while (pstart <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pstart.toString(), 10)] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pend.toString(), 10)] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this._reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    _Bidirectional.prototype._reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this._indexes[Number.parseInt(i.toString(), 10)];\n            this._indexes[Number.parseInt(i.toString(), 10)] = this._indexes[Number.parseInt(j.toString(), 10)];\n            this._indexes[Number.parseInt(j.toString(), 10)] = temp;\n        }\n    };\n    _Bidirectional.prototype._update = function () {\n        this._mirroringShape.setValue(40, 41);\n        this._mirroringShape.setValue(41, 40);\n        this._mirroringShape.setValue(60, 62);\n        this._mirroringShape.setValue(62, 60);\n        this._mirroringShape.setValue(91, 93);\n        this._mirroringShape.setValue(93, 91);\n        this._mirroringShape.setValue(123, 125);\n        this._mirroringShape.setValue(125, 123);\n        this._mirroringShape.setValue(171, 187);\n        this._mirroringShape.setValue(187, 171);\n        this._mirroringShape.setValue(8249, 8250);\n        this._mirroringShape.setValue(8250, 8249);\n        this._mirroringShape.setValue(8261, 8262);\n        this._mirroringShape.setValue(8262, 8261);\n        this._mirroringShape.setValue(8317, 8318);\n        this._mirroringShape.setValue(8318, 8317);\n        this._mirroringShape.setValue(8333, 8334);\n        this._mirroringShape.setValue(8334, 8333);\n        this._mirroringShape.setValue(8712, 8715);\n        this._mirroringShape.setValue(8713, 8716);\n        this._mirroringShape.setValue(8714, 8717);\n        this._mirroringShape.setValue(8715, 8712);\n        this._mirroringShape.setValue(8716, 8713);\n        this._mirroringShape.setValue(8717, 8714);\n        this._mirroringShape.setValue(8725, 10741);\n        this._mirroringShape.setValue(8764, 8765);\n        this._mirroringShape.setValue(8765, 8764);\n        this._mirroringShape.setValue(8771, 8909);\n        this._mirroringShape.setValue(8786, 8787);\n        this._mirroringShape.setValue(8787, 8786);\n        this._mirroringShape.setValue(8788, 8789);\n        this._mirroringShape.setValue(8789, 8788);\n        this._mirroringShape.setValue(8804, 8805);\n        this._mirroringShape.setValue(8805, 8804);\n        this._mirroringShape.setValue(8806, 8807);\n        this._mirroringShape.setValue(8807, 8806);\n        this._mirroringShape.setValue(8808, 8809);\n        this._mirroringShape.setValue(8809, 8808);\n        this._mirroringShape.setValue(8810, 8811);\n        this._mirroringShape.setValue(8811, 8810);\n        this._mirroringShape.setValue(8814, 8815);\n        this._mirroringShape.setValue(8815, 8814);\n        this._mirroringShape.setValue(8816, 8817);\n        this._mirroringShape.setValue(8817, 8816);\n        this._mirroringShape.setValue(8818, 8819);\n        this._mirroringShape.setValue(8819, 8818);\n        this._mirroringShape.setValue(8820, 8821);\n        this._mirroringShape.setValue(8821, 8820);\n        this._mirroringShape.setValue(8822, 8823);\n        this._mirroringShape.setValue(8823, 8822);\n        this._mirroringShape.setValue(8824, 8825);\n        this._mirroringShape.setValue(8825, 8824);\n        this._mirroringShape.setValue(8826, 8827);\n        this._mirroringShape.setValue(8827, 8826);\n        this._mirroringShape.setValue(8828, 8829);\n        this._mirroringShape.setValue(8829, 8828);\n        this._mirroringShape.setValue(8830, 8831);\n        this._mirroringShape.setValue(8831, 8830);\n        this._mirroringShape.setValue(8832, 8833);\n        this._mirroringShape.setValue(8833, 8832);\n        this._mirroringShape.setValue(8834, 8835);\n        this._mirroringShape.setValue(8835, 8834);\n        this._mirroringShape.setValue(8836, 8837);\n        this._mirroringShape.setValue(8837, 8836);\n        this._mirroringShape.setValue(8838, 8839);\n        this._mirroringShape.setValue(8839, 8838);\n        this._mirroringShape.setValue(8840, 8841);\n        this._mirroringShape.setValue(8841, 8840);\n        this._mirroringShape.setValue(8842, 8843);\n        this._mirroringShape.setValue(8843, 8842);\n        this._mirroringShape.setValue(8847, 8848);\n        this._mirroringShape.setValue(8848, 8847);\n        this._mirroringShape.setValue(8849, 8850);\n        this._mirroringShape.setValue(8850, 8849);\n        this._mirroringShape.setValue(8856, 10680);\n        this._mirroringShape.setValue(8866, 8867);\n        this._mirroringShape.setValue(8867, 8866);\n        this._mirroringShape.setValue(8870, 10974);\n        this._mirroringShape.setValue(8872, 10980);\n        this._mirroringShape.setValue(8873, 10979);\n        this._mirroringShape.setValue(8875, 10981);\n        this._mirroringShape.setValue(8880, 8881);\n        this._mirroringShape.setValue(8881, 8880);\n        this._mirroringShape.setValue(8882, 8883);\n        this._mirroringShape.setValue(8883, 8882);\n        this._mirroringShape.setValue(8884, 8885);\n        this._mirroringShape.setValue(8885, 8884);\n        this._mirroringShape.setValue(8886, 8887);\n        this._mirroringShape.setValue(8887, 8886);\n        this._mirroringShape.setValue(8905, 8906);\n        this._mirroringShape.setValue(8906, 8905);\n        this._mirroringShape.setValue(8907, 8908);\n        this._mirroringShape.setValue(8908, 8907);\n        this._mirroringShape.setValue(8909, 8771);\n        this._mirroringShape.setValue(8912, 8913);\n        this._mirroringShape.setValue(8913, 8912);\n        this._mirroringShape.setValue(8918, 8919);\n        this._mirroringShape.setValue(8919, 8918);\n        this._mirroringShape.setValue(8920, 8921);\n        this._mirroringShape.setValue(8921, 8920);\n        this._mirroringShape.setValue(8922, 8923);\n        this._mirroringShape.setValue(8923, 8922);\n        this._mirroringShape.setValue(8924, 8925);\n        this._mirroringShape.setValue(8925, 8924);\n        this._mirroringShape.setValue(8926, 8927);\n        this._mirroringShape.setValue(8927, 8926);\n        this._mirroringShape.setValue(8928, 8929);\n        this._mirroringShape.setValue(8929, 8928);\n        this._mirroringShape.setValue(8930, 8931);\n        this._mirroringShape.setValue(8931, 8930);\n        this._mirroringShape.setValue(8932, 8933);\n        this._mirroringShape.setValue(8933, 8932);\n        this._mirroringShape.setValue(8934, 8935);\n        this._mirroringShape.setValue(8935, 8934);\n        this._mirroringShape.setValue(8936, 8937);\n        this._mirroringShape.setValue(8937, 8936);\n        this._mirroringShape.setValue(8938, 8939);\n        this._mirroringShape.setValue(8939, 8938);\n        this._mirroringShape.setValue(8940, 8941);\n        this._mirroringShape.setValue(8941, 8940);\n        this._mirroringShape.setValue(8944, 8945);\n        this._mirroringShape.setValue(8945, 8944);\n        this._mirroringShape.setValue(8946, 8954);\n        this._mirroringShape.setValue(8947, 8955);\n        this._mirroringShape.setValue(8948, 8956);\n        this._mirroringShape.setValue(8950, 8957);\n        this._mirroringShape.setValue(8951, 8958);\n        this._mirroringShape.setValue(8954, 8946);\n        this._mirroringShape.setValue(8955, 8947);\n        this._mirroringShape.setValue(8956, 8948);\n        this._mirroringShape.setValue(8957, 8950);\n        this._mirroringShape.setValue(8958, 8951);\n        this._mirroringShape.setValue(8968, 8969);\n        this._mirroringShape.setValue(8969, 8968);\n        this._mirroringShape.setValue(8970, 8971);\n        this._mirroringShape.setValue(8971, 8970);\n        this._mirroringShape.setValue(9001, 9002);\n        this._mirroringShape.setValue(9002, 9001);\n        this._mirroringShape.setValue(10088, 10089);\n        this._mirroringShape.setValue(10089, 10088);\n        this._mirroringShape.setValue(10090, 10091);\n        this._mirroringShape.setValue(10091, 10090);\n        this._mirroringShape.setValue(10092, 10093);\n        this._mirroringShape.setValue(10093, 10092);\n        this._mirroringShape.setValue(10094, 10095);\n        this._mirroringShape.setValue(10095, 10094);\n        this._mirroringShape.setValue(10096, 10097);\n        this._mirroringShape.setValue(10097, 10096);\n        this._mirroringShape.setValue(10098, 10099);\n        this._mirroringShape.setValue(10099, 10098);\n        this._mirroringShape.setValue(10100, 10101);\n        this._mirroringShape.setValue(10101, 10100);\n        this._mirroringShape.setValue(10197, 10198);\n        this._mirroringShape.setValue(10198, 10197);\n        this._mirroringShape.setValue(10205, 10206);\n        this._mirroringShape.setValue(10206, 10205);\n        this._mirroringShape.setValue(10210, 10211);\n        this._mirroringShape.setValue(10211, 10210);\n        this._mirroringShape.setValue(10212, 10213);\n        this._mirroringShape.setValue(10213, 10212);\n        this._mirroringShape.setValue(10214, 10215);\n        this._mirroringShape.setValue(10215, 10214);\n        this._mirroringShape.setValue(10216, 10217);\n        this._mirroringShape.setValue(10217, 10216);\n        this._mirroringShape.setValue(10218, 10219);\n        this._mirroringShape.setValue(10219, 10218);\n        this._mirroringShape.setValue(10627, 10628);\n        this._mirroringShape.setValue(10628, 10627);\n        this._mirroringShape.setValue(10629, 10630);\n        this._mirroringShape.setValue(10630, 10629);\n        this._mirroringShape.setValue(10631, 10632);\n        this._mirroringShape.setValue(10632, 10631);\n        this._mirroringShape.setValue(10633, 10634);\n        this._mirroringShape.setValue(10634, 10633);\n        this._mirroringShape.setValue(10635, 10636);\n        this._mirroringShape.setValue(10636, 10635);\n        this._mirroringShape.setValue(10637, 10640);\n        this._mirroringShape.setValue(10638, 10639);\n        this._mirroringShape.setValue(10639, 10638);\n        this._mirroringShape.setValue(10640, 10637);\n        this._mirroringShape.setValue(10641, 10642);\n        this._mirroringShape.setValue(10642, 10641);\n        this._mirroringShape.setValue(10643, 10644);\n        this._mirroringShape.setValue(10644, 10643);\n        this._mirroringShape.setValue(10645, 10646);\n        this._mirroringShape.setValue(10646, 10645);\n        this._mirroringShape.setValue(10647, 10648);\n        this._mirroringShape.setValue(10648, 10647);\n        this._mirroringShape.setValue(10680, 8856);\n        this._mirroringShape.setValue(10688, 10689);\n        this._mirroringShape.setValue(10689, 10688);\n        this._mirroringShape.setValue(10692, 10693);\n        this._mirroringShape.setValue(10693, 10692);\n        this._mirroringShape.setValue(10703, 10704);\n        this._mirroringShape.setValue(10704, 10703);\n        this._mirroringShape.setValue(10705, 10706);\n        this._mirroringShape.setValue(10706, 10705);\n        this._mirroringShape.setValue(10708, 10709);\n        this._mirroringShape.setValue(10709, 10708);\n        this._mirroringShape.setValue(10712, 10713);\n        this._mirroringShape.setValue(10713, 10712);\n        this._mirroringShape.setValue(10714, 10715);\n        this._mirroringShape.setValue(10715, 10714);\n        this._mirroringShape.setValue(10741, 8725);\n        this._mirroringShape.setValue(10744, 10745);\n        this._mirroringShape.setValue(10745, 10744);\n        this._mirroringShape.setValue(10748, 10749);\n        this._mirroringShape.setValue(10749, 10748);\n        this._mirroringShape.setValue(10795, 10796);\n        this._mirroringShape.setValue(10796, 10795);\n        this._mirroringShape.setValue(10797, 10796);\n        this._mirroringShape.setValue(10798, 10797);\n        this._mirroringShape.setValue(10804, 10805);\n        this._mirroringShape.setValue(10805, 10804);\n        this._mirroringShape.setValue(10812, 10813);\n        this._mirroringShape.setValue(10813, 10812);\n        this._mirroringShape.setValue(10852, 10853);\n        this._mirroringShape.setValue(10853, 10852);\n        this._mirroringShape.setValue(10873, 10874);\n        this._mirroringShape.setValue(10874, 10873);\n        this._mirroringShape.setValue(10877, 10878);\n        this._mirroringShape.setValue(10878, 10877);\n        this._mirroringShape.setValue(10879, 10880);\n        this._mirroringShape.setValue(10880, 10879);\n        this._mirroringShape.setValue(10881, 10882);\n        this._mirroringShape.setValue(10882, 10881);\n        this._mirroringShape.setValue(10883, 10884);\n        this._mirroringShape.setValue(10884, 10883);\n        this._mirroringShape.setValue(10891, 10892);\n        this._mirroringShape.setValue(10892, 10891);\n        this._mirroringShape.setValue(10897, 10898);\n        this._mirroringShape.setValue(10898, 10897);\n        this._mirroringShape.setValue(10899, 10900);\n        this._mirroringShape.setValue(10900, 10899);\n        this._mirroringShape.setValue(10901, 10902);\n        this._mirroringShape.setValue(10902, 10901);\n        this._mirroringShape.setValue(10903, 10904);\n        this._mirroringShape.setValue(10904, 10903);\n        this._mirroringShape.setValue(10905, 10906);\n        this._mirroringShape.setValue(10906, 10905);\n        this._mirroringShape.setValue(10907, 10908);\n        this._mirroringShape.setValue(10908, 10907);\n        this._mirroringShape.setValue(10913, 10914);\n        this._mirroringShape.setValue(10914, 10913);\n        this._mirroringShape.setValue(10918, 10919);\n        this._mirroringShape.setValue(10919, 10918);\n        this._mirroringShape.setValue(10920, 10921);\n        this._mirroringShape.setValue(10921, 10920);\n        this._mirroringShape.setValue(10922, 10923);\n        this._mirroringShape.setValue(10923, 10922);\n        this._mirroringShape.setValue(10924, 10925);\n        this._mirroringShape.setValue(10925, 10924);\n        this._mirroringShape.setValue(10927, 10928);\n        this._mirroringShape.setValue(10928, 10927);\n        this._mirroringShape.setValue(10931, 10932);\n        this._mirroringShape.setValue(10932, 10931);\n        this._mirroringShape.setValue(10939, 10940);\n        this._mirroringShape.setValue(10940, 10939);\n        this._mirroringShape.setValue(10941, 10942);\n        this._mirroringShape.setValue(10942, 10941);\n        this._mirroringShape.setValue(10943, 10944);\n        this._mirroringShape.setValue(10944, 10943);\n        this._mirroringShape.setValue(10945, 10946);\n        this._mirroringShape.setValue(10946, 10945);\n        this._mirroringShape.setValue(10947, 10948);\n        this._mirroringShape.setValue(10948, 10947);\n        this._mirroringShape.setValue(10949, 10950);\n        this._mirroringShape.setValue(10950, 10949);\n        this._mirroringShape.setValue(10957, 10958);\n        this._mirroringShape.setValue(10958, 10957);\n        this._mirroringShape.setValue(10959, 10960);\n        this._mirroringShape.setValue(10960, 10959);\n        this._mirroringShape.setValue(10961, 10962);\n        this._mirroringShape.setValue(10962, 10961);\n        this._mirroringShape.setValue(10963, 10964);\n        this._mirroringShape.setValue(10964, 10963);\n        this._mirroringShape.setValue(10965, 10966);\n        this._mirroringShape.setValue(10966, 10965);\n        this._mirroringShape.setValue(10974, 8870);\n        this._mirroringShape.setValue(10979, 8873);\n        this._mirroringShape.setValue(10980, 8872);\n        this._mirroringShape.setValue(10981, 8875);\n        this._mirroringShape.setValue(10988, 10989);\n        this._mirroringShape.setValue(10989, 10988);\n        this._mirroringShape.setValue(10999, 11000);\n        this._mirroringShape.setValue(11000, 10999);\n        this._mirroringShape.setValue(11001, 11002);\n        this._mirroringShape.setValue(11002, 11001);\n        this._mirroringShape.setValue(12296, 12297);\n        this._mirroringShape.setValue(12297, 12296);\n        this._mirroringShape.setValue(12298, 12299);\n        this._mirroringShape.setValue(12299, 12298);\n        this._mirroringShape.setValue(12300, 12301);\n        this._mirroringShape.setValue(12301, 12300);\n        this._mirroringShape.setValue(12302, 12303);\n        this._mirroringShape.setValue(12303, 12302);\n        this._mirroringShape.setValue(12304, 12305);\n        this._mirroringShape.setValue(12305, 12304);\n        this._mirroringShape.setValue(12308, 12309);\n        this._mirroringShape.setValue(12309, 12308);\n        this._mirroringShape.setValue(12310, 12311);\n        this._mirroringShape.setValue(12311, 12310);\n        this._mirroringShape.setValue(12312, 12313);\n        this._mirroringShape.setValue(12313, 12312);\n        this._mirroringShape.setValue(12314, 12315);\n        this._mirroringShape.setValue(12315, 12314);\n        this._mirroringShape.setValue(65288, 65289);\n        this._mirroringShape.setValue(65289, 65288);\n        this._mirroringShape.setValue(65308, 65310);\n        this._mirroringShape.setValue(65310, 65308);\n        this._mirroringShape.setValue(65339, 65341);\n        this._mirroringShape.setValue(65341, 65339);\n        this._mirroringShape.setValue(65371, 65373);\n        this._mirroringShape.setValue(65373, 65371);\n        this._mirroringShape.setValue(65375, 65376);\n        this._mirroringShape.setValue(65376, 65375);\n        this._mirroringShape.setValue(65378, 65379);\n        this._mirroringShape.setValue(65379, 65378);\n    };\n    return _Bidirectional;\n}());\nexport { _Bidirectional };\nvar _RtlCharacters = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'RtlCharacters' class.\n     *\n     * @private\n     */\n    function _RtlCharacters() {\n        this._type = [];\n        this._textOrder = -1;\n        this._rtlCharacterTypes = new Array(65536);\n        this.L = 0;\n        this.lre = 1;\n        this.lro = 2;\n        this.R = 3;\n        this.AL = 4;\n        this.rle = 5;\n        this.rlo = 6;\n        this.pdf = 7;\n        this.EN = 8;\n        this.ES = 9;\n        this.ET = 10;\n        this.AN = 11;\n        this.CS = 12;\n        this.nsm = 13;\n        this.BN = 14;\n        this.B = 15;\n        this.S = 16;\n        this.WS = 17;\n        this.ON = 18;\n        this._charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.nsm, this.nsm, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34, this.ON, 35,\n            37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS, 47, 47, this.CS, 48, 57, this.EN,\n            58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L, 123, 126, this.ON, 127, 132, this.BN, 133, 133,\n            this.B, 134, 159, this.BN, 160, 160, this.CS, 161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175,\n            this.ON, 176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON, 185, 185, this.EN, 186, 186,\n            this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON, 216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698,\n            this.ON, 699, 705, this.L, 706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON, 750, 750,\n            this.L, 751, 767, this.ON, 768, 855, this.nsm, 856, 860, this.L, 861, 879, this.nsm, 880, 883, this.L, 884, 885, this.ON, 886, 893,\n            this.L, 894, 894, this.ON, 895, 899, this.L, 900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014,\n            this.ON, 1015, 1154, this.L, 1155, 1158, this.nsm, 1159, 1159, this.L, 1160, 1161, this.nsm, 1162, 1417, this.L, 1418, 1418,\n            this.ON, 1419, 1424, this.L, 1425, 1441, this.nsm, 1442, 1442, this.L, 1443, 1465, this.nsm, 1466, 1466, this.L, 1467, 1469,\n            this.nsm, 1470, 1470, this.R, 1471, 1471, this.nsm, 1472, 1472, this.R, 1473, 1474, this.nsm, 1475, 1475, this.R, 1476, 1476,\n            this.nsm, 1477, 1487, this.L, 1488, 1514, this.R, 1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON, 1552, 1557, this.nsm, 1558, 1562, this.L, 1563,\n            1563, this.AL, 1564, 1566, this.L, 1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L, 1600, 1610,\n            this.AL, 1611, 1624, this.nsm, 1625, 1631, this.L, 1632, 1641, this.AN, 1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647,\n            this.AL, 1648, 1648, this.nsm, 1649, 1749, this.AL, 1750, 1756, this.nsm, 1757, 1757, this.AL, 1758, 1764, this.nsm, 1765, 1766,\n            this.AL, 1767, 1768, this.nsm, 1769, 1769, this.ON, 1770, 1773, this.nsm, 1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805,\n            this.AL, 1806, 1806, this.L, 1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.nsm, 1810, 1839, this.AL, 1840, 1866,\n            this.nsm, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L, 1920, 1957, this.AL, 1958, 1968, this.nsm, 1969, 1969,\n            this.AL, 1970, 2304, this.L, 2305, 2306, this.nsm, 2307, 2363, this.L, 2364, 2364, this.nsm, 2365, 2368, this.L, 2369, 2376,\n            this.nsm, 2377, 2380, this.L, 2381, 2381, this.nsm, 2382, 2384, this.L, 2385, 2388, this.nsm, 2389, 2401, this.L, 2402, 2403,\n            this.nsm, 2404, 2432, this.L, 2433, 2433, this.nsm, 2434, 2491, this.L, 2492, 2492, this.nsm, 2493, 2496, this.L, 2497, 2500,\n            this.nsm, 2501, 2508, this.L, 2509, 2509, this.nsm, 2510, 2529, this.L, 2530, 2531, this.nsm, 2532, 2545, this.L, 2546, 2547,\n            this.ET, 2548, 2560, this.L, 2561, 2562, this.nsm, 2563, 2619, this.L, 2620, 2620, this.nsm, 2621, 2624, this.L, 2625, 2626,\n            this.nsm, 2627, 2630, this.L, 2631, 2632, this.nsm, 2633, 2634, this.L, 2635, 2637, this.nsm, 2638, 2671, this.L, 2672, 2673,\n            this.nsm, 2674, 2688, this.L, 2689, 2690, this.nsm, 2691, 2747, this.L, 2748, 2748, this.nsm, 2749, 2752, this.L, 2753, 2757,\n            this.nsm, 2758, 2758, this.L, 2759, 2760, this.nsm, 2761, 2764, this.L, 2765, 2765, this.nsm, 2766, 2785, this.L, 2786, 2787,\n            this.nsm, 2788, 2800, this.L, 2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.nsm, 2818, 2875, this.L, 2876, 2876,\n            this.nsm, 2877, 2878, this.L, 2879, 2879, this.nsm, 2880, 2880, this.L, 2881, 2883, this.nsm, 2884, 2892, this.L, 2893, 2893,\n            this.nsm, 2894, 2901, this.L, 2902, 2902, this.nsm, 2903, 2945, this.L, 2946, 2946, this.nsm, 2947, 3007, this.L, 3008, 3008,\n            this.nsm, 3009, 3020, this.L, 3021, 3021, this.nsm, 3022, 3058, this.L, 3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066,\n            this.ON, 3067, 3133, this.L, 3134, 3136, this.nsm, 3137, 3141, this.L, 3142, 3144, this.nsm, 3145, 3145, this.L, 3146, 3149,\n            this.nsm, 3150, 3156, this.L, 3157, 3158, this.nsm, 3159, 3259, this.L, 3260, 3260, this.nsm, 3261, 3275, this.L, 3276, 3277,\n            this.nsm, 3278, 3392, this.L, 3393, 3395, this.nsm, 3396, 3404, this.L, 3405, 3405, this.nsm, 3406, 3529, this.L, 3530, 3530,\n            this.nsm, 3531, 3537, this.L, 3538, 3540, this.nsm, 3541, 3541, this.L, 3542, 3542, this.nsm, 3543, 3632, this.L, 3633, 3633,\n            this.nsm, 3634, 3635, this.L, 3636, 3642, this.nsm, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L, 3655, 3662,\n            this.nsm, 3663, 3760, this.L, 3761, 3761, this.nsm, 3762, 3763, this.L, 3764, 3769, this.nsm, 3770, 3770, this.L, 3771, 3772,\n            this.nsm, 3773, 3783, this.L, 3784, 3789, this.nsm, 3790, 3863, this.L, 3864, 3865, this.nsm, 3866, 3892, this.L, 3893, 3893,\n            this.nsm, 3894, 3894, this.L, 3895, 3895, this.nsm, 3896, 3896, this.L, 3897, 3897, this.nsm, 3898, 3901, this.ON, 3902, 3952,\n            this.L, 3953, 3966, this.nsm, 3967, 3967, this.L, 3968, 3972, this.nsm, 3973, 3973, this.L, 3974, 3975, this.nsm, 3976, 3983,\n            this.L, 3984, 3991, this.nsm, 3992, 3992, this.L, 3993, 4028, this.nsm, 4029, 4037, this.L, 4038, 4038, this.nsm, 4039, 4140,\n            this.L, 4141, 4144, this.nsm, 4145, 4145, this.L, 4146, 4146, this.nsm, 4147, 4149, this.L, 4150, 4151, this.nsm, 4152, 4152,\n            this.L, 4153, 4153, this.nsm, 4154, 4183, this.L, 4184, 4185, this.nsm, 4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786,\n            this.L, 5787, 5788, this.ON, 5789, 5905, this.L, 5906, 5908, this.nsm, 5909, 5937, this.L, 5938, 5940, this.nsm, 5941, 5969,\n            this.L, 5970, 5971, this.nsm, 5972, 6001, this.L, 6002, 6003, this.nsm, 6004, 6070, this.L, 6071, 6077, this.nsm, 6078, 6085,\n            this.L, 6086, 6086, this.nsm, 6087, 6088, this.L, 6089, 6099, this.nsm, 6100, 6106, this.L, 6107, 6107, this.ET, 6108, 6108,\n            this.L, 6109, 6109, this.nsm, 6110, 6127, this.L, 6128, 6137, this.ON, 6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157,\n            this.nsm, 6158, 6158, this.WS, 6159, 6312, this.L, 6313, 6313, this.nsm, 6314, 6431, this.L, 6432, 6434, this.nsm, 6435, 6438,\n            this.L, 6439, 6443, this.nsm, 6444, 6449, this.L, 6450, 6450, this.nsm, 6451, 6456, this.L, 6457, 6459, this.nsm, 6460, 6463,\n            this.L, 6464, 6464, this.ON, 6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON, 6656, 8124, this.L,\n            8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON, 8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157,\n            8159, this.ON, 8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON, 8191, 8191, this.L, 8192, 8202,\n            this.WS, 8203, 8205, this.BN, 8206, 8206, this.L, 8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.lre, 8235, 8235, this.rle, 8236, 8236, this.pdf, 8237, 8237, this.lro, 8238, 8238, this.rlo, 8239, 8239, this.WS,\n            8240, 8244, this.ET, 8245, 8276, this.ON, 8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS, 8288,\n            8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN, 8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315,\n            this.ET, 8316, 8318, this.ON, 8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON, 8335, 8351,\n            this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.nsm, 8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L,\n            8451, 8454, this.ON, 8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON, 8469, 8469, this.L, 8470,\n            8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON, 8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487,\n            this.ON, 8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET, 8495, 8497, this.L, 8498, 8498, this.ON,\n            8499, 8505, this.L, 8506, 8507, this.ON, 8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON, 8524,\n            8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON, 8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082,\n            this.L, 9083, 9108, this.ON, 9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON, 9255, 9279, this.L,\n            9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN, 9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752,\n            9752, this.L, 9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L, 9888, 9889, this.ON, 9890, 9984,\n            this.L, 9985, 9988, this.ON, 9989, 9989, this.L, 9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024,\n            this.L, 10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L, 10063, 10066, this.ON, 10067,\n            10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L, 10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON,\n            10133, 10135, this.L, 10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L, 10192, 10219,\n            this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L, 11904, 11929, this.ON, 11930, 11930, this.L, 11931,\n            12019, this.ON, 12020, 12031, this.L, 12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON, 12321, 12329, this.L, 12330, 12335,\n            this.nsm, 12336, 12336, this.ON, 12337, 12341, this.L, 12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352,\n            12440, this.L, 12441, 12442, this.nsm, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON, 12449, 12538, this.L,\n            12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON, 12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923,\n            this.L, 12924, 12925, this.ON, 12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON, 13008,\n            13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON, 13280, 13310, this.L, 13311, 13311, this.ON,\n            13312, 19903, this.L, 19904, 19967, this.ON, 19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285,\n            this.R, 64286, 64286, this.nsm, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R, 64311, 64311, this.L, 64312,\n            64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R, 64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323,\n            64324, this.R, 64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L, 64467, 64829, this.AL,\n            64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL, 64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007,\n            this.L, 65008, 65020, this.AL, 65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.nsm, 65040, 65055, this.L, 65056,\n            65059, this.nsm, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS, 65105, 65105, this.ON, 65106, 65106, this.CS,\n            65107, 65107, this.L, 65108, 65108, this.ON, 65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121,\n            this.ON, 65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON, 65129, 65130, this.ET, 65131,\n            65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL, 65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L,\n            65279, 65279, this.BN, 65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON, 65291, 65291,\n            this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS, 65295, 65295, this.ES, 65296, 65305, this.EN, 65306,\n            65306, this.CS, 65307, 65312, this.ON, 65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET, 65511, 65511, this.L, 65512, 65518,\n            this.ON, 65519, 65528, this.L, 65529, 65531, this.BN, 65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this._charTypes.length; ++i) {\n            var start = this._charTypes[Number.parseInt(i.toString(), 10)];\n            var end = this._charTypes[++i];\n            var b = this._charTypes[++i];\n            while (start <= end) {\n                this._rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    _RtlCharacters.prototype._getVisualOrder = function (inputText, isRtl) {\n        this._type = this._getCharacterCode(inputText);\n        this._textOrder = isRtl ? this.lre : this.L;\n        this._doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this._levels.length; i++) {\n            result[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n        }\n        return result;\n    };\n    _RtlCharacters.prototype._getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n            characterCodes[Number.parseInt(i.toString(), 10)] = this._rtlCharacterTypes[Number.parseInt(value.toString(), 10)];\n        }\n        return characterCodes;\n    };\n    _RtlCharacters.prototype._setDefaultLevels = function () {\n        for (var i = 0; i < this._length; i++) {\n            this._levels[Number.parseInt(i.toString(), 10)] = this._textOrder;\n        }\n    };\n    _RtlCharacters.prototype._setLevels = function () {\n        this._setDefaultLevels();\n        for (var n = 0; n < this._length; ++n) {\n            var level = this._levels[Number.parseInt(n.toString(), 10)];\n            this._levels[Number.parseInt(n.toString(), 10)] = level;\n        }\n    };\n    _RtlCharacters.prototype._updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] === this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] !== this.L) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] !== this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n            }\n        }\n    };\n    _RtlCharacters.prototype._doVisualOrder = function () {\n        this._length = this._type.length;\n        this._result = this._type;\n        this._levels = [];\n        this._setLevels();\n        this._length = this._getEmbeddedCharactersLength();\n        var preview = this._textOrder;\n        var i = 0;\n        while (i < this._length) {\n            var level = this._levels[Number.parseInt(i.toString(), 10)];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this._length && this._levels[Number.parseInt(length_1.toString(), 10)] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this._length ? this._levels[Number.parseInt(length_1.toString(), 10)] : this._textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this._check(i, length_1, level, preType, type);\n            this._updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this._checkEmbeddedCharacters(this._length);\n    };\n    _RtlCharacters.prototype._getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this._length; ++i) {\n            if (!(this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN)) {\n                this._result[Number.parseInt(index.toString(), 10)] = this._result[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(index.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n                index++;\n            }\n        }\n        return index;\n    };\n    _RtlCharacters.prototype._checkEmbeddedCharacters = function (length) {\n        for (var i = this._type.length - 1; i >= 0; --i) {\n            if (this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN) {\n                this._result[Number.parseInt(i.toString(), 10)] = this._type[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = -1;\n            }\n            else {\n                length -= 1;\n                this._result[Number.parseInt(i.toString(), 10)] = this._result[Number.parseInt(length.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(length.toString(), 10)];\n            }\n        }\n        for (var i = 0; i < this._type.length; i++) {\n            if (this._levels[Number.parseInt(i.toString(), 10)] === -1) {\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[i - 1];\n            }\n        }\n    };\n    _RtlCharacters.prototype._check = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.nsm) {\n                this._result[Number.parseInt(i.toString(), 10)] = charType;\n            }\n            else {\n                charType = this._result[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                        if (this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                            this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this._checkArabicCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.AL) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.R;\n            }\n        }\n        this._checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                var preview = this._result[i - 1];\n                var success = this._result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.EN;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] === this.CS && preview === this.AN && success === this.AN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                }\n            }\n        }\n        this._checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this._getLength(s, length, b);\n                var data = s === index ? startType : this._result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this._result[Number.parseInt(l.toString(), 10)];\n                }\n                i = l;\n            }\n        }\n        this._checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES || this._result[Number.parseInt(i.toString(), 10)] === this.ET\n                || this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.ON;\n            }\n        }\n        this._checkOtherCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R) {\n                        pst = this._result[Number.parseInt(j.toString(), 10)];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.L;\n                }\n            }\n        }\n        this._checkCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this._result[Number.parseInt(index.toString(), 10)];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[Number.parseInt(i.toString(), 10)]) {\n                    index = this._getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    _RtlCharacters.prototype._checkCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.WS ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.ON ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.B ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this._getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this._result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this._result[Number.parseInt(l.toString(), 10)];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this._result[Number.parseInt(j.toString(), 10)] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return _RtlCharacters;\n}());\nexport { _RtlCharacters };\n","import { _UnicodeLine } from './../../fonts/pdf-standard-font';\nimport { _ArabicShapeRenderer } from './../../graphics/rightToLeft/text-shape';\nimport { _Bidirectional } from './../../graphics/rightToLeft/bidirectional';\nimport { PdfTextDirection } from './../../enumerator';\nimport { _stringToUnicodeArray, _bytesToString } from './../../utils';\nvar _RtlRenderer = /** @class */ (function () {\n    function _RtlRenderer() {\n        this._openBracket = '(';\n        this._closeBracket = ')';\n    }\n    _RtlRenderer.prototype._layout = function (line, font, rtl, wordSpace, format) {\n        var result = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (font._isUnicode) {\n                result = this._customLayout(line, rtl, format, font, wordSpace);\n            }\n            else {\n                result = [];\n                result[0] = line;\n            }\n        }\n        return result;\n    };\n    _RtlRenderer.prototype._splitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            var system = false;\n            if (!system) {\n                words = this._customSplitLayout(line, font, rtl, wordSpace, format);\n            }\n        }\n        return words;\n    };\n    _RtlRenderer.prototype._getGlyphIndex = function (line, font, glyphs) {\n        glyphs = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (line.length === 0) {\n                return { _result: false, _glyphIndex: glyphs };\n            }\n            var renderer = new _ArabicShapeRenderer();\n            var text = renderer._shape(line);\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            glyphs = [text.length];\n            var i = 0;\n            for (var k = 0, len = text.length; k < len; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = ttfReader._getGlyph(ch);\n                if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                    glyphs[i++] = (glyphInfo)._index;\n                }\n            }\n        }\n        var unicodeLine = new _UnicodeLine();\n        unicodeLine._result = true;\n        unicodeLine._glyphIndex = glyphs;\n        return unicodeLine;\n    };\n    _RtlRenderer.prototype._customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            var result = null;\n            if (line !== null && typeof line !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var bidi = new _Bidirectional();\n                    result = bidi._getLogicalToVisualString(line, rtl);\n                }\n            }\n            return result;\n        }\n        else {\n            var layouted = '';\n            var result = [];\n            if (line !== null && typeof line !== 'undefined' && font !== null && typeof font !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var renderer = new _ArabicShapeRenderer();\n                    var txt = renderer._shape(line);\n                    layouted = this._customLayout(txt, rtl, format);\n                }\n                if (wordSpace) {\n                    var words = layouted.split('');\n                    var count = words.length;\n                    for (var i = 0; i < count; i++) {\n                        words[Number.parseInt(i.toString(), 10)] = this._addCharacter(font, words[Number.parseInt(i.toString(), 10)]);\n                    }\n                    result = words;\n                }\n                else {\n                    result = [];\n                    result[0] = this._addCharacter(font, layouted);\n                }\n            }\n            return result;\n        }\n    };\n    _RtlRenderer.prototype._addCharacter = function (font, glyphs) {\n        if (font !== null && typeof font !== 'undefined' && glyphs !== null && typeof glyphs !== 'undefined') {\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            font._setSymbols(glyphs);\n            glyphs = ttfReader._convertString(glyphs);\n            var bytes = _stringToUnicodeArray(glyphs);\n            glyphs = _bytesToString(bytes);\n        }\n        return glyphs;\n    };\n    _RtlRenderer.prototype._customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (line !== null && typeof line !== 'undefined') {\n            var reversedLine = this._customLayout(line, rtl, format);\n            words = reversedLine.split('');\n        }\n        return words;\n    };\n    return _RtlRenderer;\n}());\nexport { _RtlRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfStringFormat } from './pdf-string-format';\nimport { _PdfFontMetrics, _CjkWidthTable, _StandardWidthTable, _CjkSameWidth, _CjkDifferentWidth } from './pdf-font-metrics';\nimport { _PdfDictionary, _PdfName } from './../pdf-primitives';\nimport { _PdfStringLayouter } from './string-layouter';\nimport { _UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { _fromRectangle } from './../utils';\nimport { PdfTextDirection } from './../../core/enumerator';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\n/**\n * Represents the base class for font objects.`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this._size = size;\n        }\n        else {\n            this._size = size;\n            this._style = style;\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF font.\n         *\n         * @returns {number} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Gets the font size\n         * let size: number = font.size;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style of the PDF font.\n         *\n         * @returns {PdfFontStyle} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font style\n         * let style: PdfFontStyle = font.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the style of the PDF font.\n         *\n         * @param {PdfFontStyle} value to font style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Sets the font style\n         * font.style = PdfFontStyle.italic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isUnderline\", {\n        /**\n         * Gets the boolean flag indicating whether the font has underline style or not.\n         *\n         * @returns {boolean} isUnderline.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.underline);\n         * // Gets the boolean flag indicating whether the font has underline style or not.\n         * let underline: boolean = font.isUnderline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.underline) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isStrikeout\", {\n        /**\n         * Gets the boolean flag indicating whether the font has strike out style or not.\n         *\n         * @returns {boolean} isStrikeout.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the boolean flag indicating whether the font has strike out style or not.\n         * let strikeout: boolean = font.isStrikeout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.strikeout) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"_metrics\", {\n        get: function () {\n            return this._fontMetrics;\n        },\n        set: function (value) {\n            this._fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isBold\", {\n        /**\n         * Gets the boolean flag indicating whether the font has bold style or not.\n         *\n         * @returns {boolean} isBold.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.bold);\n         * // Gets the boolean flag indicating whether the font has bold style or not.\n         * let bold: boolean = font.isBold;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isItalic\", {\n        /**\n         * Gets the boolean flag indicating whether the font has italic style or not.\n         *\n         * @returns {boolean} isItalic.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the boolean flag indicating whether the font has italic style or not.\n         * let italic: boolean = font.isItalic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the font height.\n         *\n         * @returns {number} height.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font height\n         * let height: number = font.height;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._metrics._getHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype._setInternals = function (internals) {\n        if (!internals) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this._pdfFontInternals = internals;\n    };\n    PdfFont.prototype._getCharacterCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            var numSymbols = 0;\n            var curIndex = 0;\n            curIndex = text.indexOf(symbols, curIndex);\n            while (curIndex !== -1) {\n                numSymbols++;\n                curIndex++;\n                curIndex = text.indexOf(symbols, curIndex);\n            }\n            return numSymbols;\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < text.length; i++) {\n                if (symbols.indexOf(text[Number.parseInt(i.toString(), 10)]) !== -1) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 === null) &&\n            typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 === null)\n            && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number'\n            && (arg3 instanceof PdfStringFormat || arg3 === null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = [arg2, 0];\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new _PdfStringLayouter();\n            var result = layouter._layout(text, this, temparg3, temparg2);\n            arg4 = text.length;\n            arg5 = (result._empty) ? 0 : result._lines.length;\n            return result._actualSize;\n        }\n    };\n    PdfFont.prototype._applyFormatSettings = function (line, format, width) {\n        var realWidth = width;\n        if (typeof format !== 'undefined' && format !== null && width > 0) {\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            if (format.wordSpacing !== 0) {\n                realWidth += this._getCharacterCount(line, [' ', '\\t']) * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    return PdfFont;\n}());\nexport { PdfFont };\n/**\n * Represents one of the 14 standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._checkStyle();\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF standard font.\n         *\n         * @returns {PdfFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the font family\n         * let fontFamily: PdfFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStandardFont.prototype._checkStyle = function () {\n        if (this._fontFamily === PdfFontFamily.symbol || this._fontFamily === PdfFontFamily.zapfDingbats) {\n            this._style &= ~(PdfFontStyle.bold | PdfFontStyle.italic);\n        }\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type1'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        if (this._fontFamily !== PdfFontFamily.symbol && this._fontFamily !== PdfFontFamily.zapfDingbats) {\n            dictionary.set('Encoding', new _PdfName('WinAnsiEncoding'));\n        }\n        return dictionary;\n    };\n    PdfStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this._metrics._name === '0' ||\n            this._metrics._name === '1' ||\n            this._metrics._name === '2' ||\n            this._metrics._name === '3' ||\n            this._metrics._name === '4') {\n            code = code - 32;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var widthTable = this._metrics._widthTable;\n        width = widthTable._itemAt(code);\n        return width;\n    };\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n/**\n * Represents one of the 7 CJK standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCjkStandardFont = /** @class */ (function (_super) {\n    __extends(PdfCjkStandardFont, _super);\n    function PdfCjkStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._size = size;\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfCjkStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF CJK font.\n         *\n         * @returns {PdfCjkFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF CJK standard font\n         * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n         * // Gets the font family\n         * let fontFamily: PdfCjkFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCjkStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfCjkStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfCjkStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type0'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('Encoding', this._getEncoding(this._fontFamily));\n        dictionary.set('DescendantFonts', this._getDescendantFont());\n        return dictionary;\n    };\n    PdfCjkStandardFont.prototype._getEncoding = function (fontFamily) {\n        var encoding = 'Unknown';\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                encoding = 'UniKS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                encoding = 'UniJIS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                encoding = 'UniCNS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                encoding = 'UniGB-UCS2-H';\n                break;\n        }\n        return new _PdfName(encoding);\n    };\n    PdfCjkStandardFont.prototype._getDescendantFont = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('CIDFontType2'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('DW', this._metrics._widthTable._defaultWidth);\n        dictionary.set('W', this._metrics._widthTable._toArray());\n        dictionary.set('FontDescriptor', _PdfCjkFontDescriptorFactory._getFontDescriptor(this._fontFamily, this._style, this._metrics));\n        dictionary.set('CIDSystemInfo', this._getSystemInformation());\n        return [dictionary];\n    };\n    PdfCjkStandardFont.prototype._getSystemInformation = function () {\n        var systemInformation = new _PdfDictionary();\n        systemInformation._updated = true;\n        systemInformation.set('Registry', 'Adobe');\n        switch (this._fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                systemInformation.set('Ordering', 'Korea1');\n                systemInformation.set('Supplement', 1);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                systemInformation.set('Ordering', 'Japan1');\n                systemInformation.set('Supplement', 2);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                systemInformation.set('Ordering', 'CNS1');\n                systemInformation.set('Supplement', '0');\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                systemInformation.set('Ordering', 'GB1');\n                systemInformation.set('Supplement', 2);\n                break;\n        }\n        return systemInformation;\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF CJK standard font\n     * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20, PdfFontStyle.bold);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCjkStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0; i < line.length; i++) {\n            width += this._getCharacterWidthInternal(line.charCodeAt(i));\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfCjkStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        charCode = (charCode >= 0) ? charCode : 0;\n        return this._metrics._widthTable._itemAt(charCode);\n    };\n    return PdfCjkStandardFont;\n}(PdfFont));\nexport { PdfCjkStandardFont };\n/**\n * Represents TrueType font.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF truetype font\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._isEmbedFont = false;\n        _this._isUnicode = true;\n        if (style !== undefined) {\n            _this._createFontInternal(base64String, style);\n        }\n        else {\n            _this._createFontInternal(base64String, PdfFontStyle.regular);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isUnicode\", {\n        /**\n         * Gets the boolean flag indicating whether the font has unicode or not.\n         *\n         * @returns {boolean} unicode.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font has or not.\n         * let isUnicode: boolean = font.isUnicode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isEmbed\", {\n        /**\n         * Gets the boolean flag indicating whether the font is embedded or not.\n         *\n         * @returns {boolean} isEmbed.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font is embedded or not.\n         * let isEmbed: boolean = font.isEmbed;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEmbedFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTrueTypeFont.prototype._createFontInternal = function (base64String, style) {\n        this._fontInternal = new _UnicodeTrueTypeFont(base64String, this._size);\n        this._calculateStyle(style);\n        this._initializeInternals();\n    };\n    PdfTrueTypeFont.prototype._calculateStyle = function (style) {\n        var iStyle = this._fontInternal._ttfMetrics._macStyle;\n        if ((style & PdfFontStyle.underline) !== 0) {\n            iStyle |= PdfFontStyle.underline;\n        }\n        if ((style & PdfFontStyle.strikeout) !== 0) {\n            iStyle |= PdfFontStyle.strikeout;\n        }\n        this.style = iStyle;\n    };\n    PdfTrueTypeFont.prototype._initializeInternals = function () {\n        var internals = null;\n        if (this._fontInternal instanceof _UnicodeTrueTypeFont) {\n            this._fontInternal._isEmbed = this._isEmbedFont;\n        }\n        this._fontInternal._createInternals();\n        internals = this._fontInternal._getInternals();\n        this._metrics = this._fontInternal._metrics;\n        this._metrics._isUnicodeFont = true;\n        this._setInternals(internals);\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF truetype font\n     * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n            width = this._getUnicodeLineWidth(line, width);\n        }\n        else {\n            for (var i = 0, len = line.length; i < len; i++) {\n                width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getUnicodeLineWidth = function (line, width) {\n        width = 0;\n        var glyphIndex = [];\n        var result = false;\n        var rtlRender = new _RtlRenderer();\n        var value = rtlRender._getGlyphIndex(line, this, glyphIndex);\n        result = value._result;\n        glyphIndex = value._glyphIndex;\n        if (result && glyphIndex !== null) {\n            var ttfReader = this._fontInternal._ttfReader;\n            for (var i = 0, len = glyphIndex.length; i < len; i++) {\n                var index = glyphIndex[Number.parseInt(i.toString(), 10)];\n                var glyph = ttfReader._getGlyph(index);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph._width;\n                }\n            }\n        }\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidth = function (charCode, format) {\n        var codeWidth = this._fontInternal._getCharacterWidth(charCode);\n        var size = this._metrics._getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    PdfTrueTypeFont.prototype._setSymbols = function (text) {\n        var internalFont = this._fontInternal;\n        if (internalFont !== null && typeof internalFont !== 'undefined') {\n            internalFont._setSymbols(text);\n        }\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this._metrics._name === '0' ||\n            this._metrics._name === '1' ||\n            this._metrics._name === '2' ||\n            this._metrics._name === '3' ||\n            this._metrics._name === '4') {\n            code = code - 32;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var widthTable = this._metrics._widthTable;\n        width = widthTable._itemAt(code);\n        return width;\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\nvar _PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfStandardFontMetricsFactory() {\n    }\n    _PdfStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.helvetica:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                break;\n            case PdfFontFamily.courier:\n                metrics = this._getCourierMetrics(fontStyle, size);\n                break;\n            case PdfFontFamily.timesRoman:\n                metrics = this._getTimesMetrics(fontStyle, size);\n                break;\n            case PdfFontFamily.symbol:\n                metrics = this._getSymbolMetrics(size);\n                break;\n            case PdfFontFamily.zapfDingbats:\n                metrics = this._getZapfDingbatsMetrics(size);\n                break;\n            default:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                break;\n        }\n        metrics._name = fontFamily.toString();\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getHelveticaMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaBoldItalicAscent;\n            metrics._descent = this._helveticaBoldItalicDescent;\n            metrics._postScriptName = this._helveticaBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._helveticaBoldAscent;\n            metrics._descent = this._helveticaBoldDescent;\n            metrics._postScriptName = this._helveticaBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaItalicAscent;\n            metrics._descent = this._helveticaItalicDescent;\n            metrics._postScriptName = this._helveticaItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._helveticaAscent;\n            metrics._descent = this._helveticaDescent;\n            metrics._postScriptName = this._helveticaName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getCourierMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierBoldItalicAscent;\n            metrics._descent = this._courierBoldItalicDescent;\n            metrics._postScriptName = this._courierBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._courierBoldAscent;\n            metrics._descent = this._courierBoldDescent;\n            metrics._postScriptName = this._courierBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierItalicAscent;\n            metrics._descent = this._courierItalicDescent;\n            metrics._postScriptName = this._courierItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._courierAscent;\n            metrics._descent = this._courierDescent;\n            metrics._postScriptName = this._courierName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getTimesMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesBoldItalicAscent;\n            metrics._descent = this._timesBoldItalicDescent;\n            metrics._postScriptName = this._timesBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldItalicWidths);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._timesBoldAscent;\n            metrics._descent = this._timesBoldDescent;\n            metrics._postScriptName = this._timesBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesItalicAscent;\n            metrics._descent = this._timesItalicDescent;\n            metrics._postScriptName = this._timesItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanItalicWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._timesAscent;\n            metrics._descent = this._timesDescent;\n            metrics._postScriptName = this._timesName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getSymbolMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._symbolAscent;\n        metrics._descent = this._symbolDescent;\n        metrics._postScriptName = this._symbolName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._symbolWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getZapfDingbatsMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._zapfDingbatsAscent;\n        metrics._descent = this._zapfDingbatsDescent;\n        metrics._postScriptName = this._zapfDingbatsName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._zapfDingbatsWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    _PdfStandardFontMetricsFactory._helveticaAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaName = 'Helvetica';\n    _PdfStandardFontMetricsFactory._helveticaBoldAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldName = 'Helvetica-Bold';\n    _PdfStandardFontMetricsFactory._helveticaItalicAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaItalicDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaItalicName = 'Helvetica-Oblique';\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    _PdfStandardFontMetricsFactory._courierAscent = 805;\n    _PdfStandardFontMetricsFactory._courierDescent = -250;\n    _PdfStandardFontMetricsFactory._courierName = 'Courier';\n    _PdfStandardFontMetricsFactory._courierBoldAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldName = 'Courier-Bold';\n    _PdfStandardFontMetricsFactory._courierItalicAscent = 805;\n    _PdfStandardFontMetricsFactory._courierItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierItalicName = 'Courier-Oblique';\n    _PdfStandardFontMetricsFactory._courierBoldItalicAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldItalicName = 'Courier-BoldOblique';\n    _PdfStandardFontMetricsFactory._timesAscent = 898;\n    _PdfStandardFontMetricsFactory._timesDescent = -218;\n    _PdfStandardFontMetricsFactory._timesName = 'Times-Roman';\n    _PdfStandardFontMetricsFactory._timesBoldAscent = 935;\n    _PdfStandardFontMetricsFactory._timesBoldDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldName = 'Times-Bold';\n    _PdfStandardFontMetricsFactory._timesItalicAscent = 883;\n    _PdfStandardFontMetricsFactory._timesItalicDescent = -217;\n    _PdfStandardFontMetricsFactory._timesItalicName = 'Times-Italic';\n    _PdfStandardFontMetricsFactory._timesBoldItalicAscent = 921;\n    _PdfStandardFontMetricsFactory._timesBoldItalicDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldItalicName = 'Times-BoldItalic';\n    _PdfStandardFontMetricsFactory._symbolAscent = 1010;\n    _PdfStandardFontMetricsFactory._symbolDescent = -293;\n    _PdfStandardFontMetricsFactory._symbolName = 'Symbol';\n    _PdfStandardFontMetricsFactory._zapfDingbatsAscent = 820;\n    _PdfStandardFontMetricsFactory._zapfDingbatsDescent = -143;\n    _PdfStandardFontMetricsFactory._zapfDingbatsName = 'ZapfDingbats';\n    _PdfStandardFontMetricsFactory._arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    _PdfStandardFontMetricsFactory._fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    _PdfStandardFontMetricsFactory._zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return _PdfStandardFontMetricsFactory;\n}());\nexport { _PdfStandardFontMetricsFactory };\nvar _PdfCjkStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfCjkStandardFontMetricsFactory() {\n    }\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsGothicMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 127, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYGoThic-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsShinMyeongJoMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYSMyeongJo-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiKakuGothicW5 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -125;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiKakuGo-W5';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiMinchoW3 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -143;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiMin-W3';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeHeiMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MHei-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeSungLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MSung-Light';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getSinoTypeSongLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(814, 939, 500));\n        widthTable._add(new _CjkDifferentWidth(7712, [500]));\n        widthTable._add(new _CjkDifferentWidth(7716, [500]));\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'STSong-Light';\n        }\n        metrics._widthTable = widthTable;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                metrics = this._getHanyangSystemsGothicMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsGothicMedium';\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                metrics = this._getHanyangSystemsShinMyeongJoMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsShinMyeongJoMedium';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                metrics = this._getHeiseiKakuGothicW5(fontStyle, size);\n                metrics._name = 'HeiseiKakuGothicW5';\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                metrics = this._getHeiseiMinchoW3(fontStyle, size);\n                metrics._name = 'HeiseiMinchoW3';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                metrics = this._getMonotypeHeiMedium(fontStyle, size);\n                metrics._name = 'MonotypeHeiMedium';\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                metrics = this._getMonotypeSungLight(fontStyle, size);\n                metrics._name = 'MonotypeSungLight';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                metrics = this._getSinoTypeSongLight(fontStyle, size);\n                metrics._name = 'SinoTypeSongLight';\n                break;\n        }\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    return _PdfCjkStandardFontMetricsFactory;\n}());\nexport { _PdfCjkStandardFontMetricsFactory };\nvar _PdfCjkFontDescriptorFactory = /** @class */ (function () {\n    function _PdfCjkFontDescriptorFactory() {\n    }\n    _PdfCjkFontDescriptorFactory._fillMonotypeSungLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -160, y: -249, width: 1175, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiKakuGothicW5 = function (fontDescriptor, fontStyle, fontFamily, fontMetrics) {\n        var fontBox = { x: -92, y: -250, width: 1102, height: 1172 };\n        var fontBoxItalic = { x: -92, y: -250, width: 1102, height: 1932 };\n        if ((fontStyle & (PdfFontStyle.italic | PdfFontStyle.bold)) !== PdfFontStyle.italic) {\n            this._fillFontBox(fontDescriptor, fontBox);\n        }\n        else {\n            this._fillFontBox(fontDescriptor, fontBoxItalic);\n        }\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 689);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsShinMyeongJoMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: 0, y: -148, width: 1001, height: 1028 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiMinchoW3 = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -123, y: -257, width: 1124, height: 1167 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 702);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillSinoTypeSongLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -25, y: -254, width: 1025, height: 1134 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillMonotypeHeiMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -45, y: -250, width: 1060, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsGothicMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -6, y: -145, width: 1009, height: 1025 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('Flags', 4);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillFontBox = function (fontDescriptor, fontBox) {\n        fontDescriptor.set('FontBBox', _fromRectangle(fontBox));\n    };\n    _PdfCjkFontDescriptorFactory._fillKnownInformation = function (fontDescriptor, fontFamily, fontMetrics) {\n        fontDescriptor.set('FontName', _PdfName.get(fontMetrics._postScriptName));\n        fontDescriptor.set('Type', _PdfName.get('FontDescriptor'));\n        fontDescriptor.set('ItalicAngle', 0);\n        fontDescriptor.set('MissingWidth', fontMetrics._widthTable._defaultWidth);\n        fontDescriptor.set('Ascent', fontMetrics._ascent);\n        fontDescriptor.set('Descent', fontMetrics._descent);\n        switch (fontFamily) {\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                fontDescriptor.set('Flags', 4);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n            case PdfCjkFontFamily.monotypeSungLight:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                fontDescriptor.set('Flags', 6);\n                break;\n        }\n    };\n    _PdfCjkFontDescriptorFactory._getFontDescriptor = function (fontFamily, fontStyle, fontMetrics) {\n        var fontDescriptor = new _PdfDictionary();\n        fontDescriptor._updated = true;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                this._fillHanyangSystemsGothicMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                this._fillHanyangSystemsShinMyeongJoMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                this._fillHeiseiKakuGothicW5(fontDescriptor, fontStyle, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                this._fillHeiseiMinchoW3(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                this._fillMonotypeHeiMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                this._fillMonotypeSungLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                this._fillSinoTypeSongLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            default:\n                break;\n        }\n        return fontDescriptor;\n    };\n    return _PdfCjkFontDescriptorFactory;\n}());\nexport { _PdfCjkFontDescriptorFactory };\n/**\n * Public enum to define font style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the font style `regular`.\n     */\n    PdfFontStyle[PdfFontStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the font style `bold`.\n     */\n    PdfFontStyle[PdfFontStyle[\"bold\"] = 1] = \"bold\";\n    /**\n     * Specifies the font style `italic`.\n     */\n    PdfFontStyle[PdfFontStyle[\"italic\"] = 2] = \"italic\";\n    /**\n     * Specifies the font style `underline`.\n     */\n    PdfFontStyle[PdfFontStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the font style `strikeout`.\n     */\n    PdfFontStyle[PdfFontStyle[\"strikeout\"] = 8] = \"strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Public enum to define font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `helvetica` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"helvetica\"] = 0] = \"helvetica\";\n    /**\n     * Specifies the `courier` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"courier\"] = 1] = \"courier\";\n    /**\n     * Specifies the `timesRoman` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"timesRoman\"] = 2] = \"timesRoman\";\n    /**\n     * Specifies the `symbol` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"symbol\"] = 3] = \"symbol\";\n    /**\n     * Specifies the `zapfDingbats` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"zapfDingbats\"] = 4] = \"zapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * Public enum to define CJK font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCjkFontFamily;\n(function (PdfCjkFontFamily) {\n    /**\n     * Specifies the `heiseiKakuGothicW5` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiKakuGothicW5\"] = 0] = \"heiseiKakuGothicW5\";\n    /**\n     * Specifies the `heiseiMinchoW3` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiMinchoW3\"] = 1] = \"heiseiMinchoW3\";\n    /**\n     * Specifies the `hanyangSystemsGothicMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsGothicMedium\"] = 2] = \"hanyangSystemsGothicMedium\";\n    /**\n     * Specifies the `hanyangSystemsShinMyeongJoMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsShinMyeongJoMedium\"] = 3] = \"hanyangSystemsShinMyeongJoMedium\";\n    /**\n     * Specifies the `monotypeHeiMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeHeiMedium\"] = 4] = \"monotypeHeiMedium\";\n    /**\n     * Specifies the `monotypeSungLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeSungLight\"] = 5] = \"monotypeSungLight\";\n    /**\n     * Specifies the `sinoTypeSongLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"sinoTypeSongLight\"] = 6] = \"sinoTypeSongLight\";\n})(PdfCjkFontFamily || (PdfCjkFontFamily = {}));\nvar _UnicodeLine = /** @class */ (function () {\n    function _UnicodeLine() {\n        this._result = false;\n        this._glyphIndex = [];\n    }\n    return _UnicodeLine;\n}());\nexport { _UnicodeLine };\n","import { _getBezierArc } from './../utils';\nimport { PdfFillMode } from './../enumerator';\nvar _PdfPath = /** @class */ (function () {\n    function _PdfPath() {\n        this._isRoundedRectangle = false;\n        this._fillMode = PdfFillMode.winding;\n        this._points = [];\n        this._pathTypes = [];\n        this._isStart = true;\n    }\n    Object.defineProperty(_PdfPath.prototype, \"_lastPoint\", {\n        get: function () {\n            var value = [0, 0];\n            var count = this._points.length;\n            if (this._points.length > 0) {\n                value[0] = this._points[(count - 1)][0];\n                value[1] = this._points[(count - 1)][0];\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfPath.prototype._addLine = function (x1, y1, x2, y2) {\n        this._addPoints([x1, y1, x2, y2], _PathPointType.line);\n    };\n    _PdfPath.prototype._addLines = function (linePoints) {\n        var start = linePoints[0];\n        if (linePoints.length === 1) {\n            this._addPoint(linePoints[0], _PathPointType.line);\n        }\n        else {\n            for (var i = 1; i < linePoints.length; i++) {\n                var last = linePoints[Number.parseInt(i.toString(), 10)];\n                this._addLine(start[0], start[1], last[0], last[1]);\n                start = last;\n            }\n        }\n    };\n    _PdfPath.prototype._addPoints = function (points, type, start, end) {\n        var startIndex = (typeof start !== 'undefined') ? start : 0;\n        var endIndex = (typeof end !== 'undefined') ? end : points.length;\n        for (var i = startIndex; i < endIndex; i++) {\n            var point = [points[Number.parseInt(i.toString(), 10)], points[i + 1]];\n            if (i === startIndex) {\n                if (this._points.length === 0 || this._isStart) {\n                    this._addPoint(point, _PathPointType.start);\n                    this._isStart = false;\n                }\n                else if (this._isRoundedRectangle && (point[0] !== this._lastPoint[0] || point[1] !== this._lastPoint[1])) {\n                    this._addPoint(point, _PathPointType.line);\n                }\n                else if (point[0] !== this._lastPoint[0] && point[1] !== this._lastPoint[1]) {\n                    this._addPoint(point, _PathPointType.line);\n                }\n            }\n            else {\n                this._addPoint(point, type);\n            }\n            i++;\n        }\n    };\n    _PdfPath.prototype._addPoint = function (points, type) {\n        this._points.push(points);\n        this._pathTypes.push(type);\n    };\n    _PdfPath.prototype._addArc = function (x, y, width, height, startAngle, sweepAngle) {\n        var points = _getBezierArc(x, y, x + width, y + height, startAngle, sweepAngle);\n        for (var i = 0; i < points.length; ++i) {\n            var list = [points[Number.parseInt(i.toString(), 10)],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i]];\n            this._addPoints(list, _PathPointType.bezier);\n        }\n    };\n    _PdfPath.prototype._addRectangle = function (x, y, width, height) {\n        this._startFigure();\n        this._addPoints([x, y, x + width, y, x + width, y + height, x, y + height], _PathPointType.line);\n        this._closeFigure();\n    };\n    _PdfPath.prototype._addPolygon = function (points) {\n        var newPoints = [];\n        points.forEach(function (element) {\n            newPoints.push(element[0], element[1]);\n        });\n        this._startFigure();\n        this._addPoints(newPoints, _PathPointType.line);\n        this._closeFigure();\n    };\n    _PdfPath.prototype._addEllipse = function (x, y, width, height) {\n        this._startFigure();\n        this._addArc(x, y, width, height, 0, 360);\n        this._closeFigure();\n    };\n    _PdfPath.prototype._addBezierPoints = function (pointsCollection) {\n        if (pointsCollection.length < 4) {\n            throw Error('Incorrect size of array points');\n        }\n        var bound = 3;\n        var index = 0;\n        var start = pointsCollection[Number.parseInt(index.toString(), 10)];\n        index++;\n        while ((index + bound) <= pointsCollection.length) {\n            var inner1 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var inner2 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var end = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            this._addBezier(start[0], start[1], inner1[0], inner1[1], inner2[0], inner2[1], end[0], end[1]);\n            start = end;\n        }\n    };\n    _PdfPath.prototype._addBezier = function (x, y, firstX, firstY, secondX, secondY, endX, endY) {\n        var points = [];\n        points.push(x);\n        points.push(y);\n        points.push(firstX);\n        points.push(firstY);\n        points.push(secondX);\n        points.push(secondY);\n        points.push(endX);\n        points.push(endY);\n        this._addPoints(points, _PathPointType.bezier);\n    };\n    _PdfPath.prototype._closeFigure = function (index) {\n        if (typeof index !== 'undefined') {\n            var type = this._pathTypes[Number.parseInt(index.toString(), 10)];\n            type |= _PathPointType.closePath;\n            this._pathTypes[Number.parseInt(index.toString(), 10)] = type;\n        }\n        else {\n            if (this._points.length > 0) {\n                this._closeFigure(this._points.length - 1);\n            }\n            this._startFigure();\n        }\n    };\n    _PdfPath.prototype._startFigure = function () {\n        this._isStart = true;\n    };\n    _PdfPath.prototype._getBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this._points.length > 0) {\n            var xmin = this._points[0][0];\n            var xmax = this._points[0][0];\n            var ymin = this._points[0][1];\n            var ymax = this._points[0][1];\n            for (var i = 1; i < this._points.length; ++i) {\n                var point = this._points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point[0], xmin);\n                xmax = Math.max(point[0], xmax);\n                ymin = Math.min(point[1], ymin);\n                ymax = Math.max(point[1], ymax);\n            }\n            bounds = [xmin, ymin, xmax - xmin, ymax - ymin];\n        }\n        return bounds;\n    };\n    return _PdfPath;\n}());\nexport { _PdfPath };\nexport var _PathPointType;\n(function (_PathPointType) {\n    _PathPointType[_PathPointType[\"start\"] = 0] = \"start\";\n    _PathPointType[_PathPointType[\"line\"] = 1] = \"line\";\n    _PathPointType[_PathPointType[\"bezier\"] = 3] = \"bezier\";\n    _PathPointType[_PathPointType[\"pathTypeMask\"] = 7] = \"pathTypeMask\";\n    _PathPointType[_PathPointType[\"dashMode\"] = 16] = \"dashMode\";\n    _PathPointType[_PathPointType[\"pathMarker\"] = 32] = \"pathMarker\";\n    _PathPointType[_PathPointType[\"closePath\"] = 128] = \"closePath\";\n})(_PathPointType || (_PathPointType = {}));\n","import { _PdfGraphicsUnit } from './../../enumerator';\nimport { _PdfUnitConvertor } from './../../graphics/pdf-graphics';\n/**\n * The 'PdfImage' contains methods and properties to handle the images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets the width of the PDF image.\n         *\n         * @returns {number} image width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the width of the image.\n         * let width: number = image.width;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageWidth;\n        },\n        /**\n         * Sets the width of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the width of the image.\n         * image.width = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets the height of the PDF image.\n         *\n         * @returns {number} image height.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the height of the image.\n         * let height: number = image.height;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageHeight;\n        },\n        /**\n         * Sets the height of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the height of the image.\n         * image.height = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the physical dimension of the PDF image (Read only).\n         *\n         * @returns {number[]} image physical dimension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the physical dimension of the image.\n         * let dimension: number[] = image.physicalDimension;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            this._imagePhysicalDimension = this._getPointSize(this.width, this.height, this._horizontalResolution);\n            return [this.width, this.height];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.draw = function (graphics, x, y) {\n        if ((x === null || typeof x === 'undefined') && (y === null || typeof y === 'undefined')) {\n            x = 0;\n            y = 0;\n        }\n        var needSave = (x !== 0 || y !== 0);\n        var state = null;\n        if (needSave) {\n            state = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        graphics.drawImage(this, 0, 0);\n        if (needSave) {\n            graphics.restore(state);\n        }\n    };\n    PdfImage.prototype._getPointSize = function (width, height, horizontalResolution) {\n        if ((horizontalResolution === null || typeof horizontalResolution === 'undefined')) {\n            var dpiX = 96;\n            var size = this._getPointSize(width, height, dpiX);\n            return size;\n        }\n        else {\n            var ucX = new _PdfUnitConvertor();\n            var ucY = new _PdfUnitConvertor();\n            var ptWidth = ucX._convertUnits(width, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var ptHeight = ucY._convertUnits(height, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var size = [ptWidth, ptHeight];\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","import { PdfPage } from './../pdf-page';\nimport { _PdfStreamWriter } from './pdf-stream-writer';\nimport { _PdfBaseStream } from './../base-stream';\nimport { _floatToString, _addProcSet, _reverseMapBlendMode, _mapBlendMode, _getNewGuidString, _getBezierArc, _numberToString, _bytesToString, _stringToUnicodeArray } from './../utils';\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfFont, PdfStandardFont, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { _PdfStringLayouter, _LineType, _StringTokenizer } from './../fonts/string-layouter';\nimport { PdfTextAlignment, PdfTextDirection, PdfSubSuperScript, PdfBlendMode, PdfLineJoin, PdfLineCap, PdfDashStyle, PdfFillMode } from './../enumerator';\nimport { PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { PdfTemplate } from './pdf-template';\nimport { _PdfPath, _PathPointType } from './pdf-path';\nimport { _UnicodeTrueTypeFont } from '../fonts/unicode-true-type-font';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\nimport { PdfImage } from './images/pdf-image';\n/**\n * Represents a graphics from a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * //Create a new pen.\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * //Draw line on the page graphics.\n * graphics.drawLine(pen, 10, 10, 100, 100);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfGraphics` class.\n     *\n     * @param {number[]} size The graphics client size.\n     * @param {_PdfContentStream} content Content stream.\n     * @param {_PdfCrossReference} xref Cross reference.\n     * @param {PdfPage | PdfTemplate} source Source object of the graphics.\n     * @private\n     */\n    function PdfGraphics(size, content, xref, source) {\n        this._pendingResource = []; // eslint-disable-line\n        this._hasResourceReference = false;\n        if (source instanceof PdfPage) {\n            this._source = source._pageDictionary;\n            this._page = source;\n        }\n        else if (source instanceof PdfTemplate) {\n            this._source = source._content.dictionary;\n            this._template = source;\n        }\n        if (this._source && this._source.has('Resources')) {\n            var obj = this._source.getRaw('Resources'); // eslint-disable-line\n            if (obj instanceof _PdfReference) {\n                this._hasResourceReference = true;\n                this._resourceObject = xref._fetch(obj);\n            }\n            else if (obj instanceof _PdfDictionary) {\n                this._resourceObject = obj;\n            }\n        }\n        else {\n            this._resourceObject = new _PdfDictionary();\n            this._source.update('Resources', this._resourceObject);\n        }\n        this._crossReference = xref;\n        this._sw = new _PdfStreamWriter(content);\n        this._size = size;\n        _addProcSet('PDF', this._resourceObject);\n        this._initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the size of the canvas reduced by margins and page templates (Read only).\n         *\n         * @returns {number[]} The width and height of the client area as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics client size.\n         * let size: number[] = page.graphics.clientSize;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return [this._clipBounds[2], this._clipBounds[3]];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"_matrix\", {\n        get: function () {\n            if (typeof this._m === 'undefined') {\n                this._m = new _PdfTransformationMatrix();\n            }\n            return this._m;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"_resources\", {\n        get: function () {\n            var _this = this;\n            if (typeof this._resourceMap === 'undefined') {\n                this._resourceMap = new Map();\n                if (this._resourceObject.has('Font')) {\n                    var fonts = this._resourceObject.get('Font');\n                    if (fonts && fonts.size > 0) {\n                        fonts.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('XObject')) {\n                    var other = this._resourceObject.get('XObject');\n                    if (other && other.size > 0) {\n                        other.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('ExtGState')) {\n                    var state = this._resourceObject.get('ExtGState');\n                    if (state && state.size > 0) {\n                        if (!this._transparencies) {\n                            this._transparencies = new Map();\n                        }\n                        state.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._setTransparencyData(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n            }\n            return this._resourceMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Save the current graphics state.\n     *\n     * @returns {PdfGraphicsState} graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this._matrix);\n        state._textRenderingMode = this._textRenderingMode;\n        state._charSpacing = this._characterSpacing;\n        state._textScaling = this._textScaling;\n        state._wordSpacing = this._wordSpacing;\n        state._currentBrush = this._currentBrush;\n        state._currentPen = this._currentPen;\n        state._currentFont = this._currentFont;\n        this._graphicsState.push(state);\n        this._sw._saveGraphicsState();\n        return state;\n    };\n    /**\n     * Restore the graphics state.\n     *\n     * @param {PdfGraphicsState} state graphics state.\n     * @returns {void} restore of the graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.restore = function (state) {\n        if (this._graphicsState.length > 0) {\n            if (typeof state === 'undefined') {\n                this._doRestore();\n            }\n            else {\n                if (this._graphicsState.length > 0 && this._graphicsState.indexOf(state) !== -1) {\n                    while (this._graphicsState.length > 0) {\n                        if (this._doRestore() === state) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._doRestore = function () {\n        var state = this._graphicsState.pop();\n        this._m = state._transformationMatrix;\n        this._currentBrush = state._currentBrush;\n        this._currentPen = state._currentPen;\n        this._currentFont = state._currentFont;\n        this._characterSpacing = state._charSpacing;\n        this._wordSpacing = state._wordSpacing;\n        this._textScaling = state._textScaling;\n        this._textRenderingMode = state._textRenderingMode;\n        this._sw._restoreGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.drawRectangle = function (x, y, width, height, first, second) {\n        var pen;\n        var brush;\n        if (first instanceof PdfPen) {\n            pen = first;\n            if (second) {\n                brush = second;\n            }\n        }\n        else {\n            brush = first;\n        }\n        this._stateControl(pen, brush);\n        this._sw._appendRectangle(x, y, width, height);\n        this._drawGraphicsPath(pen, brush);\n    };\n    PdfGraphics.prototype.drawPolygon = function (points, first, second) {\n        if (points.length > 0) {\n            var pen = void 0;\n            var brush = void 0;\n            if (first instanceof PdfPen) {\n                pen = first;\n                if (second) {\n                    brush = second;\n                }\n            }\n            else {\n                brush = first;\n            }\n            this._stateControl(pen, brush);\n            this._sw._beginPath(points[0][0], points[0][1]);\n            for (var i = 1; i < points.length; i++) {\n                this._sw._appendLineSegment(points[Number.parseInt(i.toString(), 10)][0], points[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._drawGraphicsPath(pen, brush, PdfFillMode.winding, true);\n        }\n    };\n    PdfGraphics.prototype.drawEllipse = function (x, y, width, height, first, second) {\n        var pen;\n        var brush;\n        if (first instanceof PdfPen) {\n            pen = first;\n            if (second) {\n                brush = second;\n            }\n        }\n        else {\n            brush = first;\n        }\n        this._stateControl(pen, brush);\n        this._constructArcPath(x, y, x + width, y + height, 0, 360);\n        this._drawGraphicsPath(pen, brush, PdfFillMode.winding, true);\n    };\n    /**\n     * Draw arc on the page graphics.\n     *\n     * @param {number} x value.\n     * @param {number} y value.\n     * @param {number} width value.\n     * @param {number} height value.\n     * @param {number} startAngle value.\n     * @param {number} sweepAngle value.\n     * @param {PdfPen} pen value.\n     * @returns {void} draw a arc.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * //Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * //Draw arc on the page graphics.\n     * graphics.drawArc(10, 20, 100, 200, 20, 30, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawArc = function (x, y, width, height, startAngle, sweepAngle, pen) {\n        if (sweepAngle !== 0) {\n            this._stateControl(pen);\n            this._constructArcPath(x, y, x + width, y + height, startAngle, sweepAngle);\n            this._drawGraphicsPath(pen, null, PdfFillMode.winding, false);\n        }\n    };\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size[0], size[1]);\n        }\n        else {\n            arg1._save();\n            var matrix = new _PdfTransformationMatrix();\n            this._getTranslateTransform(arg2, (arg3 + arg5), matrix);\n            this._getScaleTransform(arg4, arg5, matrix);\n            this._sw._write('q');\n            this._sw._modifyCtm(matrix);\n            var sourceDictionary = void 0;\n            var keyName = void 0;\n            var isNew = true;\n            if (this._resourceObject.has('XObject')) {\n                var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n                if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n                if (sourceDictionary) {\n                    isNew = false;\n                }\n            }\n            if (isNew) {\n                sourceDictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('XObject', sourceDictionary);\n            }\n            if (typeof keyName === 'undefined') {\n                keyName = _PdfName.get(_getNewGuidString());\n            }\n            if (this._crossReference) {\n                this._updateImageResource(arg1, keyName, sourceDictionary, this._crossReference);\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            else {\n                this._pendingResource.push({ 'resource': arg1, 'key': keyName, 'source': sourceDictionary });\n            }\n            this._sw._executeObject(keyName);\n            this._sw._write('Q');\n            this._sw._write('\\r\\n');\n            _addProcSet('ImageB', this._resourceObject);\n            _addProcSet('ImageC', this._resourceObject);\n            _addProcSet('ImageI', this._resourceObject);\n            _addProcSet('Text', this._resourceObject);\n        }\n    };\n    /**\n     * Draw the PDF template onto the page graphics.\n     *\n     * @param {PdfTemplate} template PDF template.\n     * @param {{x: number, y: number, width: number, height: number}} bounds Bounds.\n     * @param {number} bounds.x value.\n     * @param {number} bounds.y value.\n     * @param {number} bounds.width value.\n     * @param {number} bounds.height value.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Get the first annotation of the page\n     * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n     * // Gets the appearance template of the annotation.\n     * let template: PdfTemplate = annotation.createTemplate();\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * //Draw image on the page graphics.\n     * graphics.drawTemplate(template, 10, 20, template.size[0], template.size[1]);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawTemplate = function (template, bounds) {\n        var _this = this;\n        if (typeof template !== 'undefined') {\n            if (template._isExported) {\n                if (this._crossReference) {\n                    template._crossReference = this._crossReference;\n                    template._importStream(true);\n                }\n                else {\n                    template._importStream(false);\n                    this._pendingResource.push(template);\n                }\n            }\n            var scaleX = (template && template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n            var scaleY = (template && template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n            var needScale = !(scaleX === 1 && scaleY === 1);\n            var cropBox = void 0;\n            var mediaBox = void 0;\n            if (this._page) {\n                cropBox = this._page.cropBox;\n                mediaBox = this._page.mediaBox;\n                if (this._page._pageDictionary.has('CropBox') && this._page._pageDictionary.has('MediaBox')) {\n                    if (cropBox[0] > 0 && cropBox[1] > 0 && mediaBox[0] < 0 && mediaBox[1] < 0) {\n                        this.translateTransform(cropBox[0], -cropBox[1]);\n                        bounds.x = -cropBox[0];\n                        bounds.y = cropBox[1];\n                    }\n                }\n            }\n            var state = this.save();\n            var matrix = new _PdfTransformationMatrix();\n            if (this._page) {\n                var needTransform = (this._page._pageDictionary.has('CropBox') &&\n                    this._page._pageDictionary.has('MediaBox') && cropBox && mediaBox &&\n                    cropBox[0] === mediaBox[0] && cropBox[1] === mediaBox[1] && cropBox[2] === mediaBox[2] && cropBox[3] === mediaBox[3]) ||\n                    (this._page._pageDictionary.has('MediaBox') && mediaBox && mediaBox[3] === 0);\n                matrix._translate(bounds.x, -(bounds.y + ((this._page._origin[0] >= 0 || needTransform) ? bounds.height : 0)));\n            }\n            else {\n                matrix._translate(bounds.x, -(bounds.y + bounds.height));\n            }\n            if (needScale) {\n                if (template._isAnnotationTemplate && template._needScale) {\n                    var scaleApplied = false;\n                    if (template._content && template._content.dictionary) {\n                        var dictionary = template._content.dictionary;\n                        if (dictionary.has('Matrix') && dictionary.has('BBox')) {\n                            var templateMatrix = dictionary.getArray('Matrix');\n                            var templateBox = dictionary.getArray('BBox');\n                            if (templateMatrix && templateBox && templateMatrix.length > 5 && templateBox.length > 3) {\n                                var templateScaleX = Number.parseFloat(_numberToString(-templateMatrix[1]));\n                                var templateScaleY = Number.parseFloat(_numberToString(templateMatrix[2]));\n                                var roundScaleX = Number.parseFloat(_numberToString(scaleX));\n                                var roundScaleY = Number.parseFloat(_numberToString(scaleY));\n                                if (roundScaleX === templateScaleX &&\n                                    roundScaleY === templateScaleY &&\n                                    templateBox[2] === template._size[0] &&\n                                    templateBox[3] === template._size[1]) {\n                                    matrix = new _PdfTransformationMatrix();\n                                    matrix._translate(bounds.x - templateMatrix[4], bounds.y + templateMatrix[5]);\n                                    matrix._scale(1, 1);\n                                    scaleApplied = true;\n                                }\n                            }\n                        }\n                    }\n                    if (!scaleApplied) {\n                        matrix._scale(scaleX, scaleY);\n                    }\n                }\n                else {\n                    matrix._scale(scaleX, scaleY);\n                }\n            }\n            this._sw._modifyCtm(matrix);\n            var sourceDictionary = void 0;\n            var isReference = false;\n            var keyName_1;\n            var isNew = true;\n            var ref_1;\n            if (this._resourceObject.has('XObject')) {\n                var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n                if (obj instanceof _PdfReference) {\n                    isReference = true;\n                    sourceDictionary = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n                if (sourceDictionary) {\n                    isNew = false;\n                    this._resources.forEach(function (value, key) {\n                        if (key && key instanceof _PdfReference) {\n                            var base = _this._crossReference._fetch(key);\n                            if (base && template && base === template._content) {\n                                keyName_1 = value;\n                                ref_1 = key;\n                            }\n                        }\n                    });\n                }\n            }\n            if (isNew) {\n                sourceDictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('XObject', sourceDictionary);\n            }\n            if (typeof keyName_1 === 'undefined') {\n                keyName_1 = _PdfName.get(_getNewGuidString());\n                if (template && template._content.reference) {\n                    ref_1 = template._content.reference;\n                }\n                else if (this._crossReference) {\n                    ref_1 = this._crossReference._getNextReference();\n                }\n                else {\n                    this._pendingResource.push({ 'resource': template._content, 'key': keyName_1, 'source': sourceDictionary });\n                }\n                if (ref_1 && this._crossReference) {\n                    if (!this._crossReference._cacheMap.has(ref_1) && template && template._content) {\n                        this._crossReference._cacheMap.set(ref_1, template._content);\n                    }\n                    sourceDictionary.update(keyName_1.name, ref_1);\n                    this._resources.set(ref_1, keyName_1);\n                }\n                this._resourceObject._updated = true;\n            }\n            if (isReference) {\n                this._resourceObject._updated = true;\n            }\n            if (this._hasResourceReference) {\n                this._source._updated = true;\n            }\n            this._sw._executeObject(keyName_1);\n            this.restore(state);\n            _addProcSet('ImageB', this._resourceObject);\n            _addProcSet('ImageC', this._resourceObject);\n            _addProcSet('ImageI', this._resourceObject);\n            _addProcSet('Text', this._resourceObject);\n        }\n    };\n    PdfGraphics.prototype._processResources = function (crossReference) {\n        this._crossReference = crossReference;\n        if (this._pendingResource.length > 0) {\n            for (var i = 0; i < this._pendingResource.length; i++) {\n                var entry = this._pendingResource[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (entry instanceof PdfTemplate) {\n                    entry._crossReference = crossReference;\n                    entry._updatePendingResource(crossReference);\n                }\n                else if (entry.resource instanceof _PdfBaseStream) {\n                    var reference = void 0;\n                    if (entry.resource._reference) {\n                        reference = entry.resource._reference;\n                    }\n                    else {\n                        reference = crossReference._getNextReference();\n                        entry.resource._reference = reference;\n                    }\n                    if (!crossReference._cacheMap.has(reference) && entry.resource) {\n                        crossReference._cacheMap.set(reference, entry.resource);\n                    }\n                    entry.source.update(entry.key.name, reference);\n                    this._resources.set(reference, entry.key);\n                }\n                else if (entry.resource instanceof PdfImage) {\n                    this._updateImageResource(entry.resource, entry.key, entry.source, crossReference);\n                }\n                else if (entry.resource instanceof PdfFont) {\n                    this._updateFontResource(entry.resource, entry.key, entry.source, crossReference);\n                }\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            this._pendingResource = [];\n        }\n    };\n    PdfGraphics.prototype._updateImageResource = function (image, keyName, source, crossReference) {\n        var reference;\n        if (image._reference) {\n            reference = image._reference;\n        }\n        else {\n            reference = crossReference._getNextReference();\n            image._reference = reference;\n        }\n        if (!crossReference._cacheMap.has(reference)) {\n            if (image && image._imageStream && image._imageStream.dictionary) {\n                crossReference._cacheMap.set(reference, image._imageStream);\n                image._imageStream.dictionary._updated = true;\n                if (image._maskStream && image._maskStream.dictionary) {\n                    var ref = void 0;\n                    if (image._maskReference) {\n                        ref = image._maskReference;\n                    }\n                    else {\n                        ref = crossReference._getNextReference();\n                        image._maskReference = ref;\n                    }\n                    crossReference._cacheMap.set(ref, image._maskStream);\n                    image._maskStream.dictionary._updated = true;\n                    image._imageStream.dictionary.set('SMask', ref);\n                }\n            }\n        }\n        source.update(keyName.name, reference);\n        this._resources.set(reference, keyName);\n        this._resourceObject._updated = true;\n    };\n    PdfGraphics.prototype._updateFontResource = function (font, keyName, source, crossReference) {\n        var reference;\n        if (font._reference) {\n            reference = font._reference;\n        }\n        else {\n            reference = crossReference._getNextReference();\n            font._reference = reference;\n        }\n        if (!crossReference._cacheMap.has(reference)) {\n            if (font._dictionary) {\n                crossReference._cacheMap.set(reference, font._dictionary);\n                source.update(keyName.name, reference);\n                this._resources.set(reference, keyName);\n            }\n            else if (font instanceof PdfTrueTypeFont) {\n                var internal = font._fontInternal;\n                if (internal && internal._fontDictionary) {\n                    crossReference._cacheMap.set(reference, internal._fontDictionary);\n                }\n                source.update(keyName.name, reference);\n                this._resources.set(reference, keyName);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawPath = function (path, pen, brush) {\n        if (pen || brush) {\n            this._stateControl(pen, brush, null);\n            this._buildUpPath(path._points, path._pathTypes);\n            this._drawGraphicsPath(pen, brush, path._fillMode, false);\n        }\n    };\n    /**\n     * Draw rounded rectangle on the page graphics.\n     *\n     * @param {number} x value.\n     * @param {number} y value.\n     * @param {number} width value.\n     * @param {number} height value.\n     * @param {number} radius value.\n     * @param {PdfPen} pen value.\n     * @param {PdfBrush} brush value.\n     * @returns {void} draw a rounded rectangle.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * //Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * //Create a new brush.\n     * let brush: PdfBrush = new PdfBrush([0, 0, 255]);\n     * //Draw rounded rectangle on the page graphics.\n     * graphics.drawRoundedRectangle(10, 20, 100, 200, 5, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawRoundedRectangle = function (x, y, width, height, radius, pen, brush) {\n        if (pen === null) {\n            throw new Error('pen');\n        }\n        if (brush === null) {\n            throw new Error('brush');\n        }\n        var bounds = [x, y, width, height];\n        var diameter = radius * 2;\n        var size = [diameter, diameter];\n        var arc = [bounds[0], bounds[1], size[0], size[1]];\n        var path = new _PdfPath();\n        if (radius === 0) {\n            path._addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            this._drawPath(path, pen, brush);\n        }\n        else {\n            path._isRoundedRectangle = true;\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 180, 90);\n            arc[0] = (bounds[0] + bounds[2]) - diameter;\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 270, 90);\n            arc[1] = (bounds[1] + bounds[3]) - diameter;\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 0, 90);\n            arc[0] = bounds[0];\n            path._addArc(arc[0], arc[1], arc[2], arc[3], 90, 90);\n            path._closeFigure();\n            this._drawPath(path, pen, brush);\n        }\n    };\n    PdfGraphics.prototype._constructArcPath = function (x1, y1, x2, y2, start, sweep) {\n        var points = _getBezierArc(x1, y1, x2, y2, start, sweep);\n        if (points.length === 8) {\n            return;\n        }\n        var point = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this._sw._beginPath(point[0], point[1]);\n        for (var i = 0; i < points.length; i = i + 8) {\n            point = [points[Number.parseInt(i.toString(), 10)],\n                points[i + 1],\n                points[i + 2],\n                points[i + 3],\n                points[i + 4],\n                points[i + 5],\n                points[i + 6],\n                points[i + 7]];\n            this._sw._appendBezierSegment(point[2], point[3], point[4], point[5], point[6], point[7]);\n        }\n    };\n    PdfGraphics.prototype._writePen = function (pen) {\n        var lineWidth = pen._width;\n        var pattern = pen._dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= pen._width; // eslint-disable-line\n        }\n        this._sw._setLineDashPattern(pattern, pen._dashOffset * lineWidth);\n        this._sw._setLineWidth(pen._width);\n        this._sw._setLineJoin(pen._lineJoin);\n        this._sw._setLineCap(pen._lineCap);\n        if (pen._miterLimit > 0) {\n            this._sw._setMiterLimit(pen._miterLimit);\n        }\n        this._sw._setColor(pen._color, true);\n    };\n    /**\n     * Draw text on the page graphics.\n     *\n     * @param {string} value draw string.\n     * @param {PdfFont} font value.\n     * @param {number[]} bounds value.\n     * @param {PdfPen} pen value.\n     * @param {PdfBrush} brush value.\n     * @param {PdfStringFormat} format value.\n     * @returns {void} draw a string.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new font.\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n     * // Create a new string format\n     * let format: PdfStringFormat = new PdfStringFormat();\n     * format.alignment = PdfTextAlignment.center;\n     * // Draw text on the page graphics.\n     * graphics.drawString('Hello World', font, [10, 20, 100, 200], pen, new PdfBrush([0, 0, 255]), format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawString = function (value, font, bounds, pen, brush, format) {\n        var layouter = new _PdfStringLayouter();\n        var result = layouter._layout(value, font, format, [bounds[2], bounds[3]]);\n        if (!result._empty) {\n            var rect = this._checkCorrectLayoutRectangle(result._actualSize, bounds[0], bounds[1], format);\n            if (bounds[2] <= 0) {\n                bounds[0] = rect[0];\n                bounds[2] = rect[2];\n            }\n            if (bounds[3] <= 0) {\n                bounds[1] = rect[1];\n                bounds[3] = rect[3];\n            }\n            this._drawStringLayoutResult(result, font, pen, brush, bounds, format);\n        }\n        _addProcSet('Text', this._resourceObject);\n    };\n    PdfGraphics.prototype._buildUpPath = function (points, types) {\n        for (var i = 0; i < points.length; i++) {\n            var point = points[Number.parseInt(i.toString(), 10)];\n            var type = types[Number.parseInt(i.toString(), 10)];\n            switch (type & 0xf) {\n                case _PathPointType.start:\n                    this._sw._beginPath(point[0], point[1]);\n                    break;\n                case _PathPointType.bezier:\n                    var result = this._getBezierPoint(points, types, i); // eslint-disable-line\n                    i = result.index;\n                    var first = result.point; // eslint-disable-line\n                    result = this._getBezierPoint(points, types, i);\n                    i = result.index;\n                    var second = result.point; // eslint-disable-line\n                    this._sw._appendBezierSegment(point[0], point[1], first[0], first[1], second[0], second[1]);\n                    break;\n                case _PathPointType.line:\n                    this._sw._appendLineSegment(point[0], point[1]);\n                    break;\n                default:\n                    throw new Error('Incorrect path formation.');\n            }\n            type = types[Number.parseInt(i.toString(), 10)];\n            if ((type & _PathPointType.closePath) === _PathPointType.closePath) {\n                this._sw._closePath();\n            }\n        }\n    };\n    PdfGraphics.prototype._getBezierPoint = function (points, types, index) {\n        if (types[Number.parseInt(index.toString(), 10)] !== _PathPointType.bezier) {\n            throw new Error('Malforming path.');\n        }\n        index++;\n        return { 'index': index, 'point': points[Number.parseInt(index.toString(), 10)] };\n    };\n    PdfGraphics.prototype._initialize = function () {\n        this._mediaBoxUpperRightBound = 0;\n        this._characterSpacing = -1;\n        this._wordSpacing = -1;\n        this._textScaling = -100;\n        this._textRenderingMode = -1;\n        this._graphicsState = [];\n        this._clipBounds = [0, 0, this._size[0], this._size[1]];\n        this._colorSpaceInitialized = false;\n        this._startCutIndex = -1;\n    };\n    PdfGraphics.prototype._initializeCurrentColorSpace = function () {\n        if (!this._colorSpaceInitialized) {\n            this._sw._setColorSpace('DeviceRGB', true);\n            this._sw._setColorSpace('DeviceRGB', false);\n            this._colorSpaceInitialized = true;\n        }\n    };\n    PdfGraphics.prototype._brushControl = function (brush) {\n        this._sw._setColor(brush._color, false);\n        this._currentBrush = brush;\n    };\n    PdfGraphics.prototype._penControl = function (pen) {\n        this._currentPen = pen;\n        this._writePen(pen);\n        this._currentPen = pen;\n    };\n    PdfGraphics.prototype._fontControl = function (font, format) {\n        var _this = this;\n        var size = font._metrics._getSize(format);\n        this._currentFont = font;\n        var sourceDictionary;\n        var isReference = false;\n        var keyName;\n        var isNew = true;\n        var ref;\n        var hasResource = false;\n        if (this._resourceObject.has('Font')) {\n            var obj = this._resourceObject.getRaw('Font'); // eslint-disable-line\n            if (obj !== null && typeof obj !== 'undefined') {\n                if (obj instanceof _PdfReference) {\n                    isReference = true;\n                    sourceDictionary = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n            }\n            if (typeof sourceDictionary !== 'undefined' && sourceDictionary !== null) {\n                isNew = false;\n                this._resources.forEach(function (value, key) {\n                    if (_this._crossReference) {\n                        if (key !== null && typeof key !== 'undefined') {\n                            var dictionary = _this._crossReference._fetch(key);\n                            if (dictionary && ((font instanceof PdfStandardFont && dictionary === font._dictionary) ||\n                                (font instanceof PdfTrueTypeFont && dictionary === font._fontInternal._fontDictionary))) {\n                                keyName = value;\n                                ref = key;\n                                hasResource = true;\n                            }\n                        }\n                    }\n                    else if (font._reference && font._reference === key) {\n                        keyName = value;\n                        ref = key;\n                        hasResource = true;\n                    }\n                });\n            }\n        }\n        if (isNew) {\n            sourceDictionary = new _PdfDictionary(this._crossReference);\n            this._resourceObject.update('Font', sourceDictionary);\n        }\n        if (typeof keyName === 'undefined') {\n            keyName = _PdfName.get(_getNewGuidString());\n            if (!ref) {\n                if (font._reference) {\n                    ref = font._reference;\n                    sourceDictionary.update(keyName.name, ref);\n                }\n                else if (this._crossReference) {\n                    ref = this._crossReference._getNextReference();\n                }\n                else {\n                    this._pendingResource.push({ 'resource': font, 'key': keyName, 'source': sourceDictionary });\n                }\n            }\n            if (ref && this._crossReference) {\n                if (!font._reference) {\n                    font._reference = ref;\n                }\n                if (font._dictionary) {\n                    this._crossReference._cacheMap.set(ref, font._dictionary);\n                    sourceDictionary.update(keyName.name, ref);\n                }\n                else if (font instanceof PdfTrueTypeFont) {\n                    var internal = font._fontInternal;\n                    if (internal && internal._fontDictionary) {\n                        this._crossReference._cacheMap.set(ref, internal._fontDictionary);\n                    }\n                    sourceDictionary.update(keyName.name, ref);\n                }\n            }\n            if (!hasResource) {\n                this._resources.set(ref, keyName);\n            }\n        }\n        if (isReference) {\n            this._resourceObject._updated = true;\n        }\n        if (this._hasResourceReference) {\n            this._source._updated = true;\n        }\n        this._sw._setFont(keyName.name, size);\n    };\n    PdfGraphics.prototype._stateControl = function (pen, brush, font, format) {\n        if (pen || brush) {\n            this._initializeCurrentColorSpace();\n        }\n        if (pen) {\n            this._penControl(pen);\n        }\n        if (brush) {\n            this._brushControl(brush);\n        }\n        if (font) {\n            this._fontControl(font, format);\n        }\n    };\n    PdfGraphics.prototype._drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result._empty) {\n            var allowPartialLines = (format && typeof format.lineLimit !== 'undefined' && !format.lineLimit);\n            var shouldClip = (typeof format === 'undefined' || (format && typeof format.noClip !== 'undefined'\n                && !format.noClip));\n            var clipRegion = allowPartialLines && shouldClip;\n            var state = void 0;\n            if (clipRegion) {\n                state = this.save();\n                var clipBounds = [layoutRectangle[0], layoutRectangle[1], result._actualSize[0], result._actualSize[1]];\n                if (layoutRectangle[2] > 0) {\n                    clipBounds[2] = layoutRectangle[2];\n                }\n                if (format.lineAlignment === PdfVerticalAlignment.middle) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]) / 2;\n                }\n                else if (format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]);\n                }\n                this.setClip(clipBounds);\n            }\n            this._applyStringSettings(font, pen, brush, format);\n            var textScaling = (typeof format !== 'undefined' && format !== null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this._textScaling) {\n                this._sw._setTextScaling(textScaling);\n                this._textScaling = textScaling;\n            }\n            var verticalAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n            var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                font._metrics._getHeight(format) :\n                format.lineSpacing + font._metrics._getHeight(format);\n            var script = (format !== null && typeof format !== 'undefined' &&\n                format.subSuperScript === PdfSubSuperScript.subScript);\n            var shift = 0;\n            shift = (script) ? height - (font.height + font._metrics._getDescent(format)) : (height - font._metrics._getAscent(format));\n            if (format && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                    (layoutRectangle[3] - result._actualSize[1]) < (font._metrics._size / 2) - 1) {\n                    if (Number.parseFloat(_numberToString(layoutRectangle[3])) <=\n                        Number.parseFloat(_numberToString(font._metrics._getHeight(format)))) {\n                        shift = -(height / font._metrics._size);\n                    }\n                }\n            }\n            var matrix = new _PdfTransformationMatrix();\n            matrix._translate(layoutRectangle[0], (-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                (font._metrics._getDescent(format) > 0 ? -font._metrics._getDescent(format) : font._metrics._getDescent(format))) -\n                verticalAlignShift);\n            this._sw._modifyTM(matrix);\n            if (layoutRectangle[3] < font._metrics._size) {\n                if ((result._actualSize[1] - layoutRectangle[3]) < (font._metrics._size / 2) - 1) {\n                    verticalAlignShift = 0;\n                }\n            }\n            if (verticalAlignShift !== 0) {\n                if (format !== null && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                        (layoutRectangle[3] - result._actualSize[1]) > (font._metrics._size / 2) - 1) {\n                        verticalAlignShift -= (shift - (height - font._metrics._size)) / 2;\n                    }\n                }\n            }\n            this._drawLayoutResult(result, font, format, layoutRectangle);\n            if (verticalAlignShift !== 0) {\n                this._sw._startNextLine(0, -(verticalAlignShift - result._lineHeight));\n            }\n            _addProcSet('Text', this._resourceObject);\n            this._sw._endText();\n            this._underlineStrikeoutText(brush, result, font, layoutRectangle, format);\n            if (clipRegion) {\n                this.restore(state);\n            }\n        }\n    };\n    PdfGraphics.prototype._getNextPage = function () {\n        var page;\n        var pageCount = this._crossReference._document.pageCount;\n        if (this._page._pageIndex < pageCount - 2) {\n            page = this._crossReference._document.getPage(this._page._pageIndex + 1);\n        }\n        return page;\n    };\n    PdfGraphics.prototype._applyStringSettings = function (font, pen, brush, format) {\n        var tm = _TextRenderingMode.fill;\n        if (pen !== null && brush !== null) {\n            tm = _TextRenderingMode.fillStroke;\n        }\n        else if (pen) {\n            tm = _TextRenderingMode.stroke;\n        }\n        else if (brush) {\n            tm = _TextRenderingMode.fill;\n        }\n        if (format && format.clipPath) {\n            tm |= _TextRenderingMode.clipFlag;\n        }\n        this._sw._beginText();\n        this._stateControl(pen, brush, font, format);\n        if (tm !== this._textRenderingMode) {\n            this._sw._setTextRenderingMode(tm);\n            this._textRenderingMode = tm;\n        }\n        var cs = (typeof format !== 'undefined' && format !== null) ? format.characterSpacing : 0;\n        if (cs !== this._characterSpacing) {\n            this._sw._setCharacterSpacing(cs);\n            this._characterSpacing = cs;\n        }\n        var ws = (typeof format !== 'undefined' && format !== null) ? format.wordSpacing : 0;\n        if (ws !== this._wordSpacing) {\n            this._sw._setWordSpacing(ws);\n            this._wordSpacing = ws;\n        }\n    };\n    PdfGraphics.prototype._drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n            font._metrics._getHeight(format) :\n            format.lineSpacing + font._metrics._getHeight(format);\n        var lines = result._lines;\n        var ttfFont = font;\n        var unicode = (ttfFont !== null && ttfFont.isUnicode);\n        for (var i = 0, len = lines.length; (i < len && i !== this._startCutIndex); i++) {\n            var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n            var lineWidth = lineInfo._width;\n            var hAlignShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format) +\n                this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n            if (hAlignShift !== 0) {\n                this._sw._startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this._drawUnicodeLine(lineInfo, layoutRectangle[2], font, format);\n            }\n            else {\n                this._drawAsciiLine(lineInfo, layoutRectangle[2], format, font);\n            }\n            if ((i + 1 !== len)) {\n                var vAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var matrix = new _PdfTransformationMatrix();\n                var baseline = ((-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                    font._metrics._getDescent(format)) -\n                    vAlignShift) -\n                    (height * (i + 1));\n                matrix._translate(layoutRectangle[0], baseline);\n                this._sw._modifyTM(matrix);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeLine = function (lineInfo, width, font, format) {\n        var line = lineInfo._text;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && (format.wordSpacing !== 0 ||\n            format.alignment === PdfTextAlignment.justify));\n        var ttfFont = font;\n        var wordSpacing = this._justifyLine(lineInfo, width, format, ttfFont);\n        var rtlRender = new _RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none)) {\n            var blocks = [];\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                blocks = rtlRender._layout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender._layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = [];\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    words = rtlRender._splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this._breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this._convertToUnicode(line, ttfFont);\n                this._sw._showNextLineText(token, true);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        if (blocks !== null && typeof blocks !== 'undefined' && blocks.length > 0 && words !== null && typeof words !== 'undefined' &&\n            words.length > 0 && font !== null && typeof font !== 'undefined') {\n            this._sw._startNextLine();\n            var x = 0;\n            var xShift = 0;\n            var firstLineIndent = 0;\n            var paragraphIndent = 0;\n            try {\n                if (format !== null && typeof format !== 'undefined') {\n                    firstLineIndent = format.firstLineIndent;\n                    paragraphIndent = format.paragraphIndent;\n                    format.firstLineIndent = 0;\n                    format.paragraphIndent = 0;\n                }\n                var spaceWidth = font._getCharacterWidth(_StringTokenizer._whiteSpace, format) + wordSpacing;\n                var characterSpacing = (format !== null) ? format.characterSpacing : 0;\n                var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n                spaceWidth += characterSpacing + wordSpace;\n                for (var i = 0; i < blocks.length; i++) {\n                    var token = blocks[i]; //eslint-disable-line\n                    var word = words[i]; //eslint-disable-line\n                    var tokenWidth = 0;\n                    if (x !== 0) {\n                        this._sw._startNextLine(x, 0);\n                    }\n                    if (word.length > 0) {\n                        tokenWidth += font.measureString(word, format)[0];\n                        tokenWidth += characterSpacing;\n                        this._sw._showText(token);\n                    }\n                    if (i !== blocks.length - 1) {\n                        x = tokenWidth + spaceWidth;\n                        xShift += x;\n                    }\n                }\n                if (xShift > 0) {\n                    this._sw._startNextLine(-xShift, 0);\n                }\n            }\n            finally {\n                if (format !== null && typeof format !== 'undefined') {\n                    format.firstLineIndent = firstLineIndent;\n                    format.paragraphIndent = paragraphIndent;\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._breakUnicodeLine = function (line, ttfFont, words) {\n        var tokens = [];\n        if (line !== null && typeof line !== 'undefined' && line.length > 0) {\n            words = line.split(null);\n            for (var i = 0; i < words.length; i++) {\n                var word = words[i]; //eslint-disable-line\n                var token = this._convertToUnicode(word, ttfFont);\n                tokens[Number.parseInt(i.toString(), 10)] = token;\n            }\n        }\n        return { tokens: tokens, words: words };\n    };\n    PdfGraphics.prototype._convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text !== null && typeof text !== 'undefined' && ttfFont !== null && typeof ttfFont !== 'undefined' &&\n            ttfFont._fontInternal instanceof _UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont._fontInternal._ttfReader;\n            ttfFont._setSymbols(text);\n            token = ttfReader._convertString(text);\n            var bytes = _stringToUnicodeArray(token);\n            token = _bytesToString(bytes);\n        }\n        return token;\n    };\n    PdfGraphics.prototype._getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && (typeof format !== 'undefined' && format !== null) && format.lineAlignment !== PdfVerticalAlignment.top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && (typeof format !== 'undefined' && format !== null) && format.alignment !== PdfTextAlignment.left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getLineIndent = function (lineInfo, format, width, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo._lineType & _LineType.firstParagraphLine) > 0);\n        if (format && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (width > 0) ? Math.min(width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    PdfGraphics.prototype._drawAsciiLine = function (lineInfo, width, format, font) {\n        this._justifyLine(lineInfo, width, format, font);\n        var value = '';\n        if (lineInfo._text.indexOf('(') !== -1 || lineInfo._text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo._text.length; i++) {\n                if (lineInfo._text[Number.parseInt(i.toString(), 10)] === '(') {\n                    value += '\\\\\\('; // eslint-disable-line\n                }\n                else if (lineInfo._text[Number.parseInt(i.toString(), 10)] === ')') {\n                    value += '\\\\\\)'; // eslint-disable-line\n                }\n                else {\n                    value += lineInfo._text[Number.parseInt(i.toString(), 10)];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo._text;\n        }\n        this._sw._showNextLineText('(' + value + ')');\n    };\n    PdfGraphics.prototype._justifyLine = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var shouldJustify = this._shouldJustify(lineInfo, boundsWidth, format, font);\n        var hasWordSpacing = (format && format.wordSpacing !== 0);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            wordSpace = (boundsWidth - lineWidth) / whitespacesCount;\n            this._sw._setWordSpacing(wordSpace);\n        }\n        else if (format && format.alignment === PdfTextAlignment.justify) {\n            this._sw._setWordSpacing(0);\n        }\n        return wordSpace;\n    };\n    PdfGraphics.prototype._shouldJustify = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var justifyStyle = (format && format.alignment === PdfTextAlignment.justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== ' ');\n        var goodLineBreakStyle = ((lineInfo._lineType & _LineType.layoutBreak) > 0);\n        return (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.justify));\n    };\n    PdfGraphics.prototype._underlineStrikeoutText = function (brush, result, font, layoutRectangle, format) {\n        if (font.isUnderline || font.isStrikeout) {\n            var linePen = this._createUnderlineStrikeoutPen(brush, font);\n            if (typeof linePen !== 'undefined' && linePen !== null) {\n                var shift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var underlineYOffset = layoutRectangle[1] + shift + font._metrics._getAscent(format) + 1.5 * linePen._width;\n                var strikeoutYOffset = layoutRectangle[1] + shift + font._metrics._getHeight(format) / 2 + 1.5 * linePen._width;\n                var lines = result._lines;\n                for (var i = 0; i < result._lineCount; i++) {\n                    var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n                    var lineWidth = lineInfo._width;\n                    var hShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format);\n                    var lineIndent = this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n                    var x1 = layoutRectangle[0] + hShift;\n                    var x2 = (!this._shouldJustify(lineInfo, layoutRectangle[2], format, font)) ?\n                        x1 + lineWidth - lineIndent :\n                        x1 + layoutRectangle[2] - lineIndent;\n                    if (font.isUnderline) {\n                        this.drawLine(linePen, x1, underlineYOffset, x2, underlineYOffset);\n                        underlineYOffset += result._lineHeight;\n                    }\n                    if (font.isStrikeout) {\n                        this.drawLine(linePen, x1, strikeoutYOffset, x2, strikeoutYOffset);\n                        strikeoutYOffset += result._lineHeight;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Draw line on the page graphics.\n     *\n     * @param {PdfPen} pen pen value.\n     * @param {number} x1 value.\n     * @param {number} y1 value.\n     * @param {number} x2 value.\n     * @param {number} y2 value.\n     * @returns {void} draw a line.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * //Create a new pen.\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * //Draw line on the page graphics.\n     * graphics.drawLine(pen, 10, 10, 100, 100);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawLine = function (pen, x1, y1, x2, y2) {\n        this._stateControl(pen);\n        this._sw._beginPath(x1, y1);\n        this._sw._appendLineSegment(x2, y2);\n        this._sw._strokePath();\n        _addProcSet('PDF', this._resourceObject);\n    };\n    PdfGraphics.prototype._createUnderlineStrikeoutPen = function (brush, font) {\n        return new PdfPen(brush._color, font._metrics._size / 20);\n    };\n    PdfGraphics.prototype._checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = [x, y, textSize[0], textSize[0]];\n        if (format) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2] / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2];\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3] / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3];\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    PdfGraphics.prototype._drawGraphicsPath = function (pen, brush, fillMode, needClosing) {\n        if (typeof fillMode === 'undefined') {\n            fillMode = PdfFillMode.winding;\n        }\n        var isBrush = (typeof brush !== 'undefined' && brush !== null);\n        var isPen = (typeof pen !== 'undefined' && pen !== null);\n        var isEvenOdd = fillMode === PdfFillMode.alternate;\n        if (isPen && isBrush) {\n            if (needClosing) {\n                this._sw._closeFillStrokePath(isEvenOdd);\n            }\n            else {\n                this._sw._fillStrokePath(isEvenOdd);\n            }\n        }\n        else if (!isPen && !isBrush) {\n            this._sw._endPath();\n        }\n        else if (isPen) {\n            if (needClosing) {\n                this._sw._closeStrokePath();\n            }\n            else {\n                this._sw._strokePath();\n            }\n        }\n        else {\n            if (needClosing) {\n                this._sw._closeFillPath(isEvenOdd);\n            }\n            else {\n                this._sw._fillPath(isEvenOdd);\n            }\n        }\n    };\n    PdfGraphics.prototype._initializeCoordinates = function (page) {\n        var cbox;\n        if (page) {\n            var location_1 = [0, 0];\n            var needTransformation = false;\n            if (page._pageDictionary.has('CropBox') && page._pageDictionary.has('MediaBox')) {\n                cbox = page._pageDictionary.getArray('CropBox');\n                var mbox = page._pageDictionary.getArray('MediaBox');\n                if (cbox[0] === mbox[0] && cbox[1] === mbox[1] && cbox[2] === mbox[2] && cbox[3] === mbox[3]) {\n                    needTransformation = true;\n                }\n                if (cbox[0] > 0 && cbox[3] > 0 && mbox[0] < 0 && mbox[1] < 0) {\n                    this.translateTransform(cbox[0], -cbox[3]);\n                    location_1[0] = -cbox[0];\n                    location_1[1] = cbox[3];\n                }\n                else if (!page._pageDictionary.has('CropBox')) {\n                    needTransformation = true;\n                }\n                if (needTransformation) {\n                    this._sw._writeComment('Change co-ordinate system to left/top.');\n                    if (this._cropBox) {\n                        this.translateTransform(this._cropBox[0], -this._cropBox[3]);\n                    }\n                    else {\n                        if (-(page._origin[1]) < this._mediaBoxUpperRightBound || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this._sw._writeComment('Change co-ordinate system to left/top.');\n            if (this._mediaBoxUpperRightBound !== (-this._size[1])) {\n                if (this._cropBox) {\n                    cbox = this._cropBox;\n                    if (cbox[0] > 0 || cbox[1] > 0 || this._size[0] === cbox[2] || this._size[1] === cbox[3]) {\n                        this.translateTransform(cbox[0], -cbox[3]);\n                    }\n                    else {\n                        if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n                else {\n                    if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                        this.translateTransform(0, -this._size[1]);\n                    }\n                    else {\n                        this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Represents a scale transform of the graphics.\n     *\n     * @param {number} scaleX Scale factor in the x direction.\n     * @param {number} scaleY Scale factor in the y direction.\n     * @returns {void} scale transform.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics scale transform.\n     * graphics.scaleTransform(0.5, 0.5);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._scale(scaleX, scaleY);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a translate transform of the graphics.\n     *\n     * @param {number} x x-coordinate of the translation.\n     * @param {number} y y-coordinate of the translation.\n     * @returns {void} translate transform.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.translateTransform = function (x, y) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._translate(x, -y);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a rotate transform of the graphics.\n     *\n     * @param {number} angle Angle of rotation in degrees\n     * @returns {void} rotate transform.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics rotate transform.\n     * graphics.rotateTransform(-90);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._rotate(-angle);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a clipping region of this graphics.\n     *\n     * @param {number[]} bounds Rectangle structure that represents the new clip region.\n     * @param {PdfFillMode} mode Member of the PdfFillMode enumeration that specifies the filling operation to use.\n     * @returns {void} clipping region.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * //Set clip.\n     * graphics.setClip([0, 0, 50, 12], PdfFillMode.alternate);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setClip = function (bounds, mode) {\n        if (typeof mode === 'undefined') {\n            mode = PdfFillMode.winding;\n        }\n        this._sw._appendRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n        this._sw._clipPath(mode === PdfFillMode.alternate);\n    };\n    /**\n     * Represents a transparency of this graphics.\n     *\n     * @param {number} stroke transparency value.\n     * @param {number} fill transparency value.\n     * @param {PdfBlendMode} mode blend mode.\n     * @returns {void} transparency of this graphics.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * //Set transparency.\n     * graphics.setTransparency(0.5, 0.5, PdfBlendMode.multiply);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setTransparency = function (stroke, fill, mode) {\n        if (typeof fill === 'undefined') {\n            fill = stroke;\n        }\n        if (typeof mode === 'undefined') {\n            mode = PdfBlendMode.normal;\n        }\n        if (typeof this._transparencies === 'undefined') {\n            this._transparencies = new Map();\n        }\n        var transparencyKey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var transparencyData;\n        if (this._transparencies.size > 0) {\n            this._transparencies.forEach(function (value, key) {\n                if (value === transparencyKey) {\n                    transparencyData = key;\n                }\n            });\n        }\n        if (!transparencyData) {\n            transparencyData = new _TransparencyData();\n            var transparencyDict = new _PdfDictionary();\n            transparencyDict.update('CA', stroke);\n            transparencyDict.update('ca', fill);\n            transparencyDict.update('BM', _reverseMapBlendMode(mode));\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, transparencyDict);\n            transparencyData._dictionary = transparencyDict;\n            transparencyData._key = transparencyKey;\n            transparencyData._name = _PdfName.get(_getNewGuidString());\n            transparencyData._reference = ref;\n            var dictionary = void 0;\n            var isReference = false;\n            if (this._resourceObject.has('ExtGState')) {\n                var obj = this._resourceObject.getRaw('ExtGState'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined') {\n                    if (obj instanceof _PdfReference) {\n                        isReference = true;\n                        dictionary = this._crossReference._fetch(obj);\n                    }\n                    else if (obj instanceof _PdfDictionary) {\n                        dictionary = obj;\n                    }\n                }\n            }\n            else {\n                dictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('ExtGState', dictionary);\n            }\n            dictionary.update(transparencyData._name.name, ref);\n            if (isReference) {\n                this._resourceObject._updated = true;\n            }\n            if (this._hasResourceReference) {\n                this._source._updated = true;\n            }\n        }\n        this._sw._setGraphicsState(transparencyData._name);\n    };\n    PdfGraphics.prototype._setTransparencyData = function (ref, name) {\n        this._resourceMap.set(ref, name);\n        var dictionary = this._crossReference._fetch(ref);\n        var stroke = 0;\n        var fill = 0;\n        var mode = 0;\n        if (dictionary.has('CA')) {\n            stroke = dictionary.get('CA');\n        }\n        if (dictionary.has('ca')) {\n            fill = dictionary.get('ca');\n        }\n        if (dictionary.has('ca')) {\n            fill = dictionary.get('ca');\n        }\n        if (dictionary.has('BM')) {\n            mode = _mapBlendMode(dictionary.get('BM'));\n        }\n        var tkey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var tdata = new _TransparencyData();\n        tdata._dictionary = dictionary;\n        tdata._key = tkey;\n        tdata._name = name;\n        tdata._reference = ref;\n        this._transparencies.set(tdata, tkey);\n    };\n    PdfGraphics.prototype._getTranslateTransform = function (x, y, input) {\n        input._translate(x, -y);\n        return input;\n    };\n    PdfGraphics.prototype._getScaleTransform = function (x, y, input) {\n        if (input === null || typeof input === 'undefined') {\n            input = new _PdfTransformationMatrix();\n        }\n        input._scale(x, y);\n        return input;\n    };\n    PdfGraphics.prototype._clipTranslateMargins = function (clipBounds) {\n        this._clipBounds = clipBounds;\n        this._sw._writeComment('Clip margins.');\n        this._sw._appendRectangle(clipBounds[0], clipBounds[1], clipBounds[2], clipBounds[3]);\n        this._sw._closePath();\n        this._sw._clipPath(false);\n        this._sw._writeComment('Translate co-ordinate system.');\n        this.translateTransform(clipBounds[0], clipBounds[1]);\n    };\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\nvar _PdfTransformationMatrix = /** @class */ (function () {\n    function _PdfTransformationMatrix() {\n        this._matrix = new _Matrix(1, 0, 0, 1, 0, 0);\n    }\n    _PdfTransformationMatrix.prototype._translate = function (x, y) {\n        this._matrix._translate(x, y);\n    };\n    _PdfTransformationMatrix.prototype._scale = function (x, y) {\n        this._matrix._elements[0] = x;\n        this._matrix._elements[3] = y;\n    };\n    _PdfTransformationMatrix.prototype._rotate = function (angle) {\n        angle = (angle * Math.PI) / 180;\n        this._matrix._elements[0] = Math.cos(angle);\n        this._matrix._elements[1] = Math.sin(angle);\n        this._matrix._elements[2] = -Math.sin(angle);\n        this._matrix._elements[3] = Math.cos(angle);\n    };\n    _PdfTransformationMatrix.prototype._multiply = function (matrix) {\n        this._matrix._multiply(matrix._matrix);\n    };\n    _PdfTransformationMatrix.prototype._toString = function () {\n        var builder = '';\n        for (var i = 0, len = this._matrix._elements.length; i < len; i++) {\n            builder += _floatToString(this._matrix._elements[Number.parseInt(i.toString(), 10)]) + ' ';\n        }\n        return builder;\n    };\n    return _PdfTransformationMatrix;\n}());\nexport { _PdfTransformationMatrix };\nvar _Matrix = /** @class */ (function () {\n    function _Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this._elements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this._elements = [arg1, arg2, arg3, arg4, arg5, arg6];\n        }\n        else {\n            this._elements = arg1;\n        }\n    }\n    Object.defineProperty(_Matrix.prototype, \"_offsetX\", {\n        get: function () {\n            return this._elements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_Matrix.prototype, \"_offsetY\", {\n        get: function () {\n            return this._elements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _Matrix.prototype._clone = function () {\n        return new _Matrix(this._elements.slice());\n    };\n    _Matrix.prototype._translate = function (x, y) {\n        this._elements[4] = x;\n        this._elements[5] = y;\n    };\n    _Matrix.prototype._transform = function (points) {\n        var x = points[0];\n        var y = points[1];\n        var x2 = x * this._elements[0] + y * this._elements[2] + this._offsetX;\n        var y2 = x * this._elements[1] + y * this._elements[3] + this._offsetY;\n        return [x2, y2];\n    };\n    _Matrix.prototype._multiply = function (matrix) {\n        this._elements = [(this._elements[0] * matrix._elements[0] + this._elements[1] * matrix._elements[2]),\n            (this._elements[0] * matrix._elements[1] + this._elements[1] * matrix._elements[3]),\n            (this._elements[2] * matrix._elements[0] + this._elements[3] * matrix._elements[2]),\n            (this._elements[2] * matrix._elements[1] + this._elements[3] * matrix._elements[3]),\n            (this._offsetX * matrix._elements[0] + this._offsetY * matrix._elements[2] + matrix._offsetX),\n            (this._offsetX * matrix._elements[1] + this._offsetY * matrix._elements[3] + matrix._offsetY)];\n    };\n    return _Matrix;\n}());\nexport { _Matrix };\n/**\n * Represents a state of the graphics from a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // Save the graphics\n * let state: PdfGraphicsState = graphics.save();\n * //Set graphics translate transform.\n * graphics.translateTransform(100, 100);\n * //Draws the String.\n * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n * //Restore the graphics.\n * graphics.restore(state);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphicsState = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfGraphicsState` class.\n     *\n     * @private\n     * @param {PdfGraphics} graphics Graphics.\n     * @param {_PdfTransformationMatrix} matrix Matrix.\n     *\n     */\n    function PdfGraphicsState(graphics, matrix) {\n        if (graphics) {\n            this._g = graphics;\n            this._transformationMatrix = matrix;\n        }\n        this._charSpacing = 0;\n        this._wordSpacing = 0;\n        this._textScaling = 100;\n        this._textRenderingMode = _TextRenderingMode.fill;\n    }\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar _TransparencyData = /** @class */ (function () {\n    function _TransparencyData() {\n    }\n    return _TransparencyData;\n}());\nexport var _TextRenderingMode;\n(function (_TextRenderingMode) {\n    _TextRenderingMode[_TextRenderingMode[\"fill\"] = 0] = \"fill\";\n    _TextRenderingMode[_TextRenderingMode[\"stroke\"] = 1] = \"stroke\";\n    _TextRenderingMode[_TextRenderingMode[\"fillStroke\"] = 2] = \"fillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"none\"] = 3] = \"none\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFlag\"] = 4] = \"clipFlag\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFill\"] = 4] = \"clipFill\";\n    _TextRenderingMode[_TextRenderingMode[\"clipStroke\"] = 5] = \"clipStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFillStroke\"] = 6] = \"clipFillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clip\"] = 7] = \"clip\";\n})(_TextRenderingMode || (_TextRenderingMode = {}));\n/**\n * Represents a brush for the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new brush\n * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n * // Draw a rectangle using brush\n * graphics.drawRectangle(10, 10, 100, 100, brush);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBrush` class.\n     *\n     * @param {number[]} color Color.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Draw a rectangle using brush\n     * graphics.drawRectangle(10, 10, 100, 100, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBrush(color) {\n        this._color = typeof color !== 'undefined' ? color : [0, 0, 0];\n    }\n    return PdfBrush;\n}());\nexport { PdfBrush };\n/**\n * Represents a pen for the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPen` class.\n     *\n     * @param {number[]} color Color.\n     * @param {number} width Width.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a rectangle using pen\n     * graphics.drawRectangle(150, 50, 50, 50, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfPen(color, width) {\n        this._color = color;\n        this._width = width;\n        this._dashOffset = 0;\n        this._dashPattern = [];\n        this._dashStyle = PdfDashStyle.solid;\n        this._miterLimit = 0;\n        this._lineCap = PdfLineCap.flat;\n        this._lineJoin = PdfLineJoin.miter;\n    }\n    return PdfPen;\n}());\nexport { PdfPen };\nvar _PdfUnitConvertor = /** @class */ (function () {\n    function _PdfUnitConvertor() {\n        this._horizontalResolution = 96;\n        this._proportions = this._updateProportions(this._horizontalResolution);\n    }\n    _PdfUnitConvertor.prototype._updateProportions = function (pixel) {\n        return [pixel / 2.54, pixel / 6.0, 1, pixel / 72.0, pixel, pixel / 300.0, pixel / 25.4];\n    };\n    _PdfUnitConvertor.prototype._convertUnits = function (value, from, to) {\n        return this._convertFromPixels(this._convertToPixels(value, from), to);\n    };\n    _PdfUnitConvertor.prototype._convertFromPixels = function (value, to) {\n        var index = to;\n        return (value / this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    _PdfUnitConvertor.prototype._convertToPixels = function (value, from) {\n        var index = from;\n        return (value * this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    return _PdfUnitConvertor;\n}());\nexport { _PdfUnitConvertor };\n","import { _stringToBytes } from './../utils';\nvar _XmlWriter = /** @class */ (function () {\n    function _XmlWriter(isAppearance) {\n        if (isAppearance === void 0) { isAppearance = false; }\n        this._position = 0;\n        this._bufferText = '';\n        this._buffer = new Uint8Array(0);\n        this._namespaceStack = [];\n        this._elementStack = [];\n        if (!isAppearance) {\n            this._currentState = 'Initial';\n            this._namespaceStack.push(new _Namespace());\n            this._elementStack.push(new _XmlElement());\n            this._namespaceStack[0]._set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[1]._set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[2]._set('', '', 'Implied');\n            this._elementStack[0]._set('', '', '', this._namespaceStack.length - 1);\n        }\n        else {\n            this._currentState = 'StartDocument';\n            this._skipNamespace = true;\n        }\n        this._attributeStack = [];\n    }\n    Object.defineProperty(_XmlWriter.prototype, \"buffer\", {\n        get: function () {\n            this._flush();\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _XmlWriter.prototype._writeStartDocument = function (standalone) {\n        if (this._currentState !== 'Initial' || typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._currentState = 'StartDocument';\n        this._rawText('<?xml version=\"1.0\" encoding=\"utf-8');\n        if (typeof standalone !== 'undefined' && standalone !== null) {\n            this._rawText('\" standalone=\"');\n            this._rawText(standalone ? 'yes' : 'no');\n        }\n        this._rawText('\"?>');\n    };\n    _XmlWriter.prototype._writeStartElement = function (localName, prefix, namespace) {\n        if (typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n        }\n        this._checkName(localName);\n        if (this._currentState === 'Initial') {\n            this._writeStartDocument();\n        }\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n        }\n        this._currentState = 'StartElement';\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                prefix = this._lookupPrefix(namespace);\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        else if (prefix.length > 0) {\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null || (typeof namespace !== 'undefined' && namespace.length === 0)) {\n                throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            namespace = this._lookupNamespace(prefix);\n        }\n        this._writeStartElementInternal(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndElement = function () {\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n            this._currentState = 'ElementContent';\n        }\n        else if (this._currentState === 'ElementContent') {\n            this._currentState = 'ElementContent';\n        }\n        this._currentState = 'EndElement';\n        var top = this._elementStack.length - 1;\n        this._writeEndElementInternal(this._elementStack[Number.parseInt(top.toString(), 10)]._prefix, this._elementStack[Number.parseInt(top.toString(), 10)]._localName);\n        this._namespaceStack.splice(this._elementStack[Number.parseInt(top.toString(), 10)]._previousTop + 1);\n        this._elementStack.splice(top);\n        // if (this._bufferText.length > 10240) {\n        //     this._flush();\n        // }\n    };\n    _XmlWriter.prototype._writeElementString = function (localName, value, prefix, namespace) {\n        this._writeStartElement(localName, prefix, namespace);\n        if (typeof value !== 'undefined' && value !== null && value.length !== 0) {\n            this._writeString(value);\n        }\n        this._writeEndElement();\n    };\n    _XmlWriter.prototype._writeAttributeString = function (localName, value, prefix, namespace) {\n        this._writeStartAttribute(localName, value, prefix, namespace);\n        this._writeStringInternal(value, true);\n        this._writeEndAttribute();\n    };\n    _XmlWriter.prototype._writeString = function (text) {\n        this._writeInternal(text, false);\n    };\n    _XmlWriter.prototype._writeRaw = function (text) {\n        this._writeInternal(text, true);\n    };\n    _XmlWriter.prototype._writeInternal = function (text, isRawString) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._currentState !== 'StartElement' && this._currentState !== 'ElementContent') {\n                throw new Error('InvalidOperationException: Wrong Token');\n            }\n            if (this._currentState === 'StartElement') {\n                this._startElementContent();\n            }\n            this._currentState = 'ElementContent';\n            if (isRawString) {\n                this._rawText(text);\n            }\n            else {\n                this._writeStringInternal(text, false);\n            }\n        }\n    };\n    _XmlWriter.prototype._save = function () {\n        while (this._elementStack.length - 1 > 0) {\n            this._writeEndElement();\n        }\n        if (this._bufferText !== '') {\n            this._flush();\n        }\n        return this._buffer;\n    };\n    _XmlWriter.prototype._destroy = function () {\n        this._buffer = undefined;\n        for (var i = 0; i < this._namespaceStack.length; i++) {\n            this._namespaceStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._namespaceStack = [];\n        for (var i = 0; i < this._elementStack.length; i++) {\n            this._elementStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._elementStack = [];\n        this._bufferText = '';\n        this._position = 0;\n    };\n    _XmlWriter.prototype._flush = function () {\n        if (this._buffer && this._bufferText && this._bufferText !== '') {\n            if (this._buffer.length > 0) {\n                var buffer = new Array(this._bufferText.length);\n                for (var i = 0; i < this._bufferText.length; i++) {\n                    buffer[Number.parseInt(i.toString(), 10)] = this._bufferText.charCodeAt(i) & 0xff;\n                }\n                var array = new Uint8Array(this._buffer.length + buffer.length);\n                array.set(this._buffer);\n                array.set(buffer, this._buffer.length);\n                this._buffer = array;\n            }\n            else {\n                this._buffer = _stringToBytes(this._bufferText);\n            }\n            this._bufferText = '';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttribute = function (localName, value, prefix, namespace) {\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            if (prefix === 'xmlns') {\n                localName = 'xmlns';\n                prefix = '';\n            }\n            else {\n                throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n            }\n        }\n        if (this._currentState !== 'StartElement') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._checkName(localName);\n        this._writeStartAttributePrefixAndNameSpace(localName, value, prefix, namespace);\n    };\n    _XmlWriter.prototype._writeStartAttributePrefixAndNameSpace = function (localName, value, prefix, namespace) {\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {\n                    prefix = this._lookupPrefix(namespace);\n                }\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = '';\n            }\n        }\n        this._writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);\n    };\n    _XmlWriter.prototype._writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {\n        if (prefix.length === 0) {\n            if (localName[0] === 'x' && localName === 'xmlns') {\n                this._skipPushAndWrite(prefix, localName, namespace);\n                this._pushNamespaceExplicit('', value);\n                return;\n            }\n            else if (namespace.length > 0) {\n                prefix = this._lookupPrefix(namespace);\n            }\n        }\n        else {\n            if (prefix[0] === 'x') {\n                if (prefix === 'xmlns') {\n                    this._skipPushAndWrite(prefix, localName, namespace);\n                    this._pushNamespaceExplicit(localName, value);\n                    return;\n                }\n                else if (prefix === 'xml') {\n                    if (localName === 'space' || localName === 'lang') {\n                        this._skipPushAndWrite(prefix, localName, namespace);\n                        return;\n                    }\n                }\n            }\n            if (namespace.length === 0) {\n                prefix = '';\n            }\n        }\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n            this._pushNamespaceImplicit(prefix, namespace);\n        }\n        this._skipPushAndWrite(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndAttribute = function () {\n        this._currentState = 'StartElement';\n        this._bufferText += '\"';\n    };\n    _XmlWriter.prototype._writeStartElementInternal = function (prefix, localName, namespace) {\n        this._bufferText += '<';\n        if (prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        var top = this._elementStack.length;\n        this._elementStack.push(new _XmlElement());\n        this._elementStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespace, this._namespaceStack.length - 1);\n        this._pushNamespaceImplicit(prefix, namespace);\n        for (var i = 0; i < this._attributeStack.length; i++) {\n            this._attributeStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._attributeStack = [];\n    };\n    _XmlWriter.prototype._writeEndElementInternal = function (prefix, localName) {\n        if (this._position !== this._bufferText.length + 1) {\n            this._bufferText += '</';\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n                this._rawText(prefix);\n                this._bufferText += ':';\n            }\n            this._rawText(localName);\n            this._bufferText += '>';\n        }\n        else {\n            this._bufferText = this._bufferText.substring(0, this._bufferText.length - 1);\n            this._bufferText += ' />';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttributeInternal = function (prefix, localName) {\n        this._bufferText += ' ';\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        this._bufferText += '=\"';\n    };\n    _XmlWriter.prototype._writeNamespaceDeclaration = function (prefix, namespaceUri) {\n        if (!this._skipNamespace) {\n            this._writeStartNamespaceDeclaration(prefix);\n            this._writeStringInternal(namespaceUri, true);\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStartNamespaceDeclaration = function (prefix) {\n        if (typeof prefix === 'undefined' || prefix === null || prefix.length === 0) {\n            this._rawText(' xmlns=\"');\n        }\n        else {\n            this._rawText(' xmlns:');\n            this._rawText(prefix);\n            this._bufferText += '=';\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStringInternal = function (text, inAttributeValue) {\n        if (typeof text === 'undefined' || text === null) {\n            text = '';\n        }\n        text = text.replace(/\\&/g, '&amp;'); // eslint-disable-line\n        text = text.replace(/\\</g, '&lt;'); // eslint-disable-line\n        text = text.replace(/\\>/g, '&gt;'); // eslint-disable-line\n        if (inAttributeValue) {\n            text = text.replace(/\\\"/g, '&quot;'); // eslint-disable-line\n        }\n        this._bufferText += text;\n        if (!inAttributeValue) {\n            this._position = 0;\n        }\n    };\n    _XmlWriter.prototype._startElementContent = function () {\n        var start = this._elementStack[this._elementStack.length - 1]._previousTop;\n        for (var i = this._namespaceStack.length - 1; i > start; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._kind === 'NeedToWrite') {\n                this._writeNamespaceDeclaration(this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix, this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri);\n            }\n        }\n        this._bufferText += '>';\n        this._position = this._bufferText.length + 1;\n    };\n    _XmlWriter.prototype._rawText = function (text) {\n        this._bufferText += text;\n    };\n    _XmlWriter.prototype._addNamespace = function (prefix, ns, kind) {\n        var top = this._namespaceStack.length;\n        this._namespaceStack.push(new _Namespace());\n        this._namespaceStack[Number.parseInt(top.toString(), 10)]._set(prefix, ns, kind);\n    };\n    _XmlWriter.prototype._lookupPrefix = function (namespace) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri === namespace) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespace = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespaceIndex = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    _XmlWriter.prototype._pushNamespaceImplicit = function (prefix, ns) {\n        var kind;\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        var isValid = true;\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri !== ns) {\n                    throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');\n                }\n                isValid = false;\n            }\n            else {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind === 'Special') {\n                    if (prefix === 'xml') {\n                        if (ns !== this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri) {\n                            throw new Error('InvalidArgumentException: Xml String');\n                        }\n                        else {\n                            kind = 'Implied';\n                        }\n                    }\n                    else {\n                        throw new Error('InvalidArgumentException: Prefix \"xmlns\" is reserved for use by XML.');\n                    }\n                }\n                else {\n                    kind = (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri === ns) ?\n                        'Implied' :\n                        'NeedToWrite';\n                }\n            }\n        }\n        else {\n            if ((ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml') ||\n                (ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns')) {\n                throw new Error('InvalidArgumentException');\n            }\n            kind = 'NeedToWrite';\n        }\n        if (isValid) {\n            this._addNamespace(prefix, ns, kind);\n        }\n    };\n    _XmlWriter.prototype._pushNamespaceExplicit = function (prefix, ns) {\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind = 'Written';\n                return;\n            }\n        }\n        this._addNamespace(prefix, ns, 'Written');\n        return;\n    };\n    _XmlWriter.prototype._addAttribute = function (prefix, localName, namespaceName) {\n        var top = this._attributeStack.length;\n        this._attributeStack.push(new _XmlAttribute());\n        this._attributeStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespaceName);\n        for (var i = 0; i < top; i++) {\n            if (this._attributeStack[Number.parseInt(i.toString(), 10)]._isDuplicate(prefix, localName, namespaceName)) {\n                throw new Error('XmlException: duplicate attribute name');\n            }\n        }\n    };\n    _XmlWriter.prototype._skipPushAndWrite = function (prefix, localName, namespace) {\n        this._addAttribute(prefix, localName, namespace);\n        this._writeStartAttributeInternal(prefix, localName);\n    };\n    _XmlWriter.prototype._checkName = function (text) {\n        var format = /[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]/; // eslint-disable-line\n        if (format.test(text)) {\n            throw new Error('InvalidArgumentException: invalid name character');\n        }\n    };\n    return _XmlWriter;\n}());\nexport { _XmlWriter };\nvar _Namespace = /** @class */ (function () {\n    function _Namespace() {\n    }\n    _Namespace.prototype._set = function (prefix, namespaceUri, kind) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._kind = kind;\n    };\n    _Namespace.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._kind = undefined;\n    };\n    return _Namespace;\n}());\nexport { _Namespace };\nvar _XmlElement = /** @class */ (function () {\n    function _XmlElement() {\n    }\n    _XmlElement.prototype._set = function (prefix, localName, namespaceUri, previousTop) {\n        this._previousTop = previousTop;\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlElement.prototype._destroy = function () {\n        this._previousTop = undefined;\n        this._prefix = undefined;\n        this._localName = undefined;\n        this._namespaceUri = undefined;\n    };\n    return _XmlElement;\n}());\nexport { _XmlElement };\nvar _XmlAttribute = /** @class */ (function () {\n    function _XmlAttribute() {\n    }\n    _XmlAttribute.prototype._set = function (prefix, localName, namespaceUri) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlAttribute.prototype._isDuplicate = function (prefix, localName, namespaceUri) {\n        return ((this._localName === localName) && ((this._prefix === prefix) || (this._namespaceUri === namespaceUri)));\n    };\n    _XmlAttribute.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._localName = undefined;\n    };\n    return _XmlAttribute;\n}());\nexport { _XmlAttribute };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { PdfAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfDocumentLinkAnnotation, PdfUriAnnotation } from './../annotations/annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { _hexStringToByteArray, _stringToAnnotationFlags, _convertToColor, _bytesToString, _hexStringToString, _getSpecialCharacter, _getLatinCharacter, _getInheritableProperty, _getNewGuidString, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _encode } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField, PdfListField } from './../form/field';\nvar _ExportHelper = /** @class */ (function () {\n    function _ExportHelper() {\n        this._asPerSpecification = false;\n        this._fileName = '';\n        this._formKey = '';\n        this._exportEmptyFields = false;\n        this._groupReferences = new Map();\n        this._groupHolders = [];\n        this._richTextPrefix = '<?xml version=\"1.0\"?>';\n        this._table = new Map(); // eslint-disable-line\n        this._fields = new Map();\n        this._richTextValues = new Map();\n        this._jsonData = [];\n        this._openingBrace = 123;\n        this._openingBracket = 91;\n        this._closingBrace = 125;\n        this._closingBracket = 93;\n        this._colon = 58;\n        this._doubleQuotes = 34;\n        this._comma = 44;\n        this._space = 32;\n        this.fdfString = '';\n        this._xmlImport = false;\n    }\n    _ExportHelper.prototype._exportFormFieldsData = function (field) {\n        var textValue = '';\n        if (field !== null && typeof field !== 'undefined' && field.export) {\n            var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n            if (type && type.name !== null && typeof type.name !== 'undefined') {\n                var font = this._getEncodedFontDictionary(field._dictionary);\n                var fieldName = field.name;\n                if (font !== null && typeof font !== 'undefined') {\n                    fieldName = this._getEncodedValue(fieldName, font);\n                }\n                var value = void 0; // eslint-disable-line\n                var selectedValue = void 0;\n                switch (type.name) {\n                    case 'Tx':\n                        textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Ch':\n                        value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                textValue = selectedValue;\n                                this._table.set(fieldName, textValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                                return values;\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Btn':\n                        value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            var text = this._getExportValue(value, field);\n                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                var radioButton = void 0;\n                                if (field instanceof PdfRadioButtonListField) {\n                                    radioButton = field;\n                                }\n                                if (!field._dictionary.has('Opt') ||\n                                    (radioButton !== null &&\n                                        typeof radioButton !== 'undefined'\n                                        && radioButton.selectedIndex === -1)) {\n                                    text = this._getEncodedValue(text, font);\n                                    textValue = text;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else {\n                                    if (field._dictionary.has('Opt')) {\n                                        var options = field._dictionary.getArray('Opt');\n                                        var index = Number.parseInt(text, 10);\n                                        if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                            index = 0;\n                                        }\n                                        if (options !== null && typeof options !== 'undefined') {\n                                            var current = void 0;\n                                            if (radioButton) {\n                                                current = options[radioButton.selectedIndex];\n                                            }\n                                            else {\n                                                current = options[Number.parseInt(index.toString(), 10)];\n                                            }\n                                            if (current !== null && typeof current !== 'undefined') {\n                                                text = current;\n                                            }\n                                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                                text = this._getEncodedValue(text, font);\n                                                textValue = text;\n                                                this._table.set(fieldName, textValue);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                                if (this._exportEmptyFields) {\n                                    textValue = text;\n                                }\n                                else {\n                                    textValue = 'Off';\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else {\n                            if (field instanceof PdfRadioButtonListField) {\n                                textValue = field._getAppearanceStateValue();\n                                if (!textValue) {\n                                    if (this._exportEmptyFields) {\n                                        textValue = '';\n                                    }\n                                    else {\n                                        textValue = 'Off';\n                                    }\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                            else {\n                                var widget = field.itemAt(field._defaultIndex);\n                                var dictionary = void 0;\n                                if (widget) {\n                                    dictionary = widget._dictionary;\n                                }\n                                else {\n                                    dictionary = field._dictionary;\n                                }\n                                if (dictionary && dictionary.has('AS')) {\n                                    textValue = dictionary.get('AS').name;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else if (this._exportEmptyFields) {\n                                    textValue = '';\n                                    this._table.set(fieldName, textValue);\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n        return textValue;\n    };\n    _ExportHelper.prototype._exportFormFieldData = function (field) {\n        var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n        if (type && type.name !== null && typeof type.name !== 'undefined') {\n            var font = this._getEncodedFontDictionary(field._dictionary);\n            var fieldName = field.name;\n            if (font !== null && typeof font !== 'undefined') {\n                fieldName = this._getEncodedValue(fieldName, font);\n            }\n            var textValue = void 0;\n            var value = void 0; // eslint-disable-line\n            switch (type.name) {\n                case 'Tx':\n                    textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field._dictionary.has('RV')) {\n                            textValue = _getInheritableProperty(field._dictionary, 'RV', false, true, 'Parent');\n                            if (textValue !== null && typeof textValue !== 'undefined') {\n                                textValue += this._key;\n                                this._formKey = this._key;\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            var replaceValue = textValue;\n                            if (field instanceof PdfTextBoxField && field.multiLine) {\n                                replaceValue = replaceValue.replace('\\n', '');\n                                replaceValue = replaceValue.replace('\\r', '\\r\\n');\n                                textValue = replaceValue;\n                            }\n                            this._table.set(fieldName, textValue);\n                        }\n                    }\n                    else {\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Ch':\n                    value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field instanceof PdfListField) {\n                            if (Array.isArray(value)) {\n                                this._table.set(fieldName, value);\n                            }\n                            else {\n                                if (typeof value === 'string') {\n                                    value = this._getEncodedValue(value, font);\n                                    this._table.set(fieldName, value);\n                                }\n                                else if ((value === null || typeof value === 'undefined') && field._dictionary.has('I')) {\n                                    var selectedValue = field._obtainSelectedValue();\n                                    if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                                        if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                            selectedValue = this._getEncodedValue(selectedValue, font);\n                                            this._table.set(fieldName, textValue);\n                                        }\n                                        else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                            var values = [];\n                                            for (var i = 0; i < selectedValue.length; i++) {\n                                                values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                            }\n                                            this._table.set(fieldName, values);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        var selectedValue = void 0;\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                this._table.set(fieldName, selectedValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Btn':\n                    value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (value !== null && typeof value !== 'undefined') {\n                        var text = this._getExportValue(value, field);\n                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                            if (this._asPerSpecification && this._format !== 'XML') {\n                                text = _hexStringToString(text);\n                            }\n                            var radioButton = void 0;\n                            if (field instanceof PdfRadioButtonListField) {\n                                radioButton = field;\n                            }\n                            if (!field._dictionary.has('Opt') ||\n                                (radioButton !== null &&\n                                    typeof radioButton !== 'undefined'\n                                    && radioButton.selectedIndex === -1)) {\n                                text = this._getEncodedValue(text, font);\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                if (field._dictionary.has('Opt')) {\n                                    var options = field._dictionary.getArray('Opt');\n                                    var index = Number.parseInt(text, 10);\n                                    if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                        index = 0;\n                                    }\n                                    if (options !== null && typeof options !== 'undefined') {\n                                        var current = void 0;\n                                        if (radioButton) {\n                                            current = options[radioButton.selectedIndex];\n                                        }\n                                        else {\n                                            current = options[Number.parseInt(index.toString(), 10)];\n                                        }\n                                        if (current !== null && typeof current !== 'undefined') {\n                                            text = current;\n                                        }\n                                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                            text = this._getEncodedValue(text, font);\n                                            this._table.set(fieldName, text);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            if (this._exportEmptyFields) {\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                this._table.set(fieldName, 'Off');\n                            }\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfRadioButtonListField) {\n                            var text = field._getAppearanceStateValue();\n                            if (!text) {\n                                if (this._exportEmptyFields) {\n                                    text = '';\n                                }\n                                else {\n                                    text = 'Off';\n                                }\n                            }\n                            this._table.set(fieldName, text);\n                        }\n                        else {\n                            var widget = field.itemAt(field._defaultIndex);\n                            var dictionary = void 0;\n                            if (widget) {\n                                dictionary = widget._dictionary;\n                            }\n                            else {\n                                dictionary = field._dictionary;\n                            }\n                            if (dictionary && dictionary.has('AS')) {\n                                this._table.set(fieldName, dictionary.get('AS').name);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    _ExportHelper.prototype._getAnnotationType = function (dictionary) {\n        var type = '';\n        if (dictionary.has('Subtype')) {\n            var subtype = dictionary.get('Subtype');\n            if (subtype) {\n                type = subtype.name;\n            }\n        }\n        return type;\n    };\n    _ExportHelper.prototype._getValue = function (primitive, isJson) {\n        if (isJson === void 0) { isJson = false; }\n        var value = '';\n        if (typeof primitive !== 'undefined' && primitive !== null) {\n            if (primitive instanceof _PdfName) {\n                value = primitive.name;\n            }\n            else if (typeof primitive === 'boolean') {\n                value = primitive ? isJson ? 'true' : 'yes' : isJson ? 'false' : 'no';\n            }\n            else if (typeof primitive === 'string') {\n                value = this._getValidString(primitive);\n            }\n            else if (Array.isArray(primitive)) {\n                var colorArray = primitive; // eslint-disable-line\n                if (colorArray.length > 0) {\n                    value = this._getValue(colorArray[0], isJson);\n                }\n                for (var i = 1; i < colorArray.length; i++) {\n                    value += ',' + this._getValue(colorArray[Number.parseInt(i.toString(), 10)], isJson);\n                }\n            }\n            else if (typeof primitive === 'number') {\n                value = primitive.toString();\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getColor = function (primitive) {\n        var color = '';\n        if (primitive && Array.isArray(primitive) && primitive.length >= 3) {\n            var r = Math.round(primitive[0] * 255).toString(16).toUpperCase();\n            var g = Math.round(primitive[1] * 255).toString(16).toUpperCase();\n            var b = Math.round(primitive[2] * 255).toString(16).toUpperCase();\n            color = '#' + (r.length === 1 ? ('0' + r) : r) + (g.length === 1 ? ('0' + g) : g) + (b.length === 1 ? ('0' + b) : b);\n        }\n        return color;\n    };\n    _ExportHelper.prototype._getValidString = function (value) {\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getEncodedFontDictionary = function (source) {\n        var font;\n        var kids; // eslint-disable-line\n        if (source.has('Kids') && !source.has('AP')) {\n            kids = source.getArray('Kids');\n        }\n        if (source.has('AP') || (kids !== null && typeof kids !== 'undefined' && Array.isArray(kids))) {\n            var appearance = void 0;\n            if (kids !== null && typeof kids !== 'undefined' && kids.length > 0) {\n                var kid = kids[0];\n                if (kid !== null && typeof kid !== 'undefined' && kid.has('AP')) {\n                    appearance = kid.get('AP');\n                }\n            }\n            else {\n                appearance = source.get('AP');\n            }\n            if (appearance !== null && typeof appearance !== 'undefined' && appearance.has('N')) {\n                var normal = appearance.get('N');\n                if (normal !== null && typeof normal !== 'undefined' && normal instanceof _PdfBaseStream && normal.dictionary.has('Resources')) {\n                    var resource = normal.dictionary.get('Resources');\n                    if (resource !== null && typeof resource !== 'undefined' && resource.has('Font')) {\n                        font = resource.get('Font');\n                    }\n                }\n            }\n        }\n        return font;\n    };\n    _ExportHelper.prototype._getEncodedValue = function (value, dictionary) {\n        var _this = this;\n        var text = value;\n        var structure;\n        if (this._encodeDictionary !== null && typeof this._encodeDictionary !== 'undefined') {\n            structure = new _FontStructure(this._encodeDictionary);\n            return this._replaceNotUsedCharacters(text, structure);\n        }\n        else {\n            var root = this._document.form._dictionary;\n            if (root !== null && typeof root !== 'undefined' && root.has('DR')) {\n                var resource = root.get('DR');\n                if (resource !== null && typeof resource !== 'undefined' && resource.has('Encoding')) {\n                    var encoding = resource.get('Encoding');\n                    if (encoding !== null && typeof encoding !== 'undefined' && encoding.has('PDFDocEncoding')) {\n                        var pdfEncoding = encoding.get('PDFDocEncoding');\n                        if (pdfEncoding !== null && typeof pdfEncoding !== 'undefined' && pdfEncoding.has('Differences')) {\n                            var encodingDictionary = new _PdfDictionary(this._crossReference);\n                            encodingDictionary.set('Differences', pdfEncoding.get('Differences'));\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, encodingDictionary);\n                            var fontEncodeDictionary = new _PdfDictionary(this._crossReference);\n                            fontEncodeDictionary.set('Subtype', _PdfName.get('Type1'));\n                            fontEncodeDictionary.set('Encoding', reference);\n                            structure = new _FontStructure(fontEncodeDictionary);\n                            if (structure !== null &&\n                                typeof structure !== 'undefined' &&\n                                structure.differencesDictionary !== null &&\n                                typeof structure.differencesDictionary !== 'undefined' &&\n                                structure.differencesDictionary.size > 0) {\n                                this._encodeDictionary = fontEncodeDictionary;\n                                return this._replaceNotUsedCharacters(text, structure);\n                            }\n                        }\n                    }\n                }\n            }\n            if (value !== null &&\n                typeof value !== 'undefined' &&\n                dictionary !== null &&\n                typeof dictionary !== 'undefined' &&\n                dictionary.size > 0) {\n                var result_1;\n                var isSkip_1 = false;\n                dictionary.forEach(function (key, value) {\n                    if (!isSkip_1 && value !== null && typeof value !== 'undefined') {\n                        var fontDictionary = void 0;\n                        if (value instanceof _PdfDictionary) {\n                            fontDictionary = value;\n                        }\n                        else if (value instanceof _PdfReference) {\n                            var holder = _this._crossReference._fetch(value); // eslint-disable-line\n                            if (holder !== null && typeof holder !== 'undefined' && holder instanceof _PdfDictionary) {\n                                fontDictionary = holder;\n                            }\n                        }\n                        if (fontDictionary) {\n                            structure = new _FontStructure(fontDictionary);\n                            result_1 = _this._replaceNotUsedCharacters(text, structure);\n                            isSkip_1 = true;\n                        }\n                    }\n                });\n                if (!isSkip_1) {\n                    return result_1;\n                }\n            }\n            return text;\n        }\n    };\n    _ExportHelper.prototype._replaceNotUsedCharacters = function (input, structure) {\n        var updatedString = '';\n        var differencesDictionary = structure.differencesDictionary;\n        for (var i = 0; i < input.length; i++) {\n            var text = input[Number.parseInt(i.toString(), 10)];\n            var code = input.charCodeAt(i);\n            if (differencesDictionary.has(text)) {\n                var difference = differencesDictionary.get(text);\n                if ((difference.length > 1 && structure._fontType !== 'Type3') ||\n                    (code > 127 && code <= 255 && structure._fontType === 'Type1' &&\n                        structure._baseFontEncoding !== 'WinAnsiEncoding' &&\n                        structure._fontEncoding === 'Encoding' && structure._fontName === 'ZapfDingbats')) {\n                    updatedString += text;\n                }\n                else {\n                    updatedString += difference;\n                }\n            }\n            else {\n                updatedString += text;\n            }\n        }\n        return updatedString;\n    };\n    _ExportHelper.prototype._getExportValue = function (primitive, field) {\n        var value;\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (field !== null && typeof field !== 'undefined') {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                if (value !== null &&\n                    typeof value !== 'undefined' &&\n                    value !== '' &&\n                    field instanceof PdfRadioButtonListField &&\n                    field.selectedIndex !== -1) {\n                    var item = field.itemAt(field.selectedIndex);\n                    if (item !== null && typeof item !== 'undefined' && item.value === value) {\n                        value = item.value;\n                    }\n                }\n            }\n            else {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                else if (Array.isArray(primitive)) {\n                    var values = [];\n                    for (var i = 0; i < primitive.length; i++) {\n                        var element = primitive[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (element instanceof _PdfName) {\n                            values.push(element.name);\n                        }\n                        else if (typeof element === 'string') {\n                            values.push(element);\n                        }\n                    }\n                    return values;\n                }\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._addReferenceToGroup = function (reference, dictionary) {\n        var name = dictionary.get('NM');\n        if (name && name !== '') {\n            this._groupReferences.set(name, reference);\n            if (dictionary.has('IRT')) {\n                this._groupHolders.push(dictionary);\n            }\n        }\n        else if (!name && dictionary.has('IRT')) {\n            name = dictionary.get('IRT');\n            if (name && name !== '' && this._groupReferences.has(name)) {\n                dictionary.update('IRT', this._groupReferences.get(name));\n            }\n        }\n    };\n    _ExportHelper.prototype._handlePopup = function (annotations, reference, annotationDictionary, pageDictionary) {\n        if (annotationDictionary.has('Popup')) {\n            var popupReference = annotationDictionary.getRaw('Popup');\n            var popup = annotationDictionary.get('Popup');\n            if (popup instanceof _PdfDictionary) {\n                if (popupReference && popup) {\n                    popup.update('Parent', reference);\n                }\n                var popupAnnotation = annotations._parseAnnotation(popup);\n                var index = annotations._annotations.length;\n                annotations._annotations.push(reference);\n                pageDictionary.set('Annots', annotations._annotations);\n                pageDictionary._updated = true;\n                annotations._parsedAnnotations.set(index, popupAnnotation);\n            }\n        }\n    };\n    _ExportHelper.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._fields.forEach(function (value, key) {\n                var richTextValue;\n                if (_this._richTextValues.size > 0 && _this._richTextValues.has(key)) {\n                    richTextValue = _this._richTextValues.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (richTextValue && richTextValue !== '') {\n                            field._dictionary.update('RV', richTextValue);\n                        }\n                        _this._importFieldData(field, value);\n                    }\n                }\n            });\n        }\n    };\n    _ExportHelper.prototype._importFieldData = function (field, values) {\n        if (values !== null &&\n            typeof values !== 'undefined' &&\n            values.length > 0 &&\n            field !== null &&\n            typeof field !== 'undefined' &&\n            !field.readOnly) {\n            var value = values[0];\n            if (field instanceof PdfTextBoxField) {\n                if (value !== null && typeof value !== 'undefined') {\n                    if (field instanceof PdfTextBoxField && field.multiLine) {\n                        value = value.replace('\\r\\n', '\\r');\n                        value = value.replace('\\n', '\\r');\n                    }\n                    field.text = value;\n                }\n            }\n            else if (field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                var selectedValues_1;\n                if (values.length > 1) {\n                    selectedValues_1 = values;\n                }\n                else {\n                    if (this._xmlImport) {\n                        selectedValues_1 = (value.indexOf(',') !== -1 ? value.split(',') : [value]);\n                    }\n                    else {\n                        selectedValues_1 = [value.indexOf(',') !== -1 ? value.split(',')[0] : value];\n                    }\n                }\n                var indexes_1 = [];\n                var options_1 = field._options;\n                if (options_1 && options_1.length > 0) {\n                    options_1.forEach(function (option) {\n                        if (selectedValues_1.indexOf(option[0]) !== -1 || selectedValues_1.indexOf(option[1]) !== -1) {\n                            indexes_1.push(options_1.indexOf(option));\n                        }\n                    });\n                }\n                if (indexes_1.length > 0) {\n                    field.selectedIndex = indexes_1;\n                    if (field instanceof PdfComboBoxField && this._asPerSpecification && field._dictionary.has('AP')) {\n                        delete field._dictionary._map.AP;\n                        field._dictionary._updated = true;\n                    }\n                }\n            }\n            else if (field instanceof PdfCheckBoxField) {\n                var lowerCase = value.toLowerCase();\n                if (this._containsExportValue(value, field) || lowerCase === 'on' || lowerCase === 'yes') {\n                    field.checked = true;\n                }\n                else {\n                    field.checked = false;\n                }\n            }\n            else if (field instanceof PdfRadioButtonListField) {\n                var index = -1;\n                for (var i = 0; i < field._kidsCount; i++) {\n                    var item = field.itemAt(i);\n                    if (item && item.value && item.value === value) {\n                        index = i;\n                        break;\n                    }\n                }\n                if (index !== -1 && field.selectedIndex !== index) {\n                    field.selectedIndex = index;\n                }\n            }\n        }\n    };\n    _ExportHelper.prototype._containsExportValue = function (value, field) {\n        var result = false;\n        if (field._kidsCount > 0) {\n            for (var i = 0; i < field._kidsCount; i++) {\n                var kid = field.itemAt(i);\n                if (kid && this._checkSelected(kid._dictionary, value)) {\n                    return true;\n                }\n            }\n        }\n        else {\n            result = this._checkSelected(field._dictionary, value);\n            if (!result && this._asPerSpecification && field._dictionary.has('AS')) {\n                var asEntry = field._dictionary.get('AS');\n                if (asEntry && (asEntry.name === 'Off' || asEntry.name === 'No')) {\n                    if (field._dictionary.has('Opt')) {\n                        var options = field._dictionary.getArray('Opt');\n                        if (options && options.length > 0) {\n                            options.forEach(function (option) {\n                                if (option === value) {\n                                    result = true;\n                                }\n                            });\n                        }\n                    }\n                }\n                else {\n                    result = true;\n                }\n            }\n        }\n        return result;\n    };\n    _ExportHelper.prototype._checkSelected = function (dictionary, value) {\n        if (dictionary && dictionary.has('AP')) {\n            var appearance = dictionary.get('AP');\n            if (appearance && appearance instanceof _PdfDictionary && appearance.has('N')) {\n                var normalTemplate = appearance.get('N');\n                if (normalTemplate &&\n                    normalTemplate instanceof _PdfDictionary &&\n                    normalTemplate.has(value) &&\n                    !(value.toLocaleLowerCase() === 'off' || value.toLocaleLowerCase() === 'no')) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    _ExportHelper.prototype._dispose = function () {\n        this.exportAppearance = undefined;\n        this._asPerSpecification = undefined;\n        this._skipBorderStyle = undefined;\n        this._fileName = undefined;\n        this._document = undefined;\n        this._crossReference = undefined;\n        this._isAnnotationExport = undefined;\n        this._isAnnotationImport = undefined;\n        this._key = undefined;\n        this._formKey = undefined;\n        this._exportEmptyFields = undefined;\n        this._groupReferences = undefined;\n        this._groupHolders = undefined;\n        this._encodeDictionary = undefined;\n        this._annotationTypes = undefined;\n        this._annotationAttributes = undefined;\n        this._xmlDocument = undefined;\n        this._parser = undefined;\n        this._table = undefined;\n        this._fields = undefined;\n        this._richTextValues = undefined;\n        this._jsonData = undefined;\n    };\n    return _ExportHelper;\n}());\nexport { _ExportHelper };\nvar _XfdfDocument = /** @class */ (function (_super) {\n    __extends(_XfdfDocument, _super);\n    function _XfdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _XfdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        return this._save();\n    };\n    _XfdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XfdfDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        writer._writeStartElement('xfdf');\n        writer._writeAttributeString(null, 'http://ns.adobe.com/xfdf/', 'xmlns', null);\n        writer._writeAttributeString('space', 'preserve', 'xml', null);\n        if (this._isAnnotationExport) {\n            writer._writeStartElement('annots');\n            if (this._document) {\n                for (var i = 0; i < this._document.pageCount; i++) {\n                    var page = this._document.getPage(i);\n                    var annotations = page.annotations;\n                    for (var j = 0; j < annotations.count; j++) {\n                        var annotation = annotations.at(j);\n                        if (annotation && (!this._annotationTypes ||\n                            this._annotationTypes.length === 0 ||\n                            (this._annotationTypes && this._annotationTypes.length > 0 && this._checkAnnotationType(annotation)))) {\n                            this._exportAnnotationData(annotation, writer, i);\n                        }\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        else {\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this._exportFormFieldData(field);\n                    }\n                }\n                this._writeFormFieldData(writer, this._asPerSpecification);\n            }\n        }\n        if (!this._asPerSpecification) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XfdfDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        var _this = this;\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n            writer._writeEndElement();\n            var elements = this._getElements(this._table); // eslint-disable-line\n            if (elements && elements.size > 0) {\n                writer._writeStartElement('fields');\n                var flag_1 = false;\n                elements.forEach(function (value, key) {\n                    writer._writeStartElement('field');\n                    writer._writeAttributeString('name', key.toString());\n                    if (Array.isArray(value)) {\n                        value.forEach(function (item) {\n                            writer._writeStartElement('value');\n                            writer._writeString(item.toString());\n                            writer._writeEndElement();\n                            flag_1 = true;\n                        });\n                    }\n                    if (value instanceof Map) {\n                        _this._writeFieldName(value, writer);\n                    }\n                    else if (!flag_1 && !value.toString().endsWith(_this._formKey) || (!flag_1 && _this._formKey === '')) {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                        writer._writeEndElement();\n                    }\n                    else if (_this._formKey !== '' && value.toString().endsWith(_this._formKey)) {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                        writer._writeEndElement();\n                    }\n                    writer._writeEndElement();\n                    flag_1 = false;\n                });\n                writer._writeEndElement();\n            }\n            writer._writeStartElement('ids');\n            var hasId = false;\n            if (this._crossReference._root.has('ID')) {\n                var id = this._crossReference._root.getArray('ID');\n                if (id && id.length >= 1) {\n                    writer._writeAttributeString('original', id[0]);\n                    writer._writeAttributeString('modified', id[1]);\n                    hasId = true;\n                }\n            }\n            if (!hasId) {\n                writer._writeAttributeString('original', '');\n                writer._writeAttributeString('modified', '');\n            }\n            writer._writeEndElement();\n        }\n        else {\n            writer._writeStartElement('fields');\n            this._table.forEach(function (value, key) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    writer._writeStartElement('value');\n                    writer._writeString(value.toString());\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            });\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeFieldName = function (value, writer) {\n        var _this = this;\n        value.forEach(function (value, key) {\n            if (value instanceof Map) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                _this._writeFieldName(value, writer);\n                writer._writeEndElement();\n            }\n            else {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    if (!value.toString().endsWith(_this._formKey) || _this._formKey === '') {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                    }\n                    else {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                    }\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            }\n        });\n    };\n    _XfdfDocument.prototype._getElements = function (table) {\n        var _this = this;\n        var elements = new Map(); // eslint-disable-line\n        table.forEach(function (value, key) {\n            var parentElements = elements; // eslint-disable-line\n            if (key.toString().indexOf('.') !== -1) {\n                var values = key.toString().split('.');\n                for (var i = 0; i < values.length; i++) {\n                    var element = values[Number.parseInt(i.toString(), 10)];\n                    if (parentElements.has(element)) {\n                        _this._getElements(parentElements[element]); // eslint-disable-line\n                        parentElements = parentElements[element]; // eslint-disable-line\n                    }\n                    else {\n                        if (i === values.length - 1) {\n                            parentElements.set(element, value);\n                        }\n                        else {\n                            var newTable = new Map(); // eslint-disable-line\n                            parentElements.set(element, newTable);\n                            parentElements = newTable;\n                        }\n                    }\n                }\n            }\n            else {\n                parentElements.set(key, value);\n            }\n        });\n        return elements;\n    };\n    _XfdfDocument.prototype._checkAnnotationType = function (annotation) {\n        return (typeof annotation._type !== 'undefined' && this._annotationTypes.indexOf(annotation._type) !== -1);\n    };\n    _XfdfDocument.prototype._exportAnnotationData = function (annotation, writer, pageIndex) {\n        if (annotation._dictionary &&\n            !(annotation instanceof PdfFileLinkAnnotation ||\n                annotation instanceof PdfTextWebLinkAnnotation ||\n                annotation instanceof PdfDocumentLinkAnnotation ||\n                annotation instanceof PdfUriAnnotation)) {\n            this._writeAnnotationData(writer, pageIndex, annotation);\n        }\n    };\n    _XfdfDocument.prototype._writeAnnotationData = function (writer, pageIndex, source) {\n        var hasAppearance = false;\n        var annotation;\n        var dictionary;\n        if (source instanceof PdfAnnotation) {\n            annotation = source;\n            dictionary = source._dictionary;\n        }\n        else {\n            dictionary = source;\n        }\n        var type = this._getAnnotationType(dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            if (!this._annotationAttributes) {\n                this._annotationAttributes = [];\n            }\n            writer._writeStartElement(type.toLowerCase());\n            writer._writeAttributeString('page', pageIndex.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    writer._writeAttributeString('start', points[0].toString() + ',' + points[1].toString());\n                    writer._writeAttributeString('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, pageIndex, writer, hasAppearance);\n            writer._writeEndElement();\n            this._annotationAttributes = [];\n        }\n    };\n    _XfdfDocument.prototype._writeDictionary = function (dictionary, pageIndex, writer, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                writer._writeAttributeString('inreplyto', _this._getValue(entry.get('NM')));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, writer, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(writer, key, value);\n                }\n            }\n        });\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                writer._writeStartElement('appearance');\n                writer._writeRaw(_encode(stream));\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'), writer);\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    writer._writeAttributeString('bits', this._getValue(soundDictionary.get('B')));\n                }\n                if (soundDictionary.has('C')) {\n                    writer._writeAttributeString('channels', this._getValue(soundDictionary.get('C')));\n                }\n                if (soundDictionary.has('E')) {\n                    writer._writeAttributeString('encoding', this._getValue(soundDictionary.get('E')));\n                }\n                if (soundDictionary.has('R')) {\n                    writer._writeAttributeString('rate', this._getValue(soundDictionary.get('R')));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        writer._writeStartElement('data');\n                        writer._writeAttributeString('MODE', 'raw');\n                        writer._writeAttributeString('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            writer._writeAttributeString('length', this._getValue(soundDictionary.get('Length')));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            writer._writeAttributeString('filter', this._getValue(soundDictionary.get('Filter')));\n                        }\n                        writer._writeRaw(data);\n                        writer._writeEndElement();\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    writer._writeAttributeString('file', this._getValue(fsDictionary.get('F')));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'));\n                                        writer._writeAttributeString('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'));\n                                        writer._writeAttributeString('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        writer._writeAttributeString('size', this._getValue(paramsDictionary.get('Size')));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'));\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        writer._writeAttributeString('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                writer._writeStartElement('data');\n                                writer._writeAttributeString('MODE', 'raw');\n                                writer._writeAttributeString('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    writer._writeAttributeString('length', this._getValue(fDictionary.get('Length')));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    writer._writeAttributeString('filter', this._getValue(fDictionary.get('Filter')));\n                                }\n                                writer._writeRaw(data);\n                                writer._writeEndElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (dictionary.has('Vertices')) {\n            writer._writeStartElement('vertices');\n            var vertices = dictionary.getArray('Vertices');\n            if (vertices && vertices.length > 0) {\n                var elementCount = vertices.length;\n                if (elementCount % 2 === 0) {\n                    var value = '';\n                    for (var i = 0; i < elementCount - 1; i++) {\n                        value += this._getValue(vertices[Number.parseInt(i.toString(), 10)]) + (i % 2 !== 0 ? ';' : ',');\n                    }\n                    value += this._getValue(vertices[elementCount - 1]);\n                    if (value && value !== '') {\n                        writer._writeRaw(value);\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        if (dictionary.has('Popup')) {\n            var popup = dictionary.get('Popup');\n            if (popup) {\n                this._writeAnnotationData(writer, pageIndex, popup);\n            }\n        }\n        if (dictionary.has('DA')) {\n            var defaultAppearance = dictionary.get('DA');\n            if (defaultAppearance) {\n                this._writeRawData(writer, 'defaultappearance', defaultAppearance);\n            }\n        }\n        if (dictionary.has('DS')) {\n            var defaultStyle = dictionary.get('DS');\n            if (defaultStyle) {\n                this._writeRawData(writer, 'defaultstyle', defaultStyle);\n            }\n        }\n        if (dictionary.has('InkList')) {\n            var inkList = dictionary.getArray('InkList');\n            if (inkList && inkList.length > 0) {\n                writer._writeStartElement('inklist');\n                for (var j = 0; j < inkList.length; j++) {\n                    writer._writeElementString('gesture', this._getValue(inkList[Number.parseInt(j.toString(), 10)]));\n                }\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('RC')) {\n            var value = dictionary.get('RC');\n            if (value && value !== '') {\n                var index = value.indexOf('<body');\n                if (index > 0) {\n                    value = value.substring(index);\n                }\n                this._writeRawData(writer, 'contents-richtext', value);\n            }\n        }\n        if (dictionary.has('Contents')) {\n            var value = dictionary.get('Contents');\n            if (value && value.length > 0) {\n                writer._writeStartElement('contents');\n                writer._writeString(value);\n                writer._writeEndElement();\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearanceString = function (appearance) {\n        var textWriter = new _XmlWriter(true);\n        textWriter._writeStartElement('DICT');\n        textWriter._writeAttributeString('KEY', 'AP');\n        this._writeAppearanceDictionary(textWriter, appearance);\n        textWriter._writeEndElement();\n        var buffer = textWriter.buffer;\n        textWriter._destroy();\n        return buffer;\n    };\n    _XfdfDocument.prototype._writeAppearanceDictionary = function (writer, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(writer, value instanceof _PdfReference ? dictionary.get(key) : value, dictionary, key);\n            });\n        }\n    };\n    _XfdfDocument.prototype._writeObject = function (writer, primitive, dictionary, key) {\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (primitive instanceof _PdfName) {\n                this._writePrefix(writer, 'NAME', key);\n                writer._writeAttributeString('VAL', primitive.name);\n                writer._writeEndElement();\n            }\n            else if (Array.isArray(primitive)) {\n                this._writePrefix(writer, 'ARRAY', key);\n                if (dictionary.has(key)) {\n                    this._writeArray(writer, dictionary.getArray(key), dictionary);\n                }\n                else {\n                    this._writeArray(writer, primitive, dictionary);\n                }\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'string') {\n                this._writePrefix(writer, 'STRING', key);\n                writer._writeAttributeString('VAL', primitive);\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'number') {\n                if (Number.isInteger(primitive)) {\n                    this._writePrefix(writer, 'INT', key);\n                    writer._writeAttributeString('VAL', primitive.toString());\n                }\n                else {\n                    this._writePrefix(writer, 'FIXED', key);\n                    writer._writeAttributeString('VAL', primitive.toFixed(6));\n                }\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'boolean') {\n                this._writePrefix(writer, 'BOOL', key);\n                writer._writeAttributeString('VAL', primitive ? 'true' : 'false');\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfDictionary) {\n                this._writePrefix(writer, 'DICT', key);\n                this._writeAppearanceDictionary(writer, primitive);\n                writer._writeEndElement();\n            }\n            else if (primitive === null) {\n                this._writePrefix(writer, 'NULL', key);\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfBaseStream && primitive.dictionary) {\n                var streamDictionary = primitive.dictionary;\n                this._writePrefix(writer, 'STREAM', key);\n                writer._writeAttributeString('DEFINE', '');\n                if ((streamDictionary.has('Subtype') &&\n                    this._getValue(streamDictionary.get('Subtype')) === 'Image') ||\n                    (!streamDictionary.has('Type') && !streamDictionary.has('Subtype'))) {\n                    var data = primitive.getString(true);\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'RAW');\n                    writer._writeAttributeString('ENCODING', 'HEX');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                else {\n                    var data = primitive.getString();\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    data = data.replace(/</g, '&lt;');\n                    data = data.replace(/>/g, '&gt;');\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'FILTERED');\n                    writer._writeAttributeString('ENCODING', 'ASCII');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                writer._writeEndElement();\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfReference && this._crossReference) {\n                this._writeObject(writer, this._crossReference._fetch(primitive), dictionary, key);\n            }\n        }\n    };\n    _XfdfDocument.prototype._writePrefix = function (writer, name, key) {\n        writer._writeStartElement(name);\n        if (key) {\n            writer._writeAttributeString('KEY', key);\n        }\n    };\n    _XfdfDocument.prototype._writeArray = function (writer, array, dictionary) {\n        var _this = this;\n        array.forEach(function (entry) {\n            _this._writeObject(writer, entry, dictionary);\n        });\n    };\n    _XfdfDocument.prototype._getFormatedString = function (value, isParsing) {\n        if (isParsing === void 0) { isParsing = false; }\n        if (isParsing) {\n            value = value.replace('&amp;', '&');\n            value = value.replace('&lt;', '<');\n            value = value.replace('&gt;', '>');\n        }\n        else {\n            value = value.replace('&', '&amp;');\n            value = value.replace('<', '&lt;');\n            value = value.replace('>', '&gt;');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._writeAttribute = function (writer, key, primitive) {\n        if (this._annotationAttributes && this._annotationAttributes.indexOf(key) === -1) {\n            switch (key) {\n                case 'C':\n                    this._writeColor(writer, primitive, 'color', 'c');\n                    break;\n                case 'IC':\n                    this._writeColor(writer, primitive, 'interior-color');\n                    break;\n                case 'M':\n                    this._writeAttributeString(writer, 'date', primitive);\n                    break;\n                case 'NM':\n                    this._writeAttributeString(writer, 'name', primitive);\n                    break;\n                case 'Name':\n                    this._writeAttributeString(writer, 'icon', primitive);\n                    break;\n                case 'Subj':\n                    this._writeAttributeString(writer, 'subject', primitive);\n                    break;\n                case 'T':\n                    this._writeAttributeString(writer, 'title', primitive);\n                    break;\n                case 'Rotate':\n                    this._writeAttributeString(writer, 'rotation', primitive);\n                    break;\n                case 'W':\n                    this._writeAttributeString(writer, 'width', primitive);\n                    break;\n                case 'LE':\n                    if (primitive && Array.isArray(primitive)) {\n                        if (primitive.length === 2) {\n                            writer._writeAttributeString('head', this._getValue(primitive[0]));\n                            writer._writeAttributeString('tail', this._getValue(primitive[1]));\n                        }\n                    }\n                    else if (primitive instanceof _PdfName) {\n                        this._writeAttributeString(writer, 'head', primitive);\n                    }\n                    break;\n                case 'S':\n                    if (this._annotationAttributes.indexOf('style') === -1) {\n                        switch (this._getValue(primitive)) {\n                            case 'D':\n                                writer._writeAttributeString('style', 'dash');\n                                break;\n                            case 'C':\n                                writer._writeAttributeString('style', 'cloudy');\n                                break;\n                            case 'S':\n                                writer._writeAttributeString('style', 'solid');\n                                break;\n                            case 'B':\n                                writer._writeAttributeString('style', 'bevelled');\n                                break;\n                            case 'I':\n                                writer._writeAttributeString('style', 'inset');\n                                break;\n                            case 'U':\n                                writer._writeAttributeString('style', 'underline');\n                                break;\n                        }\n                        this._annotationAttributes.push('style');\n                    }\n                    break;\n                case 'D':\n                    this._writeAttributeString(writer, 'dashes', primitive);\n                    break;\n                case 'I':\n                    this._writeAttributeString(writer, 'intensity', primitive);\n                    break;\n                case 'RD':\n                    this._writeAttributeString(writer, 'fringe', primitive);\n                    break;\n                case 'IT':\n                    this._writeAttributeString(writer, 'IT', primitive);\n                    break;\n                case 'RT':\n                    this._writeAttributeString(writer, 'replyType', primitive, true);\n                    break;\n                case 'LL':\n                    this._writeAttributeString(writer, 'leaderLength', primitive);\n                    break;\n                case 'LLE':\n                    this._writeAttributeString(writer, 'leaderExtend', primitive);\n                    break;\n                case 'Cap':\n                    this._writeAttributeString(writer, 'caption', primitive);\n                    break;\n                case 'Q':\n                    this._writeAttributeString(writer, 'justification', primitive);\n                    break;\n                case 'CP':\n                    this._writeAttributeString(writer, 'caption-style', primitive);\n                    break;\n                case 'CL':\n                    this._writeAttributeString(writer, 'callout', primitive);\n                    break;\n                case 'QuadPoints':\n                    this._writeAttributeString(writer, 'coords', primitive);\n                    break;\n                case 'CA':\n                    this._writeAttributeString(writer, 'opacity', primitive);\n                    break;\n                case 'F':\n                    if (typeof primitive === 'number' && this._annotationAttributes.indexOf('flags') === -1) {\n                        var flag = _annotationFlagsToString(primitive);\n                        writer._writeAttributeString('flags', flag);\n                        this._annotationAttributes.push('flags');\n                    }\n                    break;\n                case 'InkList':\n                case 'Type':\n                case 'Subtype':\n                case 'P':\n                case 'Parent':\n                case 'L':\n                case 'Contents':\n                case 'RC':\n                case 'DA':\n                case 'DS':\n                case 'FS':\n                case 'MeasurementTypes':\n                case 'Vertices':\n                case 'GroupNesting':\n                case 'ITEx':\n                case 'TextMarkupContent':\n                    break;\n                default:\n                    this._writeAttributeString(writer, key.toLowerCase(), primitive);\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._writeAttributeString = function (writer, attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        if (this._annotationAttributes.indexOf(attribute) === -1) {\n            var value = this._getValue(primitive);\n            writer._writeAttributeString(attribute, isLowerCase ? value.toLowerCase() : value);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._writeRawData = function (writer, name, value) {\n        if (value && value !== '') {\n            writer._writeStartElement(name);\n            writer._writeRaw(value);\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeColor = function (writer, primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive);\n            if (c && c !== '' && this._annotationAttributes.indexOf(tag) === -1) {\n                writer._writeAttributeString(tag, c);\n                this._annotationAttributes.push(tag);\n            }\n        }\n        if (color && color !== '' && this._annotationAttributes.indexOf(attribute) === -1) {\n            writer._writeAttributeString(attribute, color);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._exportMeasureDictionary = function (dictionary, writer) {\n        writer._writeStartElement('measure');\n        if (dictionary) {\n            if (dictionary.has('R')) {\n                writer._writeAttributeString('rateValue', this._getValue(dictionary.get('R')));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                writer._writeStartElement('area');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                writer._writeStartElement('distance');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                writer._writeStartElement('xformat');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n        }\n        writer._writeEndElement();\n    };\n    _XfdfDocument.prototype._exportMeasureFormatDetails = function (measurementDetails, writer) {\n        if (measurementDetails.has('C')) {\n            writer._writeAttributeString('c', this._getValue(measurementDetails.get('C')));\n        }\n        if (measurementDetails.has('F')) {\n            writer._writeAttributeString('f', this._getValue(measurementDetails.get('F')));\n        }\n        if (measurementDetails.has('D')) {\n            writer._writeAttributeString('d', this._getValue(measurementDetails.get('D')));\n        }\n        if (measurementDetails.has('RD')) {\n            writer._writeAttributeString('rd', this._getValue(measurementDetails.get('RD')));\n        }\n        if (measurementDetails.has('U')) {\n            writer._writeAttributeString('u', this._getValue(measurementDetails.get('U')));\n        }\n        if (measurementDetails.has('RT')) {\n            writer._writeAttributeString('rt', this._getValue(measurementDetails.get('RT')));\n        }\n        if (measurementDetails.has('SS')) {\n            writer._writeAttributeString('ss', this._getValue(measurementDetails.get('SS')));\n        }\n        if (measurementDetails.has('FD')) {\n            writer._writeAttributeString('fd', this._getValue(measurementDetails.get('FD')));\n        }\n    };\n    //#endregion Export Annotations\n    //#region Import Annotations\n    _XfdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var xml = _bytesToString(data, true);\n        this._xmlDocument = (new DOMParser()).parseFromString(xml, 'text/xml');\n        this._isAnnotationImport = true;\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._xmlDocument = (new DOMParser()).parseFromString(_bytesToString(data, true), 'text/xml');\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._readXmlData = function (root) {\n        if (root && root.nodeType === 1) {\n            this._checkXfdf(root);\n            if (this._isAnnotationImport) {\n                var xList = root.getElementsByTagName('annots');\n                if (xList && xList.length > 0) {\n                    for (var i = 0; i < xList.length; i++) {\n                        var child = xList.item(i);\n                        if (child && child.localName === 'annots' && child.hasChildNodes()) {\n                            var childeNodes = child.childNodes;\n                            for (var j = 0; j < childeNodes.length; j++) {\n                                var childNode = childeNodes.item(j);\n                                if (childNode && childNode.nodeType === 1) {\n                                    var element = childNode;\n                                    if (element && element.nodeType === 1) {\n                                        this._parseAnnotationData(element);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n            else {\n                this._parseFormData(root);\n            }\n        }\n        this._dispose();\n    };\n    _XfdfDocument.prototype._checkXfdf = function (element) {\n        if (element.nodeName !== 'xfdf') {\n            throw new Error('Invalid XFDF file.');\n        }\n    };\n    _XfdfDocument.prototype._parseFormData = function (root) {\n        var list = root.getElementsByTagName('f');\n        if (list && list.length > 0) {\n            var fileNameElement = list.item(0);\n            if (fileNameElement && fileNameElement.localName === 'f' && fileNameElement.hasAttribute('href')) {\n                var fileName = fileNameElement.getAttribute('href');\n                if (fileName && fileName !== '') {\n                    this._fileName = fileName;\n                }\n            }\n        }\n        list = root.getElementsByTagName('ids');\n        if (list && list.length > 0) {\n            this._asPerSpecification = true;\n        }\n        var child = root.childNodes;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode && childNode.nodeType === 1) {\n                    var element = childNode;\n                    if (element && element.localName === 'fields' && element.hasChildNodes()) {\n                        var fieldList = element.childNodes;\n                        var elements = [];\n                        for (var j = 0; j < fieldList.length; j++) {\n                            var field = fieldList.item(j);\n                            if (field && field.nodeType === 1) {\n                                var filedElement = field;\n                                if (filedElement && filedElement.localName === 'field') {\n                                    elements.push(filedElement);\n                                }\n                            }\n                        }\n                        this._importFormNodes(elements);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XfdfDocument.prototype._importFormNodes = function (list) {\n        for (var i = 0; i < list.length; i++) {\n            var child = list[Number.parseInt(i.toString(), 10)];\n            var fieldName = '';\n            if (child) {\n                if (child.hasAttribute('name')) {\n                    fieldName = child.getAttribute('name');\n                }\n                if (fieldName && fieldName !== '') {\n                    var values = child.getElementsByTagName('value');\n                    if (values && values.length > 0) {\n                        var node = child;\n                        var textName = '';\n                        while (node.localName !== 'fields') {\n                            if (textName.length > 0) {\n                                textName = '.' + textName;\n                            }\n                            var skip = false;\n                            if (node.hasAttribute('name')) {\n                                var name_1 = node.getAttribute('name');\n                                if (name_1 && name_1 !== '') {\n                                    textName = name_1 + textName;\n                                    skip = true;\n                                }\n                            }\n                            if (!skip) {\n                                textName += node.localName;\n                            }\n                            node = node.parentElement;\n                        }\n                        fieldName = textName;\n                        var dataValues = void 0;\n                        if (this._fields.has(fieldName)) {\n                            dataValues = this._fields.get(fieldName);\n                        }\n                        else {\n                            dataValues = [];\n                        }\n                        for (var j = 0; j < values.length; j++) {\n                            dataValues.push(values.item(j).textContent);\n                        }\n                        this._fields.set(fieldName, dataValues);\n                    }\n                    else {\n                        values = child.getElementsByTagName('value-richtext');\n                        if (values && values.length > 0) {\n                            var element = values.item(0);\n                            if (element) {\n                                var node = child;\n                                var textName = '';\n                                while (node.localName !== 'fields') {\n                                    if (textName.length > 0) {\n                                        textName = '.' + textName;\n                                    }\n                                    var skip = false;\n                                    if (node.hasAttribute('name')) {\n                                        var name_2 = node.getAttribute('name');\n                                        if (name_2 && name_2 !== '') {\n                                            textName = name_2 + textName;\n                                            skip = true;\n                                        }\n                                    }\n                                    if (!skip) {\n                                        textName += node.localName;\n                                    }\n                                    node = node.parentElement;\n                                }\n                                fieldName = textName;\n                                var richText = element.textContent;\n                                if (element.childNodes && element.childNodes.length > 0) {\n                                    var childNode = element.childNodes[0];\n                                    if (childNode && childNode.hasChildNodes()) {\n                                        richText = '';\n                                        var childNodes = childNode.childNodes;\n                                        for (var j = void 0; j < childNodes.length; j++) {\n                                            richText += childNodes.item(j).textContent + '\\r';\n                                        }\n                                        if (richText.length > 0) {\n                                            richText = richText.substring(0, richText.length - 1);\n                                        }\n                                        else {\n                                            richText = element.textContent;\n                                        }\n                                    }\n                                }\n                                var dataValues = void 0;\n                                if (this._fields.has(fieldName)) {\n                                    dataValues = this._fields.get(fieldName);\n                                }\n                                else {\n                                    dataValues = [];\n                                }\n                                for (var j = 0; j < values.length; j++) {\n                                    dataValues.push(richText);\n                                }\n                                this._fields.set(fieldName, dataValues);\n                                if (!this._richTextValues.has(fieldName)) {\n                                    this._richTextValues.set(fieldName, element.innerHTML);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._parseAnnotationData = function (element) {\n        if (element) {\n            var pageIndex = -1;\n            if (element.hasAttributes && element.hasAttribute('page')) {\n                pageIndex = Number.parseInt(element.getAttribute('page'), 10);\n                if (pageIndex >= 0 && pageIndex < this._document.pageCount) {\n                    var page = this._document.getPage(pageIndex);\n                    var annotationDictionary = this._getAnnotationDictionary(page, element);\n                    if (annotationDictionary && annotationDictionary.size > 0) {\n                        var pageDictionary = page._pageDictionary;\n                        if (pageDictionary) {\n                            var annotations = page.annotations;\n                            var annotation = annotations._parseAnnotation(annotationDictionary);\n                            if (annotation) {\n                                annotation._isImported = true;\n                                var reference = this._crossReference._getNextReference();\n                                this._crossReference._cacheMap.set(reference, annotationDictionary);\n                                if (annotationDictionary.has('NM') || annotationDictionary.has('IRT')) {\n                                    this._addReferenceToGroup(reference, annotationDictionary);\n                                }\n                                annotation._ref = reference;\n                                var index = annotations._annotations.length;\n                                annotations._annotations.push(reference);\n                                pageDictionary.set('Annots', annotations._annotations);\n                                pageDictionary._updated = true;\n                                annotations._parsedAnnotations.set(index, annotation);\n                                this._handlePopup(annotations, reference, annotationDictionary, pageDictionary);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAnnotationDictionary = function (page, element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        dictionary.update('Type', _PdfName.get('Annot'));\n        var isValidType = true;\n        switch (element.localName.toLowerCase()) {\n            case 'line':\n                dictionary.update('Subtype', _PdfName.get('Line'));\n                if (element.hasAttribute('start') && element.hasAttribute('end')) {\n                    var points_1 = [];\n                    element.getAttribute('start').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    element.getAttribute('end').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    if (points_1.length === 4) {\n                        dictionary.update('L', points_1);\n                    }\n                }\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'circle':\n                dictionary.update('Subtype', _PdfName.get('Circle'));\n                break;\n            case 'square':\n                dictionary.update('Subtype', _PdfName.get('Square'));\n                break;\n            case 'polyline':\n                dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'polygon':\n                dictionary.update('Subtype', _PdfName.get('Polygon'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'ink':\n                dictionary.update('Subtype', _PdfName.get('Ink'));\n                break;\n            case 'popup':\n                dictionary.update('Subtype', _PdfName.get('Popup'));\n                break;\n            case 'text':\n                dictionary.update('Subtype', _PdfName.get('Text'));\n                break;\n            case 'freetext':\n                dictionary.update('Subtype', _PdfName.get('FreeText'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'stamp':\n                dictionary.update('Subtype', _PdfName.get('Stamp'));\n                break;\n            case 'highlight':\n                dictionary.update('Subtype', _PdfName.get('Highlight'));\n                break;\n            case 'squiggly':\n                dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                break;\n            case 'underline':\n                dictionary.update('Subtype', _PdfName.get('Underline'));\n                break;\n            case 'strikeout':\n                dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                break;\n            case 'fileattachment':\n                dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                break;\n            case 'sound':\n                dictionary.update('Subtype', _PdfName.get('Sound'));\n                break;\n            case 'caret':\n                dictionary.update('Subtype', _PdfName.get('Caret'));\n                break;\n            case 'redact':\n                dictionary.update('Subtype', _PdfName.get('Redact'));\n                break;\n            default:\n                isValidType = false;\n                break;\n        }\n        if (isValidType) {\n            this._addAnnotationData(dictionary, element, page);\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._addAnnotationData = function (dictionary, element, page) {\n        this._addBorderStyle(dictionary, element);\n        this._applyAttributeValues(dictionary, element.attributes);\n        this._parseInnerElements(dictionary, element, page);\n        this._addMeasureDictionary(dictionary, element);\n    };\n    _XfdfDocument.prototype._addBorderStyle = function (dictionary, element) {\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('width')) {\n            borderStyleDictionary.update('W', Number.parseFloat(element.getAttribute('width')));\n        }\n        var isBasicStyle = true;\n        if (element.hasAttribute('style')) {\n            var style = '';\n            switch (element.getAttribute('style')) {\n                case 'dash':\n                    style = 'D';\n                    break;\n                case 'solid':\n                    style = 'S';\n                    break;\n                case 'bevelled':\n                    style = 'B';\n                    break;\n                case 'inset':\n                    style = 'I';\n                    break;\n                case 'underline':\n                    style = 'U';\n                    break;\n                case 'cloudy':\n                    style = 'C';\n                    isBasicStyle = false;\n                    break;\n            }\n            if (style !== '') {\n                (isBasicStyle ? borderStyleDictionary : borderEffectDictionary).update('S', _PdfName.get(style));\n                if (!isBasicStyle && element.hasAttribute('intensity')) {\n                    borderEffectDictionary.update('I', Number.parseFloat(element.getAttribute('intensity')));\n                }\n                else if (element.hasAttribute('dashes')) {\n                    var dashes_1 = [];\n                    element.getAttribute('dashes').split(',').forEach(function (value) {\n                        dashes_1.push(Number.parseFloat(value));\n                    });\n                    borderStyleDictionary.update('D', dashes_1);\n                }\n            }\n        }\n        if (borderEffectDictionary.size > 0) {\n            dictionary.update('BE', borderEffectDictionary);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', 'Border');\n            dictionary.update('BS', borderStyleDictionary);\n        }\n    };\n    _XfdfDocument.prototype._applyAttributeValues = function (dictionary, attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n            var attribute = attributes[Number.parseInt(i.toString(), 10)];\n            var value = attribute.value;\n            var values = void 0;\n            var leaderExtend = void 0;\n            switch (attribute.name.toLowerCase()) {\n                case 'page':\n                case 'start':\n                case 'end':\n                case 'width':\n                case 'head':\n                case 'tail':\n                case 'style':\n                case 'intensity':\n                case 'itex':\n                    break;\n                case 'state':\n                    this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'rect':\n                    values = this._obtainPoints(value);\n                    if (values && values.length === 4) {\n                        dictionary.update('Rect', values);\n                    }\n                    break;\n                case 'color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('C', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'interior-color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('IC', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value && value !== '') {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    this._addString(dictionary, 'Subj', this._getFormatedString(value, true));\n                    break;\n                case 'title':\n                    this._addString(dictionary, 'T', this._getFormatedString(value, true));\n                    break;\n                case 'rotation':\n                    this._addInt(dictionary, 'Rotate', value);\n                    break;\n                case 'justification':\n                    this._addInt(dictionary, 'Q', value);\n                    break;\n                case 'fringe':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'RD');\n                    break;\n                case 'it':\n                    if (value && value !== '') {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    this._addFloat(dictionary, 'LL', value);\n                    break;\n                case 'leaderextend':\n                    leaderExtend = Number.parseFloat(value);\n                    if (typeof leaderExtend !== 'undefined') {\n                        dictionary.update('LLE', leaderExtend);\n                    }\n                    break;\n                case 'caption':\n                    if (value && value !== '') {\n                        dictionary.update('Cap', value.toLowerCase() === 'yes' ? true : false);\n                    }\n                    break;\n                case 'caption-style':\n                    if (value && value !== '') {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'CL');\n                    break;\n                case 'coords':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'QuadPoints');\n                    break;\n                case 'border':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'Border');\n                    break;\n                case 'opacity':\n                    this._addFloat(dictionary, 'CA', value);\n                    break;\n                case 'flags':\n                    if (value && value !== '') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i_1 = 0; i_1 < flags.length; i_1++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i_1.toString(), 10)]);\n                            if (i_1 === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    if (value && value !== '') {\n                        dictionary.update('Open', (value === 'true' || value === 'yes') ? true : false);\n                    }\n                    break;\n                case 'calibrate':\n                    this._addString(dictionary, 'Calibrate', value);\n                    break;\n                case 'customdata':\n                    this._addString(dictionary, 'CustomData', value);\n                    break;\n                case 'overlaytext':\n                    dictionary.update('OverlayText', value);\n                    break;\n                case 'repeat':\n                    dictionary.update('Repeat', (value === 'true' || value === 'yes') ? true : false);\n                    break;\n                default:\n                    if (this._document._allowImportCustomData) {\n                        this._addString(dictionary, attribute.name, value);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._obtainPoints = function (value) {\n        var points = [];\n        value.split(',').forEach(function (value) {\n            points.push(Number.parseFloat(value));\n        });\n        return points;\n    };\n    _XfdfDocument.prototype._parseInnerElements = function (dictionary, element, page) {\n        if (element.hasChildNodes) {\n            var children = element.childNodes;\n            var _loop_1 = function (index) {\n                var child = children[Number.parseInt(index.toString(), 10)];\n                if (child.nodeType === 1) {\n                    var childElement = child;\n                    var textContent = child.textContent;\n                    var innerHTML = childElement.innerHTML;\n                    switch (child.nodeName.toLowerCase()) {\n                        case 'popup':\n                            if (childElement && childElement.hasAttributes) {\n                                var popupDictionary = this_1._getAnnotationDictionary(page, childElement);\n                                if (popupDictionary.size > 0) {\n                                    var reference = this_1._crossReference._getNextReference();\n                                    this_1._crossReference._cacheMap.set(reference, popupDictionary);\n                                    dictionary.update('Popup', reference);\n                                    if (popupDictionary.has('NM')) {\n                                        this_1._addReferenceToGroup(reference, popupDictionary);\n                                    }\n                                }\n                            }\n                            break;\n                        case 'contents':\n                            if (textContent && textContent !== '') {\n                                dictionary.update('Contents', this_1._getFormatedString(textContent, true));\n                            }\n                            break;\n                        case 'contents-richtext':\n                            if (innerHTML && innerHTML !== '') {\n                                dictionary.update('RC', this_1._richTextPrefix + innerHTML);\n                            }\n                            break;\n                        case 'defaultstyle':\n                            this_1._addString(dictionary, 'DS', textContent);\n                            break;\n                        case 'defaultappearance':\n                            this_1._addString(dictionary, 'DA', textContent);\n                            break;\n                        case 'vertices':\n                            if (textContent && textContent !== '') {\n                                var vertices_1 = [];\n                                textContent.split(',').forEach(function (value) {\n                                    if (value.indexOf(';') !== -1) {\n                                        value.split(';').forEach(function (innerValue) {\n                                            vertices_1.push(innerValue);\n                                        });\n                                    }\n                                    else {\n                                        vertices_1.push(value);\n                                    }\n                                });\n                                if (vertices_1.length > 0) {\n                                    var verticesArray_1 = [];\n                                    vertices_1.forEach(function (value) {\n                                        verticesArray_1.push(Number.parseFloat(value));\n                                    });\n                                    dictionary.update('Vertices', verticesArray_1);\n                                }\n                            }\n                            break;\n                        case 'appearance':\n                            this_1._addAppearanceData(child, dictionary);\n                            break;\n                        case 'inklist':\n                            if (child.hasChildNodes) {\n                                var inkListCollection = [];\n                                var childNodes = child.childNodes;\n                                var _loop_2 = function (i) {\n                                    var inkChild = childNodes[Number.parseInt(i.toString(), 10)];\n                                    if (inkChild && inkChild.nodeType === 1) {\n                                        var inkChildElement = inkChild;\n                                        if (inkChildElement.nodeName.toLowerCase() === 'gesture') {\n                                            if (inkChildElement.textContent && inkChildElement.textContent !== '') {\n                                                var points_2 = [];\n                                                inkChildElement.textContent.split(',').forEach(function (value) {\n                                                    if (value.indexOf(';') !== -1) {\n                                                        value.split(';').forEach(function (innerValue) {\n                                                            points_2.push(innerValue);\n                                                        });\n                                                    }\n                                                    else {\n                                                        points_2.push(value);\n                                                    }\n                                                });\n                                                if (points_2.length > 0) {\n                                                    var pointsArray_1 = [];\n                                                    points_2.forEach(function (value) {\n                                                        pointsArray_1.push(Number.parseFloat(value));\n                                                    });\n                                                    inkListCollection.push(pointsArray_1);\n                                                }\n                                            }\n                                        }\n                                    }\n                                };\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    _loop_2(i);\n                                }\n                                dictionary.update('InkList', inkListCollection);\n                            }\n                            break;\n                        case 'data':\n                            this_1._addStreamData(child, dictionary, element);\n                            break;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var index = 0; index < children.length; index++) {\n                _loop_1(index);\n            }\n        }\n    };\n    _XfdfDocument.prototype._addStreamData = function (child, dictionary, parent) {\n        if (child && child.textContent && child.textContent !== '') {\n            var raw = _hexStringToByteArray(child.textContent, true);\n            if (raw && raw.length > 0) {\n                if (dictionary.has('Subtype')) {\n                    var subtype = dictionary.get('Subtype');\n                    if (subtype && subtype.name === 'FileAttachment') {\n                        this._addFileAttachment(dictionary, parent, raw);\n                    }\n                    else if (subtype && subtype.name === 'Sound') {\n                        this._addSound(dictionary, parent, raw);\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._addSound = function (dictionary, element, raw) {\n        var soundStream = new _PdfContentStream(raw);\n        soundStream.dictionary._crossReference = this._crossReference;\n        soundStream.dictionary.update('Type', _PdfName.get('Sound'));\n        if (element.hasAttribute('bits')) {\n            this._addInt(soundStream.dictionary, 'B', element.getAttribute('bits'));\n        }\n        if (element.hasAttribute('rate')) {\n            this._addInt(soundStream.dictionary, 'R', element.getAttribute('rate'));\n        }\n        if (element.hasAttribute('channels')) {\n            this._addInt(soundStream.dictionary, 'C', element.getAttribute('channels'));\n        }\n        if (element.hasAttribute('encoding')) {\n            var value = element.getAttribute('encoding');\n            if (value && value !== '') {\n                soundStream.dictionary.update('E', _PdfName.get(value));\n            }\n        }\n        if (element.hasAttribute('filter')) {\n            soundStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        }\n        var soundReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(soundReference, soundStream);\n        dictionary.update('Sound', soundReference);\n    };\n    _XfdfDocument.prototype._addFileAttachment = function (dictionary, element, raw) {\n        var fileDictionary = new _PdfDictionary(this._crossReference);\n        fileDictionary.update('Type', _PdfName.get('Filespec'));\n        if (element.hasAttribute('file')) {\n            var value = element.getAttribute('file');\n            this._addString(fileDictionary, 'F', value);\n            this._addString(fileDictionary, 'UF', value);\n        }\n        var fileStream = new _PdfContentStream(raw);\n        fileStream.dictionary._crossReference = this._crossReference;\n        var param = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('size')) {\n            var size = Number.parseInt(element.getAttribute('size'), 10);\n            if (typeof size !== 'undefined') {\n                param.update('Size', size);\n                fileStream.dictionary.update('DL', size);\n            }\n        }\n        if (element.hasAttribute('modification')) {\n            this._addString(param, 'ModDate', element.getAttribute('modification'));\n        }\n        if (element.hasAttribute('creation')) {\n            this._addString(param, 'CreationDate', element.getAttribute('creation'));\n        }\n        fileStream.dictionary.update('Params', param);\n        if (element.hasAttribute('mimetype')) {\n            this._addString(fileStream.dictionary, 'Subtype', element.getAttribute('mimetype'));\n        }\n        fileStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        var embeddedFile = new _PdfDictionary(this._crossReference);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileStream);\n        embeddedFile.update('F', reference);\n        fileDictionary.update('EF', embeddedFile);\n        var fileReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fileReference, fileDictionary);\n        dictionary.update('FS', fileReference);\n    };\n    _XfdfDocument.prototype._addAppearanceData = function (element, dictionary) {\n        var innerText = element.textContent;\n        if (innerText && innerText !== '') {\n            var document_1 = (new DOMParser()).parseFromString(atob(innerText), 'text/xml');\n            if (document_1 && document_1.hasChildNodes) {\n                var childNodes = document_1.childNodes;\n                if (childNodes && childNodes.length === 1) {\n                    var rootNode = childNodes[0];\n                    if (rootNode && rootNode.nodeType === 1) {\n                        var rootElement = rootNode;\n                        if (rootElement.nodeName.toUpperCase() === 'DICT' && rootElement.hasAttribute('KEY')) {\n                            var key = rootElement.getAttribute('KEY');\n                            if (key && key === 'AP' && rootElement.hasChildNodes) {\n                                var appearance = new _PdfDictionary(this._crossReference);\n                                childNodes = rootElement.childNodes;\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    this._getAppearance(appearance, childNodes[Number.parseInt(i.toString(), 10)]);\n                                }\n                                if (appearance.size > 0) {\n                                    dictionary.update('AP', appearance);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearance = function (source, child) {\n        var appearance = source instanceof _PdfDictionary ? source : source.dictionary;\n        if (child && child.nodeType === 1) {\n            var element = child;\n            if (element && element.localName) {\n                var stream = void 0;\n                var dictionary = void 0;\n                var data = void 0;\n                switch (element.localName) {\n                    case 'STREAM':\n                        stream = this._getStream(element);\n                        if (stream) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, stream);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'DICT':\n                        dictionary = this._getDictionary(element);\n                        if (dictionary) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, dictionary);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'ARRAY':\n                        this._addKey(this._getArray(element), appearance, element);\n                        break;\n                    case 'FIXED':\n                        this._addKey(this._getFixed(element), appearance, element);\n                        break;\n                    case 'INT':\n                        this._addKey(this._getInt(element), appearance, element);\n                        break;\n                    case 'STRING':\n                        this._addKey(this._getString(element), appearance, element);\n                        break;\n                    case 'NAME':\n                        this._addKey(this._getName(element), appearance, element);\n                        break;\n                    case 'BOOL':\n                        this._addKey(this._getBoolean(element), appearance, element);\n                        break;\n                    case 'DATA':\n                        data = this._getData(element);\n                        if (data && data.length > 0 && source instanceof _PdfContentStream) {\n                            source._bytes = data;\n                            var isImage = false;\n                            if (appearance && appearance.has('Subtype')) {\n                                var type = appearance.get('Subtype');\n                                isImage = type && type.name === 'Image';\n                            }\n                            if (isImage) {\n                                source._isCompress = false;\n                            }\n                            else {\n                                if (source.dictionary.has('Length')) {\n                                    delete source.dictionary._map.Length;\n                                }\n                                if (source.dictionary.has('Filter')) {\n                                    delete source.dictionary._map.Filter;\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getStream = function (element) {\n        var stream = new _PdfContentStream([]);\n        stream.dictionary._crossReference = this._crossReference;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(stream, child);\n                }\n            }\n        }\n        return stream;\n    };\n    _XfdfDocument.prototype._getDictionary = function (element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(dictionary, child);\n                }\n            }\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._getArray = function (element) {\n        var array = []; // eslint-disable-line\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._addArrayElements(array, child);\n                }\n            }\n        }\n        return array;\n    };\n    _XfdfDocument.prototype._getData = function (element) {\n        var data = [];\n        if (element && element.textContent &&\n            element.textContent !== '' &&\n            element.hasAttribute('MODE') && element.hasAttribute('ENCODING')) {\n            var mode = element.getAttribute('MODE');\n            var encoding = element.getAttribute('ENCODING');\n            if (mode && encoding) {\n                var innerText = this._getFormatedString(element.textContent, true);\n                if (mode === 'FILTERED' && encoding === 'ASCII') {\n                    data = _stringToBytes(innerText, true);\n                }\n                else if (mode === 'RAW' && encoding === 'HEX') {\n                    data = _hexStringToByteArray(innerText, true);\n                }\n            }\n        }\n        return data;\n    };\n    _XfdfDocument.prototype._addArrayElements = function (array, child) {\n        if (child && child.nodeType === 1) {\n            var element = child;\n            var stream = void 0;\n            var dictionary = void 0;\n            var value = void 0; // eslint-disable-line\n            var floatValue = void 0;\n            var intValue = void 0;\n            var name_3;\n            var bool = void 0;\n            switch (element.localName) {\n                case 'STREAM':\n                    stream = this._getStream(element);\n                    if (stream) {\n                        var reference = this._crossReference._getNextReference();\n                        stream.reference = reference;\n                        this._crossReference._cacheMap.set(reference, stream);\n                        array.push(reference);\n                    }\n                    break;\n                case 'DICT':\n                    dictionary = this._getDictionary(element);\n                    if (dictionary) {\n                        var reference = this._crossReference._getNextReference();\n                        this._crossReference._cacheMap.set(reference, dictionary);\n                        array.push(reference);\n                    }\n                    break;\n                case 'ARRAY':\n                    value = this._getArray(element);\n                    if (value) {\n                        array.push(value);\n                    }\n                    break;\n                case 'FIXED':\n                    floatValue = this._getFixed(element);\n                    if (typeof floatValue !== 'undefined' && !isNaN(floatValue)) {\n                        array.push(floatValue);\n                    }\n                    break;\n                case 'INT':\n                    intValue = this._getInt(element);\n                    if (typeof intValue !== 'undefined' && !isNaN(intValue)) {\n                        array.push(intValue);\n                    }\n                    break;\n                case 'NAME':\n                    name_3 = this._getName(element);\n                    if (name_3) {\n                        array.push(name_3);\n                    }\n                    break;\n                case 'BOOL':\n                    bool = this._getBoolean(element);\n                    if (typeof bool !== 'undefined' && bool !== null) {\n                        array.push(bool);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._getFixed = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseFloat(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getInt = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseInt(element.getAttribute('VAL'), 10);\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getString = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getName = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = _PdfName.get(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getBoolean = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL') === 'true' ? true : false;\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._addMeasureDictionary = function (dictionary, element) {\n        var measurement;\n        var area;\n        var distance;\n        var xformat;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var childElement = childNodes[Number.parseInt(i.toString(), 10)];\n                if (childElement && childElement.localName === 'measure') {\n                    measurement = childElement;\n                    break;\n                }\n            }\n        }\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var dDict = new _PdfDictionary(this._crossReference);\n        var aDict = new _PdfDictionary(this._crossReference);\n        var xDict = new _PdfDictionary(this._crossReference);\n        var dArray = [];\n        var aArray = [];\n        var xArray = [];\n        if (measurement) {\n            measureDictionary.update('Type', _PdfName.get('Measure'));\n            if (measurement.hasAttribute('rateValue')) {\n                var attribute = measurement.getAttribute('rateValue');\n                if (attribute && attribute !== '') {\n                    measureDictionary.update('R', attribute);\n                }\n            }\n            if (measurement.hasChildNodes) {\n                var childNodes = measurement.childNodes;\n                for (var i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[Number.parseInt(i.toString(), 10)];\n                    if (child && child.nodeType === 1) {\n                        var childElement = child;\n                        switch (childElement.nodeName.toLowerCase()) {\n                            case 'distance':\n                                distance = childElement;\n                                break;\n                            case 'area':\n                                area = childElement;\n                                break;\n                            case 'xformat':\n                                xformat = childElement;\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        if (xformat) {\n            this._addElements(xformat, xDict);\n            xArray.push(xDict);\n        }\n        if (distance) {\n            this._addElements(distance, dDict);\n            dArray.push(dDict);\n        }\n        if (area) {\n            this._addElements(area, aDict);\n            aArray.push(aDict);\n        }\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        if (measureDictionary.size > 0 && measureDictionary.has('Type')) {\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _XfdfDocument.prototype._addElements = function (element, dictionary) {\n        if (element.hasAttribute('d')) {\n            this._addFloat(dictionary, 'D', element.getAttribute('d'));\n        }\n        if (element.hasAttribute('c')) {\n            this._addFloat(dictionary, 'C', element.getAttribute('c'));\n        }\n        if (element.hasAttribute('rt')) {\n            dictionary.update('RT', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('rd')) {\n            dictionary.update('RD', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('ss')) {\n            dictionary.update('SS', element.getAttribute('ss'));\n        }\n        if (element.hasAttribute('u')) {\n            dictionary.update('U', element.getAttribute('u'));\n        }\n        if (element.hasAttribute('f')) {\n            dictionary.update('F', _PdfName.get(element.getAttribute('f')));\n        }\n        if (element.hasAttribute('fd')) {\n            dictionary.update('FD', element.getAttribute('fd') === 'yes' ? true : false);\n        }\n    };\n    _XfdfDocument.prototype._addString = function (dictionary, key, value) {\n        if (value && value !== '') {\n            dictionary.update(key, value);\n        }\n    };\n    _XfdfDocument.prototype._addInt = function (dictionary, key, value) {\n        var intValue = Number.parseInt(value, 10);\n        if (typeof intValue !== 'undefined') {\n            dictionary.update(key, intValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloat = function (dictionary, key, value) {\n        var floatValue = Number.parseFloat(value);\n        if (typeof floatValue !== 'undefined') {\n            dictionary.update(key, floatValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloatPoints = function (dictionary, points, key) {\n        if (points && points.length > 0) {\n            dictionary.update(key, points);\n        }\n    };\n    _XfdfDocument.prototype._addKey = function (primitive, dictionary, element) {\n        if (typeof primitive !== 'undefined' && primitive !== null && element.hasAttribute('KEY')) {\n            dictionary.update(element.getAttribute('KEY'), primitive);\n        }\n    };\n    _XfdfDocument.prototype._addLineEndStyle = function (dictionary, element) {\n        var beginLineStyle = '';\n        if (element.hasAttribute('head')) {\n            beginLineStyle = element.getAttribute('head');\n        }\n        var endLineStyle = '';\n        if (element.hasAttribute('tail')) {\n            endLineStyle = element.getAttribute('tail');\n        }\n        if (beginLineStyle && beginLineStyle !== '') {\n            if (endLineStyle && endLineStyle !== '') {\n                var lineEndingStyles = [];\n                lineEndingStyles.push(_PdfName.get(beginLineStyle));\n                lineEndingStyles.push(_PdfName.get(endLineStyle));\n                dictionary.update('LE', lineEndingStyles);\n            }\n            else {\n                dictionary.update('LE', _PdfName.get(beginLineStyle));\n            }\n        }\n        else if (endLineStyle && endLineStyle !== '') {\n            dictionary.update('LE', _PdfName.get(endLineStyle));\n        }\n    };\n    return _XfdfDocument;\n}(_ExportHelper));\nexport { _XfdfDocument };\nvar _FontStructure = /** @class */ (function () {\n    function _FontStructure(dictionary) {\n        this._baseFontEncoding = '';\n        this._dictionary = dictionary;\n        this._fontType = this._dictionary.get('Subtype').name;\n    }\n    Object.defineProperty(_FontStructure.prototype, \"differencesDictionary\", {\n        get: function () {\n            if (!this._differencesDictionary) {\n                this._differencesDictionary = this._getDifferencesDictionary();\n            }\n            return this._differencesDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"baseFontEncoding\", {\n        get: function () {\n            return this._baseFontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontEncoding\", {\n        get: function () {\n            if (!this._fontEncoding) {\n                this._fontEncoding = this._getFontEncoding();\n            }\n            return this._fontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontName\", {\n        get: function () {\n            if (!this._fontName) {\n                this._fontName = this._getFontName();\n            }\n            return this._fontName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _FontStructure.prototype._getFontEncoding = function () {\n        var encoding = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var baseFont = this._dictionary.get('Encoding'); // eslint-disable-line\n            if (baseFont instanceof _PdfName) {\n                encoding = baseFont.name;\n            }\n            else if (baseFont instanceof _PdfDictionary) {\n                if (baseFont.has('BaseEncoding')) {\n                    var baseFontEncoding = baseFont.get('BaseEncoding');\n                    if (baseFontEncoding && baseFontEncoding instanceof _PdfName) {\n                        this._baseFontEncoding = baseFontEncoding.name;\n                    }\n                }\n                if (baseFont.has('Type')) {\n                    var fontEncoding = baseFont.get('Type');\n                    if (fontEncoding !== null && typeof fontEncoding !== 'undefined') {\n                        encoding = fontEncoding.name;\n                    }\n                }\n            }\n        }\n        if (encoding.toString() === 'identity#2dh' || encoding === 'CMap') {\n            encoding = 'Identity-H';\n        }\n        return encoding;\n    };\n    _FontStructure.prototype._getDifferencesDictionary = function () {\n        var result = new Map();\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var encoding = this._dictionary.get('Encoding');\n            if (encoding !== null &&\n                typeof encoding !== 'undefined' &&\n                encoding instanceof _PdfDictionary &&\n                encoding.has('Differences')) {\n                var differences = encoding.getArray('Differences'); // eslint-disable-line\n                var count = 0;\n                if (differences !== null && typeof differences !== 'undefined') {\n                    for (var i = 0; i < differences.length; i++) {\n                        var text = '';\n                        var item = differences[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (typeof item === 'number') {\n                            text = item.toString();\n                            count = Number.parseInt(text, 10);\n                        }\n                        else if (item instanceof _PdfName) {\n                            text = item.name;\n                            if (this._fontType === 'Type1' && text === '.notdef') {\n                                text = ' ';\n                                result.set(count.toString(), _getLatinCharacter(text));\n                            }\n                            else {\n                                text = _getLatinCharacter(text);\n                                text = _getSpecialCharacter(text);\n                                if (!result.has(count.toString())) {\n                                    result.set(count.toString(), _getLatinCharacter(text));\n                                }\n                                count++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    _FontStructure.prototype._getFontName = function () {\n        var fontName = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('BaseFont')) {\n            var baseFont = this._dictionary.get('BaseFont');\n            var font = baseFont.name;\n            if (font.indexOf('#20') !== -1 && font.indexOf('+') === -1) {\n                var index = font.lastIndexOf('#20');\n                font = font.substring(0, index);\n                font += '+';\n            }\n            if (baseFont.name.indexOf('+') !== -1) {\n                fontName = baseFont.name.split('+')[1];\n            }\n            else {\n                fontName = baseFont.name;\n            }\n            if (fontName.indexOf('-') !== -1) {\n                fontName = fontName.split('-')[0];\n            }\n            else if (fontName.indexOf(',') !== -1) {\n                fontName = fontName.split(',')[0];\n            }\n            if (fontName.indexOf('MT') !== -1) {\n                fontName = fontName.replace('MT', '');\n            }\n            if (fontName.indexOf('#20') !== -1) {\n                fontName = fontName.replace('#20', ' ');\n            }\n            if (fontName.indexOf('#') !== -1) {\n                fontName = this._decodeHexFontName(fontName);\n            }\n        }\n        return fontName;\n    };\n    _FontStructure.prototype._decodeHexFontName = function (fontName) {\n        var result = fontName;\n        for (var i = 0; i < fontName.length; i++) {\n            if (fontName[Number.parseInt(i.toString(), 10)] === '#') {\n                var hexValue = fontName[i + 1] + fontName[i + 2];\n                var value = Number.parseInt(hexValue, 16);\n                if (value !== 0) {\n                    result = result.replace(\"#\" + hexValue, String.fromCharCode(value));\n                    i += 2;\n                }\n                if (result.indexOf('#') === -1) {\n                    break;\n                }\n            }\n        }\n        return result;\n    };\n    return _FontStructure;\n}());\nexport { _FontStructure };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ExportHelper } from './xfdf-document';\nimport { _stringToAnnotationFlags, _convertToColor, _encode, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _bytesToString, _hexStringToByteArray, _decode } from './../utils';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream, _PdfStream } from './../base-stream';\nimport { PdfAnnotationFlag } from './../enumerator';\nvar _JsonDocument = /** @class */ (function (_super) {\n    __extends(_JsonDocument, _super);\n    function _JsonDocument(fileName) {\n        var _this = _super.call(this) || this;\n        _this._isImport = false;\n        _this._isColorSpace = false;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _JsonDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _JsonDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                this._exportFormFieldsData(field);\n            }\n            this._writeFormFieldData();\n        }\n        return this._save();\n    };\n    _JsonDocument.prototype._save = function () {\n        var result = new Uint8Array(this._jsonData);\n        this._jsonData = [];\n        return result;\n    };\n    _JsonDocument.prototype._writeFormFieldData = function () {\n        var _this = this;\n        this._jsonData.push(this._openingBrace);\n        var index = 0;\n        this._table.forEach(function (value, key) {\n            key = _this._getValidString(key);\n            _this._jsonData.push(_this._doubleQuotes);\n            for (var i = 0; i < key.length; i++) {\n                _this._jsonData.push(key.charCodeAt(i));\n            }\n            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                value = _this._getValidString(typeof value === 'string' ? value : value[0]);\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._doubleQuotes);\n                _this._jsonData = _stringToBytes(value, true, false, _this._jsonData);\n                _this._jsonData.push(_this._doubleQuotes);\n            }\n            else {\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._openingBracket);\n                for (var j = 0; j < value.length; j++) {\n                    _this._jsonData.push(_this._doubleQuotes);\n                    var entry = value[Number.parseInt(j.toString(), 10)];\n                    for (var k = 0; k < entry.length; k++) {\n                        _this._jsonData.push(entry.charCodeAt(k));\n                    }\n                    _this._jsonData.push(_this._doubleQuotes);\n                    if (j < value.length - 1) {\n                        _this._jsonData.push(_this._comma);\n                    }\n                }\n                _this._jsonData.push(_this._closingBracket);\n            }\n            if (index < _this._table.size - 1) {\n                _this._jsonData.push(_this._comma);\n            }\n            index++;\n        });\n        this._jsonData.push(this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var _this = this;\n        var isAnnotationAdded = false;\n        this._jsonData.push(this._openingBrace, this._doubleQuotes, 112, 100, 102, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBrace);\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(i !== 0 && isAnnotationAdded ? this._comma : this._space, this._doubleQuotes);\n                var pageNumber = _stringToBytes(i.toString(), true, false, []);\n                pageNumber.forEach(function (entry) {\n                    _this._jsonData.push(entry);\n                });\n                this._jsonData.push(this._doubleQuotes, this._colon, this._openingBrace, this._doubleQuotes, 115, 104, 97, 112, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBracket);\n                isAnnotationAdded = true;\n            }\n            var count = 0;\n            for (var k = 0; k < page.annotations.count; k++) {\n                var annotation = page.annotations.at(k);\n                if (annotation) {\n                    if (count !== 0) {\n                        this._jsonData.push(this._comma);\n                    }\n                    count++;\n                    this._exportAnnotation(annotation, i);\n                    this._jsonData = _stringToBytes(this._convertToJson(this._table), true, false, this._jsonData);\n                    this._table.clear();\n                }\n            }\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(this._closingBracket, this._closingBrace);\n            }\n        }\n        this._jsonData.push(this._closingBrace, this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotation = function (annotation, index) {\n        var hasAppearance = false;\n        var dictionary = annotation._dictionary;\n        var type = this._getAnnotationType(annotation._dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            this._table.set('type', type);\n            this._table.set('page', index.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    this._table.set('start', points[0].toString() + ',' + points[1].toString());\n                    this._table.set('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, index, hasAppearance);\n        }\n    };\n    _JsonDocument.prototype._writeDictionary = function (dictionary, pageIndex, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                _this._table.set('inreplyto', _this._getValue(entry.get('NM'), true));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(key, value, dictionary);\n                }\n            }\n        });\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'));\n        }\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                this._table.set('appearance', _encode(stream));\n            }\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    this._table.set('bits', this._getValue(soundDictionary.get('B'), true));\n                }\n                if (soundDictionary.has('C')) {\n                    this._table.set('channels', this._getValue(soundDictionary.get('C'), true));\n                }\n                if (soundDictionary.has('E')) {\n                    this._table.set('encoding', this._getValue(soundDictionary.get('E'), true));\n                }\n                if (soundDictionary.has('R')) {\n                    this._table.set('rate', this._getValue(soundDictionary.get('R'), true));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        this._table.set('MODE', 'raw');\n                        this._table.set('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            this._table.set('length', this._getValue(soundDictionary.get('Length'), true));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            this._table.set('filter', this._getValue(soundDictionary.get('Filter'), true));\n                        }\n                        this._table.set('data', data);\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    this._table.set('file', this._getValue(fsDictionary.get('F'), true));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'), true);\n                                        this._table.set('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'), true);\n                                        this._table.set('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        this._table.set('size', this._getValue(paramsDictionary.get('Size'), true));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'), true);\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        this._table.set('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                this._table.set('MODE', 'raw');\n                                this._table.set('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    this._table.set('length', this._getValue(fDictionary.get('Length'), true));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    this._table.set('filter', this._getValue(fDictionary.get('Filter'), true));\n                                }\n                                this._table.set('data', data);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeColor = function (primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive, true);\n            if (c && c !== '') {\n                this._table.set(tag, c);\n            }\n        }\n        if (color && color !== '') {\n            this._table.set(attribute, color);\n        }\n    };\n    _JsonDocument.prototype._writeAttributeString = function (attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        var value = this._getValue(primitive, true);\n        this._table.set(attribute, isLowerCase ? value.toLowerCase() : value);\n    };\n    _JsonDocument.prototype._writeAttribute = function (key, primitive, dictionary) {\n        var value;\n        switch (key) {\n            case 'C':\n                this._writeColor(primitive, 'color', 'c');\n                break;\n            case 'IC':\n                this._writeColor(primitive, 'interior-color');\n                break;\n            case 'DA':\n                value = dictionary.get('DA');\n                if (value) {\n                    this._table.set('defaultappearance', value);\n                }\n                break;\n            case 'M':\n                this._writeAttributeString('date', primitive);\n                break;\n            case 'NM':\n                this._table.set('name', primitive);\n                break;\n            case 'Name':\n                this._writeAttributeString('icon', primitive);\n                break;\n            case 'Subj':\n                this._writeAttributeString('subject', primitive);\n                break;\n            case 'T':\n                this._writeAttributeString('title', primitive);\n                break;\n            case 'Rect':\n                value = this._getValue(primitive, true);\n                if (value) {\n                    var rectArray = value.split(',');\n                    var subTable = new Map();\n                    subTable.set('x', rectArray[0]);\n                    subTable.set('y', rectArray[1]);\n                    subTable.set('width', rectArray[2]);\n                    subTable.set('height', rectArray[3]);\n                    this._table.set(key.toLowerCase(), this._convertToJson(subTable));\n                }\n                break;\n            case 'CreationDate':\n                this._writeAttributeString('creationdate', primitive);\n                break;\n            case 'Rotate':\n                this._writeAttributeString('rotation', primitive);\n                break;\n            case 'W':\n                this._writeAttributeString('width', primitive);\n                break;\n            case 'LE':\n                if (primitive && Array.isArray(primitive)) {\n                    if (primitive.length === 2) {\n                        this._table.set('head', this._getValue(primitive[0], true));\n                        this._table.set('tail', this._getValue(primitive[1], true));\n                    }\n                }\n                else if (primitive instanceof _PdfName) {\n                    this._writeAttributeString('head', primitive);\n                }\n                break;\n            case 'S':\n                switch (this._getValue(primitive, true)) {\n                    case 'D':\n                        this._table.set('style', 'dash');\n                        break;\n                    case 'C':\n                        this._table.set('style', 'cloudy');\n                        break;\n                    case 'S':\n                        this._table.set('style', 'solid');\n                        break;\n                    case 'B':\n                        this._table.set('style', 'bevelled');\n                        break;\n                    case 'I':\n                        this._table.set('style', 'inset');\n                        break;\n                    case 'U':\n                        this._table.set('style', 'underline');\n                        break;\n                }\n                break;\n            case 'D':\n                this._writeAttributeString('dashes', primitive);\n                break;\n            case 'I':\n                this._writeAttributeString('intensity', primitive);\n                break;\n            case 'RD':\n                this._writeAttributeString('fringe', primitive);\n                break;\n            case 'IT':\n                this._writeAttributeString('IT', primitive);\n                break;\n            case 'RT':\n                this._writeAttributeString('replyType', primitive, true);\n                break;\n            case 'LL':\n                this._writeAttributeString('leaderLength', primitive);\n                break;\n            case 'LLE':\n                this._writeAttributeString('leaderExtend', primitive);\n                break;\n            case 'Cap':\n                this._writeAttributeString('caption', primitive);\n                break;\n            case 'CP':\n                this._writeAttributeString('caption-style', primitive);\n                break;\n            case 'CL':\n                this._writeAttributeString('callout', primitive);\n                break;\n            case 'QuadPoints':\n                this._writeAttributeString('coords', primitive);\n                break;\n            case 'CA':\n                this._writeAttributeString('opacity', primitive);\n                break;\n            case 'F':\n                if (typeof primitive === 'number') {\n                    var flag = _annotationFlagsToString(primitive);\n                    this._table.set('flags', flag);\n                }\n                break;\n            case 'Contents':\n                value = dictionary.get('Contents');\n                if (value && value.length > 0) {\n                    this._table.set('contents', this._getValidString(value));\n                }\n                break;\n            case 'InkList':\n                this._writeInkList(dictionary);\n                break;\n            case 'Vertices':\n                this._writeVertices(dictionary);\n                break;\n            case 'DS':\n                value = dictionary.get('DS');\n                if (value) {\n                    var styleTable = new Map();\n                    var textStyle = value.split(';');\n                    for (var i = 0; i < textStyle.length; i++) {\n                        var text = textStyle[Number.parseInt(i.toString(), 10)].split(':');\n                        if (text && text.length > 0 && text[0] && text[0].length > 1 && text[0].startsWith(' ')) {\n                            text[0] = text[0].substring(1);\n                        }\n                        styleTable.set(text[0], text[1]);\n                    }\n                    this._table.set('defaultStyle', this._convertToJson(styleTable));\n                }\n                break;\n            case 'AllowedInteractions':\n                if (primitive.indexOf('\"') !== -1) {\n                    primitive = primitive.replace(/\"/g, '\\\\\"');\n                }\n                this._table.set(key, primitive);\n                break;\n            case 'Type':\n            case 'Subtype':\n            case 'P':\n            case 'Parent':\n            case 'L':\n            case 'RC':\n            case 'FS':\n            case 'MeasurementTypes':\n            case 'GroupNesting':\n            case 'ITEx':\n            case 'TextMarkupContent':\n                break;\n            case 'Border':\n            case 'A':\n            case 'R':\n            case 'X':\n            case 'ca':\n                this._writeAttributeString(key.toLowerCase(), primitive);\n                break;\n            default:\n                if (typeof primitive === 'string' && primitive.startsWith('{') && primitive.endsWith('}')) {\n                    this._table.set(key, primitive);\n                }\n                else {\n                    this._writeAttributeString(key, primitive);\n                }\n                break;\n        }\n    };\n    _JsonDocument.prototype._writeVertices = function (dictionary) {\n        var vertices = dictionary.getArray('Vertices');\n        if (vertices && vertices.length > 0) {\n            var elementCount = vertices.length;\n            if (elementCount % 2 === 0) {\n                var vertice = '';\n                for (var i = 0; i < elementCount - 1; i++) {\n                    vertice += this._getValue(vertices[Number.parseInt(i.toString(), 10)], true) + (i % 2 !== 0 ? ';' : ',');\n                }\n                vertice += this._getValue(vertices[elementCount - 1], true);\n                if (vertice && vertice !== '') {\n                    this._table.set('vertices', vertice);\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeInkList = function (dictionary) {\n        var inkList = dictionary.getArray('InkList');\n        if (inkList && inkList.length > 0) {\n            var points = new Map();\n            var json = '[';\n            for (var j = 0; j < inkList.length; j++) {\n                json += '[' + this._getValue(inkList[Number.parseInt(j.toString(), 10)], true) + ']';\n                if (j < inkList.length - 1) {\n                    json += ',';\n                }\n            }\n            json += ']';\n            points.set('gesture', json);\n            this._table.set('inklist', this._convertToJson(points));\n        }\n    };\n    _JsonDocument.prototype._exportMeasureDictionary = function (dictionary) {\n        if (dictionary) {\n            if (dictionary.has('Type')) {\n                this._table.set('type1', 'Measure');\n            }\n            if (dictionary.has('R')) {\n                this._table.set('ratevalue', this._getValue(dictionary.get('R'), true));\n            }\n            if (dictionary.has('SubType')) {\n                this._table.set('SubType', this._getValue(dictionary.get('SubType'), true));\n            }\n            if (dictionary.has('TargetUnitConversion')) {\n                this._table.set('TargetUnitConversion', this._getValue(dictionary.get('TargetUnitConversion'), true));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                this._exportMeasureFormatDetails('area', array[0]);\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                this._exportMeasureFormatDetails('distance', array[0]);\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                this._exportMeasureFormatDetails('xformat', array[0]);\n            }\n            if (dictionary.has('T')) {\n                var array = dictionary.getArray('T');\n                this._exportMeasureFormatDetails('tformat', array[0]);\n            }\n            if (dictionary.has('V')) {\n                var array = dictionary.getArray('V');\n                this._exportMeasureFormatDetails('vformat', array[0]);\n            }\n        }\n    };\n    _JsonDocument.prototype._exportMeasureFormatDetails = function (key, measurementDetails) {\n        var details = new Map();\n        if (measurementDetails.has('C')) {\n            details.set('c', this._getValue(measurementDetails.get('C'), true));\n        }\n        if (measurementDetails.has('F')) {\n            details.set('f', this._getValue(measurementDetails.get('F'), true));\n        }\n        if (measurementDetails.has('D')) {\n            details.set('d', this._getValue(measurementDetails.get('D'), true));\n        }\n        if (measurementDetails.has('RD')) {\n            details.set('rd', this._getValue(measurementDetails.get('RD'), true));\n        }\n        if (measurementDetails.has('U')) {\n            details.set('u', this._getValue(measurementDetails.get('U'), true));\n        }\n        if (measurementDetails.has('RT')) {\n            details.set('rt', this._getValue(measurementDetails.get('RT'), true));\n        }\n        if (measurementDetails.has('SS')) {\n            details.set('ss', this._getValue(measurementDetails.get('SS'), true));\n        }\n        if (measurementDetails.has('FD')) {\n            details.set('fd', this._getValue(measurementDetails.get('FD'), true));\n        }\n        this._table.set(key, this._convertToJson(details));\n    };\n    _JsonDocument.prototype._getAppearanceString = function (appearance) {\n        var parentTable = new Map();\n        var appearanceTable = new Map();\n        this._writeAppearanceDictionary(appearanceTable, appearance);\n        parentTable.set('ap', this._convertToJson(appearanceTable));\n        return _stringToBytes(this._convertToJson(parentTable));\n    };\n    _JsonDocument.prototype._writeAppearanceDictionary = function (table, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(table, ((value instanceof _PdfReference) ? dictionary.get(key) : value), dictionary, key);\n            });\n        }\n    };\n    _JsonDocument.prototype._writeObject = function (table, value, dictionary, key, array) {\n        var _this = this;\n        if (value instanceof _PdfName) {\n            this._writeTable('name', value.name, table, key, array);\n        }\n        else if (Array.isArray(value)) {\n            var list = [];\n            if (key === 'ColorSpace') {\n                value.forEach(function (element) {\n                    if (typeof element === 'string') {\n                        _this._isColorSpace = true;\n                    }\n                });\n            }\n            this._writeArray(list, value, dictionary);\n            this._isColorSpace = false;\n            this._writeTable('array', this._convertToJsonArray(list), table, key, array);\n        }\n        else if (typeof value === 'string') {\n            if (this._isColorSpace) {\n                var bytes = _stringToBytes(value);\n                this._writeTable('unicodeData', _byteArrayToHexString(bytes), table, key, array);\n            }\n            else {\n                this._writeTable('string', value, table, key, array);\n            }\n        }\n        else if (typeof value === 'number') {\n            this._writeTable(Number.isInteger(value) ? 'int' : 'fixed', value.toString(), table, key, array);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeTable('boolean', value ? 'true' : 'false', table, key, array);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var subTable = new Map();\n            this._writeAppearanceDictionary(subTable, value);\n            this._writeTable('dict', this._convertToJson(subTable), table, key, array);\n        }\n        else if (value instanceof _PdfBaseStream && value.dictionary) {\n            var dataTable = new Map(); // eslint-disable-line\n            var streamTable = new Map(); // eslint-disable-line\n            var streamDictionary = value.dictionary;\n            var data = void 0;\n            var baseStream = value; // eslint-disable-line\n            var isImageStream = false;\n            if (streamDictionary.has('Subtype') && streamDictionary.get('Subtype').name === 'Image') {\n                isImageStream = true;\n            }\n            if (isImageStream && baseStream.stream && baseStream.stream instanceof _PdfStream) {\n                var stream = baseStream.stream;\n                data = baseStream.getString(true, stream.getByteRange(stream.start, stream.end));\n            }\n            else if (baseStream.stream && baseStream.stream.stream) {\n                var flateStream = baseStream.stream; // eslint-disable-line\n                if (flateStream.stream && flateStream.stream instanceof _PdfStream) {\n                    var stream = flateStream.stream;\n                    data = flateStream.getString(true, stream.getByteRange(stream.start, stream.end));\n                }\n            }\n            else {\n                data = value.getString(true);\n            }\n            if (!streamDictionary.has('Length') && data && data !== '') {\n                streamDictionary.update('Length', value.length);\n            }\n            this._writeAppearanceDictionary(streamTable, streamDictionary);\n            var type = void 0;\n            if (streamDictionary.has('Subtype')) {\n                type = this._getValue(streamDictionary.get('Subtype'));\n            }\n            if ((!streamDictionary.has('Type') && !streamDictionary.has('Subtype')) ||\n                (streamDictionary.has('Subtype') &&\n                    (type === 'Image' || type === 'Form' || type === 'CIDFontType0C' || type === 'OpenType'))) {\n                dataTable.set('mode', 'raw');\n                dataTable.set('encoding', 'hex');\n            }\n            else {\n                dataTable.set('mode', 'filtered');\n                dataTable.set('encoding', 'ascii');\n            }\n            if (data && data !== '') {\n                dataTable.set('bytes', data);\n            }\n            streamTable.set('data', this._convertToJson(dataTable));\n            this._writeTable('stream', this._convertToJson(streamTable), table, key, array);\n        }\n        else if (value instanceof _PdfReference && this._crossReference) {\n            this._writeObject(table, this._crossReference._fetch(value), dictionary, key, array);\n        }\n        else if (value === null || typeof value === 'undefined') {\n            this._writeTable('null', 'null', table, key, array);\n        }\n    };\n    _JsonDocument.prototype._writeTable = function (tableKey, value, table, key, array) {\n        var map = new Map();\n        map.set(tableKey, value);\n        if (key) {\n            table.set(key, this._convertToJson(map));\n        }\n        else if (array) {\n            array.push(map);\n        }\n    };\n    _JsonDocument.prototype._writeArray = function (array, value, dictionary) {\n        for (var i = 0; i < value.length; i++) {\n            this._writeObject(null, value[Number.parseInt(i.toString(), 10)], dictionary, null, array);\n        }\n    };\n    _JsonDocument.prototype._convertToJson = function (table) {\n        var j = 0;\n        var json = '{';\n        table.forEach(function (value, key) {\n            if (value.startsWith('{') || value.startsWith('[')) {\n                if (key === 'AllowedInteractions') {\n                    json += '\"' + key + '\":\"' + value + '\"';\n                }\n                else {\n                    json += '\"' + key + '\":' + value;\n                }\n            }\n            else {\n                if (value.startsWith(' ') && value.length > 1 && (value[1] === '[' || value[1] === '{')) {\n                    value = value.substring(1);\n                }\n                json += '\"' + key + '\":\"' + value + '\"';\n            }\n            if (j < table.size - 1) {\n                json += ',';\n            }\n            j++;\n        });\n        return json + '}';\n    };\n    _JsonDocument.prototype._convertToJsonArray = function (array) {\n        var json = '[';\n        for (var i = 0; i < array.length; i++) {\n            json += this._convertToJson(array[Number.parseInt(i.toString(), 10)]);\n            if (i < array.length - 1) {\n                json += ',';\n            }\n        }\n        return json + ']';\n    };\n    // #import\n    _JsonDocument.prototype._parseJson = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        var stringData = _bytesToString(data, true);\n        if (stringData.startsWith('{') && !stringData.endsWith('}')) {\n            while (stringData.length > 0 && !stringData.endsWith('}')) {\n                stringData = stringData.substring(0, stringData.length - 1);\n            }\n        }\n        return JSON.parse(stringData);\n    };\n    _JsonDocument.prototype._importFormData = function (document, data) {\n        var _this = this;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys && keys.length > 0) {\n                var _loop_1 = function (i) {\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    var value = json[key]; // eslint-disable-line\n                    if (Array.isArray(value)) {\n                        if (this_1._fields.has('key')) {\n                            value.forEach(function (entry) {\n                                _this._fields.get(key).push(entry);\n                            });\n                        }\n                        else {\n                            this_1._fields.set(key, value);\n                        }\n                    }\n                    else {\n                        if (this_1._fields.has('key')) {\n                            this_1._fields.get(key).push(value);\n                        }\n                        else {\n                            this_1._fields.set(key, [value]);\n                        }\n                    }\n                };\n                var this_1 = this;\n                for (var i = 0; i < keys.length; i++) {\n                    _loop_1(i);\n                }\n                this._importField();\n            }\n        }\n    };\n    _JsonDocument.prototype._importAnnotations = function (document, data) {\n        var _this = this;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys.indexOf('pdfAnnotation') !== -1) {\n                var pageAnnotations_1 = json.pdfAnnotation; // eslint-disable-line\n                var pageCount_1 = document.pageCount;\n                var pageKeys = Object.keys(pageAnnotations_1);\n                if (pageKeys && pageKeys.length > 0) {\n                    pageKeys.forEach(function (key) {\n                        var pageIndex = Number.parseInt(key, 10);\n                        if (typeof pageIndex !== 'undefined' && pageIndex < pageCount_1) {\n                            var page_1 = document.getPage(pageIndex);\n                            var pageAnnotation = pageAnnotations_1[key]; // eslint-disable-line\n                            if (pageAnnotation) {\n                                var pageAnnotationKeys = Object.keys(pageAnnotation);\n                                if (pageAnnotationKeys && pageAnnotationKeys.length > 0 && pageAnnotationKeys.indexOf('shapeAnnotation') !== -1) {\n                                    var annotations = pageAnnotation['shapeAnnotation']; // eslint-disable-line\n                                    if (annotations && annotations.length > 0) {\n                                        annotations.forEach(function (annotation) {\n                                            var annotationKeys = Object.keys(annotation);\n                                            if (annotationKeys && annotationKeys.length > 0 && annotationKeys.indexOf('type') !== -1) {\n                                                var dictionary = new _PdfDictionary(_this._crossReference);\n                                                dictionary.update('Type', _PdfName.get('Annot'));\n                                                var isValidType = true;\n                                                switch (annotation['type'].toLowerCase()) {\n                                                    case 'line':\n                                                        dictionary.update('Subtype', _PdfName.get('Line'));\n                                                        break;\n                                                    case 'circle':\n                                                        dictionary.update('Subtype', _PdfName.get('Circle'));\n                                                        break;\n                                                    case 'square':\n                                                        dictionary.update('Subtype', _PdfName.get('Square'));\n                                                        break;\n                                                    case 'polyline':\n                                                        dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                                                        break;\n                                                    case 'polygon':\n                                                        dictionary.update('Subtype', _PdfName.get('Polygon'));\n                                                        break;\n                                                    case 'ink':\n                                                        dictionary.update('Subtype', _PdfName.get('Ink'));\n                                                        break;\n                                                    case 'popup':\n                                                        dictionary.update('Subtype', _PdfName.get('Popup'));\n                                                        break;\n                                                    case 'text':\n                                                        dictionary.update('Subtype', _PdfName.get('Text'));\n                                                        break;\n                                                    case 'freetext':\n                                                        dictionary.update('Subtype', _PdfName.get('FreeText'));\n                                                        break;\n                                                    case 'stamp':\n                                                        dictionary.update('Subtype', _PdfName.get('Stamp'));\n                                                        break;\n                                                    case 'highlight':\n                                                        dictionary.update('Subtype', _PdfName.get('Highlight'));\n                                                        break;\n                                                    case 'squiggly':\n                                                        dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                                                        break;\n                                                    case 'underline':\n                                                        dictionary.update('Subtype', _PdfName.get('Underline'));\n                                                        break;\n                                                    case 'strikeout':\n                                                        dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                                                        break;\n                                                    case 'fileattachment':\n                                                        dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                                                        break;\n                                                    case 'sound':\n                                                        dictionary.update('Subtype', _PdfName.get('Sound'));\n                                                        break;\n                                                    case 'redact':\n                                                        dictionary.update('Subtype', _PdfName.get('Redact'));\n                                                        break;\n                                                    case 'caret':\n                                                        dictionary.update('Subtype', _PdfName.get('Caret'));\n                                                        break;\n                                                    default:\n                                                        isValidType = false;\n                                                        break;\n                                                }\n                                                if (isValidType) {\n                                                    _this._addAnnotationData(dictionary, annotation, annotationKeys);\n                                                    var pageDictionary = page_1._pageDictionary;\n                                                    if (pageDictionary) {\n                                                        var annotations_1 = page_1.annotations;\n                                                        var annotation_1 = annotations_1._parseAnnotation(dictionary);\n                                                        if (annotation_1) {\n                                                            annotation_1._isImported = true;\n                                                            var reference = _this._crossReference._getNextReference();\n                                                            _this._crossReference._cacheMap.set(reference, dictionary);\n                                                            if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                                                _this._addReferenceToGroup(reference, dictionary);\n                                                            }\n                                                            annotation_1._ref = reference;\n                                                            var index = annotations_1._annotations.length;\n                                                            annotations_1._annotations.push(reference);\n                                                            pageDictionary.set('Annots', annotations_1._annotations);\n                                                            pageDictionary._updated = true;\n                                                            annotations_1._parsedAnnotations.set(index, annotation_1);\n                                                            _this._handlePopup(annotations_1, reference, dictionary, pageDictionary);\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n        }\n    };\n    _JsonDocument.prototype._addAnnotationData = function (dictionary, annotation, annotationKeys) {\n        var _this = this;\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        var dataStream = new Map();\n        var linePoints = [];\n        var beginLineStyle;\n        var endLineStyle;\n        var values = '';\n        var rect;\n        var outColor;\n        annotationKeys.forEach(function (key) {\n            var value = annotation[key]; // eslint-disable-line\n            switch (key.toLowerCase()) {\n                case 'start':\n                case 'end':\n                    _this._addLinePoints(value, linePoints);\n                    if (linePoints.length === 4) {\n                        dictionary.update('L', linePoints);\n                        linePoints = [];\n                    }\n                    break;\n                case 'itex':\n                    break;\n                case 'state':\n                    _this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    _this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value.toLowerCase() === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    _this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'dashes':\n                case 'width':\n                case 'intensity':\n                case 'style':\n                    _this._addBorderStyle(key, value, borderEffectDictionary, borderStyleDictionary);\n                    break;\n                case 'rect':\n                    rect = value;\n                    if (rect) {\n                        var points = [];\n                        points.push(Number.parseFloat(rect.x));\n                        points.push(Number.parseFloat(rect.y));\n                        points.push(Number.parseFloat(rect.width));\n                        points.push(Number.parseFloat(rect.height));\n                        if (points && points.length === 4) {\n                            dictionary.update('Rect', points);\n                        }\n                    }\n                    break;\n                case 'color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('C', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'oc':\n                    if (value && dictionary.get('Subtype').name === 'Redact') {\n                        outColor = value.split(',');\n                        var color_1 = [];\n                        outColor.forEach(function (entry) {\n                            color_1.push(Number.parseFloat(entry));\n                        });\n                        if (color_1 && color_1.length > 0) {\n                            dictionary.update('OC', color_1);\n                        }\n                    }\n                    break;\n                case 'interior-color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('IC', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    _this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    _this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    _this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value) {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    _this._addString(dictionary, 'Subj', value);\n                    break;\n                case 'title':\n                    _this._addString(dictionary, 'T', value);\n                    break;\n                case 'rotation':\n                    dictionary.update('Rotate', Number.parseFloat(value));\n                    break;\n                case 'fringe':\n                    _this._addFloatPoints(dictionary, 'RD', _this._parseFloatPoints(value));\n                    break;\n                case 'it':\n                    if (value) {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    dictionary.update('LL', Number.parseFloat(value));\n                    break;\n                case 'leaderextend':\n                    dictionary.update('LLE', Number.parseFloat(value));\n                    break;\n                case 'caption':\n                    _this._addBoolean(dictionary, 'Cap', value.toLowerCase());\n                    break;\n                case 'caption-style':\n                    if (value) {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    _this._addFloatPoints(dictionary, 'CL', _this._parseFloatPoints(value));\n                    break;\n                case 'coords':\n                    _this._addFloatPoints(dictionary, 'QuadPoints', _this._parseFloatPoints(value));\n                    break;\n                case 'border':\n                    _this._addFloatPoints(dictionary, 'Border', _this._parseFloatPoints(value));\n                    break;\n                case 'opacity':\n                    dictionary.update('CA', Number.parseFloat(value));\n                    break;\n                case 'defaultstyle':\n                    if (value) {\n                        var styleKeys_1 = Object.keys(value);\n                        if (styleKeys_1 && styleKeys_1.length > 0) {\n                            var style_1 = '';\n                            var count_1 = 0;\n                            styleKeys_1.forEach(function (styleKey) {\n                                var styleValue = value[styleKey]; // eslint-disable-line\n                                style_1 += styleKey + ':' + styleValue;\n                                if (count_1 < styleKeys_1.length - 1) {\n                                    style_1 += ';';\n                                }\n                                count_1++;\n                            });\n                            _this._addString(dictionary, 'DS', style_1);\n                        }\n                    }\n                    break;\n                case 'defaultappearance':\n                    _this._addString(dictionary, 'DA', value);\n                    break;\n                case 'flags':\n                    if (value && typeof value === 'string') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i = 0; i < flags.length; i++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i.toString(), 10)]);\n                            if (i === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    _this._addBoolean(dictionary, 'Open', value.toLowerCase());\n                    break;\n                case 'repeat':\n                    _this._addBoolean(dictionary, 'Repeat', value.toLowerCase());\n                    break;\n                case 'overlaytext':\n                    _this._addString(dictionary, 'OverlayText', value);\n                    break;\n                case 'contents':\n                    if (typeof value === 'string') {\n                        if (value.indexOf('\\\\r') !== -1) {\n                            value = value.replace('\\\\r', '\\r');\n                        }\n                        if (value) {\n                            _this._addString(dictionary, 'Contents', value);\n                        }\n                    }\n                    break;\n                case 'q':\n                    dictionary.update('Q', Number.parseInt(value, 10));\n                    break;\n                case 'inklist':\n                    if (value) {\n                        var gestureKeys = Object.keys(value);\n                        if (gestureKeys && gestureKeys.length > 0 && gestureKeys.indexOf('gesture') !== -1) {\n                            var gesture = value.gesture;\n                            if (gesture && gesture.length > 0) {\n                                dictionary.update('InkList', gesture);\n                            }\n                        }\n                    }\n                    break;\n                case 'head':\n                    beginLineStyle = value;\n                    break;\n                case 'tail':\n                    endLineStyle = value;\n                    break;\n                case 'creation':\n                case 'modification':\n                case 'file':\n                case 'bits':\n                case 'channels':\n                case 'encoding':\n                case 'rate':\n                case 'length':\n                case 'filter':\n                case 'mode':\n                case 'size':\n                    dataStream.set(key, value);\n                    break;\n                case 'data':\n                    values = value;\n                    break;\n                case 'vertices':\n                    if (value && typeof value === 'string') {\n                        var split = value.split(/[,;]/);\n                        if (split && split.length > 0) {\n                            var vertices = [];\n                            for (var i = 0; i < split.length; i++) {\n                                vertices.push(Number.parseFloat(split[Number.parseInt(i.toString(), 10)]));\n                            }\n                            if (vertices.length > 0 && vertices.length % 2 === 0) {\n                                dictionary.update('Vertices', vertices);\n                            }\n                        }\n                    }\n                    break;\n                case 'appearance':\n                    _this._addAppearanceData(dictionary, value);\n                    break;\n                case 'allowedinteractions':\n                    _this._addString(dictionary, 'AllowedInteractions', value);\n                    break;\n                default:\n                    if (_this._document._allowImportCustomData && key !== 'type' && key !== 'page') {\n                        _this._addString(dictionary, key, typeof value === 'string' ? value : JSON.stringify(value));\n                    }\n                    break;\n            }\n        });\n        this._addMeasureDictionary(dictionary, annotation, annotationKeys);\n        if (beginLineStyle) {\n            if (endLineStyle) {\n                dictionary.update('LE', [_PdfName.get(beginLineStyle), _PdfName.get(endLineStyle)]);\n            }\n            else {\n                dictionary.update('LE', beginLineStyle);\n            }\n        }\n        else if (endLineStyle) {\n            dictionary.update('LE', endLineStyle);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', _PdfName.get('Border'));\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderStyleDictionary);\n            dictionary.update('BS', reference);\n        }\n        if (borderEffectDictionary.size > 0) {\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderEffectDictionary);\n            dictionary.update('BE', reference);\n        }\n        this._addStreamData(dictionary, dataStream, values);\n    };\n    _JsonDocument.prototype._addLinePoints = function (value, linePoints) {\n        if (value && value.indexOf(',') !== -1) {\n            var points = value.split(',');\n            points.forEach(function (point) {\n                linePoints.push(Number.parseFloat(point));\n            });\n        }\n    };\n    _JsonDocument.prototype._addString = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addBoolean = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value === 'yes' || value === 'true');\n        }\n    };\n    _JsonDocument.prototype._addBorderStyle = function (key, value, borderEffectDictionary, borderStyleDictionary) {\n        var style = '';\n        var isBasicStyle = true;\n        switch (value) {\n            case 'dash':\n                style = 'D';\n                break;\n            case 'solid':\n                style = 'S';\n                break;\n            case 'bevelled':\n                style = 'B';\n                break;\n            case 'inset':\n                style = 'I';\n                break;\n            case 'underline':\n                style = 'U';\n                break;\n            case 'cloudy':\n                style = 'C';\n                isBasicStyle = false;\n                break;\n        }\n        switch (key.toLowerCase()) {\n            case 'width':\n                borderStyleDictionary.update('W', Number.parseFloat(value));\n                break;\n            case 'intensity':\n                borderEffectDictionary.update('I', Number.parseFloat(value));\n                break;\n            case 'dashes':\n                if (value && value.indexOf(',') !== -1) {\n                    borderStyleDictionary.update('D', this._parseFloatPoints(value));\n                }\n                break;\n        }\n        if (style) {\n            if (isBasicStyle) {\n                borderStyleDictionary.update('S', _PdfName.get(style));\n            }\n            else {\n                borderEffectDictionary.update('S', _PdfName.get(style));\n            }\n        }\n    };\n    _JsonDocument.prototype._parseFloatPoints = function (value) {\n        var dashes = value.split(',');\n        var dashArray = [];\n        dashes.forEach(function (dash) {\n            dashArray.push(Number.parseFloat(dash));\n        });\n        return dashArray;\n    };\n    _JsonDocument.prototype._addFloatPoints = function (dictionary, key, value) {\n        if (value && value.length > 0) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addMeasureDictionary = function (dictionary, annotation, annotationKeys) {\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var aArray = [];\n        var dArray = [];\n        var xArray = [];\n        var tArray = [];\n        var vArray = [];\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        measureDictionary.set('T', tArray);\n        measureDictionary.set('V', vArray);\n        if (annotationKeys.indexOf('ratevalue') !== -1) {\n            this._addString(measureDictionary, 'R', annotation['ratevalue']);\n        }\n        if (annotationKeys.indexOf('subtype') !== -1) {\n            this._addString(measureDictionary, 'Subtype', annotation['subtype']);\n        }\n        if (annotationKeys.indexOf('targetunitconversion') !== -1) {\n            this._addString(measureDictionary, 'TargetUnitConversion', annotation['targetunitconversion']);\n        }\n        if (annotationKeys.indexOf('area') !== -1) {\n            aArray.push(this._readDictionaryElements(annotation['area']));\n        }\n        if (annotationKeys.indexOf('distance') !== -1) {\n            dArray.push(this._readDictionaryElements(annotation['distance']));\n        }\n        if (annotationKeys.indexOf('xformat') !== -1) {\n            xArray.push(this._readDictionaryElements(annotation['xformat']));\n        }\n        if (annotationKeys.indexOf('tformat') !== -1) {\n            tArray.push(this._readDictionaryElements(annotation['tformat']));\n        }\n        if (annotationKeys.indexOf('vformat') !== -1) {\n            vArray.push(this._readDictionaryElements(annotation['vformat']));\n        }\n        if (annotationKeys.indexOf('type1') !== -1) {\n            measureDictionary.set('Type', _PdfName.get('Measure'));\n            var reference = this._crossReference._getNextReference();\n            measureDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _JsonDocument.prototype._readDictionaryElements = function (elements) {\n        var keys = Object.keys(elements);\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (keys && keys.length > 0) {\n            keys.forEach(function (key) {\n                var value = elements[key]; // eslint-disable-line\n                if (key && value) {\n                    switch (key) {\n                        case 'd':\n                            dictionary.set('D', Number.parseFloat(value));\n                            break;\n                        case 'c':\n                            dictionary.set('C', Number.parseFloat(value));\n                            break;\n                        case 'rt':\n                            dictionary.set('RT', value);\n                            break;\n                        case 'rd':\n                            dictionary.set('RD', value);\n                            break;\n                        case 'ss':\n                            dictionary.set('SS', value);\n                            break;\n                        case 'u':\n                            dictionary.set('U', value);\n                            break;\n                        case 'f':\n                            dictionary.set('F', _PdfName.get(value));\n                            break;\n                        case 'fd':\n                            dictionary.set('FD', value);\n                            break;\n                        case 'type':\n                            dictionary.set('Type', _PdfName.get(value));\n                            break;\n                    }\n                }\n            });\n        }\n        return dictionary;\n    };\n    _JsonDocument.prototype._addStreamData = function (dictionary, data, values) {\n        var _this = this;\n        var subtype = dictionary.get('Subtype').name;\n        var bytes = _hexStringToByteArray(values, true);\n        if (subtype === 'Sound') {\n            var soundStream_1 = new _PdfContentStream(bytes);\n            soundStream_1.dictionary._crossReference = this._crossReference;\n            soundStream_1.dictionary.update('Type', _PdfName.get('Sound'));\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    switch (key) {\n                        case 'bits':\n                        case 'rate':\n                        case 'channels':\n                            soundStream_1.dictionary.set(key, Number.parseInt(value, 10));\n                            break;\n                        case 'encoding':\n                            soundStream_1.dictionary.set('E', _PdfName.get(value));\n                            break;\n                        case 'filter':\n                            soundStream_1.dictionary.set('Filter', _PdfName.get('FlateDecode'));\n                            break;\n                    }\n                }\n            });\n            soundStream_1.reference = this._crossReference._getNextReference();\n            soundStream_1.dictionary.objId = soundStream_1.reference.objectNumber + ' ' + soundStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(soundStream_1.reference, soundStream_1);\n            dictionary.update('Sound', soundStream_1.reference);\n        }\n        else if (subtype === 'FileAttachment') {\n            var fileDictionary_1 = new _PdfDictionary(this._crossReference);\n            fileDictionary_1.update('Type', _PdfName.get('Filespec'));\n            var fileStream_1 = new _PdfContentStream(bytes);\n            fileStream_1.dictionary._crossReference = this._crossReference;\n            var param_1 = new _PdfDictionary(this._crossReference);\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    var size = void 0;\n                    switch (key) {\n                        case 'file':\n                            _this._addString(fileDictionary_1, 'F', value);\n                            _this._addString(fileDictionary_1, 'UF', value);\n                            break;\n                        case 'size':\n                            size = Number.parseInt(value, 10);\n                            if (typeof size !== 'undefined') {\n                                param_1.update('Size', size);\n                                fileStream_1.dictionary.update('DL', size);\n                            }\n                            break;\n                        case 'creation':\n                            _this._addString(param_1, 'CreationDate', value);\n                            break;\n                        case 'modification':\n                            _this._addString(param_1, 'ModificationDate', value);\n                            break;\n                    }\n                }\n            });\n            fileStream_1.dictionary.update('Params', param_1);\n            fileStream_1.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n            fileStream_1.reference = this._crossReference._getNextReference();\n            fileStream_1.dictionary.objId = fileStream_1.reference.objectNumber + ' ' + fileStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(fileStream_1.reference, fileStream_1);\n            var embeddedFile = new _PdfDictionary(this._crossReference);\n            embeddedFile.update('F', fileStream_1.reference);\n            fileDictionary_1.update('EF', embeddedFile);\n            var reference = this._crossReference._getNextReference();\n            fileDictionary_1.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, fileDictionary_1);\n            dictionary.update('FS', reference);\n        }\n    };\n    _JsonDocument.prototype._addAppearanceData = function (dictionary, data) {\n        if (data) {\n            var encoded = _decode(data, false);\n            var decoded = _bytesToString(encoded);\n            if (decoded.startsWith('{') && !decoded.endsWith('}')) {\n                while (decoded.length > 0 && !decoded.endsWith('}')) {\n                    decoded = decoded.substring(0, decoded.length - 1);\n                }\n            }\n            var json = JSON.parse(decoded); // eslint-disable-line\n            if (json) {\n                var keys = Object.keys(json);\n                if (keys && keys.length > 0 && keys.indexOf('ap') !== -1) {\n                    dictionary.update('AP', this._parseDictionary(json['ap']));\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._parseAppearance = function (element) {\n        var _this = this;\n        var value; // eslint-disable-line\n        var keys = Object.keys(element);\n        if (keys.indexOf('name') !== -1) {\n            value = _PdfName.get(element.name);\n        }\n        else if (keys.indexOf('int') !== -1) {\n            value = Number.parseInt(element.int, 10);\n        }\n        else if (keys.indexOf('fixed') !== -1) {\n            value = Number.parseFloat(element.fixed);\n        }\n        else if (keys.indexOf('string') !== -1) {\n            value = element.string;\n        }\n        else if (keys.indexOf('boolean') !== -1) {\n            value = element.boolean === 'true' ? true : false;\n        }\n        else if (keys.indexOf('array') !== -1) {\n            var array = element.array; // eslint-disable-line\n            value = [];\n            array.forEach(function (element) {\n                value.push(_this._parseAppearance(element));\n            });\n        }\n        else if (keys.indexOf('dict') !== -1) {\n            var dictionary = this._parseDictionary(element.dict);\n            value = this._crossReference._getNextReference();\n            dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n            this._crossReference._cacheMap.set(value, dictionary);\n        }\n        else if (keys.indexOf('stream') !== -1) {\n            var stream = this._parseStream(element.stream);\n            value = this._crossReference._getNextReference();\n            stream.reference = value;\n            stream.dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n            this._crossReference._cacheMap.set(value, stream);\n        }\n        else if (keys.indexOf('unicodeData') !== -1) {\n            value = _bytesToString(_hexStringToByteArray(element.unicodeData, false));\n        }\n        else {\n            value = null;\n        }\n        return value;\n    };\n    _JsonDocument.prototype._parseDictionary = function (element) {\n        var _this = this;\n        var result = new _PdfDictionary(this._crossReference);\n        if (element) {\n            var keys = Object.keys(element);\n            if (keys && keys.length > 0) {\n                keys.forEach(function (key) {\n                    var value = element[key]; // eslint-disable-line\n                    if (key !== 'data') {\n                        var primitive = _this._parseAppearance(value); // eslint-disable-line\n                        result.update(key, primitive);\n                    }\n                });\n            }\n        }\n        return result;\n    };\n    _JsonDocument.prototype._parseStream = function (element) {\n        var result;\n        var keys = Object.keys(element);\n        if (element && keys.indexOf('data')) {\n            var data = element.data; // eslint-disable-line\n            var bytes = void 0;\n            if (data) {\n                var dataKeys = Object.keys(data);\n                if (dataKeys && dataKeys.indexOf('bytes') !== -1) {\n                    var byteString = data.bytes;\n                    if (byteString) {\n                        bytes = _hexStringToByteArray(byteString, true);\n                    }\n                }\n            }\n            if (!bytes) {\n                bytes = [];\n            }\n            var stream = new _PdfContentStream(bytes);\n            if (this._crossReference) {\n                this._parseStreamElements(stream, element);\n            }\n            else {\n                stream._pendingResources = JSON.stringify(element);\n            }\n            result = stream;\n        }\n        return result;\n    };\n    _JsonDocument.prototype._parseStreamElements = function (stream, element) {\n        if (typeof element === 'undefined' && stream._pendingResources) {\n            element = JSON.parse(stream._pendingResources);\n        }\n        if (element) {\n            var dictionary = this._parseDictionary(element);\n            var isImage = false;\n            if (dictionary && dictionary.has('Subtype')) {\n                var type = dictionary.get('Subtype');\n                isImage = type && type.name === 'Image';\n            }\n            if (isImage) {\n                stream._isCompress = false;\n            }\n            else {\n                if (dictionary.has('Length')) {\n                    delete dictionary._map.Length;\n                }\n                if (dictionary.has('Filter')) {\n                    delete dictionary._map.Filter;\n                }\n            }\n            stream.dictionary = dictionary;\n        }\n    };\n    _JsonDocument.prototype._getValidString = function (value) {\n        if (value.indexOf('\\\\') !== -1) {\n            value = value.replace(/\\\\/g, '\\\\\\\\');\n        }\n        if (value.indexOf('\"') !== -1) {\n            value = value.replace(/\"/g, '\\\\\"');\n        }\n        if (value.indexOf('[') !== -1) {\n            value = value.replace(/\\[/g, '\\\\[');\n        }\n        if (value.indexOf(']') !== -1) {\n            value = value.replace(/\\[/g, '\\\\]');\n        }\n        if (value.indexOf('{') !== -1) {\n            value = value.replace(/\\[/g, '\\\\{');\n        }\n        if (value.indexOf('}') !== -1) {\n            value = value.replace(/\\}/g, '\\\\}');\n        }\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    return _JsonDocument;\n}(_ExportHelper));\nexport { _JsonDocument };\n","import { _PdfName } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { PdfGraphics } from './pdf-graphics';\nimport { _toRectangle } from './../utils';\nimport { _JsonDocument } from './../import-export/json-document';\n/**\n * `PdfTemplate` class represents the template of the PDF.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the normal appearance of the annotation\n * let normalAppearance: PdfTemplate = annotation.appearance.normal;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * normalAppearance.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(value, crossReference) {\n        this._isExported = false;\n        this._crossReference = crossReference;\n        if (value instanceof _PdfBaseStream) {\n            this._content = value;\n            if (!this._content.dictionary.has('Type') || !this._content.dictionary.has('Subtype')) {\n                this._initialize();\n            }\n            var bounds = this._content.dictionary.getArray('BBox');\n            if (bounds && bounds.length > 3) {\n                var rect = _toRectangle(bounds);\n                this._size = [rect.width, rect.height];\n            }\n            this._isReadOnly = true;\n        }\n        else {\n            if (typeof value !== 'undefined') {\n                this._size = [value[2], value[3]];\n                this._content = new _PdfContentStream([]);\n                this._content.dictionary._crossReference = this._crossReference;\n                this._initialize();\n                this._content.dictionary.set('BBox', [value[0], value[1], value[0] + value[2], value[1] + value[3]]);\n            }\n            else {\n                this._isReadOnly = true;\n            }\n        }\n        this._writeTransformation = true;\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Get the graphics of the PDF template. (Read only)\n         *\n         * @returns {PdfGraphics} The graphics object of the PDF template.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the graphics of the normal appearance\n         * let graphics: PdfGraphics = annotation.appearance.normal.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isReadOnly) {\n                return null;\n            }\n            if (typeof this._g === 'undefined') {\n                this._g = new PdfGraphics(this._size, this._content, this._crossReference, this);\n                if (this._writeTransformation) {\n                    this._g._initializeCoordinates();\n                }\n                this._g._isTemplateGraphics = true;\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        /**\n         * Get the size of the PDF template. (Read only)\n         *\n         * @returns {number[]} Template width and height as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Get the width and height of the PDF template as number array.\n         * let size: number[] = template.size;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, size[0], size[1]);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTemplate.prototype._initialize = function () {\n        this._content.dictionary.set('Type', _PdfName.get('XObject'));\n        this._content.dictionary.set('Subtype', _PdfName.get('Form'));\n    };\n    PdfTemplate.prototype._exportStream = function (dictionary, crossReference) {\n        var jsonDocument = new _JsonDocument();\n        jsonDocument._crossReference = crossReference;\n        jsonDocument._isAnnotationExport = true;\n        var resourceTable = new Map();\n        jsonDocument._writeObject(resourceTable, dictionary.get('N'), dictionary, 'normal');\n        this._appearance = jsonDocument._convertToJson(resourceTable);\n        jsonDocument._dispose();\n    };\n    PdfTemplate.prototype._importStream = function (hasCrossReference) {\n        var jsonDocument = new _JsonDocument();\n        if (hasCrossReference) {\n            jsonDocument._crossReference = this._crossReference;\n        }\n        var json = JSON.parse(this._appearance); // eslint-disable-line\n        if (json) {\n            var entry = json['normal']; // eslint-disable-line\n            if (entry) {\n                this._content = jsonDocument._parseStream(entry['stream']);\n                if (hasCrossReference) {\n                    this._content.dictionary._crossReference = this._crossReference;\n                    this._content.dictionary._updated = true;\n                }\n            }\n        }\n        jsonDocument._dispose();\n    };\n    PdfTemplate.prototype._updatePendingResource = function (crossReference) {\n        if (this._content._pendingResources && this._content._pendingResources !== '') {\n            var jsonDocument = new _JsonDocument();\n            jsonDocument._crossReference = crossReference;\n            jsonDocument._parseStreamElements(this._content);\n            this._content._pendingResources = '';\n            jsonDocument._dispose();\n        }\n    };\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestinationMode } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName } from './pdf-primitives';\nimport { _obtainDestination } from './utils';\n/**\n * Represents base class for all action types.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Get the GoTo action to the mouse enter property of the button field\n * let pdfAction: PdfAction = field.actions.mouseEnter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfAction = /** @class */ (function () {\n    function PdfAction() {\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        /**\n         * Get the next action to be performed after the action represented by this instance.\n         *\n         * @returns {PdfAction} The next action to be executed.\n         *\n         * Represents an action which goes to a destination in the current document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the page1\n         * let Page1: PdfPage = document.getPage(1);\n         * // Create a PdfGoToAction for navigating to the specified page.\n         * let action: PdfGoToAction = new PdfGoToAction(page1);\n         * // Set the destination page for the action\n         * action.destination = new PdfDestination(secondPage);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = action1;\n         * // Access the page\n         * let page: PdfPage = document.getPage(2);\n         * // Access button field\n         * let field1: PdfButtonField = document.form.fieldAt(1) as PdfButtonField;\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(page);\n         * // Set the next property\n         * gotoAction.next = action;\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        get: function () {\n            return this._next;\n        },\n        /**\n         * Set the next action to be performed after the action represented by this instance.\n         *\n         * @param {PdfAction} value The next action to be executed.\n         *\n         * Represents an action which goes to a destination in the current document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the page1\n         * let Page1: PdfPage = document.getPage(1);\n         * let action: PdfGoToAction = new PdfGoToAction(page1);\n         * // Set the destination page for the action\n         * action.destination = new PdfDestination(secondPage);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = action1;\n         * // Access the third page\n         * let page: PdfPage = document.getPage(2);\n         * // Access button field\n         * let field1: PdfButtonField = document.form.fieldAt(1) as PdfButtonField;\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(page);\n         * // Set the next property\n         * gotoAction.next = action;\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            this._next = value;\n            var reference = this._page._crossReference._getNextReference();\n            this._page._crossReference._cacheMap.set(reference, value._dictionary);\n            value._dictionary.objId = reference.toString();\n            this._dictionary.update('Next', reference);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n/**\n * Represents an action which goes to a destination in the current document.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Set the goto action to the button\n * field.actions.mouseEnter = gotoAction;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfGoToAction = /** @class */ (function (_super) {\n    __extends(PdfGoToAction, _super);\n    function PdfGoToAction(arg) {\n        var _this = _super.call(this) || this;\n        if (arg instanceof PdfDestination) {\n            _this._destination = arg;\n            _this._page = arg.page;\n        }\n        else {\n            _this._page = arg;\n            _this._destination = new PdfDestination(arg, [0, 0]);\n        }\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', new _PdfName('Action'));\n        _this._dictionary.update('S', new _PdfName('GoTo'));\n        return _this;\n    }\n    Object.defineProperty(PdfGoToAction.prototype, \"destination\", {\n        /**\n         * Get the destination to be navigated.\n         *\n         * @returns {PdfDestination} The destination to be navigated.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action value from button field\n         * let action: PdfAction = field.actions.mouseEnter.destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destination;\n        },\n        /**\n         * Set the destination to be navigated.\n         *\n         * @param {PdfDestination} value The destination to be navigated.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the goto action to the button\n         * field.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            this._destination = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGoToAction;\n}(PdfAction));\nexport { PdfGoToAction };\n/**\n * Represents actions to be performed as response to field events.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Get the pdf field actions\n * let fieldActions: PdfFieldActions = field.actions;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfFieldActions = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfFieldActions` class.\n     *\n     * @private\n     * @param {PdfField} field field items.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access button field\n     * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n     * // Access the second page\n     * let secondPage: PdfPage = document.getPage(2);\n     * // Create a PdfDestination for the specified page\n     * let destination: PdfDestination = new PdfDestination(secondPage)\n     * // Creates a new PdfGoToAction with the specified destination\n     * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n     * // Set the goto action to the button\n     * field.actions.mouseEnter = gotoAction;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     */\n    function PdfFieldActions(field) {\n        this._field = field;\n    }\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseEnter\", {\n        /**\n         * Get the action to be performed when the mouse cursor enters the field area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse enters the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse enters the field area\n         * let action: PdfAction = field.actions.mouseEnter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseEnter) {\n                this._mouseEnter = this._getPdfAction('E');\n            }\n            return this._mouseEnter;\n        },\n        /**\n         * Set the action to be performed when the mouse cursor enters the field area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse enters the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseEnter = value;\n                this._updateAction(this._mouseEnter, 'E');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseLeave\", {\n        /**\n         * Get the action to be performed when the cursor exits the fields area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse exists the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse leave the field area.\n         * let action: PdfAction = field.actions.mouseLeave;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseLeave) {\n                this._mouseLeave = this._getPdfAction('X');\n            }\n            return this._mouseLeave;\n        },\n        /**\n         * Set the action to be performed when the cursor exits the fields area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse exists the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse leave property of the button field\n         * field.actions.mouseLeave = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseLeave = value;\n                this._updateAction(this._mouseLeave, 'X');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseUp\", {\n        /**\n         * Get the action to be performed when the mouse button is released inside the field area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse released inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse up the field area.\n         * let action: PdfAction = field.actions.mouseUp;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseUp) {\n                this._mouseUp = this._getPdfAction('U');\n            }\n            return this._mouseUp;\n        },\n        /**\n         * Set the action to be performed when the mouse button is released inside the field area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse released inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse up property of the button field\n         * field.actions.mouseUp = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseUp = value;\n                this._updateAction(this._mouseUp, 'U');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseDown\", {\n        /**\n         * Get the action to be performed when the mouse button is pressed inside the field’s area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse button is pressed inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse down the field area.\n         * let action: PdfAction = field.actions.mouseDown;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseDown) {\n                this._mouseDown = this._getPdfAction('D');\n            }\n            return this._mouseDown;\n        },\n        /**\n         * Set the action to be performed when the mouse button is pressed inside the field’s area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse button is pressed inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse down property of the button field\n         * field.actions.mouseDown = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseDown = value;\n                this._updateAction(this._mouseDown, 'D');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"gotFocus\", {\n        /**\n         * Get the action to be performed when the field receives the input focus.\n         *\n         * @returns {PdfAction} The action to be executed when the field receives the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the got focus the field area.\n         * let action: PdfAction = field.actions.gotFocus;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._gotFocus) {\n                this._gotFocus = this._getPdfAction('Fo');\n            }\n            return this._gotFocus;\n        },\n        /**\n         * Set the action to be performed when the field receives the input focus.\n         *\n         * @param {PdfAction} value The action to be executed when the field receives the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the got focus property of the button field\n         * field.actions.gotFocus = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._gotFocus = value;\n                this._updateAction(this._gotFocus, 'Fo');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"lostFocus\", {\n        /**\n         * Get the action to be performed when the field loses the input focus.\n         *\n         * @returns {PdfAction} The action to be executed when the field loses the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the lost focus the field area.\n         * let action: PdfAction = field.actions.lostFocus;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._lostFocus) {\n                this._lostFocus = this._getPdfAction('Bl');\n            }\n            return this._lostFocus;\n        },\n        /**\n         * Set the action to be performed when the field loses the input focus.\n         *\n         * @param {PdfAction} value The action to be executed when the field loses the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the lost focus property of the button field\n         * field.actions.lostFocus = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._lostFocus = value;\n                this._updateAction(this._lostFocus, 'Bl');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFieldActions.prototype._updateAction = function (action, key) {\n        var widget;\n        if (this._field._kidsCount > 0) {\n            widget = this._field.itemAt(0);\n            if (widget && widget._dictionary && action instanceof PdfGoToAction) {\n                var dictionary = new _PdfDictionary();\n                var page = action._page;\n                var destination = action.destination;\n                if (destination._destinationMode === PdfDestinationMode.location) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('XYZ'), destination.location[0], page.size[1], destination.zoom]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitR) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('FitR'), 0, 0, 0, 0]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitH) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('FitH'), page.size[1]]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitToPage) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('Fit')]);\n                }\n                dictionary.set(key, action._dictionary);\n                dictionary._updated = true;\n                widget._dictionary.update('AA', dictionary);\n            }\n        }\n    };\n    PdfFieldActions.prototype._getPdfAction = function (key) {\n        var result;\n        var widget = this._field.itemAt(0);\n        if (widget && widget._dictionary && widget._dictionary.has('AA')) {\n            var action = widget._dictionary.get('AA');\n            if (action && action.has(key)) {\n                var dictionary = action.get(key);\n                if (dictionary && dictionary.has('S')) {\n                    var type = dictionary.get('S');\n                    if (type && type.name === 'GoTo' && dictionary.has('D')) {\n                        if (!dictionary._crossReference) {\n                            dictionary._crossReference = widget._crossReference;\n                        }\n                        result = new PdfGoToAction(_obtainDestination(dictionary, 'D'));\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    return PdfFieldActions;\n}());\nexport { PdfFieldActions };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfRadioButtonListItem, PdfStateItem, PdfWidgetAnnotation, PdfListFieldItem, _PaintParameter, PdfInteractiveBorder } from './../annotations/annotation';\nimport { _getItemValue, _checkField, _removeReferences, _removeDuplicateReference, _updateVisibility, _styleToString, _getStateTemplate, _findPage, _getInheritableProperty, _getNewGuidString, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _mapBorderStyle, _getUpdatedBounds, _setMatrix, _obtainFontDetails } from './../utils';\nimport { _PdfCheckFieldState, PdfFormFieldVisibility, _FieldFlag, PdfAnnotationFlag, PdfTextAlignment, PdfHighlightMode, PdfBorderStyle, PdfRotationAngle, PdfCheckBoxStyle, PdfFormFieldsTabOrder, PdfFillMode } from './../enumerator';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _TextRenderingMode, PdfBrush, PdfPen } from './../graphics/pdf-graphics';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { _PdfPath } from './../graphics/pdf-path';\nimport { PdfAnnotationCollection } from '../annotations/annotation-collection';\nimport { PdfFieldActions } from '../pdf-action';\n/**\n * `PdfField` class represents the base class for form field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form field at index 0\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the count of the loaded field items\n * let count: number = field.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfField = /** @class */ (function () {\n    function PdfField() {\n        this._visible = true;\n        this._isTransparentBackColor = false;\n        this._isTransparentBorderColor = false;\n        this._defaultFont = new PdfStandardFont(PdfFontFamily.helvetica, 8);\n        this._appearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._defaultItemFont = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n        this._flatten = false;\n        this._hasData = false;\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n    }\n    Object.defineProperty(PdfField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the count of the loaded field items\n         * let count: number = field.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"form\", {\n        /**\n         * Gets the form object of the field (Read only).\n         *\n         * @returns {PdfForm} Form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form object of the field\n         * let form: PdfForm = field.form;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"name\", {\n        /**\n         * Gets the name of the field (Read only).\n         *\n         * @returns {string} Field name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the name of the field\n         * let name: string = field.name;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined') {\n                var names = _getInheritableProperty(this._dictionary, 'T', false, false, 'Parent');\n                if (names && names.length > 0) {\n                    if (names.length === 1) {\n                        this._name = names[0];\n                    }\n                    else {\n                        this._name = names.join('.');\n                    }\n                }\n            }\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"actualName\", {\n        /**\n         * Gets the actual name of the field (Read only).\n         *\n         * @private\n         * @returns {string} Actual name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the actual name of the field\n         * let name: string = field.actualName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._actualName === 'undefined' && this._dictionary.has('T')) {\n                var name_1 = this._dictionary.get('T');\n                if (name_1 && typeof name_1 === 'string') {\n                    this._actualName = name_1;\n                }\n            }\n            return this._actualName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"mappingName\", {\n        /**\n         * Gets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @returns {string} Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the mapping name of the field\n         * let name: string = field.mappingName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mappingName === 'undefined' && this._dictionary.has('TM')) {\n                var name_2 = this._dictionary.get('TM');\n                if (name_2 && typeof name_2 === 'string') {\n                    this._mappingName = name_2;\n                }\n            }\n            return this._mappingName;\n        },\n        /**\n         * Sets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @param {string} value Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the mapping name of the field\n         * field.mappingName = ‘Author’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.mappingName === 'undefined' || this._mappingName !== value) {\n                this._mappingName = value;\n                this._dictionary.update('TM', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"toolTip\", {\n        /**\n         * Gets the tool tip of the form field.\n         *\n         * @returns {string} Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tool tip value of the field\n         * let toolTip: string = field.toolTip;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._alternateName === 'undefined' && this._dictionary.has('TU')) {\n                var name_3 = this._dictionary.get('TU');\n                if (name_3 && typeof name_3 === 'string') {\n                    this._alternateName = name_3;\n                }\n            }\n            return this._alternateName;\n        },\n        /**\n         * Sets the tool tip of the form field.\n         *\n         * @param {string} value Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tool tip value of the field\n         * field.toolTip = ‘Author of the document’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.toolTip === 'undefined' || this._alternateName !== value) {\n                this._alternateName = value;\n                this._dictionary.update('TU', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visibility\", {\n        /**\n         * Gets the form field visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form field visibility.\n         * let visibility: PdfFormFieldVisibility = field.visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                else {\n                    return PdfFormFieldVisibility.visibleNotPrintable;\n                }\n                var flagValue = 3;\n                if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                    flagValue = 0;\n                }\n                if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                    flagValue = 1;\n                }\n                if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                    flagValue &= 2;\n                }\n                switch (flagValue) {\n                    case 0:\n                        value = PdfFormFieldVisibility.hidden;\n                        break;\n                    case 1:\n                        value = PdfFormFieldVisibility.hiddenPrintable;\n                        break;\n                    case 2:\n                        value = PdfFormFieldVisibility.visibleNotPrintable;\n                        break;\n                    case 3:\n                        value = PdfFormFieldVisibility.visible;\n                        break;\n                }\n            }\n            else {\n                if (typeof this._visibility === 'undefined') {\n                    this._visibility = PdfFormFieldVisibility.visible;\n                }\n                value = this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the form field visibility.\n         *\n         * @param {PdfFormFieldVisibility} value visibility.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the form field visibility.\n         * field.visibility = PdfFormFieldVisibility.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (widget && (!widget._hasFlags || this.visibility !== value)) {\n                    _updateVisibility(widget._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n                else if (!this._dictionary.has('F') || this.visibility !== value) {\n                    _updateVisibility(this._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n            }\n            else {\n                if (this.visibility !== value) {\n                    this._visibility = value;\n                    switch (value) {\n                        case PdfFormFieldVisibility.hidden:\n                            widget.flags = PdfAnnotationFlag.hidden;\n                            break;\n                        case PdfFormFieldVisibility.hiddenPrintable:\n                            widget.flags = (PdfAnnotationFlag.noView | PdfAnnotationFlag.print);\n                            break;\n                        case PdfFormFieldVisibility.visible:\n                            widget.flags = PdfAnnotationFlag.print;\n                            break;\n                        case PdfFormFieldVisibility.visibleNotPrintable:\n                            widget.flags = PdfAnnotationFlag.default;\n                            break;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the bounds of list box field.\n         * let bounds: {x: number, y: number, width: number, height: number} = field.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the bounds.\n         * field.bounds = {x: 10, y: 10, width: 100, height: 20};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                widget._page = this.page;\n                widget.bounds = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the field.\n         *\n         * @returns {number} angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation angle of the form field.\n         * let rotate: number = field.rotate;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var angle;\n            if (widget && typeof widget.rotate !== 'undefined') {\n                angle = widget.rotate;\n            }\n            else if (this._dictionary.has('R')) {\n                angle = this._dictionary.get('R');\n            }\n            else {\n                for (var i = 0; i < this._kidsCount && typeof angle === 'undefined'; i++) {\n                    if (i !== this._defaultIndex) {\n                        widget = this.itemAt(i);\n                        if (widget && typeof widget.rotate !== 'undefined') {\n                            angle = widget.rotate;\n                        }\n                    }\n                }\n            }\n            if (typeof angle === 'undefined') {\n                angle = 0;\n            }\n            return angle;\n        },\n        /**\n         * Sets the rotation angle of the field.\n         *\n         * @param {number} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the rotation angle.\n         * field.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget.rotate = value;\n            }\n            else if (!this._dictionary.has('R') || this._dictionary.get('R') !== value) {\n                this._dictionary.update('R', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"color\", {\n        /**\n         * Gets the fore color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the fore color of the field.\n         * let color: number[] = field.color;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color) {\n                value = widget.color;\n            }\n            else if (this._defaultAppearance) {\n                value = this._da.color;\n            }\n            return value;\n        },\n        /**\n         * Sets the fore color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the fore color of the field.\n         * field.color = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color) {\n                widget.color = value;\n            }\n            else {\n                var isNew = false;\n                if (!this._defaultAppearance) {\n                    this._da = new _PdfDefaultAppearance('');\n                    isNew = true;\n                }\n                if (isNew || this._da.color !== value) {\n                    this._da.color = value;\n                    this._dictionary.update('DA', this._da.toString());\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(false);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field.backColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(true);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} Value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"readOnly\", {\n        /**\n         * Gets a value indicating whether read only.\n         *\n         * @returns {boolean} read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether read only.\n         * let readOnly: boolean = field.readOnly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.readOnly) !== 0;\n        },\n        /**\n         * Sets a value indicating whether read only.\n         *\n         * @param {boolean} value read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether read only.\n         * field.readOnly = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.readOnly;\n            }\n            else {\n                if (this._fieldFlags === _FieldFlag.readOnly) {\n                    this._fieldFlags |= _FieldFlag.default;\n                }\n                this._fieldFlags &= ~_FieldFlag.readOnly;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"required\", {\n        /**\n         * Gets a value indicating whether the field is required.\n         *\n         * @returns {boolean} required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is required.\n         * let required: boolean = field.required;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.required) !== 0;\n        },\n        /**\n         * Sets a value indicating whether the field is required.\n         *\n         * @param {boolean} value required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is required.\n         * field.required = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.required;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.required;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visible\", {\n        /**\n         * Gets a value indicating the visibility of the field (Read only).\n         *\n         * @returns {boolean} visible or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating the visibility of the field.\n         * let visible: boolean = field.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                return flag !== PdfAnnotationFlag.hidden;\n            }\n            else {\n                return this._visible;\n            }\n        },\n        /**\n         * Sets a value indicating the visibility of the field.\n         * Only applicable for newly created PDF form fields.\n         *\n         * @param {boolean} value or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating the visibility of the field\n         * field.visible = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && this._visible !== value && !value) {\n                this._visible = value;\n                this.itemAt(this._defaultIndex).flags = PdfAnnotationFlag.hidden;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"border\", {\n        /**\n         * Gets the width, style and dash of the border of the field.\n         *\n         * @returns {PdfInteractiveBorder} Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width, style and dash of the border of the field.\n         * let border: PdfInteractiveBorder = field.border;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var value;\n            if (widget && widget._dictionary.has('BS')) {\n                value = widget.border;\n            }\n            else {\n                value = new PdfInteractiveBorder();\n                if (!(this instanceof PdfButtonField)) {\n                    value._width = 0;\n                }\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            value._width = border.get('W');\n                        }\n                        if (border.has('S')) {\n                            var borderStyle = border.get('S');\n                            if (borderStyle) {\n                                switch (borderStyle.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            value._dash = border.getArray('D');\n                        }\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Sets the width, style and dash of the border of the field.\n         *\n         * @param {PdfInteractiveBorder} value Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the width, style and dash of the border of the field.\n         * field.border = new PdfInteractiveBorder(2, PdfBorderStyle.solid);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                this._updateBorder(widget._dictionary, value);\n            }\n            else {\n                this._updateBorder(this._dictionary, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the field (Read only).\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation of the field.\n         * let rotate: PdfRotationAngle = field.rotationAngle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = PdfRotationAngle.angle0;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                value = widget.rotationAngle;\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"export\", {\n        /**\n         * Gets a value indicating whether the field is allow to export data or not.\n         *\n         * @returns {boolean} Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is allow to export data or not.\n         * let export: boolean = field.export;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.noExport) !== 0);\n        },\n        /**\n         * Sets a value indicating whether the field is allow to export data or not.\n         *\n         * @param {boolean} value Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is allow to export data or not.\n         * field.export = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.noExport;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.noExport;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"tabIndex\", {\n        /**\n         * Gets the tab index of annotation in current page.\n         *\n         * @returns {number} tab index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tab index of annotation in current page.\n         * let tabIndex: number = field.tabIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var annots;\n            if (this.page._pageDictionary.has('Annots')) {\n                annots = this.page._pageDictionary.get('Annots');\n            }\n            if (this._kids && this._kids.length > 0) {\n                for (var i = 0; i < this._kids.length; i++) {\n                    var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                    if (reference) {\n                        if (this.page._pageDictionary.has('Annots')) {\n                            if (annots) {\n                                var index1 = annots.indexOf(reference);\n                                if (index1 !== -1) {\n                                    return index1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else if (this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n                if (this._ref) {\n                    if (annots) {\n                        var index1 = annots.indexOf(this._ref);\n                        if (index1 !== -1) {\n                            return index1;\n                        }\n                    }\n                }\n            }\n            return -1;\n        },\n        /**\n         * Sets the tab index of a annotation in the current page.\n         *\n         * @param {number} value index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tab index of annotation in current page.\n         * field.tabIndex = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabIndex = value;\n            var page = this.page;\n            if (page && (this.form._tabOrder === PdfFormFieldsTabOrder.manual || page.tabOrder === PdfFormFieldsTabOrder.manual)) {\n                if (page._pageDictionary.has('Annots')) {\n                    var annots = page._pageDictionary.get('Annots');\n                    var annotationCollection = new PdfAnnotationCollection(annots, this._crossReference, page);\n                    page._annotations = annotationCollection;\n                    var index = annots.indexOf(this._ref);\n                    if (index < 0) {\n                        index = this._annotationIndex;\n                    }\n                    var annotations = page.annotations._reArrange(this._ref, this._tabIndex, index);\n                    page._pageDictionary.update('Annots', annotations);\n                    page._pageDictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"page\", {\n        /**\n         * Gets the page object of the form field (Read only).\n         *\n         * @returns {PdfPage} Page object.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the page object of the form field.\n         * let page: PdfPage = field.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._page) {\n                var widget = this.itemAt(this._defaultIndex);\n                var dictionary = (typeof widget !== 'undefined') ? widget._dictionary : this._dictionary;\n                var document_1;\n                if (this._crossReference) {\n                    document_1 = this._crossReference._document;\n                }\n                var page = void 0;\n                if (dictionary.has('P')) {\n                    var ref = dictionary.getRaw('P');\n                    if (ref && document_1) {\n                        for (var i = 0; i < document_1.pageCount; i++) {\n                            var entry = document_1.getPage(i);\n                            if (entry && entry._ref === ref) {\n                                page = entry;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!page && document_1) {\n                    var widgetRef = (typeof widget !== 'undefined') ? widget._ref : this._ref;\n                    if (!page && widgetRef) {\n                        page = _findPage(document_1, widgetRef);\n                    }\n                    if (!page && this._kids && this._kids.length > 0) {\n                        for (var i = 0; i < this._kids.length; i++) {\n                            page = _findPage(document_1, this._kids[Number.parseInt(i.toString(), 10)]);\n                            if (page) {\n                                break;\n                            }\n                        }\n                    }\n                }\n                this._page = page;\n            }\n            return this._page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the boolean flag indicating whether the form field have been flattened or not.\n         * let flatten: boolean = field.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the boolean flag indicating whether the form field have been flattened or not.\n         * field.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_grayBrush\", {\n        get: function () {\n            if (!this._gray) {\n                this._gray = new PdfBrush([128, 128, 128]);\n            }\n            return this._gray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_silverBrush\", {\n        get: function () {\n            if (!this._silver) {\n                this._silver = new PdfBrush([198, 198, 198]);\n            }\n            return this._silver;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_whiteBrush\", {\n        get: function () {\n            if (!this._white) {\n                this._white = new PdfBrush([255, 255, 255]);\n            }\n            return this._white;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_blackBrush\", {\n        get: function () {\n            if (!this._black) {\n                this._black = new PdfBrush([0, 0, 0]);\n            }\n            return this._black;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_kidsCount\", {\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                if (!mkDictionary) {\n                    var item = this.itemAt(this._defaultIndex);\n                    if (item && item._dictionary.has('MK')) {\n                        mkDictionary = item._dictionary.get('MK');\n                    }\n                }\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_hasBorderColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                if (!mkDictionary) {\n                    var item = this.itemAt(this._defaultIndex);\n                    if (item && item._dictionary.has('MK')) {\n                        mkDictionary = item._dictionary.get('MK');\n                    }\n                }\n                return (mkDictionary && mkDictionary.has('BC'));\n            }\n            else {\n                return !this._isTransparentBorderColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._parseBackColor = function (hasTransparency) {\n        var value;\n        if ((!hasTransparency) || ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor))) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor) {\n                value = widget.backColor;\n            }\n            else if (this._mkDictionary) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BG')) {\n                    var bgArray = mkDict.getArray('BG');\n                    if (bgArray) {\n                        value = _parseColor(bgArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [255, 255, 255];\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._parseBorderColor = function (hasTransparency) {\n        var value;\n        if ((!hasTransparency) || ((this._isLoaded && this._hasBorderColor) || (!this._isLoaded && !this._isTransparentBorderColor))) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor) {\n                value = widget.borderColor;\n            }\n            else if (this._mkDictionary) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BC')) {\n                    var bgArray = mkDict.getArray('BC');\n                    if (bgArray) {\n                        value = _parseColor(bgArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [0, 0, 0];\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._updateBackColor = function (value, hasTransparency) {\n        if (hasTransparency === void 0) { hasTransparency = false; }\n        if (hasTransparency && value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n            }\n            var item = this.itemAt(this._defaultIndex);\n            if (item) {\n                item.backColor = value;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor !== value) {\n                widget.backColor = value;\n            }\n            else {\n                var mkDictionary = this._mkDictionary;\n                if (typeof mkDictionary === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDictionary.has('BG') || _parseColor(mkDictionary.getArray('BG')) !== value) {\n                    mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    PdfField.prototype._updateBorderColor = function (value, hasTransparency) {\n        if (hasTransparency === void 0) { hasTransparency = false; }\n        if (hasTransparency && value.length === 4 && value[3] !== 255) {\n            this._isTransparentBorderColor = true;\n            if (this._dictionary.has('BC')) {\n                delete this._dictionary._map.BC;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BC')) {\n                delete mkDictionary._map.BC;\n                if (this._dictionary.has('BS')) {\n                    var bsDictionary = this._dictionary.get('BS');\n                    if (bsDictionary && bsDictionary.has('W')) {\n                        delete bsDictionary._map.W;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n            var item = this.itemAt(this._defaultIndex);\n            if (item) {\n                item.borderColor = value;\n            }\n        }\n        else {\n            this._isTransparentBorderColor = false;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor !== value) {\n                widget.borderColor = value;\n            }\n            else {\n                var mkDictionary = this._mkDictionary;\n                if (typeof mkDictionary === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDictionary.has('BC') || _parseColor(mkDictionary.getArray('BC')) !== value) {\n                    mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Gets the field item as `PdfWidgetAnnotation` at the specified index.\n     *\n     * @param {number} index Item index.\n     * @returns {PdfWidgetAnnotation} Loaded PDF form field item at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Access the count of the field items.\n     * let count: number = field.count;\n     * // Access the first item\n     * let item: PdfWidgetAnnotation = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.itemAt = function (index) {\n        var item;\n        if (index >= 0 && index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfWidgetAnnotation._load(dictionary, this._crossReference);\n                    item._ref = reference;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.fieldAt(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n    };\n    /**\n     * Gets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string} Value associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the value associated with the key 'Author'.\n     * let value: string = document.form.fieldAt(0).getValue('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.getValue = function (name) {\n        var value;\n        if (this._dictionary.has(name)) {\n            var element = this._dictionary.get(name); // eslint-disable-line\n            if (element instanceof _PdfName) {\n                value = element.name;\n            }\n            else if (typeof element === 'string') {\n                value = element;\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return value;\n    };\n    /**\n     * Sets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Set custom value\n     * field.setValue('Author', 'John');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setValue = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    /**\n     * Remove the form field item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItemAt = function (index) {\n        if (this._dictionary.has('Kids') && this.itemsCount > 0) {\n            var item = this.itemAt(index);\n            if (item && item._ref) {\n                var page = item._getPage();\n                if (page) {\n                    page._removeAnnotation(item._ref);\n                }\n                this._kids.splice(index, 1);\n                this._dictionary.set('Kids', this._kids);\n                this._dictionary._updated = true;\n                this._parsedItems.delete(index);\n                if (this._parsedItems.size > 0) {\n                    var parsedItems_1 = new Map();\n                    this._parsedItems.forEach(function (value, key) {\n                        if (key > index) {\n                            parsedItems_1.set(key - 1, value);\n                        }\n                        else {\n                            parsedItems_1.set(key, value);\n                        }\n                    });\n                    this._parsedItems = parsedItems_1;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified form field item.\n     *\n     * @param {PdfWidgetAnnotation} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    Object.defineProperty(PdfField.prototype, \"_fieldFlags\", {\n        get: function () {\n            if (typeof this._flags === 'undefined') {\n                this._flags = _getInheritableProperty(this._dictionary, 'Ff', false, true, 'Parent');\n                if (typeof this._flags === 'undefined') {\n                    this._flags = _FieldFlag.default;\n                }\n            }\n            return this._flags;\n        },\n        set: function (value) {\n            if (this._fieldFlags !== value) {\n                this._flags = value;\n                this._dictionary.update('Ff', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined') {\n                var da = _getInheritableProperty(this._dictionary, 'DA', false, true, 'Parent');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._updateBorder = function (dictionary, value) {\n        var bs;\n        var isNew = false;\n        if (dictionary.has('BS')) {\n            bs = dictionary.get('BS');\n        }\n        else {\n            bs = new _PdfDictionary(this._crossReference);\n            dictionary.update('BS', bs);\n            isNew = true;\n        }\n        if (typeof value.width !== 'undefined') {\n            bs.update('W', value.width);\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('W', 0);\n        }\n        if (typeof value.style !== 'undefined') {\n            bs.update('S', _mapBorderStyle(value.style));\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('S', _mapBorderStyle(PdfBorderStyle.solid));\n        }\n        if (typeof value.dash !== 'undefined') {\n            bs.update('D', value.dash);\n            dictionary._updated = true;\n        }\n    };\n    PdfField.prototype._checkFieldFlag = function (dictionary) {\n        var flag = dictionary.get('F');\n        return (typeof flag !== 'undefined' && flag === 6);\n    };\n    PdfField.prototype._initializeFont = function (font) {\n        this._font = font;\n        var document = this._crossReference._document;\n        var resource;\n        if (document) {\n            if (document.form._dictionary.has('DR')) {\n                resource = document.form._dictionary.get('DR');\n            }\n            else {\n                resource = new _PdfDictionary(this._crossReference);\n            }\n        }\n        var fontDict;\n        var isReference = false;\n        if (resource.has('Font')) {\n            var obj = resource.getRaw('Font'); // eslint-disable-line\n            if (obj && obj instanceof _PdfReference) {\n                isReference = true;\n                fontDict = this._crossReference._fetch(obj);\n            }\n            else if (obj instanceof _PdfDictionary) {\n                fontDict = obj;\n            }\n        }\n        if (!fontDict) {\n            fontDict = new _PdfDictionary(this._crossReference);\n            resource.update('Font', fontDict);\n        }\n        var keyName = _PdfName.get(_getNewGuidString());\n        var reference = this._crossReference._getNextReference();\n        if (font instanceof PdfTrueTypeFont) {\n            if (this._font._pdfFontInternals) {\n                this._crossReference._cacheMap.set(reference, this._font._pdfFontInternals);\n            }\n        }\n        else if (this._font._dictionary) {\n            this._crossReference._cacheMap.set(reference, this._font._dictionary);\n        }\n        fontDict.update(keyName.name, reference);\n        resource._updated = true;\n        document.form._dictionary.update('DR', resource);\n        document.form._dictionary._updated = true;\n        this._fontName = keyName.name;\n        var defaultAppearance = new _PdfDefaultAppearance();\n        defaultAppearance.fontName = this._fontName;\n        defaultAppearance.fontSize = this._font._size;\n        defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n        if (this._dictionary.has('Kids')) {\n            var widgetDictionary = this._dictionary.getArray('Kids');\n            for (var i = 0; i < widgetDictionary.length; i++) {\n                var dictionary = widgetDictionary[Number.parseInt(i.toString(), 10)];\n                dictionary.update('DA', defaultAppearance.toString());\n            }\n        }\n        else if (this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n            this._dictionary.update('DA', defaultAppearance.toString());\n        }\n        if (isReference) {\n            resource._updated = true;\n        }\n    };\n    PdfField.prototype._drawRectangularControl = function (g, parameter) {\n        g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    PdfField.prototype._drawBorder = function (g, bounds, borderPen, style, borderWidth) {\n        if (borderPen && borderWidth > 0) {\n            if (style === PdfBorderStyle.underline) {\n                g.drawLine(borderPen, bounds[0], bounds[0] + bounds[3] - borderWidth / 2, bounds[0] + bounds[2], bounds[1] + bounds[3] - borderWidth / 2);\n            }\n            else {\n                g.drawRectangle(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, bounds[2] - borderWidth, bounds[3] - borderWidth, borderPen);\n            }\n        }\n    };\n    PdfField.prototype._drawLeftTopShadow = function (g, bounds, width, brush) {\n        var path = new _PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, bounds[1] + width]);\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([bounds[0] + 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - width, bounds[1] + width]);\n        path._addPolygon(points);\n        g._drawPath(path, null, brush);\n    };\n    PdfField.prototype._drawRightBottomShadow = function (g, bounds, width, brush) {\n        var path = new _PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([bounds[0] + bounds[2] - width, bounds[1] + width]);\n        points.push([(bounds[0] + bounds[2]) - width, (bounds[1] + bounds[3]) - width]);\n        path._addPolygon(points);\n        g._drawPath(path, null, brush);\n    };\n    PdfField.prototype._drawRadioButton = function (graphics, parameter, checkSymbol, state) {\n        if (checkSymbol === 'l') {\n            var bounds = parameter.bounds;\n            switch (state) {\n                case _PdfCheckFieldState.checked:\n                case _PdfCheckFieldState.unchecked:\n                    graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.backBrush);\n                    break;\n                case _PdfCheckFieldState.pressedChecked:\n                case _PdfCheckFieldState.pressedUnchecked:\n                    if ((parameter.borderStyle === PdfBorderStyle.beveled) || (parameter.borderStyle === PdfBorderStyle.underline)) {\n                        graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.backBrush);\n                    }\n                    else {\n                        graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.shadowBrush);\n                    }\n                    break;\n            }\n            this._drawRoundBorder(graphics, bounds, parameter.borderPen, parameter.borderWidth);\n            this._drawRoundShadow(graphics, parameter, state);\n            if (state === _PdfCheckFieldState.checked || state === _PdfCheckFieldState.pressedChecked) {\n                var outward = [bounds[0] + parameter.borderWidth / 2,\n                    bounds[1] + parameter.borderWidth / 2,\n                    bounds[2] - parameter.borderWidth,\n                    bounds[3] - parameter.borderWidth];\n                graphics.drawEllipse(outward[0] + (outward[2] / 4), outward[1] + (outward[2] / 4), outward[2] - (outward[2] / 2), outward[3] - (outward[2] / 2), parameter.foreBrush);\n            }\n        }\n        else {\n            this._drawCheckBox(graphics, parameter, checkSymbol, state);\n        }\n    };\n    PdfField.prototype._drawRoundBorder = function (graphics, bounds, borderPen, borderWidth) {\n        if (bounds[0] !== 0 || bounds[1] !== 0 || bounds[2] !== 0 || bounds[3] !== 0) {\n            graphics.drawEllipse(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, bounds[2] - borderWidth, bounds[3] - borderWidth, borderPen);\n        }\n    };\n    PdfField.prototype._drawRoundShadow = function (graphics, parameter, state) {\n        var borderWidth = parameter.borderWidth;\n        var inflateValue = -1.5 * borderWidth;\n        var x = parameter.bounds[0] + inflateValue;\n        var y = parameter.bounds[1] + inflateValue;\n        var width = parameter.bounds[2] + (2 * inflateValue);\n        var height = parameter.bounds[3] + (2 * inflateValue);\n        var shadowBrush = parameter.shadowBrush;\n        if (shadowBrush) {\n            var shadowColor = shadowBrush._color;\n            var leftTop = void 0;\n            var rightBottom = void 0;\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.beveled:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen(shadowColor, borderWidth);\n                            rightBottom = new PdfPen([255, 255, 255], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([255, 255, 255], borderWidth);\n                            rightBottom = new PdfPen(shadowColor, borderWidth);\n                            break;\n                    }\n                    break;\n                case PdfBorderStyle.inset:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen([0, 0, 0], borderWidth);\n                            rightBottom = new PdfPen([0, 0, 0], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([128, 128, 128], borderWidth);\n                            rightBottom = new PdfPen([192, 192, 192], borderWidth);\n                            break;\n                    }\n                    break;\n            }\n            if (leftTop && rightBottom) {\n                graphics.drawArc(x, y, width, height, 135, 180, leftTop);\n                graphics.drawArc(x, y, width, height, -45, 180, rightBottom);\n            }\n        }\n    };\n    PdfField.prototype._drawCheckBox = function (graphics, parameter, checkSymbol, state, font) {\n        switch (state) {\n            case _PdfCheckFieldState.unchecked:\n            case _PdfCheckFieldState.checked:\n                if (parameter.borderPen || parameter.backBrush) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                }\n                break;\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.pressedUnchecked:\n                if ((parameter.borderStyle === PdfBorderStyle.beveled || parameter.backBrush) ||\n                    (parameter.borderStyle === PdfBorderStyle.underline)) {\n                    if (parameter.borderPen || parameter.backBrush) {\n                        graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                    }\n                }\n                else if (parameter.borderPen || parameter.shadowBrush) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                }\n                break;\n        }\n        var rectangle = parameter.bounds;\n        this._drawBorder(graphics, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        if ((state === _PdfCheckFieldState.pressedChecked) || (state === _PdfCheckFieldState.pressedUnchecked)) {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._blackBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n            }\n        }\n        else {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    break;\n            }\n        }\n        var yOffset = 0;\n        var size = 0;\n        switch (state) {\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.checked:\n                if (!font) {\n                    var extraBorder = parameter.borderStyle === PdfBorderStyle.beveled ||\n                        parameter.borderStyle === PdfBorderStyle.inset;\n                    var borderWidth = parameter.borderWidth;\n                    if (extraBorder) {\n                        borderWidth *= 2;\n                    }\n                    var xPosition = Math.max((extraBorder ? 2 * parameter.borderWidth : parameter.borderWidth), 1);\n                    var xOffset = Math.min(borderWidth, xPosition);\n                    size = (parameter.bounds[2] > parameter.bounds[3]) ? parameter.bounds[3] : parameter.bounds[2];\n                    var fontSize = size - 2 * xOffset;\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize);\n                    if (parameter.bounds[2] > parameter.bounds[3]) {\n                        yOffset = ((parameter.bounds[3] - font._metrics._getHeight()) / 2);\n                    }\n                }\n                else {\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, font._size);\n                }\n                if (size === 0) {\n                    size = parameter.bounds[3];\n                }\n                if (parameter.pageRotationAngle !== PdfRotationAngle.angle0 || parameter.rotationAngle > 0) {\n                    var state_1 = graphics.save();\n                    var size_1 = graphics._size;\n                    if (parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(size_1[1], 0);\n                            graphics.rotateTransform(90);\n                            var y = size_1[1] - (rectangle[0] + rectangle[2]);\n                            var x = rectangle[1];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(0, size_1[0]);\n                            graphics.rotateTransform(270);\n                            var x = size_1[0] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                    }\n                    if (parameter.rotationAngle > 0) {\n                        if (parameter.rotationAngle === 90) {\n                            if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                                graphics.translateTransform(0, size_1[1]);\n                                graphics.rotateTransform(-90);\n                                var x = size_1[1] - (rectangle[1] + rectangle[3]);\n                                var y = rectangle[0];\n                                rectangle = [x, y, rectangle[3], rectangle[2]];\n                            }\n                            else {\n                                if (rectangle[2] > rectangle[3]) {\n                                    graphics.translateTransform(0, size_1[1]);\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                                }\n                                else {\n                                    var z = rectangle[0];\n                                    rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                    rectangle[1] = z;\n                                    var height = rectangle[3];\n                                    rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                    rectangle[2] = height;\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n                                }\n                            }\n                        }\n                        else if (parameter.rotationAngle === 270) {\n                            graphics.translateTransform(size_1[0], 0);\n                            graphics.rotateTransform(-270);\n                            var x = rectangle[1];\n                            var y = size_1[0] - (rectangle[0] + rectangle[2]);\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.rotationAngle === 180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                        graphics.restore(state_1);\n                    }\n                    else {\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                    }\n                    break;\n                }\n        }\n    };\n    PdfField.prototype._addToKid = function (item) {\n        if (this._dictionary.has('Kids')) {\n            this._kids = this._dictionary.get('Kids');\n        }\n        else {\n            this._kids = [];\n            this._dictionary.update('Kids', this._kids);\n            this._parsedItems = new Map();\n        }\n        var currentIndex = this._kidsCount;\n        item._index = currentIndex;\n        this._kids.push(item._ref);\n        this._parsedItems.set(currentIndex, item);\n    };\n    PdfField.prototype._drawTemplate = function (template, page, bounds) {\n        if (template && page) {\n            var graphics = page.graphics;\n            graphics.save();\n            if (page.rotation === PdfRotationAngle.angle90) {\n                graphics.translateTransform(graphics._size[1], 0);\n                graphics.rotateTransform(90);\n            }\n            else if (page.rotation === PdfRotationAngle.angle180) {\n                graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                graphics.rotateTransform(-180);\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                graphics.translateTransform(0, graphics._size[0]);\n                graphics.rotateTransform(270);\n            }\n            graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n            graphics.drawTemplate(template, bounds);\n            graphics.restore();\n        }\n    };\n    PdfField.prototype._addToOptions = function (item, field) {\n        if (field instanceof PdfListBoxField) {\n            field._listValues.push(item._text);\n        }\n        field._options.push([item._value, item._text]);\n        field._dictionary.set('Opt', field._options);\n        field._dictionary._updated = true;\n        if (!item._isFont && item._pdfFont) {\n            this._initializeFont(item._pdfFont);\n        }\n    };\n    PdfField.prototype._addAppearance = function (dictionary, template, key) {\n        var appearance = new _PdfDictionary();\n        if (dictionary.has('AP')) {\n            appearance = dictionary.get('AP');\n            _removeDuplicateReference(dictionary.get('AP'), this._crossReference, key);\n        }\n        else {\n            appearance = new _PdfDictionary(this._crossReference);\n            dictionary.update('AP', appearance);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        appearance.update(key, reference);\n    };\n    PdfField.prototype._rotateTextBox = function (rect, size, angle) {\n        var rectangle = [0, 0, 0, 0];\n        if (angle === PdfRotationAngle.angle180) {\n            rectangle = [size[0] - (rect[0] + rect[2]), size[1] - (rect[1] + rect[3]), rect[2], rect[3]];\n        }\n        else if (angle === PdfRotationAngle.angle270) {\n            rectangle = [rect[1], size[0] - (rect[0] + rect[2]), rect[3], rect[2]];\n        }\n        else if (angle === PdfRotationAngle.angle90) {\n            rectangle = [size[1] - (rect[1] + rect[3]), rect[0], rect[3], rect[2]];\n        }\n        return rectangle;\n    };\n    PdfField.prototype._checkIndex = function (value, length) {\n        if (value < 0 || (value !== 0 && value >= length)) {\n            throw Error('Index out of range.');\n        }\n    };\n    PdfField.prototype._getAppearanceStateValue = function () {\n        var value;\n        if (this._dictionary.has('Kids')) {\n            for (var i = 0; i < this._kidsCount; i++) {\n                var item = this.itemAt(i);\n                if (item && item._dictionary && item._dictionary.has('AS')) {\n                    var state = item._dictionary.get('AS');\n                    if (state && state.name !== 'Off') {\n                        value = state.name;\n                        break;\n                    }\n                }\n            }\n        }\n        else if (this._dictionary.has('AS')) {\n            var state = this._dictionary.get('AS');\n            if (state && state.name !== 'Off') {\n                value = state.name;\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._getTextAlignment = function () {\n        if (this._textAlignment === null || typeof this._textAlignment === 'undefined') {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary && widget._dictionary.has('Q')) {\n                    this._textAlignment = widget._dictionary.get('Q');\n                }\n                else if (this._dictionary.has('Q')) {\n                    this._textAlignment = this._dictionary.get('Q');\n                }\n                else {\n                    this._textAlignment = PdfTextAlignment.left;\n                }\n            }\n            else {\n                this._textAlignment = PdfTextAlignment.left;\n            }\n        }\n        return this._textAlignment;\n    };\n    PdfField.prototype._setTextAlignment = function (value) {\n        var widget = this.itemAt(this._defaultIndex);\n        if (this._isLoaded && !this.readOnly) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else {\n                this._dictionary.update('Q', value);\n            }\n        }\n        if (!this._isLoaded && this._textAlignment !== value) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else if (this._dictionary) {\n                this._dictionary.update('Q', value);\n            }\n        }\n        this._textAlignment = value;\n        this._stringFormat = new PdfStringFormat(value, PdfVerticalAlignment.middle);\n    };\n    PdfField.prototype._parseItems = function () {\n        var collection = [];\n        for (var i = 0; i < this.itemsCount; i++) {\n            collection.push(this.itemAt(i));\n        }\n        return collection;\n    };\n    return PdfField;\n}());\nexport { PdfField };\n/**\n * `PdfTextBoxField` class represents the text box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextBoxField = /** @class */ (function (_super) {\n    __extends(PdfTextBoxField, _super);\n    function PdfTextBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._autoResizeText = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing text box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfTextBoxField} Text box field.\n     */\n    PdfTextBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfTextBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    Object.defineProperty(PdfTextBoxField.prototype, \"text\", {\n        /**\n         * Gets the value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text value from text box field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined') {\n                if (this._isLoaded) {\n                    var text = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (text) {\n                        this._text = text;\n                    }\n                    else {\n                        var widget = this.itemAt(this._defaultIndex);\n                        if (widget) {\n                            text = widget._dictionary.get('V');\n                            if (text) {\n                                this._text = text;\n                            }\n                        }\n                    }\n                }\n                else {\n                    this._text = '';\n                }\n            }\n            return this._text;\n        },\n        /**\n         * Sets the value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text value to text box field\n         * field.text = ‘Syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                if (!this.readOnly) {\n                    if (!(this._dictionary.has('V') && this._dictionary.get('V') === value)) {\n                        this._dictionary.update('V', value);\n                    }\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && !(widget._dictionary.has('V') && widget._dictionary.get('V') === value)) {\n                        widget._dictionary.update('V', value);\n                    }\n                }\n            }\n            else if (this._text !== value) {\n                this._dictionary.update('V', value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a text box.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text alignment from text box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a text box.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"defaultValue\", {\n        /**\n         * Gets the default value of the field.\n         *\n         * @returns {string} Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the default value from the text box field\n         * let value: string = field.defaultValue;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._defaultValue === 'undefined') {\n                var text = _getInheritableProperty(this._dictionary, 'DV', false, true, 'Parent');\n                if (text) {\n                    this._defaultValue = text;\n                }\n            }\n            return this._defaultValue;\n        },\n        /**\n         * Sets the default value of the field.\n         *\n         * @param {string} value Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the default value of the text box field\n         * field.defaultValue = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this.defaultValue) {\n                this._dictionary.update('DV', value);\n                this._defaultValue = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"multiLine\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @returns {boolean} multiline.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         * let multiLine: boolean = field.multiLine;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.multiLine) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @param {boolean} value multiLine or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         * field.multiLine = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.multiLine;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.multiLine;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"password\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @returns {boolean} password.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is password.\n         * let password: boolean = field.password;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.password) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @param {boolean} value password or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is password.\n         * field.password = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.password;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.password;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"scrollable\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @returns {boolean} scrollable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * let scrollable: boolean = field.scrollable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotScroll) !== 0);\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @param {boolean} value scrollable or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * field.scrollable = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotScroll;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotScroll;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"spellCheck\", {\n        /**\n         * Gets a value indicating whether to check spelling.\n         *\n         * @returns {boolean} spellCheck.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether to check spelling\n         * let spellCheck: boolean = field.spellCheck;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotSpellCheck) !== 0);\n        },\n        /**\n         * Sets a value indicating whether to check spelling.\n         *\n         * @param {boolean} value spellCheck or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether to check spelling\n         * field.spellCheck = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotSpellCheck;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"insertSpaces\", {\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @returns {boolean} insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * let insertSpaces: boolean = field.insertSpaces;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var flags = this._fieldFlags;\n            return ((_FieldFlag.comb & flags) !== 0) &&\n                ((flags & _FieldFlag.multiLine) === 0) &&\n                ((flags & _FieldFlag.password) === 0) &&\n                ((flags & _FieldFlag.fileSelect) === 0);\n        },\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @param {boolean} value insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * field.insertSpaces = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.comb;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.comb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the highlight mode of text box field\n         * let mode: PdfHighlightMode = field.highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary.has('H')) {\n                var name_4 = this._dictionary.get('H');\n                mode = _mapHighlightMode(name_4.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.noHighlighting;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the highlight mode of text box field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"maxLength\", {\n        /**\n         * Gets the maximum length of the field, in characters.\n         *\n         * @returns {number} maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the maximum length of the field, in characters.\n         * let maxLength: number = field.maxLength;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._maxLength === 'undefined') {\n                var length_1 = _getInheritableProperty(this._dictionary, 'MaxLen', false, true, 'Parent');\n                this._maxLength = (typeof length_1 !== 'undefined' && Number.isInteger(length_1)) ? length_1 : 0;\n            }\n            return this._maxLength;\n        },\n        /**\n         * Sets the maximum length of the field, in characters.\n         *\n         * @param {number} value maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the maximum length of the field, in characters.\n         * field.maxLength = 20;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.maxLength !== value) {\n                this._dictionary.update('MaxLen', value);\n                this._maxLength = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"isAutoResizeText\", {\n        /**\n         * Gets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @returns {boolean} Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the flag indicating whether the auto resize text enabled or not.\n         * let isAutoResize: boolean = field.isAutoResizeText;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._autoResizeText;\n        },\n        /**\n         * Sets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @param {boolean} value Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the flag indicating whether the auto resize text enabled or not.\n         * field.isAutoResizeText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._autoResizeText = value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._isAutoResize = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let firstName: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * firstName.backColor = [255, 0, 0];\n         * // Access the text box field at index 1\n         * let secondName: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * secondName.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._text = '';\n        this._defaultValue = '';\n        this._defaultIndex = 0;\n        this._spellCheck = false;\n        this._insertSpaces = false;\n        this._multiline = false;\n        this._password = false;\n        this._scrollable = false;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Tx'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfTextBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.left;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._mkDictionary.update('CA', this.actualName);\n        this._addToKid(widget);\n    };\n    PdfTextBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(isFlatten, item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._page, { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfTextBoxField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if (this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(isFlatten, source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics.drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfTextBoxField.prototype._createAppearance = function (isFlatten, widget) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (isFlatten && backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        parameter.insertSpaces = this.insertSpaces;\n        var text = this.text;\n        if (text === null || typeof text === 'undefined') {\n            text = '';\n        }\n        if (this.password) {\n            var password = '';\n            for (var i = 0; i < text.length; i++) {\n                password += '*';\n            }\n            text = password;\n        }\n        parameter.required = this.required;\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (typeof this._stringFormat === 'undefined' || this._stringFormat === null) {\n            if (typeof this.textAlignment === 'undefined' || this.textAlignment === null) {\n                this._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n            }\n            else {\n                this._stringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n            }\n        }\n        this._drawTextBox(graphics, parameter, text, this._font, this._stringFormat, this.multiLine, this.scrollable, this.maxLength);\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfTextBoxField.prototype._drawTextBox = function (g, parameter, text, font, format, multiline, scroll, maxLength) {\n        if (typeof maxLength !== 'undefined') {\n            if (parameter.insertSpaces) {\n                var width = 0;\n                if (typeof maxLength !== 'undefined' && maxLength > 0 && this.borderColor) {\n                    width = parameter.bounds[2] / maxLength;\n                    g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.borderPen, parameter.backBrush);\n                    var current = text;\n                    for (var i = 0; i < maxLength; i++) {\n                        if (format.alignment === PdfTextAlignment.right) {\n                            if (maxLength - current.length <= i) {\n                                text = current[i - (maxLength - current.length)];\n                            }\n                            else {\n                                text = '';\n                            }\n                        }\n                        else {\n                            if (format.alignment === PdfTextAlignment.center && current.length < maxLength) {\n                                var startlocation = maxLength / 2 - (Math.ceil(current.length / 2));\n                                if (i >= startlocation && i < startlocation + current.length) {\n                                    text = current[i - startlocation];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                            else {\n                                if (current.length > i) {\n                                    text = current[Number.parseInt(i.toString(), 10)];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                        }\n                        parameter.bounds[2] = width;\n                        this._drawTextBox(g, parameter, text, font, new PdfStringFormat(PdfTextAlignment.center), multiline, scroll);\n                        parameter.bounds[0] = parameter.bounds[0] + width;\n                        if (parameter.borderWidth) {\n                            g.drawLine(parameter.borderPen, parameter.bounds[0], parameter.bounds[1], parameter.bounds[0], parameter.bounds[1] + parameter.bounds[3]);\n                        }\n                    }\n                }\n                else {\n                    this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n                }\n            }\n            else {\n                this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n            }\n        }\n        else {\n            if (g._isTemplateGraphics && parameter.required) {\n                g.save();\n                g._initializeCoordinates();\n            }\n            if (!parameter.insertSpaces) {\n                this._drawRectangularControl(g, parameter);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g.restore();\n                g.save();\n                g._sw._beginMarkupSequence('Tx');\n                g._initializeCoordinates();\n            }\n            var rectangle = parameter.bounds;\n            if (parameter.borderStyle === PdfBorderStyle.beveled || parameter.borderStyle === PdfBorderStyle.inset) {\n                rectangle[0] = rectangle[0] + 4 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 8 * parameter.borderWidth;\n            }\n            else {\n                rectangle[0] = rectangle[0] + 2 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 4 * parameter.borderWidth;\n            }\n            if (multiline) {\n                var tempheight = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                    font._metrics._getHeight() :\n                    format.lineSpacing;\n                var ascent = font._metrics._getAscent(format);\n                var shift = tempheight - ascent;\n                if (text.indexOf('\\n') !== -1) {\n                    if (rectangle[0] === 0 && rectangle[1] === 1) {\n                        rectangle[1] = -(rectangle[1] - shift);\n                    }\n                }\n                else if (rectangle[0] === 0 && rectangle[1] === 1) {\n                    rectangle[1] = -(rectangle[1] - shift);\n                }\n                if (parameter.isAutoFontSize) {\n                    if (parameter.borderWidth !== 0) {\n                        rectangle[1] = rectangle[1] + 2.5 * parameter.borderWidth;\n                    }\n                }\n            }\n            if ((g._page &&\n                typeof g._page.rotation !== 'undefined' &&\n                g._page.rotation !== PdfRotationAngle.angle0) ||\n                parameter.rotationAngle > 0) {\n                var state = g.save();\n                if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(g._size[1], 0);\n                        g.rotateTransform(90);\n                        var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                        var x = rectangle[1];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                        g.translateTransform(0, g._size[0]);\n                        g.rotateTransform(270);\n                        var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                }\n                if (parameter.rotationAngle) {\n                    if (parameter.rotationAngle === 90) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else {\n                            if (rectangle[2] > rectangle[3]) {\n                                g.translateTransform(0, g._size[1]);\n                                g.rotateTransform(-90);\n                                rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                            }\n                            else {\n                                var z = rectangle[0];\n                                rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                rectangle[1] = z;\n                                var height = rectangle[3];\n                                rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                rectangle[2] = height;\n                                g.rotateTransform(-90);\n                            }\n                        }\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        g.translateTransform(g._size[0], 0);\n                        g.rotateTransform(-270);\n                        var x = rectangle[1];\n                        var y = g._size[0] - (rectangle[0] + rectangle[2]);\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                }\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n                g.restore(state);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g._sw._endMarkupSequence();\n                g.restore();\n            }\n        }\n    };\n    return PdfTextBoxField;\n}(PdfField));\nexport { PdfTextBoxField };\n/**\n * `PdfButtonField` class represents the button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new button field\n * let field: PdfButtonField = new PdfButtonField(page , 'Button1', {x: 100, y: 40, width: 100, height: 20});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfButtonField = /** @class */ (function (_super) {\n    __extends(PdfButtonField, _super);\n    function PdfButtonField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfButtonField.prototype, \"actions\", {\n        /**\n         * Gets the actions of the field. [Read-Only]\n         *\n         * @returns {PdfFieldActions} The actions.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action value from button field\n         * let action: PdfAction = field.actions.mouseEnter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._actions) {\n                this._actions = new PdfFieldActions(this);\n            }\n            return this._actions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"text\", {\n        /**\n         * Gets value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text value from button field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                if (typeof this._text === 'undefined') {\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && widget._mkDictionary && widget._mkDictionary.has('CA')) {\n                        this._text = widget._mkDictionary.get('CA');\n                    }\n                    else if (this._mkDictionary && this._mkDictionary.has('CA')) {\n                        this._text = this._mkDictionary.get('CA');\n                    }\n                }\n                if (typeof this._text === 'undefined') {\n                    var value = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (value) {\n                        this._text = value;\n                    }\n                }\n            }\n            if (typeof this._text === 'undefined') {\n                this._text = '';\n            }\n            return this._text;\n        },\n        /**\n         * Sets value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text value of form field\n         * field.text = ’Click to submit’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && !this.readOnly) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary) {\n                    this._assignText(widget._dictionary, value);\n                }\n                else {\n                    this._assignText(this._dictionary, value);\n                }\n            }\n            if (!this._isLoaded && this._text !== value) {\n                var widget = this.itemAt(this._defaultIndex);\n                this._assignText(widget._dictionary, value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a button field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text alignment from button field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a button field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the highlight mode from button field\n         * let highlightMode: PdfHighlightMode = field. highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary.has('H')) {\n                var highlight = this._dictionary.get('H');\n                mode = _mapHighlightMode(highlight.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.invert;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the highlight mode of button field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the button field at index 0\n         * let submitButton: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * submitButton.backColor = [255, 0, 0];\n         * // Access the button field at index 1\n         * let cancelButton: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * cancelButton.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfButtonField.prototype._assignText = function (fieldDictionary, value) {\n        var dictionary;\n        if (fieldDictionary.has('MK')) {\n            dictionary = fieldDictionary.get('MK');\n        }\n        else {\n            dictionary = new _PdfDictionary(this._crossReference);\n            fieldDictionary.set('MK', dictionary);\n        }\n        dictionary.update('CA', value);\n        fieldDictionary._updated = true;\n    };\n    /**\n     * Parse an existing button field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfButtonField} Button field.\n     */\n    PdfButtonField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfButtonField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfButtonField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.pushButton;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfButtonField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [.827451, .827451, .827451]);\n        widget._mkDictionary.update('CA', (typeof this._name !== 'undefined' && this._name !== null) ? this._name : this._actualName);\n        this._addToKid(widget);\n    };\n    PdfButtonField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._getPage(), { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                            var pressed = this._createAppearance(item, true);\n                            if (pressed) {\n                                this._addAppearance(item._dictionary, pressed, 'D');\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfButtonField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if (this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics.drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfButtonField.prototype._createAppearance = function (widget, isPressed) {\n        if (isPressed === void 0) { isPressed = false; }\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (isPressed) {\n            this._drawPressedButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n        }\n        else {\n            this._drawButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n        }\n        return template;\n    };\n    PdfButtonField.prototype._drawButton = function (g, parameter, text, font, format) {\n        this._drawRectangularControl(g, parameter);\n        var rectangle = parameter.bounds;\n        if ((g._page &&\n            typeof g._page.rotation !== 'undefined' &&\n            g._page.rotation !== PdfRotationAngle.angle0) ||\n            parameter.rotationAngle > 0) {\n            var state = g.save();\n            if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                    g.translateTransform(g._size[1], 0);\n                    g.rotateTransform(90);\n                    var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                    var x = rectangle[1];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                    g.translateTransform(0, g._size[0]);\n                    g.rotateTransform(270);\n                    var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n            }\n            if (parameter.rotationAngle) {\n                if (parameter.rotationAngle === 90) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(0, g._size[1]);\n                        g.rotateTransform(-90);\n                        var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else {\n                        if (rectangle[2] > rectangle[3]) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                        }\n                        else {\n                            var z = rectangle[0];\n                            rectangle[0] = -(rectangle[1] + rectangle[3]);\n                            rectangle[1] = z;\n                            var height = rectangle[3];\n                            rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                            rectangle[2] = height;\n                            g.rotateTransform(-90);\n                        }\n                    }\n                }\n                else if (parameter.rotationAngle === 270) {\n                    g.translateTransform(g._size[0], 0);\n                    g.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = g._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n            }\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            g.restore(state);\n        }\n        else {\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        }\n    };\n    PdfButtonField.prototype._drawPressedButton = function (g, parameter, text, font, format) {\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                break;\n            default:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                break;\n        }\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        var rectangle = [parameter.borderWidth,\n            parameter.borderWidth,\n            parameter.bounds[2] - parameter.borderWidth,\n            parameter.bounds[3] - parameter.borderWidth];\n        g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                break;\n            default:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    return PdfButtonField;\n}(PdfField));\nexport { PdfButtonField };\n/**\n * `PdfCheckBoxField` class represents the check box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new check box field\n * let field: PdfCheckBoxField = new PdfCheckBoxField('CheckBox1', {x: 100, y: 40, width: 20, height: 20}, page);\n * // Sets the checked flag as true.\n * field.checked = true;\n * // Sets the tool tip value\n * field.toolTip = 'Checked';\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCheckBoxField = /** @class */ (function (_super) {\n    __extends(PdfCheckBoxField, _super);\n    function PdfCheckBoxField(name, bounds, page) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing check box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfCheckBoxField} Check box field.\n     */\n    PdfCheckBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfCheckBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        else {\n            var item = PdfStateItem._load(dictionary, crossReference, field);\n            item._isLoaded = true;\n            item._ref = reference;\n            field._parsedItems.set(0, item);\n        }\n        return field;\n    };\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfStateItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the check box field\n     * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n     * // Gets the first list item.\n     * let item: PdfStateItem = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCheckBoxField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfStateItem._load(dictionary, this._crossReference, this);\n                    item._isLoaded = true;\n                    item._ref = ref;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    Object.defineProperty(PdfCheckBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not.\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: Boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._kidsCount > 0) ? this.itemAt(this._defaultIndex).checked : _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag indicating whether the field is checked or not.\n         *\n         * @param {boolean} value Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the flag indicating whether the field is checked or not.\n         * field.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                if (this._kidsCount > 0) {\n                    this.itemAt(this._defaultIndex).checked = value;\n                }\n                if (value) {\n                    if (this._isLoaded) {\n                        var entry = _getItemValue((this._kidsCount > 0) ?\n                            this.itemAt(this._defaultIndex)._dictionary : this._dictionary);\n                        this._dictionary.update('V', _PdfName.get(entry));\n                        this._dictionary.update('AS', _PdfName.get(entry));\n                    }\n                    else {\n                        this._dictionary.update('V', _PdfName.get('Yes'));\n                        this._dictionary.update('AS', _PdfName.get('Yes'));\n                    }\n                }\n                else {\n                    if (this._dictionary.has('V')) {\n                        delete this._dictionary._map.V;\n                    }\n                    if (this._dictionary.has('AS')) {\n                        delete this._dictionary._map.AS;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a check box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the text alignment from check box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a check box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the check box field at index 0\n         * let checkBox1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * checkBox1.backColor = [255, 0, 0];\n         * // Access the check box field at index 1\n         * let checkBox2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * checkBox2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(true);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n            if (this._isLoaded) {\n                this._setAppearance = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCheckBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._createItem(bounds);\n    };\n    PdfCheckBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfStateItem();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget.style = PdfCheckBoxStyle.check;\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        this._addToKid(widget);\n    };\n    PdfCheckBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (this._isLoaded) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item) {\n                        if (!this._checkFieldFlag(item._dictionary)) {\n                            if (isFlatten) {\n                                var template = void 0;\n                                var state = item.checked ?\n                                    _PdfCheckFieldState.checked :\n                                    _PdfCheckFieldState.unchecked;\n                                if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                    template = this._createAppearance(item, state);\n                                }\n                                else {\n                                    template = _getStateTemplate(state, item);\n                                }\n                                this._drawTemplate(template, item._getPage(), item.bounds);\n                            }\n                            else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                                item._postProcess(item.checked ? 'Yes' : 'Off');\n                                this._drawAppearance(item);\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.checked ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                if (item) {\n                    var state = item.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                    item._postProcess(item.checked ? 'Yes' : 'Off');\n                    if (isFlatten) {\n                        var template = this._createAppearance(item, state);\n                        this._drawTemplate(template, item._getPage(), item.bounds);\n                    }\n                    else {\n                        this._drawAppearance(item);\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfCheckBoxField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        this._drawCheckBox(graphics, parameter, _styleToString(widget._style), state);\n        return template;\n    };\n    PdfCheckBoxField.prototype._drawAppearance = function (item) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, 'Yes', 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, 'Yes', 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        normalDictionary.update('Yes', normalCheckedReference);\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        pressedDictionary.update('Yes', pressCheckedReference);\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfCheckBoxField;\n}(PdfField));\nexport { PdfCheckBoxField };\n/**\n * `PdfRadioButtonListField` class represents the radio button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListField = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListField, _super);\n    function PdfRadioButtonListField(page, name) {\n        var _this = _super.call(this) || this;\n        _this._selectedIndex = -1;\n        if (page && name) {\n            _this._initialize(page, name);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing radio button list field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfRadioButtonListField} Radio button list field.\n     */\n    PdfRadioButtonListField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfRadioButtonListField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not (Read only).\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var check = false;\n            if (this._kidsCount > 0) {\n                check = this.itemAt(this._defaultIndex).checked;\n            }\n            return check;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index.\n         *\n         * @returns {number} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the selected index.\n         * let index: number = field.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && this._selectedIndex === -1) {\n                this._selectedIndex = this._obtainSelectedIndex();\n            }\n            return this._selectedIndex;\n        },\n        /**\n         * Sets the selected item index.\n         *\n         * @param {number} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Create and add first item\n         * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n         * // Create and add second item\n         * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n         * field.add(second);\n         * // Sets selected index of the radio button list field\n         * field.selectedIndex = 0;\n         * // Add the field into PDF form\n         * form.add(field);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.selectedIndex !== value) {\n                this._selectedIndex = value;\n                for (var i = 0; i < this._kidsCount; i++) {\n                    var item = this.itemAt(i);\n                    if (i === value) {\n                        item._dictionary.update('AS', _PdfName.get(item.value));\n                        var name_5 = _PdfName.get(item.value);\n                        this._dictionary.update('V', name_5);\n                        this._dictionary.update('DV', name_5);\n                    }\n                    else {\n                        item._dictionary.update('AS', _PdfName.get('Off'));\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(!this._isLoaded);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfRadioButtonListItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the radio button list field\n     * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n     * // Gets the first list item.\n     * let item: PdfRadioButtonListField = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfRadioButtonListItem._load(dictionary, this._crossReference, this);\n                    item._ref = ref;\n                    item._index = index;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    PdfRadioButtonListField.prototype.add = function (value, bounds) {\n        if (value instanceof PdfRadioButtonListItem) {\n            value._field = this;\n            value._dictionary.update('Parent', this._ref);\n            value._setField(this);\n            return this._kidsCount;\n        }\n        else {\n            return new PdfRadioButtonListItem(value, bounds, this);\n        }\n    };\n    /**\n     * Remove the radio button list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            var page = item._getPage();\n            if (page) {\n                page._removeAnnotation(item._ref);\n            }\n            this._kids.splice(index, 1);\n            this._dictionary.set('Kids', this._kids);\n            this._dictionary._updated = true;\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_2 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_2.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_2.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_2;\n            }\n            if (this._dictionary.has('Opt')) {\n                var options = this._dictionary.getArray('Opt');\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified radio button list field item.\n     *\n     * @param {PdfRadioButtonListItem} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._initialize = function (page, name) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._fieldFlags |= _FieldFlag.radio;\n    };\n    PdfRadioButtonListField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    if (options[Number.parseInt(i.toString(), 10)]) {\n                        this.itemAt(i)._optionValue = options[Number.parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._obtainSelectedIndex = function () {\n        var index = -1;\n        for (var i = 0; i < this._kidsCount; ++i) {\n            var item = this.itemAt(i);\n            if (item) {\n                var checkName = _getInheritableProperty(item._dictionary, 'V', false, true, 'Parent');\n                if (checkName && item._dictionary.has('AS')) {\n                    var asName = item._dictionary.get('AS');\n                    if (asName && asName.name.toLowerCase() !== 'off') {\n                        if (checkName instanceof _PdfName && checkName.name.toLowerCase() !== 'off') {\n                            if (asName.name === checkName.name || item._optionValue === checkName.name) {\n                                index = i;\n                                break;\n                            }\n                        }\n                        else if (typeof checkName === 'string' && checkName.toLowerCase() !== 'off') {\n                            if (asName.name === checkName || item._optionValue === checkName) {\n                                index = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfRadioButtonListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (this._isLoaded) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        if (isFlatten) {\n                            var template = void 0;\n                            var state = this.selectedIndex === i ?\n                                _PdfCheckFieldState.checked :\n                                _PdfCheckFieldState.unchecked;\n                            if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                template = this._createAppearance(item, state);\n                            }\n                            else {\n                                template = _getStateTemplate(state, item);\n                            }\n                            this._drawTemplate(template, item._getPage(), item.bounds);\n                        }\n                        else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                            item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                            this._drawAppearance(item);\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.selectedIndex !== -1 ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                var state = this.selectedIndex === i ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                item._dictionary.update('AS', _PdfName.get(this.selectedIndex === i ? item.value : 'Off'));\n                if (isFlatten) {\n                    var template = this._createAppearance(item, state);\n                    this._drawTemplate(template, item._getPage(), item.bounds);\n                }\n                else {\n                    item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                    this._drawAppearance(item);\n                }\n                item._dictionary._updated = !isFlatten;\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfRadioButtonListField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        this._drawRadioButton(graphics, parameter, _styleToString(widget.style), state);\n        return template;\n    };\n    PdfRadioButtonListField.prototype._drawAppearance = function (item) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, item.value, 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, item.value, 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        normalDictionary.update(item.value, normalCheckedReference);\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        pressedDictionary.update(item.value, pressCheckedReference);\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfRadioButtonListField;\n}(PdfField));\nexport { PdfRadioButtonListField };\n/**\n * Represents the base class for list box and combo box fields.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Access the combo box field\n * let comboBoxField: PdfListField = form.fieldAt(0) as PdfListField;\n * // Gets the count of the loaded combo box field items.\n * let comboItemsCount: number = comboBoxField.itemsCount;\n * // Access the list box field\n * let listBoxField: PdfListField = form.fieldAt(1) as PdfListField;\n * // Gets the count of the loaded list box field items.\n * let ListItemsCount: number = listBoxField.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListField = /** @class */ (function (_super) {\n    __extends(PdfListField, _super);\n    function PdfListField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfListField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the count of the loaded combo box field items.\n         * let comboItemsCount: number = comboBoxField.itemsCount;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the count of the loaded list box field items.\n         * let ListItemsCount: number = listBoxField.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._options.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the bounds of combo box field.\n         * let comboBoxBounds: {x: number, y: number, width: number, height: number} = comboBoxField.bounds;\n         * // Access the combo box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the bounds of list box field.\n         * let listBoxBounds: {x: number, y: number, width: number, height: number} = listBoxField.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (value) {\n                return value;\n            }\n            else if (this._bounds) {\n                return this._bounds;\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the bounds of combo box field.\n         * comboBoxField.bounds = {x: 10, y: 10, width: 100, height: 30};\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Sets the bounds of list box field.\n         * listBoxField.bounds = {x: 10, y: 50, width: 100, height: 30};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                if (widget) {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n                else {\n                    this._bounds = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index or indexes.\n         *\n         * @returns {number | number[]} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxfield: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the selected item index or indexes from combo box field.\n         * let comboBoxIndex: number = comboBoxfield.selectedIndex;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the selected item index or indexes from list box field.\n         * let listBoxIndex: number = listBoxField.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = this._dictionary.get('I');\n            if (typeof value === 'undefined') {\n                return [];\n            }\n            else {\n                if (value.length === 1) {\n                    return value[0];\n                }\n                else {\n                    return value;\n                }\n            }\n        },\n        /**\n         * Sets the selected item index or indexes.\n         *\n         * @param {number | number[]} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            var length = this._options.length;\n            if (typeof value === 'number') {\n                this._checkIndex(value, length);\n                this._dictionary.update('I', [value]);\n                this._dictionary.update('V', [this._options[Number.parseInt(value.toString(), 10)][0]]);\n            }\n            else {\n                var values_1 = [];\n                value.forEach(function (entry) {\n                    _this._checkIndex(entry, length);\n                    values_1.push(_this._options[Number.parseInt(entry.toString(), 10)][0]);\n                });\n                this._dictionary.update('I', value);\n                this._dictionary.update('V', values_1);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedValue\", {\n        /**\n         * Gets the selected item value or values.\n         *\n         * @returns {string | string[]} Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Gets the selected item value or values from list box field.\n         * if (listBoxField.multiSelect) {\n         *     let listBoxValues: string[]; = listBoxField.selectedValue;\n         * } else {\n         *    let listBoxValues: string = listBoxField.selectedValue;\n         * }\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var _this = this;\n            var values = [];\n            if (this._dictionary.has('V')) {\n                var value = this._dictionary.getArray('V'); // eslint-disable-line\n                if (typeof value !== 'undefined') {\n                    if (Array.isArray(value)) {\n                        value.forEach(function (element) {\n                            values.push(element);\n                        });\n                    }\n                    else if (typeof value === 'string') {\n                        values.push(value);\n                    }\n                }\n            }\n            if (values.length === 0 && this._dictionary.has('I')) {\n                var value = this._dictionary.get('I');\n                if (value && value.length > 0) {\n                    value.forEach(function (index) {\n                        values.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                    });\n                }\n            }\n            if (values.length === 1) {\n                return values[0];\n            }\n            else {\n                return values;\n            }\n        },\n        /**\n         * Sets the selected item value or values.\n         *\n         * @param {string | string[]} value Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Sets the selected values\n         * listField.selectedValue = ['English', 'German'];\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected value\n         * comboField.selectedValue = ['French'];\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            if (typeof value === 'string') {\n                var index = this._tryGetIndex(value);\n                if (index !== -1) {\n                    this._dictionary.update('I', [index]);\n                    this._dictionary.update('V', [value]);\n                }\n            }\n            else {\n                var values_2 = [];\n                var indices_1 = [];\n                value.forEach(function (entry) {\n                    var index = _this._tryGetIndex(entry);\n                    if (index !== -1) {\n                        indices_1.push(index);\n                        values_2.push(entry);\n                    }\n                });\n                if (values_2.length > 0) {\n                    this._dictionary.update('I', indices_1);\n                    this._dictionary.update('V', values_2);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"multiSelect\", {\n        /**\n         * Gets the flag indicates whether the list field allows multiple selections.\n         *\n         * @returns {boolean} Value indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box allows multiple selections.\n         * let comboBoxFlag: Boolean = comboBoxField.multiSelect;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box allows multiple selections.\n         * let listBoxFlag: boolean = listBoxField.multiSelect;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.multiSelect) !== 0;\n            }\n            else {\n                return this._multiSelect;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field allows multiple selections.\n         *\n         * @param {boolean} value Indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.multiSelect !== value) {\n                this._multiSelect = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.multiSelect;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.multiSelect;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"editable\", {\n        /**\n         * Gets the flag indicates whether the list field is editable.\n         *\n         * @returns {boolean} Value indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box is editable.\n         * let comboBoxFlag: Boolean = comboBoxField.editable;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box is editable.\n         * let listBoxFlag: boolean = listBoxField.editable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.edit) !== 0;\n            }\n            else {\n                return this._editable;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field is editable.\n         *\n         * @param {boolean} value Indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box is editable.\n         * listField.editable = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box is editable.\n         * comboField.editable = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._editable !== value) {\n                this._editable = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.edit;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.edit;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a combo box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the text alignment from combo box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a combo box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the list field at index 0\n         * let list1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * list1.backColor = [255, 0, 0];\n         * // Access the list field at index 1\n         * let list2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * list2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"_options\", {\n        get: function () {\n            if (!this._optionArray) {\n                if (this._dictionary.has('Opt')) {\n                    this._optionArray = this._dictionary.getArray('Opt');\n                }\n                else {\n                    this._optionArray = [];\n                    this._dictionary.update('Opt', this._optionArray);\n                }\n            }\n            return this._optionArray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfListFieldItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBox: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Gets the first list item.\n     * let listBoxItem: PdfListFieldItem = listBox.itemAt(0);\n     * // Access the combo box field\n     * let comboBox: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Gets the first list item.\n     * let comboBoxItem: PdfListFieldItem = comboBox.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.itemAt = function (index) {\n        var item;\n        if (index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        else {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else if (this._kidsCount > 0 && this._kids && this._kids.length > 0) {\n                var dictionary = void 0;\n                var reference = void 0;\n                if (this._kidsCount === 1) {\n                    reference = this._kids[0];\n                }\n                else {\n                    reference = this._kids[Number.parseInt(index.toString(), 10)];\n                }\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Add list item.\n     *\n     * @param {PdfListFieldItem} item Item to add.\n     * @returns {number} Index of the field item.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Create a new list box field\n     * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n     * // Add list items to the field.\n     * listField.addItem(new PdfListFieldItem('English', 'English'));\n     * listField.addItem(new PdfListFieldItem('French', 'French'));\n     * listField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * listField.selectedIndex = 2;\n     * // Sets the flag indicates whether the list box allows multiple selections.\n     * listField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(listField);\n     * // Create a new combo box field\n     * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n     * // Add list items to the field.\n     * comboField.addItem(new PdfListFieldItem('English', 'English'));\n     * comboField.addItem(new PdfListFieldItem('French', 'French'));\n     * comboField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * comboField.selectedIndex = 2;\n     * // Sets the flag indicates whether the combo box allows multiple selections.\n     * comboField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(comboField);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.addItem = function (item) {\n        this._addToOptions(item, this);\n        return this._listValues.length - 1;\n    };\n    /**\n     * Remove the list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItemAt(1);\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_3 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_3.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_3.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_3;\n            }\n            if (this._dictionary.has('Opt')) {\n                var options = this._options;\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                    this._optionArray = options;\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the list item.\n     *\n     * @param {PdfListFieldItem} item Item to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItem(listBoxField.itemAt(1));\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItem(comboBoxField.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItem = function (item) {\n        if (item && item.text) {\n            var index = void 0;\n            for (var i = 0; i < this.itemsCount; i++) {\n                var fieldItem = this.itemAt(i);\n                if (fieldItem && item === fieldItem && fieldItem.text === item.text) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfListField.prototype._initialize = function (page, name, bounds) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Ch'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._listValues = [];\n        this._kids = [];\n        this.bounds = bounds;\n        this._addEmptyWidget();\n    };\n    PdfListField.prototype._obtainFont = function (item) {\n        var fontFamily = '';\n        var fontSize = 1;\n        if (item && (item._dictionary.has('DS') || item._dictionary.has('DA'))) {\n            if (item._dictionary.has('DS')) {\n                var collection = item._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') === -1 && collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_6 = entry[1];\n                        var split = name_6.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 2);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = item._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                    var height = 0.0;\n                    if (fontSize === 0) {\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, height);\n                        if (font !== null) {\n                            height = this._getFontHeight(font._fontFamily);\n                            if (Number.isNaN(height) || height === 0) {\n                                height = 12;\n                            }\n                            font._size = height;\n                            fontSize = height;\n                        }\n                    }\n                }\n            }\n            fontFamily = fontFamily.trim();\n            switch (fontFamily) {\n                case 'Helv':\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Courier':\n                case 'Cour':\n                    this._font = new PdfStandardFont(PdfFontFamily.courier, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Symb':\n                    this._font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'TiRo':\n                    this._font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'ZaDb':\n                    this._font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, PdfFontStyle.regular);\n                    break;\n                default:\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n            }\n        }\n        return this._font;\n    };\n    PdfListField.prototype._obtainSelectedValue = function () {\n        var _this = this;\n        var result = [];\n        if (this._dictionary.has('V')) {\n            var primitive = this._dictionary.get('V'); // eslint-disable-line\n            var array = this._dictionary.getArray('V'); // eslint-disable-line\n            if (primitive !== null && typeof primitive !== 'undefined') {\n                if (typeof primitive === 'string') {\n                    result.push(primitive);\n                }\n                else if (Array.isArray(primitive)) {\n                    array.forEach(function (element) {\n                        result.push(element);\n                    });\n                }\n            }\n        }\n        else {\n            var selectedIndexes = this._dictionary.get('I');\n            if (selectedIndexes !== null &&\n                typeof selectedIndexes !== 'undefined' &&\n                selectedIndexes.length > 0 &&\n                selectedIndexes[0] > -1 &&\n                this._options &&\n                this._options.length > 0) {\n                selectedIndexes.forEach(function (index) {\n                    result.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                });\n            }\n        }\n        return result;\n    };\n    PdfListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._kids && this._kids.length > 0) {\n                if (count > 1) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item && !this._checkFieldFlag(item._dictionary)) {\n                            var template = this._createAppearance(item);\n                            if (isFlatten) {\n                                var page = item._getPage();\n                                if (page) {\n                                    this._drawTemplate(template, page, item.bounds);\n                                }\n                            }\n                            else {\n                                this._addAppearance(item._dictionary, template, 'N');\n                            }\n                            item._dictionary._updated = !isFlatten;\n                        }\n                    }\n                }\n                else {\n                    var item = this.itemAt(0);\n                    var template = this._createAppearance();\n                    if (isFlatten) {\n                        var page = this.page;\n                        if (page) {\n                            this._drawTemplate(template, page, this.bounds);\n                        }\n                    }\n                    else {\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n            else if (this._dictionary) {\n                var template = this._createAppearance();\n                if (isFlatten) {\n                    var page = this.page;\n                    if (page) {\n                        this._drawTemplate(template, page, this.bounds);\n                    }\n                }\n                else {\n                    this._addAppearance(this._dictionary, template, 'N');\n                }\n            }\n            this._dictionary._updated = !isFlatten;\n        }\n    };\n    PdfListField.prototype._tryGetIndex = function (value) {\n        var index = -1;\n        if (this._options && this._options.length > 0) {\n            for (var i = 0; i < this._options.length; i++) {\n                if (value === this._options[Number.parseInt(i.toString(), 10)][0]) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    PdfListField.prototype._addEmptyWidget = function () {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, this.bounds, this);\n        this._addToKid(widget);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n    };\n    return PdfListField;\n}(PdfField));\nexport { PdfListField };\n/**\n * `PdfComboBoxField` class represents the combo box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new combo box field\n * let field: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the combo box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComboBoxField = /** @class */ (function (_super) {\n    __extends(PdfComboBoxField, _super);\n    function PdfComboBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n            _this._fieldFlags |= _FieldFlag.combo;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfComboBoxField.prototype, \"_isAutoFontSize\", {\n        /**\n         * Gets the boolean flag indicates whether the combo box field is auto size.\n         *\n         * @private\n         * @returns {boolean} Returns the boolean value to check auto size.\n         */\n        get: function () {\n            var isAutoFontSize = false;\n            if (this._isLoaded && this._form) {\n                var acroForm = this._form._dictionary;\n                if (acroForm && acroForm.has('DA')) {\n                    var fontString = acroForm.get('DA');\n                    if (fontString) {\n                        var defaultAppearance = new _PdfDefaultAppearance(fontString);\n                        if (defaultAppearance.fontSize === 0) {\n                            if (this._kids && this._kids.length > 0) {\n                                var fontSize = false;\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance && defaultAppearance.fontSize > 0) {\n                                            fontSize = true;\n                                        }\n                                    }\n                                }\n                                if (!fontSize) {\n                                    for (var i = 0; i < this._kids.length; i++) {\n                                        var dictionary = void 0;\n                                        var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                                        if (reference && reference instanceof _PdfReference) {\n                                            dictionary = this._crossReference._fetch(reference);\n                                        }\n                                        if (dictionary) {\n                                            if (dictionary.has('DA')) {\n                                                fontString = dictionary.get('DA');\n                                                var height = 0;\n                                                if (fontString) {\n                                                    defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                                    if (defaultAppearance) {\n                                                        height = defaultAppearance.fontSize;\n                                                    }\n                                                }\n                                                if (height === 0) {\n                                                    isAutoFontSize = true;\n                                                }\n                                            }\n                                            else {\n                                                isAutoFontSize = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    var height = 0;\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance) {\n                                            height = defaultAppearance.fontSize;\n                                        }\n                                    }\n                                    if (height === 0) {\n                                        isAutoFontSize = true;\n                                    }\n                                }\n                                else {\n                                    isAutoFontSize = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isAutoFontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Parse an existing combo box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfComboBoxField} Combo box field.\n     */\n    PdfComboBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfComboBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        var options = field._dictionary.getArray('Opt');\n        if (options !== null && typeof options !== 'undefined') {\n            field._listValues = new Array(options.length);\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfComboBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    var text = options[Number.parseInt(i.toString(), 10)][1];\n                    if (text) {\n                        this.itemAt(i)._text = text ? text : '';\n                    }\n                }\n            }\n        }\n    };\n    PdfComboBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            if (item.borderColor) {\n                parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = item.rotate;\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (bounds) {\n                if (this._isLoaded &&\n                    this.page &&\n                    typeof this.page.rotation !== 'undefined' &&\n                    this.page.rotation !== PdfRotationAngle.angle0) {\n                    parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n                }\n                else {\n                    parameter.bounds = [0, 0, bounds.width, bounds.height];\n                }\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            if (this.borderColor) {\n                parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        if (parameter.bounds === null || typeof parameter.bounds === 'undefined') {\n            parameter.bounds = [0, 0, 0, 0];\n        }\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = void 0;\n            if (item) {\n                font = this._obtainFont(item);\n            }\n            if (typeof font === 'undefined' || font === null) {\n                font = this._appearanceFont;\n            }\n            this._drawComboBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = new PdfStandardFont(PdfFontFamily.timesRoman, this._getFontHeight(PdfFontFamily.helvetica));\n            }\n            this._drawComboBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfComboBoxField.prototype._drawComboBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var selectedIndexes = this._dictionary.get('I');\n        var i = -1;\n        if (selectedIndexes && selectedIndexes.length > 0) {\n            i = selectedIndexes[0];\n        }\n        if (i >= 0 && i < options.length) {\n            var item = options[Number.parseInt(i.toString(), 10)]; // eslint-disable-line \n            var location_1 = [0, 0];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_1[0] = 2 * doubleBorderWidth;\n                location_1[1] = 2 * borderWidth;\n            }\n            else {\n                location_1[0] = doubleBorderWidth + defaultPadding;\n                location_1[1] = 1 * borderWidth + (defaultPadding - 1);\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            if (parameter.rotationAngle === 0) {\n                var x = rect[0] + borderWidth;\n                if (padding) {\n                    x += borderWidth;\n                    width -= doubleBorderWidth;\n                }\n                brush = new PdfBrush([153, 193, 218]);\n                graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                brush = new PdfBrush([0, 0, 0]);\n            }\n            var value = void 0;\n            if (item && Array.isArray(item)) {\n                value = item[1] ? item[1] : item[0];\n            }\n            else {\n                value = item;\n            }\n            if (value) {\n                var itemTextBound = [location_1[0], location_1[1], width - location_1[0], rect[3]];\n                if (parameter.rotationAngle > 0) {\n                    var state = graphics.save();\n                    if (parameter.rotationAngle === 90) {\n                        graphics.translateTransform(0, graphics._size[1]);\n                        graphics.rotateTransform(-90);\n                        var x_1 = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x_1, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        graphics.translateTransform(graphics._size[0], 0);\n                        graphics.rotateTransform(-270);\n                        var x_2 = rectangle[1];\n                        var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        rectangle = [x_2, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                        var x_3 = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x_3, y, rectangle[2], rectangle[3]];\n                    }\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                    graphics.restore(state);\n                }\n                else {\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                }\n            }\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfComboBoxField.prototype._getFontHeight = function (fontFamily) {\n        var values = this._dictionary.get('I');\n        var s;\n        var itemFont;\n        var format;\n        var options;\n        var bounds;\n        var borderWidth = this.border.width;\n        if (this._isLoaded) {\n            itemFont = new PdfStandardFont(fontFamily, 12);\n            format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            options = this._dictionary.getArray('Opt');\n            bounds = this.bounds;\n            var widths_1 = [];\n            if (values && values.length > 0) {\n                values.forEach(function (entry) {\n                    widths_1.push(itemFont.measureString(options[Number.parseInt(entry.toString(), 10)][1], [0, 0], format, 0, 0)[0]);\n                });\n            }\n            else if (options.length > 0) {\n                var max = itemFont.measureString(options[0][1], [0, 0], format, 0, 0)[0];\n                for (var i = 1; i < options.length; ++i) {\n                    var width = itemFont.measureString(options[Number.parseInt(i.toString(), 10)][1], [0, 0], format, 0, 0)[0];\n                    max = Math.max(max, width);\n                    widths_1.push(max);\n                }\n            }\n            s = (widths_1.length > 0) ? ((12 * (bounds.width - 4 * borderWidth)) / ((widths_1.sort())[widths_1.length - 1])) : 12;\n        }\n        else {\n            s = 0;\n            if (values && values.length > 0) {\n                itemFont = new PdfStandardFont(fontFamily, 12);\n                format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                options = this._dictionary.getArray('Opt');\n                var width = itemFont.measureString(options[values[0]][1], [0, 0], format, 0, 0)[0];\n                bounds = this.bounds;\n                if (width) {\n                    s = (12 * (bounds.width - 4 * borderWidth)) / width;\n                }\n                else {\n                    s = 12;\n                }\n            }\n            else {\n                return s;\n            }\n        }\n        var fontSize = 0;\n        if (values && values.length > 0) {\n            if (s !== 12) {\n                itemFont = new PdfStandardFont(fontFamily, s);\n                var text = options[values[0]][1];\n                var textSize = itemFont.measureString(text, [0, 0], format, 0, 0);\n                if (textSize[0] > bounds.width || textSize[1] > bounds.height) {\n                    var width = bounds.width - 4 * borderWidth;\n                    var h = bounds.height - 4 * borderWidth;\n                    var min = 0.248;\n                    for (var i = 1; i <= bounds.height; i++) {\n                        itemFont._size = i;\n                        var size = itemFont.measureString(text, [0, 0], format, 0, 0);\n                        if (size[0] > bounds.width || size[1] > h) {\n                            fontSize = i;\n                            do {\n                                fontSize = fontSize - 0.001;\n                                itemFont._size = fontSize;\n                                var textWidth = itemFont.getLineWidth(text, format);\n                                if (fontSize < min) {\n                                    itemFont._size = min;\n                                    break;\n                                }\n                                size = itemFont.measureString(text, [0, 0], format, 0, 0);\n                                if (textWidth < width && size[1] < h) {\n                                    itemFont._size = fontSize;\n                                    break;\n                                }\n                            } while (fontSize > min);\n                            s = fontSize;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else if (s > 12) {\n            s = 12;\n        }\n        return s;\n    };\n    return PdfComboBoxField;\n}(PdfListField));\nexport { PdfComboBoxField };\n/**\n * `PdfListBoxField` class represents the list box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListBoxField = /** @class */ (function (_super) {\n    __extends(PdfListBoxField, _super);\n    function PdfListBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing list box field of the PDF document.\n     *\n     * @private\n     * @param {number} form maximum length.\n     * @param {_PdfDictionary} dictionary maximum length.\n     * @param {_PdfCrossReference} crossReference maximum length.\n     * @param {_PdfReference} reference maximum length.\n     * @returns {PdfListBoxField} List box field.\n     */\n    PdfListBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfListBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        var options = field._dictionary.getArray('Opt');\n        if (options !== null && typeof options !== 'undefined') {\n            field._listValues = new Array(options.length);\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfListBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var index = this._dictionary.get('I');\n                for (var i = 0; i < options.length; i++) {\n                    if (typeof index !== 'undefined' && index !== null) {\n                        this._listValues[Number.parseInt(i.toString(), 10)] = options[Number.parseInt(i.toString(), 10)][1];\n                        if (i === index) {\n                            this.itemAt(i)._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                            this._selectedIndex = i;\n                        }\n                        else {\n                            this.itemAt(i)._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                        }\n                    }\n                    else {\n                        this.itemAt(i)._text = '';\n                    }\n                }\n            }\n        }\n    };\n    PdfListBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            if (item.borderColor) {\n                parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = item.rotate;\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (this._isLoaded &&\n                this.page &&\n                typeof this.page.rotation !== 'undefined' &&\n                this.page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            if (this.borderColor) {\n                parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = this._obtainFont(item);\n            if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n                font = this._appearanceFont;\n            }\n            this._drawListBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = this._defaultItemFont;\n            }\n            this._drawListBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfListBoxField.prototype._drawListBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var _loop_1 = function (index) {\n            var item = options[Number.parseInt(index.toString(), 10)];\n            var location_2 = [];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_2.push(2 * doubleBorderWidth);\n                location_2.push((index + 2) * borderWidth + font._metrics._getHeight() * index);\n            }\n            else {\n                location_2.push(doubleBorderWidth + defaultPadding);\n                location_2.push((index + 1) * borderWidth + font._metrics._getHeight() * index + (defaultPadding - 1));\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            var selected = false;\n            var selectedIndexes = this_1._dictionary.get('I');\n            if (selectedIndexes !== null && typeof selectedIndexes !== 'undefined' && selectedIndexes.length > 0) {\n                selectedIndexes.forEach(function (selectedIndex) {\n                    selected = selected || (selectedIndex === index);\n                });\n            }\n            if (parameter.rotationAngle === 0) {\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n            }\n            var value = item[1] ? item[1] : item[0];\n            var itemTextBound = [location_2[0], location_2[1], width - location_2[0], font._metrics._getHeight()];\n            if (parameter.rotationAngle > 0) {\n                var state = graphics.save();\n                if (parameter.rotationAngle === 90) {\n                    graphics.translateTransform(0, graphics._size[1]);\n                    graphics.rotateTransform(-90);\n                    var x = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 270) {\n                    graphics.translateTransform(graphics._size[0], 0);\n                    graphics.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                    var x = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                graphics.restore(state);\n            }\n            else {\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n            }\n        };\n        var this_1 = this;\n        for (var index = 0; index < options.length; ++index) {\n            _loop_1(index);\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfListBoxField.prototype._getFontHeight = function (fontFamily) {\n        var itemFont = new PdfStandardFont(fontFamily, 12, PdfFontStyle.regular);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var s = 0;\n        if (this._listValues.length > 0) {\n            var max = itemFont.measureString(this._listValues[0], [0, 0], format, 0, 0)[0];\n            for (var i = 1; i < this._listValues.length; ++i) {\n                var value = itemFont.measureString(this._listValues[Number.parseInt(i.toString(), 10)], [0, 0], format, 0, 0)[0];\n                max = (max > value) ? max : value;\n            }\n            s = ((12 * (this.bounds.width - 4 * this.border.width)) / max);\n            s = (s > 12) ? 12 : s;\n        }\n        return s;\n    };\n    return PdfListBoxField;\n}(PdfListField));\nexport { PdfListBoxField };\n/**\n * `PdfSignatureField` class represents the signature field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new signature field\n * let field: PdfSignatureField = new PdfSignatureField(page, 'Signature', {x: 10, y: 10, width: 100, height: 50});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSignatureField = /** @class */ (function (_super) {\n    __extends(PdfSignatureField, _super);\n    function PdfSignatureField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._isSigned = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfSignatureField.prototype, \"isSigned\", {\n        /**\n         * Gets the flag to indicate whether the field is signed or not.\n         *\n         * @returns {boolean} Returns true if the field is signed; otherwise, false.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the loaded signature field\n         * let field: PdfSignatureField = document.form.fieldAt(0) as PdfSignatureField;\n         * // Get the signed status of the field\n         * let isSigned: boolean = field.isSigned;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._isSigned) {\n                this._checkSigned();\n            }\n            return this._isSigned;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSignatureField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the signature field at index 0\n         * let field1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field1.backColor = [255, 0, 0];\n         * // Access the signature field at index 1\n         * let field2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * field2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSignatureField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfSignatureField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfSignatureField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Sig'));\n        this._dictionary.update('T', name);\n        this._defaultIndex = 0;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfSignatureField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', this._fontName + \" 8 Tf 0 0 0 rg\");\n        this._addToKid(widget);\n    };\n    PdfSignatureField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var needAppearance = this._setAppearance || this._form._setAppearance;\n        if (isFlatten || needAppearance) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary && (needAppearance || (isFlatten && !item._dictionary.has('AP')))) {\n                        var template = this._createAppearance(item, isFlatten);\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                }\n            }\n        }\n        if (isFlatten) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                var firstItemTemplate = void 0;\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary) {\n                        var page = item._getPage();\n                        if (page) {\n                            if (!firstItemTemplate && i === 0) {\n                                firstItemTemplate = this._getItemTemplate(item._dictionary);\n                            }\n                            this._flattenSignature(item._dictionary, page, item.bounds, firstItemTemplate);\n                        }\n                    }\n                }\n            }\n            else {\n                this._flattenSignature(this._dictionary, this.page, this.bounds);\n            }\n        }\n    };\n    PdfSignatureField.prototype._createAppearance = function (widget, isFlatten) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (isFlatten && backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderStyle = border.style;\n        parameter.borderWidth = border.width;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        graphics.save();\n        graphics._initializeCoordinates();\n        this._drawRectangularControl(graphics, parameter);\n        graphics.restore();\n        return template;\n    };\n    PdfSignatureField.prototype._flattenSignature = function (dictionary, page, bounds, signatureTemplate) {\n        var template;\n        if (dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference && appearanceStream) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    if (signatureTemplate) {\n                        template = signatureTemplate;\n                    }\n                    else {\n                        template = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (template && page) {\n                        var graphics = page.graphics;\n                        var state = graphics.save();\n                        if (page.rotation !== PdfRotationAngle.angle0) {\n                            graphics.drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n                        }\n                        else {\n                            graphics.drawTemplate(template, bounds);\n                        }\n                        graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else if (signatureTemplate && page) {\n            template = signatureTemplate;\n            var graphics = page.graphics;\n            var state = graphics.save();\n            if (page.rotation !== PdfRotationAngle.angle0) {\n                graphics.drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n            }\n            else {\n                graphics.drawTemplate(template, bounds);\n            }\n            graphics.restore(state);\n        }\n    };\n    PdfSignatureField.prototype._calculateTemplateBounds = function (bounds, page, template, graphics) {\n        var x = bounds.x;\n        var y = bounds.y;\n        if (page) {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                x = bounds.x;\n                y = -(page._size[1] - bounds.y - bounds.height);\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                x = -(page._size[0] - (bounds.x + template._size[0]));\n                y = -(page._size[1] - bounds.y - template._size[1]);\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                x = -(page._size[0] - bounds.x - bounds.width);\n                y = bounds.y;\n            }\n        }\n        return { x: x, y: y, width: bounds.width, height: bounds.height };\n    };\n    PdfSignatureField.prototype._obtainGraphicsRotation = function (matrix) {\n        var angle = Math.round(Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]) * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfSignatureField.prototype._getItemTemplate = function (dictionary) {\n        var template;\n        if (dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        return template;\n    };\n    PdfSignatureField.prototype._checkSigned = function () {\n        if (this._dictionary && this._dictionary.has('V')) {\n            var dictionary = this._dictionary.get('V');\n            if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.size > 0) {\n                this._isSigned = true;\n            }\n        }\n    };\n    return PdfSignatureField;\n}(PdfField));\nexport { PdfSignatureField };\nvar _PdfDefaultAppearance = /** @class */ (function () {\n    function _PdfDefaultAppearance(da) {\n        var color;\n        var fontName = '';\n        var fontSize = 0;\n        if (da && typeof da === 'string' && da !== '') {\n            var sliced = da.split(' ');\n            for (var i = 0; i < sliced.length; i++) {\n                switch (sliced[Number.parseInt(i.toString(), 10)]) {\n                    case 'g':\n                        color = [Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'rg':\n                        color = [Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]), Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'k':\n                        color = [Number.parseFloat(sliced[i - 4]), Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]),\n                            Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'Tf':\n                        fontSize = Number.parseFloat(sliced[i - 1]);\n                        fontName = sliced[i - 2].substring(1);\n                        if (fontName.includes('#2C')) {\n                            fontName.replace('#2C', ',');\n                        }\n                        break;\n                }\n            }\n        }\n        this.fontName = fontName;\n        this.fontSize = fontSize;\n        this.color = (typeof color !== 'undefined') ? _parseColor(color) : [0, 0, 0];\n    }\n    _PdfDefaultAppearance.prototype.toString = function () {\n        var color = [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n            Number.parseFloat((this.color[1] / 255).toFixed(3)),\n            Number.parseFloat((this.color[2] / 255).toFixed(3))];\n        return '/' +\n            this.fontName +\n            ' ' +\n            this.fontSize +\n            ' Tf ' +\n            color[0].toString() +\n            ' ' +\n            color[1].toString() +\n            ' ' +\n            color[2].toString() +\n            ' rg';\n    };\n    return _PdfDefaultAppearance;\n}());\nexport { _PdfDefaultAppearance };\n","import { _PdfDictionary } from './../pdf-primitives';\nimport { PdfTemplate } from './../graphics/pdf-template';\n/**\n * `PdfAppearance` class represents the appearance of the annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the appearance of the annotation\n * let appearance: PdfAppearance = annotation.appearance;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * appearance.normal.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAppearance = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfAppearance` class.\n     *\n     * @param {PdfAnnotation} annot - The annotation.\n     * @param {number[]} bounds - The bounds.\n     * @private\n     */\n    function PdfAppearance(annot, bounds) {\n        this._dictionary = new _PdfDictionary();\n        this._annotations = annot;\n        this._crossReference = annot._crossReference;\n        if (typeof bounds !== 'undefined') {\n            this._bounds = bounds;\n        }\n        this._initialize();\n    }\n    Object.defineProperty(PdfAppearance.prototype, \"normal\", {\n        /**\n         * Get the normal appearance of the annotation.\n         *\n         * @returns {PdfTemplate} Returns the normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._templateNormal && this._dictionary.has('AP')) {\n                this._templateNormal = this._dictionary.get('N');\n            }\n            return this._templateNormal;\n        },\n        /**\n         * Set the normal appearance of the annotation.\n         *\n         * @param {PdfTemplate} value The normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Add a new rubber stamp annotation to the page\n         * const annotation2: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 200, 100, 50);\n         * // Set the normal appearance of the annotation\n         * annotation2.appearance.normal = annotation.appearance.normal;\n         * // Add annotation to the page\n         * page.annotations.add(annotation2);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._templateNormal = value;\n                this._dictionary.set('N', this._templateNormal);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAppearance.prototype._initialize = function () {\n        this.normal = new PdfTemplate(this._bounds, this._crossReference);\n    };\n    return PdfAppearance;\n}());\nexport { PdfAppearance };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestination } from './../pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfFormFieldVisibility, _PdfCheckFieldState, PdfAnnotationFlag, PdfBorderStyle, PdfLineCaptionType, PdfLineEndingStyle, PdfLineIntent, PdfRotationAngle, PdfTextAlignment, PdfBorderEffectStyle, PdfMeasurementUnit, _PdfGraphicsUnit, PdfCircleMeasurementType, PdfRubberStampAnnotationIcon, PdfCheckBoxStyle, PdfTextMarkupAnnotationType, PdfPopupIcon, PdfAnnotationState, PdfAnnotationStateModel, PdfAttachmentIcon, PdfAnnotationIntent, _PdfAnnotationType, PdfDestinationMode, PdfBlendMode, PdfDashStyle, PdfLineCap } from './../enumerator';\nimport { _checkField, _removeDuplicateReference, _updateVisibility, _getPageIndex, _checkComment, _checkReview, _mapAnnotationStateModel, _mapAnnotationState, _decode, _setMatrix, _convertToColor, _findPage, _getItemValue, _areNotEqual, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _getUpdatedBounds, _mapBorderStyle, _mapLineEndingStyle, _reverseMapEndingStyle, _toRectangle, _mapBorderEffectStyle, _getStateTemplate, _mapMeasurementUnit, _mapGraphicsUnit, _stringToStyle, _styleToString, _mapMarkupAnnotationType, _reverseMarkupAnnotationType, _reverseMapAnnotationState, _reverseMapAnnotationStateModel, _mapPopupIcon, _mapRubberStampIcon, _mapAttachmentIcon, _mapAnnotationIntent, _reverseMapPdfFontStyle, _fromRectangle, _getNewGuidString, _getFontStyle, _mapFont, _checkInkPoints, _updateBounds } from './../utils';\nimport { PdfField, _PdfDefaultAppearance, PdfListBoxField, PdfComboBoxField } from './../form/field';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { _TextRenderingMode, PdfBrush, PdfPen, _PdfTransformationMatrix, _PdfUnitConvertor } from './../graphics/pdf-graphics';\nimport { _PdfPath } from './../graphics/pdf-path';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _PdfStream } from './../base-stream';\nimport { PdfAppearance } from './pdf-appearance';\nimport { PdfPopupAnnotationCollection } from './annotation-collection';\n/**\n * Represents the base class for annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation() {\n        this._isImported = false;\n        this._isLoaded = false;\n        this._setAppearance = false;\n        this._isExport = false;\n        this._opacity = 1;\n        this._isAllRotation = true;\n        this._flatten = false;\n        this._hasData = false;\n        this._popUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5);\n        this._authorBoldFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5, PdfFontStyle.bold);\n        this._lineCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n        this._isTransparentColor = false;\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"author\", {\n        /**\n         * Gets the author of the annotation.\n         *\n         * @returns {string} Author.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the author of the annotation.\n         * let author: string = annotation.author;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._author === 'undefined' && this._dictionary.has('Author')) {\n                var author = this._dictionary.get('Author');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            if (typeof this._author === 'undefined' && this._dictionary.has('T')) {\n                var author = this._dictionary.get('T');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            return this._author;\n        },\n        /**\n         * Sets the author of the annotation.\n         *\n         * @param {string} value Author.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the author of the annotation.\n         * annotation.author = ‘Syncfusion’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && typeof value === 'string' && value !== this.author) {\n                var hasKey = false;\n                if (this._dictionary.has('T')) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (this._dictionary.has('Author')) {\n                    this._dictionary.update('Author', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (!hasKey) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                }\n            }\n            if (!this._isLoaded && typeof value === 'string') {\n                this._dictionary.update('T', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"border\", {\n        /**\n         * Gets the border of the annotation.\n         *\n         * @returns {PdfAnnotationBorder} Annotation border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the border of the annotation.\n         * let border: PdfAnnotationBorder = annotation.border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._border === 'undefined') {\n                var value = new PdfAnnotationBorder();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('Border')) {\n                    var border = this._dictionary.getArray('Border');\n                    if (border && border.length >= 3) {\n                        value._hRadius = border[0];\n                        value._vRadius = border[1];\n                        value._width = border[2];\n                    }\n                }\n                if (this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            var width = border.get('W');\n                            if (typeof width !== 'undefined' && !Number.isNaN(width)) {\n                                value._width = width;\n                            }\n                        }\n                        if (border.has('S')) {\n                            var style = border.get('S');\n                            if (style) {\n                                switch (style.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            var dash = border.getArray('D');\n                            if (dash) {\n                                value._dash = dash;\n                            }\n                        }\n                    }\n                }\n                this._border = value;\n            }\n            return this._border;\n        },\n        /**\n         * Sets the border of the annotation.\n         *\n         * @param {PdfAnnotationBorder} value Border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF annotation\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.border;\n            var width;\n            if (!this._isLoaded || (typeof value.width !== 'undefined' && current.width !== value.width)) {\n                width = value.width;\n            }\n            var hRadius;\n            if (!this._isLoaded || (typeof value.hRadius !== 'undefined' && current.hRadius !== value.hRadius)) {\n                hRadius = value.hRadius;\n            }\n            var vRadius;\n            if (!this._isLoaded || (typeof value.vRadius !== 'undefined' && current.vRadius !== value.vRadius)) {\n                vRadius = value.vRadius;\n            }\n            var style;\n            if (!this._isLoaded || (typeof value.style !== 'undefined' && current.style !== value.style)) {\n                style = value.style;\n            }\n            var dash;\n            if (typeof value.dash !== 'undefined' && current.dash !== value.dash) {\n                dash = value.dash;\n            }\n            if (!this._isWidget && (this._dictionary.has('Border') || (width || vRadius || hRadius))) {\n                this._border._hRadius = typeof hRadius !== 'undefined' ? hRadius : current.hRadius;\n                this._border._vRadius = typeof vRadius !== 'undefined' ? vRadius : current.vRadius;\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._dictionary.update('Border', [this._border.hRadius, this._border.vRadius, this._border.width]);\n            }\n            if (this._dictionary.has('BS') || (width || style || dash)) {\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._border._style = typeof style !== 'undefined' ? style : current.style;\n                this._border._dash = typeof dash !== 'undefined' ? dash : current.dash;\n                var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                bs.update('Type', _PdfName.get('Border'));\n                bs.update('W', this._border.width);\n                bs.update('S', _mapBorderStyle(this._border.style));\n                if (typeof this._border.dash !== 'undefined') {\n                    bs.update('D', this._border.dash);\n                }\n                this._dictionary.update('BS', bs);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flags\", {\n        /**\n         * Gets the flags of the annotation.\n         *\n         * @returns {PdfAnnotationFlag} Annotation flag.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flags of the annotation.\n         * let flag: PdfAnnotationFlag = annotation.flags;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotFlags === 'undefined') {\n                this._annotFlags = PdfAnnotationFlag.default;\n                if (this._dictionary.has('F')) {\n                    this._annotFlags = this._dictionary.get('F');\n                }\n            }\n            return this._annotFlags;\n        },\n        /**\n         * Sets the flags of the annotation.\n         *\n         * @param {PdfAnnotationFlag} value flag value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flags of the annotation.\n         * annotation.flags = PdfAnnotationFlag.print;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this._annotFlags) {\n                this._annotFlags = value;\n                this._dictionary.update('F', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._dictionary.has('C')) {\n                this._color = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the color of the annotation.\n         * annotation.color = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * Gets the inner color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the inner color of the annotation.\n         * let innerColor: number[] = annotation.innerColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._innerColor === 'undefined' && this._dictionary.has('IC')) {\n                this._innerColor = _parseColor(this._dictionary.getArray('IC'));\n            }\n            return this._innerColor;\n        },\n        /**\n         * Sets the inner color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the inner color of the annotation.\n         * annotation.innerColor = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.innerColor;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._innerColor = value;\n                    this._dictionary.update('IC', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"creationDate\", {\n        /**\n         * Gets the creation date of the annotation.\n         *\n         * @returns {Date} Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the creation date of the annotation.\n         * let creationDate: Date = annotation.creationDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._creationDate === 'undefined' || this._creationDate === null) && this._dictionary.has('CreationDate')) {\n                var value = this._dictionary.get('CreationDate'); // eslint-disable-line\n                if (value !== null && typeof value === 'string') {\n                    this._creationDate = this._stringToDate(value);\n                }\n            }\n            return this._creationDate;\n        },\n        /**\n         * Sets the creation date of the annotation.\n         *\n         * @param {Date} value Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the creation date of the annotation.\n         * annotation.creationDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._creationDate = value;\n            this._dictionary.update('CreationDate', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"modifiedDate\", {\n        /**\n         * Gets the modification date of the annotation.\n         *\n         * @returns {Date} Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the modified date of the annotation.\n         * let modifiedDate: Date = annotation.modifiedDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._modifiedDate === 'undefined' || this._modifiedDate === null)) {\n                var value = void 0; // eslint-disable-line\n                if (this._dictionary.has('ModDate')) {\n                    value = this._dictionary.get('ModDate');\n                }\n                else if (this._dictionary.has('M')) {\n                    value = this._dictionary.get('M');\n                }\n                if (value !== null && typeof value === 'string') {\n                    this._modifiedDate = this._stringToDate(value);\n                }\n            }\n            return this._modifiedDate;\n        },\n        /**\n         * Sets the modification date of the annotation.\n         *\n         * @param {Date} value Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the modified date of the annotation.\n         * annotation.modifiedDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._modifiedDate = value;\n            this._dictionary.update('M', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds: {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {x: 10, y: 10, width: 150, height: 5};\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._isBounds = true;\n                if (this._isLoaded) {\n                    if ((value.x !== this.bounds.x) || (value.y !== this.bounds.y) ||\n                        (value.width !== this.bounds.width) || (value.height !== this.bounds.height)) {\n                        var size = this._page.size;\n                        if (size) {\n                            var y = size[1] - (value.y + value.height);\n                            var height = y + value.height;\n                            this._dictionary.update('Rect', [value.x, y, value.x + value.width, height]);\n                            this._bounds = value;\n                        }\n                    }\n                }\n                else {\n                    this._bounds = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"caption\", {\n        /**\n         * Gets the caption of the annotation.\n         *\n         * @returns {PdfAnnotationCaption} Annotation caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption of the annotation.\n         * let caption: PdfAnnotationCaption = annotation.caption;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._caption === 'undefined') {\n                var value = new PdfAnnotationCaption();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('Cap')) {\n                    value._cap = this._dictionary.get('Cap');\n                }\n                if (this._dictionary.has('CP')) {\n                    var capType = this._dictionary.get('CP');\n                    if (capType) {\n                        value._type = capType.name === 'Top' ? PdfLineCaptionType.top : PdfLineCaptionType.inline;\n                    }\n                }\n                if (this._dictionary.has('CO')) {\n                    value._offset = this._dictionary.getArray('CO');\n                }\n                this._caption = value;\n            }\n            return this._caption;\n        },\n        /**\n         * Sets the caption of the annotation.\n         *\n         * @param {PdfAnnotationCaption} value Annottion caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Create and set annotation caption values\n         * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.caption;\n            if (value) {\n                if (!this._isLoaded || value.cap !== current.cap) {\n                    this._caption.cap = value.cap;\n                }\n                if (!this._isLoaded || value.type !== current.type) {\n                    this._caption.type = value.type;\n                }\n                if (!this._isLoaded || value.offset !== current.offset) {\n                    this._caption.offset = value.offset;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"opacity\", {\n        /**\n         * Gets the opacity of the annotation.\n         *\n         * @returns {number} Opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the opacity of the annotation.\n         * let opacity: number = annotation.opacity;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('CA')) {\n                var opacity = this._dictionary.get('CA');\n                if (typeof opacity !== 'undefined') {\n                    this._opacity = opacity;\n                }\n            }\n            return this._opacity;\n        },\n        /**\n         * Sets the opacity of the annotation.\n         *\n         * @param {number} value opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the opacity of the annotation.\n         * annotation.opacity = 0.5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && !Number.isNaN(value)) {\n                if (value >= 0 && value <= 1) {\n                    this._dictionary.update('CA', value);\n                    this._opacity = value;\n                }\n                else if (value < 0) {\n                    this._dictionary.update('CA', 0);\n                }\n                else {\n                    this._dictionary.update('CA', 1);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"subject\", {\n        /**\n         * Gets the subject of the annotation.\n         *\n         * @returns {string} Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the subject of the annotation.\n         * let subject: string = annotation.subject;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._subject === 'undefined') {\n                this._subject = this._dictionary.get('Subject', 'Subj');\n            }\n            return this._subject;\n        },\n        /**\n         * Sets the subject of the annotation.\n         *\n         * @param {string} value Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the subject of the annotation.\n         * annotation.subject = 'Line Annotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                var hasKey = false;\n                if (this._dictionary.has('Subj')) {\n                    this._dictionary.update('Subj', value);\n                    this._subject = value;\n                    hasKey = true;\n                }\n                if (!hasKey || this._dictionary.has('Subject')) {\n                    this._dictionary.update('Subject', value);\n                    this._subject = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"name\", {\n        /**\n         * Gets the name of the annotation.\n         *\n         * @returns {string} Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the name of the annotation.\n         * let name: string = annotation.name;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined' && this._dictionary.has('NM')) {\n                this._name = this._dictionary.get('NM');\n            }\n            return this._name;\n        },\n        /**\n         * Sets the name of the annotation.\n         *\n         * @param {string} value Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the name of the annotation.\n         * annotation.name = 'LineAnnotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('NM', value);\n                this._name = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the text of the annotation.\n         * let text: string = annotation.text;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' && this._dictionary.has('Contents')) {\n                this._text = this._dictionary.get('Contents');\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the text of the annotation.\n         * annotation.text = ‘LineAnnotation’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._text = this._dictionary.get('Contents');\n                if (value !== this._text) {\n                    this._dictionary.update('Contents', value);\n                    this._text = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the annotation.\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotationAngle: PdfRotationAngle = annotation.rotationAngle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotate === 'undefined' && this._dictionary.has('Rotate')) {\n                this._rotate = (this._dictionary.get('Rotate') / 90);\n            }\n            if (this._rotate === null || typeof this._rotate === 'undefined') {\n                this._rotate = PdfRotationAngle.angle0;\n            }\n            return this._rotate;\n        },\n        /**\n         * Sets the rotation of the annotation.\n         *\n         * @param {PdfRotationAngle} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotationAngle = PdfRotationAngle.angle180;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var prevRotate = this.rotationAngle;\n            if (typeof value !== 'undefined' && typeof prevRotate !== 'undefined') {\n                value = ((value + prevRotate) % 4);\n            }\n            this._dictionary.update('Rotate', value * 90);\n            this._rotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation (Read only).\n         *\n         * @returns {number} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = this._getRotationAngle();\n            if (angle < 0) {\n                angle = 360 + angle;\n            }\n            if (angle >= 360) {\n                angle = 360 - angle;\n            }\n            return angle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flattenPopups\", {\n        /**\n         * Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         *\n         * @returns {boolean} Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         * let flattenPopups: boolean = annotation.flattenPopups;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isFlattenPopups;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         *\n         * @param {boolean} value Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         * annotation.flattenPopups = false;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._isFlattenPopups = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether the annotation have been flattened or not.\n         * let flatten: boolean = annotation.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation have been flattened or not.\n         * annotation.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_hasFlags\", {\n        get: function () {\n            return this._dictionary.has('F');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_degreeToRadian\", {\n        get: function () {\n            if (typeof this._ratio === 'undefined') {\n                this._ratio = Math.PI / 180;\n            }\n            return this._ratio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set the boolean flag to create a new appearance stream for annotations.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set the boolean flag to create a new appearance stream for annotations.\n     * document.getPage(0).annotations.at(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n        if (value) {\n            this._dictionary._updated = true;\n        }\n    };\n    /**\n     * Gets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string[]} Values associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the values associated with the key 'Author'.\n     * let values: string[] = document.getPage(0).annotations.at(0).getValues('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.getValues = function (name) {\n        var values = [];\n        if (this._dictionary.has(name)) {\n            var value = this._dictionary.get(name); // eslint-disable-line\n            if (Array.isArray(value)) {\n                value = this._dictionary.getArray(name);\n                for (var i = 0; i < value.length; i++) {\n                    var element = value[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    if (element instanceof _PdfName) {\n                        values.push(element.name);\n                    }\n                    else if (typeof element === 'string') {\n                        values.push(element);\n                    }\n                    else if (typeof element === 'number') {\n                        values.push(element.toString());\n                    }\n                }\n            }\n            else if (value instanceof _PdfName) {\n                values.push(value.name);\n            }\n            else if (typeof value === 'string') {\n                values.push(value);\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return values;\n    };\n    /**\n     * Sets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = document.getPage(0).annotations.at(0);\n     * // Set Unknown state and model\n     * annotation.setValues('State', 'StateModel');\n     * annotation.setValues('StateModel', 'CustomState');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setValues = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    //Implementation\n    PdfAnnotation.prototype._initialize = function (page, dictionary) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (!this._isLoaded) {\n            this._dictionary.set('P', this._page._ref);\n            this._dictionary.assignXref(this._crossReference);\n        }\n    };\n    PdfAnnotation.prototype._getRotationAngle = function () {\n        var angle = 0;\n        if (this._dictionary.has('Rotate')) {\n            angle = this._dictionary.get('Rotate');\n        }\n        else if (this._dictionary.has('Rotation')) {\n            angle = this._dictionary.get('Rotation');\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getBoundsValue = function (linePoints) {\n        var count = linePoints.length;\n        var x = [];\n        var y = [];\n        if (linePoints && count > 0) {\n            var points = [];\n            for (var i = 0; i < linePoints.length; i++) {\n                var value = linePoints[Number.parseInt(i.toString(), 10)];\n                points.push(value);\n            }\n            var x1 = 0;\n            var y1 = 0;\n            for (var i = 0; i < points.length; i++) {\n                if (i % 2 === 0) {\n                    x[Number.parseInt(x1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    x1++;\n                }\n                else {\n                    y[Number.parseInt(y1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    y1++;\n                }\n            }\n        }\n        x.sort(function (a, b) { return a > b ? 1 : -1; });\n        y.sort(function (a, b) { return a > b ? 1 : -1; });\n        return { x: x[0], y: y[0], width: x[x.length - 1] - x[0], height: y[y.length - 1] - y[0] };\n    };\n    PdfAnnotation.prototype._validateTemplateMatrix = function (dictionary, template) {\n        var isRotatedMatrix = false;\n        var isValidMatrix = true;\n        if (template === null || typeof template === 'undefined') {\n            if (dictionary && dictionary.has('Matrix')) {\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && matrix.length > 3) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            isRotatedMatrix = true;\n                            var locationX = 0;\n                            var locationY = 0;\n                            var templateX = 0;\n                            var templateY = 0;\n                            if (matrix.length > 4) {\n                                templateX = -matrix[4];\n                                if (matrix.length > 5) {\n                                    templateY = -matrix[5];\n                                }\n                            }\n                            var annotationBounds = void 0;\n                            if (this._dictionary.has('Rect')) {\n                                annotationBounds = this._dictionary.getArray('Rect');\n                                if (annotationBounds && annotationBounds.length > 1) {\n                                    locationX = annotationBounds[0];\n                                    locationY = annotationBounds[1];\n                                }\n                            }\n                            if (!(locationX === templateX && locationY === templateY) && templateX === 0 && templateY === 0) {\n                                this._locationDisplaced = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                isRotatedMatrix = true;\n            }\n            return isRotatedMatrix;\n        }\n        else {\n            var point = this.bounds;\n            if (dictionary && dictionary.has('Matrix')) {\n                var box = dictionary.getArray('BBox');\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && box && matrix.length > 3 && box.length > 2) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            if (typeof box[0] !== 'undefined' &&\n                                typeof box[1] !== 'undefined' &&\n                                typeof box[2] !== 'undefined' &&\n                                typeof box[3] !== 'undefined') {\n                                if (box[0] !== -(matrix[4]) && box[1] !== -(matrix[5]) || (box[0] === 0 && -matrix[4] === 0)) {\n                                    var graphics = this._page.graphics;\n                                    var state = graphics.save();\n                                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                        graphics.setTransparency(this._opacity);\n                                    }\n                                    point.x -= box[0];\n                                    point.y += box[1];\n                                    graphics.drawTemplate(template, point);\n                                    graphics.restore(state);\n                                    this._removeAnnotationFromPage(this._page, this);\n                                    isValidMatrix = false;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isValidMatrix;\n        }\n    };\n    PdfAnnotation.prototype._flattenAnnotationTemplate = function (template, isNormalMatrix) {\n        var graphics = this._page.graphics;\n        var currentBounds = this.bounds;\n        if (this._type === _PdfAnnotationType.lineAnnotation && !this._dictionary.has('AP')) {\n            if (this._isLoaded) {\n                currentBounds = this._bounds;\n            }\n            else {\n                currentBounds = _toRectangle([this.bounds.x, this.bounds.y,\n                    this.bounds.width, this.bounds.height]);\n            }\n            if (this._page) {\n                var size = this._page.size;\n                var mBox = this._page.mediaBox;\n                var cropBox = this._page.cropBox;\n                if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && this._page._pageDictionary.has('CropBox') && !this._isLoaded) {\n                    if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                        size[1] === cropBox[3]) && (currentBounds.x !== cropBox[0])) {\n                        currentBounds.x -= cropBox[0];\n                        currentBounds.y = cropBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else if (mBox && Array.isArray(mBox) && mBox.length === 4 && this._page._pageDictionary.has('MediaBox') && !this._isLoaded) {\n                    if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                        currentBounds.x -= mBox[0];\n                        currentBounds.y = mBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else if (!this._isLoaded) {\n                    currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                }\n            }\n            else {\n                currentBounds.y = currentBounds.y + currentBounds.height;\n            }\n        }\n        if (typeof currentBounds !== 'undefined' && currentBounds !== null) {\n            var state = graphics.save();\n            this._page._needInitializeGraphics = true;\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var needScale = true;\n                if (this._dictionary.has('AP')) {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (this.rotate === PdfRotationAngle.angle270 && this._page.rotation === PdfRotationAngle.angle270\n                            && appearanceStream.dictionary.has('Matrix')) {\n                            var matrix = appearanceStream.dictionary.getArray('Matrix');\n                            if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                                needScale = false;\n                            }\n                        }\n                    }\n                    if (!isNormalMatrix && this.rotate !== PdfRotationAngle.angle180 && needScale) {\n                        template._isAnnotationTemplate = true;\n                        template._needScale = true;\n                    }\n                }\n            }\n            if (!isNormalMatrix && this._type !== _PdfAnnotationType.rubberStampAnnotation) {\n                template._isAnnotationTemplate = true;\n                template._needScale = true;\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.setTransparency(this._opacity);\n            }\n            var bounds = this._calculateTemplateBounds(currentBounds, this._page, template, isNormalMatrix, graphics);\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var size = void 0;\n                var location_1;\n                if (this.rotate === PdfRotationAngle.angle0) {\n                    size = [bounds.width, bounds.height];\n                    location_1 = [bounds.x, bounds.y];\n                }\n                else {\n                    size = template._size;\n                    location_1 = [bounds.x, bounds.y];\n                }\n                var isRotatedMatrix = false;\n                if (this.rotate !== PdfRotationAngle.angle0 && template._content) {\n                    if (template._content.dictionary.has('Matrix')) {\n                        var matrix = template._content.dictionary.getArray('Matrix');\n                        if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                            isRotatedMatrix = true;\n                        }\n                    }\n                }\n                var scaleX = (template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n                var scaleY = (template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n                var needScale = !(scaleX === 1 && scaleY === 1);\n                if (this.rotate !== PdfRotationAngle.angle0 && isRotatedMatrix) {\n                    if (this.rotate === PdfRotationAngle.angle90) {\n                        if (this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[0] += (size[0] - size[1]);\n                                location_1[1] += size[0];\n                            }\n                            else {\n                                location_1[0] += size[1];\n                                location_1[1] += (size[0] - size[1]) + (size[0] - size[1]);\n                            }\n                        }\n                        else if (!needScale) {\n                            location_1[0] += size[1];\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle270) {\n                        if (this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && template._isAnnotationTemplate) {\n                                location_1[1] = bounds.y - bounds.width;\n                            }\n                            else if (needScale) {\n                                location_1[1] += (size[0] - size[1]);\n                            }\n                        }\n                        else {\n                            if (!needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[1] += -(size[0]);\n                            }\n                            else {\n                                location_1[1] += -(size[0] - size[1]);\n                            }\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle180) {\n                        location_1[0] += size[0];\n                        location_1[1] += -(size[1]);\n                    }\n                }\n            }\n            graphics.drawTemplate(template, bounds);\n            graphics.restore(state);\n        }\n        this._removeAnnotationFromPage(this._page, this);\n    };\n    PdfAnnotation.prototype._calculateTemplateBounds = function (bounds, page, template, isNormalMatrix, graphics) {\n        var annotationBounds = bounds;\n        var x = bounds.x;\n        var y = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        if (!isNormalMatrix) {\n            var rect = this._dictionary.getArray('Rect');\n            if (rect) {\n                annotationBounds = _toRectangle(rect);\n            }\n        }\n        if (typeof page !== 'undefined') {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                if (isNormalMatrix || (typeof this._rotate !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = bounds.x;\n                    if (!this._locationDisplaced) {\n                        y = -(page.size[1] - bounds.y - bounds.height);\n                    }\n                    else if (page._origin && page._o[1] !== 0) {\n                        y = bounds.y + bounds.height;\n                    }\n                    else {\n                        y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.height - template._size[1]));\n                    }\n                }\n                else {\n                    x = bounds.x;\n                    y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.width - template._size[1]));\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                if (isNormalMatrix) {\n                    x = -(page.size[0] - (bounds.x + bounds.width));\n                    y = -(page.size[1] - bounds.y - bounds.height);\n                }\n                else {\n                    x = -(page.size[0] - (bounds.x + template._size[0]));\n                    y = -(page.size[1] - bounds.y - template._size[1]);\n                    if (typeof this.rotationAngle !== 'undefined' &&\n                        (this._rotate === PdfRotationAngle.angle90 ||\n                            this._rotate === PdfRotationAngle.angle270)) {\n                        y = (-(page.size[1] - bounds.y - template._size[1]) - (bounds.width - bounds.height));\n                        width = bounds.height;\n                        height = bounds.width;\n                    }\n                }\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                if (isNormalMatrix || (typeof this.rotationAngle !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = -(page.size[0] - bounds.x - bounds.width);\n                    y = bounds.y;\n                }\n                else {\n                    x = -(page.size[0] - annotationBounds.x - template._size[0]);\n                    var matrix = template._content.dictionary.getArray('Matrix');\n                    var box = template._content.dictionary.getArray('BBox');\n                    if (matrix && box && matrix[5] !== box[2]) {\n                        y = bounds.y - (bounds.height - bounds.width);\n                    }\n                    else {\n                        y = (bounds.y + bounds.height) - bounds.width;\n                    }\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 0) {\n                if (!isNormalMatrix &&\n                    (typeof this.rotationAngle !== 'undefined' &&\n                        (this.rotationAngle === PdfRotationAngle.angle90 ||\n                            this.rotationAngle === PdfRotationAngle.angle270))) {\n                    x = bounds.x;\n                    y = (bounds.y + bounds.height - bounds.width);\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    PdfAnnotation.prototype._obtainGraphicsRotation = function (matrix) {\n        var radians = Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]);\n        var angle = Math.round(radians * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._removeAnnotationFromPage = function (page, annotation) {\n        var annotations = [];\n        if (page._pageDictionary && page._pageDictionary.has('Annots')) {\n            annotations = page._pageDictionary.get('Annots');\n        }\n        annotation._dictionary.set('P', page._ref);\n        var index = annotations.indexOf(annotation._ref);\n        if (index !== -1) {\n            annotations.splice(index, 1);\n            if (this._crossReference._cacheMap.has(annotation._ref)) {\n                this._crossReference._cacheMap.delete(annotation._ref);\n            }\n        }\n        page._pageDictionary.set('Annots', annotations);\n    };\n    PdfAnnotation.prototype._removeAnnotation = function (page, annotation) {\n        if (page && annotation) {\n            this._removeAnnotationFromPage(page, annotation);\n            page._pageDictionary._updated = true;\n        }\n    };\n    PdfAnnotation.prototype._drawCloudStyle = function (graphics, brush, pen, radius, overlap, points, isAppearance) {\n        if (this._isClockWise(points)) {\n            var sortedPoints = [];\n            for (var i = points.length - 1; i >= 0; i--) {\n                sortedPoints.push(points[Number.parseInt(i.toString(), 10)]);\n            }\n            points = sortedPoints;\n        }\n        var circles = [];\n        var circleOverlap = 2 * radius * overlap;\n        var previousPoint = points[points.length - 1];\n        for (var i = 0; i < points.length; i++) {\n            var currentPoint = points[Number.parseInt(i.toString(), 10)];\n            var dx = currentPoint[0] - previousPoint[0];\n            var dy = currentPoint[1] - previousPoint[1];\n            var length_1 = Math.sqrt(dx * dx + dy * dy);\n            dx = dx / length_1;\n            dy = dy / length_1;\n            for (var a = 0; a + 0.1 * circleOverlap < length_1; a += circleOverlap) {\n                var cur = new _CloudStyleArc();\n                cur.point = [previousPoint[0] + a * dx, previousPoint[1] + a * dy];\n                circles.push(cur);\n            }\n            previousPoint = currentPoint;\n        }\n        var previousCurvedStyleArc = circles[circles.length - 1];\n        for (var i = 0; i < circles.length; i++) {\n            var currentCurvedStyleArc = circles[Number.parseInt(i.toString(), 10)];\n            var angle = this._getIntersectionDegrees(previousCurvedStyleArc.point, currentCurvedStyleArc.point, radius);\n            previousCurvedStyleArc.endAngle = angle[0];\n            currentCurvedStyleArc.startAngle = angle[1];\n            previousCurvedStyleArc = currentCurvedStyleArc;\n        }\n        var path = new _PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            var startAngle = current.startAngle % 360;\n            var endAngle = current.endAngle % 360;\n            var sweepAngel = 0;\n            if (startAngle > 0 && endAngle < 0) {\n                sweepAngel = (180 - startAngle) + (180 - (endAngle < 0 ? -endAngle : endAngle));\n            }\n            else if (startAngle < 0 && endAngle > 0) {\n                sweepAngel = -startAngle + endAngle;\n            }\n            else if (startAngle > 0 && endAngle > 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = endAngle - startAngle;\n                }\n            }\n            else if (startAngle < 0 && endAngle < 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = -(startAngle + (-endAngle));\n                }\n            }\n            if (sweepAngel < 0) {\n                sweepAngel = -sweepAngel;\n            }\n            current.endAngle = sweepAngel;\n            path._addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, startAngle, sweepAngel);\n        }\n        path._closeFigure();\n        var tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        var pdfpath;\n        if (isAppearance) {\n            pdfpath = new _PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new _PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        if (brush !== null) {\n            graphics._drawPath(pdfpath, null, brush);\n        }\n        var incise = 180 / (Math.PI * 3);\n        path = new _PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            path._addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, current.startAngle, current.endAngle + incise);\n        }\n        path._closeFigure();\n        tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        if (isAppearance) {\n            pdfpath = new _PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new _PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        graphics._drawPath(pdfpath, pen, null);\n    };\n    PdfAnnotation.prototype._isClockWise = function (points) {\n        var sum = 0;\n        for (var i = 0; i < points.length; i++) {\n            var first = points[Number.parseInt(i.toString(), 10)];\n            var second = points[(i + 1) % points.length];\n            sum += (second[0] - first[0]) * (second[1] + first[1]);\n        }\n        return sum > 0;\n    };\n    PdfAnnotation.prototype._getIntersectionDegrees = function (first, second, radius) {\n        var dx = second[0] - first[0];\n        var dy = second[1] - first[1];\n        var length = Math.sqrt(dx * dx + dy * dy);\n        var a = 0.5 * length / radius;\n        if (a < -1) {\n            a = -1;\n        }\n        else if (a > 1) {\n            a = 1;\n        }\n        var radian = Math.atan2(dy, dx);\n        var cosvalue = Math.acos(a);\n        return [(radian - cosvalue) * (180 / Math.PI), (Math.PI + radian + cosvalue) * (180 / Math.PI)];\n    };\n    PdfAnnotation.prototype._obtainStyle = function (borderPen, rectangle, borderWidth, parameter) {\n        var dash = this.border.dash;\n        if (dash && dash.length > 0) {\n            var dashPattern = [];\n            var isDash = false;\n            for (var i = 0; i < dash.length; i++) {\n                dashPattern[Number.parseInt(i.toString(), 10)] = dash[Number.parseInt(i.toString(), 10)];\n                if (dashPattern[Number.parseInt(i.toString(), 10)] > 0) {\n                    isDash = true;\n                }\n            }\n            if (isDash && this.border.style === PdfBorderStyle.dashed) {\n                borderPen._dashStyle = PdfDashStyle.dash;\n                borderPen._dashPattern = dashPattern;\n            }\n        }\n        if (parameter) {\n            if (parameter instanceof _PaintParameter) {\n                if (!this._isBounds && this._dictionary.has('RD')) {\n                    var array = this._dictionary.getArray('RD');\n                    if (array) {\n                        rectangle[0] = rectangle[0] + array[0];\n                        rectangle[1] = rectangle[1] + borderWidth + array[1];\n                        rectangle[2] = rectangle[2] - (array[0] + array[2]);\n                        rectangle[3] = rectangle[3] - (array[1] + array[3]);\n                    }\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = rectangle[3] - this.border.width;\n                }\n                parameter.bounds = rectangle;\n            }\n            else {\n                if (parameter.intensity !== 0 && parameter.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = parameter.intensity * 5;\n                    rectangle[0] = rectangle[0] + radius + borderWidth;\n                    rectangle[1] = rectangle[1] + radius + borderWidth;\n                    rectangle[2] = rectangle[2] - (2 * radius) - 2 * borderWidth;\n                    rectangle[3] = rectangle[3] - (2 * radius) - 2 * borderWidth;\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = this.bounds.height - this.border.width;\n                }\n            }\n        }\n        else {\n            if (!this._isBounds && this._dictionary.has('RD')) {\n                var array = this._dictionary.getArray('RD');\n                if (array) {\n                    rectangle[0] = rectangle[0] + array[0];\n                    rectangle[1] = rectangle[1] + borderWidth + array[1];\n                    rectangle[2] = rectangle[2] - (2 * array[2]);\n                    rectangle[3] = rectangle[3] - this.border.width;\n                    rectangle[3] = rectangle[3] - (2 * array[3]);\n                }\n            }\n            else {\n                rectangle[1] = rectangle[1] + borderWidth;\n                rectangle[3] = this.bounds.height - this.border.width;\n            }\n        }\n        return rectangle;\n    };\n    PdfAnnotation.prototype._createRectangleAppearance = function (borderEffect) {\n        var width = this.border.width;\n        var rdArray = this._dictionary.getArray('RD');\n        if (!rdArray && borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var cloudRectangle = { x: this.bounds.x - borderEffect.intensity * 5 - width / 2,\n                y: this.bounds.y - borderEffect.intensity * 5 - width / 2,\n                width: this.bounds.width + borderEffect.intensity * 10 + width,\n                height: this.bounds.height + borderEffect.intensity * 10 + width };\n            var radius = borderEffect.intensity * 5;\n            rdArray = [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2];\n            this._dictionary.set('RD', rdArray);\n            this.bounds = cloudRectangle;\n        }\n        if (!this._isBounds && rdArray) {\n            var cloudRectangle = { x: this.bounds.x + rdArray[0],\n                y: this.bounds.y + rdArray[1],\n                width: this.bounds.width - rdArray[2] * 2,\n                height: this.bounds.height - rdArray[3] * 2 };\n            if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                cloudRectangle.x = cloudRectangle.x - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.y = cloudRectangle.y - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.width = cloudRectangle.width + borderEffect.intensity * 10 + width;\n                cloudRectangle.height = cloudRectangle.height + borderEffect.intensity * 10 + width;\n                var radius = borderEffect.intensity * 5;\n                this._dictionary.set('RD', [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2]);\n            }\n            else {\n                delete this._dictionary._map.RD;\n            }\n            this.bounds = cloudRectangle;\n        }\n        var borderWidth = width / 2;\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            template._writeTransformation = false;\n        }\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0 && this.color) {\n            parameter.borderPen = new PdfPen(this._color, width);\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        var rectangle = this._obtainStyle(parameter.borderPen, nativeRectangle, borderWidth, borderEffect);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            this._drawRectangleAppearance(rectangle, graphics, parameter, borderEffect.intensity);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawRectangleAppearance = function (rectangle, graphics, parameter, intensity) {\n        var graphicsPath = new _PdfPath();\n        graphicsPath._addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        var radius = intensity * 4.25;\n        if (radius > 0) {\n            var points = [];\n            for (var i = 0; i < graphicsPath._points.length; i++) {\n                var sublist = [graphicsPath._points[Number.parseInt(i.toString(), 10)][0],\n                    -graphicsPath._points[Number.parseInt(i.toString(), 10)][1]];\n                points.push(sublist);\n            }\n            graphicsPath = new _PdfPath();\n            graphicsPath._addPolygon(points);\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createCircleAppearance = function () {\n        var nativeBounds = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeBounds, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (this._dictionary.has('BE')) {\n            template._writeTransformation = false;\n        }\n        if (typeof this.color === 'undefined') {\n            this._isTransparentColor = true;\n        }\n        var graphics = template.graphics;\n        var width = this.border.width;\n        var borderPen = new PdfPen(this.color, width);\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        parameter.borderWidth = width;\n        var borderWidth = width / 2;\n        var rectangle = this._obtainStyle(borderPen, nativeBounds, borderWidth);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this._dictionary.has('BE')) {\n            this._drawCircleAppearance(rectangle, borderWidth, graphics, parameter);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, rectangle[1], rectangle[2] - width, rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this._opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawCircleAppearance = function (rectangle, borderWidth, graphics, parameter) {\n        var radius = 0;\n        if (this._dictionary.has('RD')) {\n            var array = this._dictionary.getArray('RD');\n            if (array && array.length > 0) {\n                radius = array[0];\n            }\n        }\n        if (radius > 0) {\n            var rect = [rectangle[0] + borderWidth,\n                -rectangle[1] - rectangle[3],\n                rectangle[2] - this.border.width,\n                rectangle[3]];\n            var left = rect[0];\n            var top_1 = rect[1];\n            var right = rect[0] + rect[2];\n            var bottom = rect[1] + rect[3];\n            var controlPointList = [];\n            controlPointList.push([right, bottom]);\n            controlPointList.push([left, bottom]);\n            controlPointList.push([left, top_1]);\n            controlPointList.push([right, top_1]);\n            var startPointList = [];\n            startPointList.push([right, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + rect[2] / 2, bottom]);\n            startPointList.push([left, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + (rect[2] / 2), top_1]);\n            var endPointList = [];\n            endPointList.push([left + rect[2] / 2, bottom]);\n            endPointList.push([left, top_1 + (rect[3] / 2)]);\n            endPointList.push([left + (rect[2] / 2), top_1]);\n            endPointList.push([right, top_1 + (rect[3] / 2)]);\n            var points = [];\n            for (var i = 0; i < controlPointList.length; i++) {\n                this._createBezier(startPointList[Number.parseInt(i.toString(), 10)], controlPointList[Number.parseInt(i.toString(), 10)], endPointList[Number.parseInt(i.toString(), 10)], points);\n            }\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, points, false);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, -rectangle[1], rectangle[2] - this.border.width, -rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createBezier = function (first, second, third, bezierPoints) {\n        bezierPoints.push(first);\n        this._populateBezierPoints(first, second, third, 0, bezierPoints);\n        bezierPoints.push(third);\n    };\n    PdfAnnotation.prototype._populateBezierPoints = function (first, second, third, currentIteration, bezierPoints) {\n        if (currentIteration < 2) {\n            var midPoint1 = this._midPoint(first, second);\n            var midPoint2 = this._midPoint(second, third);\n            var midPoint3 = this._midPoint(midPoint1, midPoint2);\n            currentIteration++;\n            this._populateBezierPoints(first, midPoint1, midPoint3, currentIteration, bezierPoints);\n            bezierPoints.push(midPoint3);\n            this._populateBezierPoints(midPoint3, midPoint2, third, currentIteration, bezierPoints);\n        }\n    };\n    PdfAnnotation.prototype._midPoint = function (first, second) {\n        return [(first[0] + second[0]) / 2, (first[1] + second[1]) / 2];\n    };\n    PdfAnnotation.prototype._getAngle = function (linePoints) {\n        var x1 = linePoints[0];\n        var y1 = linePoints[1];\n        var x2 = linePoints[2];\n        var y2 = linePoints[3];\n        var angle = 0;\n        if (x2 - x1 === 0) {\n            angle = (y2 > y1) ? 90 : 270;\n        }\n        else {\n            var angleRatio = (y2 - y1) / (x2 - x1);\n            var radians = Math.atan(angleRatio);\n            angle = radians * (180 / Math.PI);\n            if ((x2 - x1) < 0 || (y2 - y1) < 0) {\n                angle += 180;\n            }\n            if ((x2 - x1) > 0 && (y2 - y1) < 0) {\n                angle -= 180;\n            }\n            if (angle < 0) {\n                angle += 360;\n            }\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getAxisValue = function (value, angle, length) {\n        return [value[0] + Math.cos(angle * this._degreeToRadian) * length,\n            value[1] + Math.sin(angle * this._degreeToRadian) * length];\n    };\n    PdfAnnotation.prototype._drawLineEndStyle = function (axisPoint, graphics, angle, pen, brush, style, length, isBegin) {\n        var arraowAngle;\n        var count;\n        var startPoint;\n        var first;\n        var second;\n        var third;\n        var fourth;\n        var path;\n        switch (style) {\n            case PdfLineEndingStyle.square:\n                graphics.drawRectangle(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.circle:\n                graphics.drawEllipse(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.openArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new _PdfPath();\n                path._pen = pen;\n                path._addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path._addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new _PdfPath();\n                path._pen = pen;\n                path._addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path._addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.slash:\n                count = 9 * length;\n                first = this._getAxisValue(startPoint, (angle + 60), count);\n                second = this._getAxisValue(startPoint, (angle - 120), count);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], first[0], -first[1]);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], second[0], -second[1]);\n                break;\n            case PdfLineEndingStyle.diamond:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, 180, count);\n                second = this._getAxisValue(axisPoint, 90, count);\n                third = this._getAxisValue(axisPoint, 0, count);\n                fourth = this._getAxisValue(axisPoint, -90, count);\n                graphics.drawPolygon([[first[0], -first[1]], [second[0], -second[1]], [third[0], -third[1]], [fourth[0], -fourth[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.butt:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, (angle + 90), count);\n                second = this._getAxisValue(axisPoint, (angle - 90), count);\n                graphics.drawLine(pen, first[0], -first[1], second[0], -second[1]);\n                break;\n        }\n    };\n    PdfAnnotation.prototype._drawLineStyle = function (start, end, graphics, angle, pen, brush, lineStyle, length) {\n        if (length === 0) {\n            length = 1;\n            pen = null;\n        }\n        this._drawLineEndStyle(start, graphics, angle, pen, brush, lineStyle.begin, length, true);\n        this._drawLineEndStyle(end, graphics, angle, pen, brush, lineStyle.end, length, false);\n    };\n    PdfAnnotation.prototype._obtainFontDetails = function () {\n        var fontFamily = '';\n        var fontSize;\n        var style = PdfFontStyle.regular;\n        if (this._dictionary.has('DS') || this._dictionary.has('DA')) {\n            var fontStyle = void 0;\n            if (this._dictionary.has('DS')) {\n                var collection = this._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') !== -1 || collection[Number.parseInt(i.toString(), 10)].indexOf('style') !== -1) {\n                        fontStyle = collection[Number.parseInt(i.toString(), 10)];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_1 = entry[1];\n                        var split = name_1.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 1);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = this._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                }\n            }\n            if (fontStyle && fontStyle !== '') {\n                var styleArray = void 0;\n                if (fontStyle.includes(':')) {\n                    styleArray = fontStyle.split(':');\n                }\n                else if (fontStyle.includes(',')) {\n                    styleArray = fontStyle.split(',');\n                }\n                if (styleArray) {\n                    styleArray.forEach(function (entry) {\n                        switch (entry.toLowerCase()) {\n                            case 'bold':\n                                style |= PdfFontStyle.bold;\n                                break;\n                            case 'italic':\n                                style |= PdfFontStyle.italic;\n                                break;\n                            case 'strikeout':\n                                style |= PdfFontStyle.strikeout;\n                                break;\n                            case 'underline':\n                                style |= PdfFontStyle.underline;\n                                break;\n                        }\n                    });\n                }\n            }\n            if (fontFamily) {\n                fontFamily = fontFamily.trim();\n            }\n        }\n        return { name: fontFamily, size: fontSize, style: style };\n    };\n    PdfAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfAnnotation.prototype._getEqualPdfGraphicsUnit = function (measurementUnit, unitString) {\n        var graphicsUnit;\n        switch (measurementUnit) {\n            case PdfMeasurementUnit.inch:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n            case PdfMeasurementUnit.centimeter:\n                graphicsUnit = _PdfGraphicsUnit.centimeter;\n                unitString = 'cm';\n                break;\n            case PdfMeasurementUnit.millimeter:\n                graphicsUnit = _PdfGraphicsUnit.millimeter;\n                unitString = 'mm';\n                break;\n            case PdfMeasurementUnit.pica:\n                graphicsUnit = _PdfGraphicsUnit.pica;\n                unitString = 'p';\n                break;\n            case PdfMeasurementUnit.point:\n                graphicsUnit = _PdfGraphicsUnit.point;\n                unitString = 'pt';\n                break;\n            default:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n        }\n        return { graphicsUnit: graphicsUnit, unitString: unitString };\n    };\n    PdfAnnotation.prototype._createMeasureDictionary = function (unitString) {\n        var d = new _PdfDictionary();\n        d.set('C', 1);\n        d.set('D', 100);\n        d.set('F', _PdfName.get('D'));\n        d.set('RD', '.');\n        d.set('RT', '');\n        d.set('SS', '');\n        d.set('U', unitString);\n        var a = new _PdfDictionary();\n        a.set('C', 1);\n        a.set('D', 100);\n        a.set('F', _PdfName.get('D'));\n        a.set('RD', '.');\n        a.set('RT', '');\n        a.set('SS', '');\n        a.set('U', 'sq ' + unitString);\n        var x = new _PdfDictionary();\n        if (unitString === 'in') {\n            x.set('C', 0.0138889);\n        }\n        else if (unitString === 'cm') {\n            x.set('C', 0.0352778);\n        }\n        else if (unitString === 'mm') {\n            x.set('C', 0.352778);\n        }\n        else if (unitString === 'pt') {\n            x.set('C', 1);\n        }\n        else if (unitString === 'p') {\n            x.set('C', 0.0833333);\n        }\n        x.set('D', 100);\n        x.set('F', _PdfName.get('D'));\n        x.set('RD', '.');\n        x.set('RT', '');\n        x.set('SS', '');\n        x.set('U', unitString);\n        var measureDictionary = new _PdfDictionary();\n        measureDictionary.set('A', [a]);\n        measureDictionary.set('D', [d]);\n        measureDictionary.set('R', '1 ' + unitString + ' = 1 ' + unitString);\n        measureDictionary.set('Type', _PdfName.get('Measure'));\n        measureDictionary.set('X', [x]);\n        return measureDictionary;\n    };\n    PdfAnnotation.prototype._colorToHex = function (col) {\n        if (col) {\n            return '#' + this._componentToHex(col[0]) + this._componentToHex(col[1]) + this._componentToHex(col[2]);\n        }\n        else {\n            return '#' + this._componentToHex(0) + this._componentToHex(0) + this._componentToHex(0);\n        }\n    };\n    PdfAnnotation.prototype._componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    PdfAnnotation.prototype._getRotatedBounds = function (bounds, rotateAngle) {\n        if (bounds.width > 0 && bounds.height > 0) {\n            var matrix = new _PdfTransformationMatrix();\n            matrix._rotate(rotateAngle);\n            var corners = [];\n            corners.push([bounds.x, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y + bounds.height]);\n            corners.push([bounds.x, bounds.y + bounds.height]);\n            for (var i = 0; i < corners.length; i++) {\n                corners[Number.parseInt(i.toString(), 10)] = matrix._matrix._transform(corners[Number.parseInt(i.toString(), 10)]);\n            }\n            var path = new _PdfPath();\n            path._addRectangle(bounds.x, bounds.y, bounds.width, bounds.height);\n            for (var i = 0; i < 4; i++) {\n                path._points[Number.parseInt(i.toString(), 10)] = corners[Number.parseInt(i.toString(), 10)];\n            }\n            var minX = corners[0][0];\n            var maxX = corners[3][0];\n            var minY = corners[0][1];\n            var maxY = corners[3][1];\n            for (var i = 0; i < 4; i++) {\n                if (corners[Number.parseInt(i.toString(), 10)][0] < minX) {\n                    minX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][0] > maxX) {\n                    maxX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] < minY) {\n                    minY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] > maxY) {\n                    maxY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n            }\n            return { x: bounds.x, y: bounds.y, width: maxX - minX, height: maxY - minY };\n        }\n        return bounds;\n    };\n    PdfAnnotation.prototype._flattenPopUp = function () {\n        this._flattenPop(this._page, this.color, this.bounds, this.border, this.author, this.subject, this.text);\n    };\n    PdfAnnotation.prototype._flattenPop = function (_page, color, boundsValue, border, author, subject, text) {\n        var clientSize = [0, 0];\n        clientSize = _page.size;\n        var x = clientSize[0] - 180;\n        var annotBounds = boundsValue;\n        var y = (annotBounds.y + 142) < clientSize[1] ? annotBounds.y : clientSize[1] - 142;\n        var bounds = [x, y, 180, 142];\n        if (this._dictionary.has('Popup')) {\n            var dictionary = this._dictionary.get('Popup');\n            if (dictionary) {\n                var rectValue = this._dictionary.getArray('Rect');\n                if (rectValue && rectValue.length === 4) {\n                    var left = rectValue[0];\n                    var top_2 = rectValue[1];\n                    var width = rectValue[2];\n                    var height = rectValue[3];\n                    bounds = [left, top_2, width - left, height - top_2];\n                }\n            }\n        }\n        if (typeof color === 'undefined') {\n            color = [0, 0, 0];\n        }\n        var backBrush = new PdfBrush(color);\n        var borderWidth = border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var track = 0;\n        var aBrush = new PdfBrush(this._getForeColor(color));\n        if (typeof author !== 'undefined' && author !== null && author !== '') {\n            track = this._drawAuthor(author, subject, bounds, backBrush, aBrush, _page, track, border);\n        }\n        else if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 40];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n            track = 40;\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            track = 20;\n            _page.graphics.restore();\n        }\n        var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n            bounds[2] - border.width, bounds[3] - (track + border.width)];\n        this._saveGraphics(_page, PdfBlendMode.hardLight);\n        _page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], new PdfPen([0, 0, 0], 1), new PdfBrush([255, 255, 255]));\n        rect[0] += 11;\n        rect[1] += 5;\n        rect[2] -= 22;\n        _page.graphics.restore();\n        this._saveGraphics(_page, PdfBlendMode.normal);\n        if (typeof text !== 'undefined' && text !== null && text !== '') {\n            _page.graphics.drawString(text, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n        }\n        _page.graphics.restore();\n    };\n    PdfAnnotation.prototype._flattenLoadedPopUp = function () {\n        var content = '';\n        if (this._dictionary.has('Contents')) {\n            content = this._dictionary.get('Contents');\n        }\n        var author = this.author;\n        var subject = this.subject;\n        var pen = new PdfPen([0, 0, 0], 1);\n        if (!this._dictionary.has('Popup')) {\n            this._flattenPop(this._page, this.color, this.bounds, this.border, author, subject, content);\n            this._removeAnnotationFromPage(this._page, this);\n        }\n        else {\n            var bounds = this._getRectangleBoundsValue();\n            if (typeof this.color === 'undefined') {\n                this.color = [0, 0, 0];\n            }\n            var backBrush = new PdfBrush(this.color);\n            var borderWidth = this.border.width / 2;\n            var track = 0;\n            var aBrush = new PdfBrush(this._getForeColor(this.color));\n            if (typeof this.author !== 'undefined' && this.author !== null && this.author !== '') {\n                track = this._drawAuthor(this.author, this.subject, bounds, backBrush, aBrush, this._page, track, this.border);\n            }\n            else if (typeof this.subject !== 'undefined' && this.subject !== null && this.subject !== '') {\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 40];\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                this._page.graphics.restore();\n                var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n                contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n                this._saveGraphics(this._page, PdfBlendMode.normal);\n                this._drawSubject(this.subject, contentRect, this._page);\n                track = 40;\n                this._page.graphics.restore();\n            }\n            else {\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 20];\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                track = 20;\n                this._page.graphics.restore();\n            }\n            this._saveGraphics(this._page, PdfBlendMode.hardLight);\n            var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n                bounds[2] - this.border.width, bounds[3] - (track + this.border.width)];\n            this._page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], pen, new PdfBrush([255, 255, 255]));\n            rect[0] += 11;\n            rect[1] += 5;\n            rect[2] -= 22;\n            this._page.graphics.restore();\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            this._page.graphics.restore();\n            //let xmlData: Array<any> = Array<any>();\n            // if (this._dictionary.has('RC')) {\n            //     //xmlData = this.parseXMLData();\n            // }\n            // if (xmlData !== null) {\n            //     // Need to add xml data code\n            // } else {\n            if (typeof content !== 'undefined' && content !== null && content !== '') {\n                this._page.graphics.drawString(content, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n            }\n            // }\n            this._page.graphics.restore();\n            this._removeAnnotationFromPage(this._page, this);\n        }\n    };\n    PdfAnnotation.prototype._getRectangleBoundsValue = function () {\n        if (this._dictionary.has('Popup')) {\n            var dic = this._dictionary.get('Popup');\n            var rect = dic.getArray('Rect');\n            if (rect !== null) {\n                if (this._page !== null) {\n                    if (rect[1] === 0 && rect[3] === 0) {\n                        rect[1] = rect[1] + rect[3];\n                    }\n                    else {\n                        rect[1] = this._page._size[1] - (rect[1] + rect[3]);\n                    }\n                }\n                else {\n                    rect[1] = (rect[1] - rect[3]);\n                }\n                return rect;\n            }\n            else {\n                return [0, 0, 0, 0];\n            }\n        }\n        else {\n            return [0, 0, 0, 0];\n        }\n    };\n    PdfAnnotation.prototype._getForeColor = function (color) {\n        var fore = (((color[0] + color[1] + color[2]) / 3) > 128) ? [0, 0, 0] : [255, 255, 255];\n        return fore;\n    };\n    PdfAnnotation.prototype._drawAuthor = function (author, subject, bounds, backBrush, aBrush, _page, trackingHeight, border) {\n        var borderWidth = this.border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n        if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            titleRect[3] += 20;\n            trackingHeight = titleRect[3];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._authorBoldFont, contentRect, null, aBrush, format);\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3]];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._popUpFont, contentRect, null, aBrush, format);\n            trackingHeight = titleRect[3];\n            _page.graphics.restore();\n        }\n        return trackingHeight;\n    };\n    PdfAnnotation.prototype._drawSubject = function (subject, contentRect, _page) {\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        _page.graphics.drawString(subject, this._authorBoldFont, contentRect, null, new PdfBrush([0, 0, 0]), format);\n    };\n    PdfAnnotation.prototype._saveGraphics = function (_page, blendMode) {\n        _page.graphics.save();\n        _page.graphics.setTransparency(0.8, 0.8, blendMode);\n    };\n    PdfAnnotation.prototype._getBorderColorString = function (color) {\n        return (color[0] / 255).toFixed(3) + ' ' + (color[1] / 255).toFixed(3) + ' ' + (color[2] / 255).toFixed(3) + ' rg ';\n    };\n    PdfAnnotation.prototype._stringToDate = function (date) {\n        var dateFormat = new Date();\n        if (date[0] === 'D' && date[1] === ':') {\n            var year = date.substring(2, 6);\n            var month = date.substring(6, 8);\n            var day = date.substring(8, 10);\n            var hour = date.substring(10, 12);\n            var minute = date.substring(12, 14);\n            var second = date.substring(14, 16);\n            var difference = 0;\n            if (date.length === 23) {\n                var timeZone = date.substring(16, 22);\n                if (timeZone !== '+05\\'30\\'') {\n                    var signature = timeZone[0];\n                    var timeZoneHour = timeZone.substring(1, 3);\n                    var timeZonMinute = timeZone.substring(4, 6);\n                    difference = 5.5 - (signature === '-' ? -1 : 1) * (parseInt(timeZoneHour, 10) + (parseInt(timeZonMinute, 10) / 60));\n                }\n            }\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n            if (difference !== 0) {\n                dateFormat.setTime(dateFormat.getTime() + (difference * 60 * 60 * 1000));\n            }\n        }\n        else if (date.indexOf('/') !== -1) {\n            var list = date.split('/');\n            var year = list[2].split(' ')[0];\n            var month = list[0];\n            if (month !== '10' && month !== '11' && month !== '12') {\n                month = '0' + month;\n            }\n            var day = list[1];\n            var hour = list[2].split(' ')[1].split(':')[0];\n            var minute = list[2].split(' ')[1].split(':')[1];\n            var second = list[2].split(' ')[1].split(':')[2];\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n        }\n        else {\n            dateFormat = new Date(date);\n        }\n        return dateFormat;\n    };\n    PdfAnnotation.prototype._dateToString = function (dateTime) {\n        var month = (dateTime.getMonth() + 1).toString();\n        if (month !== '10' && month !== '11' && month !== '12') {\n            month = '0' + month;\n        }\n        var date = (dateTime.getDate()).toString();\n        if (Number.parseInt(date) < 10) { // eslint-disable-line\n            date = '0' + date;\n        }\n        var hours = (dateTime.getHours()).toString();\n        if (Number.parseInt(hours) < 10) { // eslint-disable-line\n            hours = '0' + hours;\n        }\n        var minutes = (dateTime.getMinutes()).toString();\n        if (Number.parseInt(minutes) < 10) { // eslint-disable-line\n            minutes = '0' + minutes;\n        }\n        var seconds = (dateTime.getSeconds()).toString();\n        if (Number.parseInt(seconds) < 10) { // eslint-disable-line\n            seconds = '0' + seconds;\n        }\n        return 'D:' + dateTime.getFullYear().toString() + month + date + hours + minutes + seconds + '+05\\'30\\'';\n    };\n    PdfAnnotation.prototype._obtainNativeRectangle = function () {\n        var rect = [this._bounds.x, this._bounds.y, this.bounds.x + this._bounds.width, this.bounds.y + this._bounds.height];\n        var cropBoxOrMediaBox;\n        if (this._page) {\n            var size = this._page.size;\n            rect[1] = size[1] - rect[3];\n            var cropBox = this._page.cropBox;\n            if (cropBox && _areNotEqual(cropBox, [0, 0, 0, 0])) {\n                cropBoxOrMediaBox = cropBox;\n            }\n            else {\n                var mBox = this._page.mediaBox;\n                if (mBox && _areNotEqual(mBox, [0, 0, 0, 0])) {\n                    cropBoxOrMediaBox = mBox;\n                }\n            }\n            if (cropBoxOrMediaBox && cropBoxOrMediaBox.length > 2 && (cropBoxOrMediaBox[0] !== 0 || cropBoxOrMediaBox[1] !== 0)) {\n                rect[0] += cropBoxOrMediaBox[0];\n                rect[1] += cropBoxOrMediaBox[1];\n            }\n        }\n        return rect;\n    };\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n/**\n * Represents the annotations which have comments and review history.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfComment = page.annotations.at(0) as PdfComment;\n * // Gets the comments of annotation\n * let comment : PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComment = /** @class */ (function (_super) {\n    __extends(PdfComment, _super);\n    function PdfComment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfComment.prototype, \"comments\", {\n        /**\n         * Gets the comments of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation comments\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._comments) {\n                return this._comments;\n            }\n            else {\n                return this._comments = new PdfPopupAnnotationCollection(this, false);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfComment.prototype, \"reviewHistory\", {\n        /**\n         * Gets the review history of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation review history.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.reviewHistory;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._reviewHistory) {\n                return this._reviewHistory;\n            }\n            else {\n                return this._reviewHistory = new PdfPopupAnnotationCollection(this, true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfComment;\n}(PdfAnnotation));\nexport { PdfComment };\n/**\n * `PdfLineAnnotation` class represents the line annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new line annotation with line points\n * const annotation: PdfLineAnnotation = new PdfLineAnnotation([10, 50, 250, 50]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLineAnnotation, _super);\n    function PdfLineAnnotation(linePoints) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Line'));\n        if (typeof linePoints !== 'undefined') {\n            _this.linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.lineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfLineAnnotation.prototype, \"linePoints\", {\n        /**\n         * Gets the line points of the line annotation.\n         *\n         * @returns {number[]} Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line points of the line annotation.\n         * let linePoints : number[] = annotation.linePoints;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._linePoints === 'undefined' && this._dictionary.has('L')) {\n                var points = this._dictionary.getArray('L');\n                if (points) {\n                    this._linePoints = points;\n                }\n            }\n            return this._linePoints;\n        },\n        /**\n         * Sets the line points of the line annotation.\n         *\n         * @param {number[]} value Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line points of the line annotation.\n         * annotation.linePoints = [10, 50, 250, 50];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && (typeof this._linePoints === 'undefined' || _areNotEqual(value, this._linePoints))) {\n                if (value.length === 4) {\n                    this._dictionary.update('L', value);\n                    this._linePoints = value;\n                }\n                else {\n                    throw new Error('Line points length should be 4.');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderExt\", {\n        /**\n         * Gets the line extension of the line annotation.\n         *\n         * @returns {number} Leader line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line extension of the line annotation.\n         * let leaderExt: number = annotation.leaderExt;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderExt === 'undefined' && this._dictionary.has('LLE')) {\n                var leaderExt = this._dictionary.get('LLE');\n                if (typeof leaderExt !== 'undefined') {\n                    this._leaderExt = leaderExt;\n                }\n            }\n            return this._leaderExt;\n        },\n        /**\n         * Sets the line extension of the line annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line extension of the line annotation.\n         * annotation.leaderExt = 4;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLE', value);\n                this._leaderExt = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderLine\", {\n        /**\n         * Gets the leader line of the line annotation.\n         *\n         * @returns {number} Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader line of the line annotation.\n         * let leaderLine: number = annotation.leaderLine;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderLine === 'undefined' && this._dictionary.has('LL')) {\n                var leaderLine = this._dictionary.get('LL');\n                if (typeof leaderLine !== 'undefined') {\n                    this._leaderLine = leaderLine;\n                }\n            }\n            return this._leaderLine;\n        },\n        /**\n         * Sets the leader line of the line annotation.\n         *\n         * @param {number} value Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader line of the line annotation.\n         * annotation.leaderLine = 5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value) && this.leaderExt !== 0) {\n                this._dictionary.update('LL', value);\n                this._leaderLine = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the line annotation.\n         *\n         * @returns {PdfAnnotationLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line ending style of the line annotation.\n         * let lineEndingStyle: PdfAnnotationLineEndingStyle = annotation.lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineEndingStyle === 'undefined') {\n                var value = new PdfAnnotationLineEndingStyle();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('LE')) {\n                    var lineStyles = this._dictionary.getArray('LE');\n                    if (lineStyles && Array.isArray(lineStyles)) {\n                        value._begin = _mapLineEndingStyle(lineStyles[0].name);\n                        value._end = _mapLineEndingStyle(lineStyles[1].name);\n                    }\n                }\n                this._lineEndingStyle = value;\n            }\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfAnnotationLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var style = this.lineEndingStyle;\n            if (style.begin !== value.begin || style.end !== value.end) {\n                style.begin = value.begin;\n                style.end = value.end;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderOffset\", {\n        /**\n         * Gets the leader offset of the line annotation.\n         *\n         * @returns {number} Leader offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader offset value of the line annotation\n         * let leaderOffset: number = annotation.leaderOffset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderOffset === 'undefined' && this._dictionary.has('LLO')) {\n                var leaderOffset = this._dictionary.get('LLO');\n                if (typeof leaderOffset !== 'undefined' && leaderOffset >= 0) {\n                    this._leaderOffset = leaderOffset;\n                }\n            }\n            return this._leaderOffset;\n        },\n        /**\n         * Sets the leader offset of the line annotation.\n         *\n         * @param {number} value Leader line offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader offset of the line annotation.\n         * annotation.leaderOffset = 1;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLO', value);\n                this._leaderOffset = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineIntent\", {\n        /**\n         * Gets the line intent of the line annotation.\n         *\n         * @returns {PdfLineIntent} Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line intent value of the line annotation\n         * let lineIntent: PdfLineIntent = annotation.lineIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineIntent === 'undefined' && this._dictionary.has('IT')) {\n                var lineIntent = this._dictionary.get('IT');\n                if (lineIntent) {\n                    this._lineIntent = lineIntent.name === 'LineDimension' ? PdfLineIntent.lineDimension : PdfLineIntent.lineArrow;\n                }\n            }\n            return this._lineIntent;\n        },\n        /**\n         * Sets the line intent of the line annotation.\n         *\n         * @param {PdfLineIntent} value Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line intent of the line annotation.\n         * annotation.lineIntent = PdfLineIntent.lineDimension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this.lineIntent) {\n                this._lineIntent = value;\n                this._dictionary.update('IT', _PdfName.get(value === PdfLineIntent.lineDimension ? 'LineDimension' : 'LineArrow'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the line annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flag to have measurement dictionary of the line annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined') {\n                this._measure = this._dictionary.has('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the line annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flag to have measurement dictionary of the line annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                    this.caption.cap = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined' || this._isLoaded) {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the line annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfLineAnnotation.prototype._postProcess = function (flatten) {\n        if (typeof this.linePoints === 'undefined' || this.linePoints === null) {\n            throw new Error('Line points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('Cap')) {\n            this._dictionary.set('Cap', false);\n        }\n        if (!this._dictionary.has('CP')) {\n            this._dictionary.set('CP', _PdfName.get('Inline'));\n        }\n        if (!this._dictionary.has('LE')) {\n            this.lineEndingStyle = new PdfAnnotationLineEndingStyle();\n        }\n        if (!this._dictionary.has('LL')) {\n            this.leaderLine = 0;\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.leaderExt = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createLineMeasureAppearance(flatten);\n        }\n        else {\n            if (this._setAppearance) {\n                this._appearanceTemplate = this._createAppearance();\n            }\n            var boundsArray = this._obtainLineBounds();\n            var bounds = { x: boundsArray[0],\n                y: boundsArray[1], width: boundsArray[2], height: boundsArray[3] };\n            this._bounds = bounds;\n            var updatedBounds = void 0;\n            if (this._page && this._page._isNew && this._page._pageSettings && !this._setAppearance && !this.flatten) {\n                updatedBounds = _updateBounds(this);\n            }\n            else {\n                updatedBounds = [this._bounds.x,\n                    this._bounds.y,\n                    this._bounds.x + this._bounds.width,\n                    this._bounds.y + this._bounds.height];\n            }\n            this._dictionary.update('Rect', updatedBounds);\n        }\n    };\n    PdfLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createLineMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && isFlatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var appearanceDictionary = this._appearanceTemplate._content.dictionary;\n            var isValid = appearanceDictionary && appearanceDictionary.has('BBox') && !appearanceDictionary.has('CropBox') && !appearanceDictionary.has('MediaBox') && !appearanceDictionary.has('Matrix');\n            if (this._isLoaded && isValid && this.measure && !this._setAppearance) {\n                var graphics = this._page.graphics;\n                var state = graphics.save();\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.setTransparency(this._opacity);\n                }\n                var point = this.bounds;\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                point.x -= box[0];\n                point.y += box[1];\n                graphics.drawTemplate(this._appearanceTemplate, point);\n                graphics.restore(state);\n                this._removeAnnotationFromPage(this._page, this);\n            }\n            else {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_1 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_1, appearance);\n                this._dictionary.update('AP', reference_1);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfLineAnnotation.prototype._createLineMeasureAppearance = function (_isFlatten) {\n        var nativeRectangle = [0, 0, 0, 0];\n        var area = this._convertToUnit();\n        var linePoints1 = this._obtainLinePoints();\n        var points = [];\n        for (var j = 0; j < linePoints1.length; j = j + 2) {\n            points.push([linePoints1[Number.parseInt(j.toString(), 10)], (linePoints1[j + 1])]);\n        }\n        var graphicsPath = new _PdfPath();\n        graphicsPath._points = points;\n        graphicsPath._pathTypes = [0, 1];\n        var rectPath = graphicsPath._getBounds();\n        this._bounds = { x: rectPath[0], y: rectPath[1], width: rectPath[2], height: rectPath[3] };\n        var borderPen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        nativeRectangle = this._obtainLineBounds();\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        parameter.borderPen = borderPen;\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var linePoints = this._obtainLinePoints();\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (typeof linePoints !== 'undefined' && linePoints.length === 4) {\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var fontSize = font.measureString(area.toFixed(2) + ' ' + this._unitString, [0, 0], format, 0, 0);\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            if (this.leaderLine < 0) {\n                leaderLine = -(this.leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = this.leaderLine;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((fontSize[0] / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            var state = void 0;\n            if (this.opacity && this._opacity < 1) {\n                state = graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            if (this.caption.type === PdfLineCaptionType.top || (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n                graphics.drawLine(borderPen, start[0], -start[1], end[0], -end[1]);\n            }\n            else {\n                graphics.drawLine(borderPen, start[0], -start[1], first[0], -first[1]);\n                graphics.drawLine(borderPen, end[0], -end[1], second[0], -second[1]);\n            }\n            if (this.opacity && this._opacity < 1) {\n                graphics.restore(state);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, borderPen, backBrush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n            }\n            else {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [(-fontSize[0] / 2), 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, template._content);\n            template._content.reference = ref;\n            var nativeRectangle1 = [this.bounds.x,\n                this.bounds.y + this.bounds.height,\n                this.bounds.width,\n                this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            if (this._isBounds && !this.measure) {\n                nativeRectangle = nativeRectangle1;\n                this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            }\n            else {\n                this._dictionary.update('Rect', [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]]);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (typeof _isFlatten !== 'undefined' && !_isFlatten) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dic = new _PdfDictionary();\n                dic.set('N', ref);\n                dic._updated = true;\n                this._dictionary.set('AP', dic);\n                var measureDictionary = this._createMeasureDictionary(this._unitString);\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, measureDictionary);\n                measureDictionary._updated = true;\n                if (this._dictionary.has('Measure')) {\n                    _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n                }\n                this._dictionary.update('Measure', reference);\n            }\n            var lineStyles = [];\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.begin)));\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.end)));\n            this._dictionary.update('LE', lineStyles);\n            if (this._linePoints !== null) {\n                this._dictionary.update('L', this._linePoints);\n            }\n            else {\n                throw new Error('LinePoints cannot be null');\n            }\n            this._dictionary.update('C', [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n                Number.parseFloat((this.color[1] / 255).toFixed(3)),\n                Number.parseFloat((this.color[2] / 255).toFixed(3))]);\n            var offset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            this._dictionary.update('Subtype', new _PdfName('Line'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            this._dictionary.update('IT', new _PdfName('LineDimension'));\n            this._dictionary.update('LLE', this.leaderExt);\n            this._dictionary.update('LLO', offset);\n            this._dictionary.update('LL', this.leaderLine);\n            this._dictionary.update('CP', _PdfName.get(this.caption.type === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n            this._dictionary.update('Cap', this.caption.cap);\n            var bounds = [nativeRectangle[0],\n                nativeRectangle[1],\n                nativeRectangle[0] + nativeRectangle[2],\n                nativeRectangle[1] + nativeRectangle[3]];\n            this._dictionary.update('Rect', bounds);\n            this._bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._calculateAngle = function (startPointX, startPointY, endPointX, endPointY) {\n        return -(Math.atan2((endPointY - startPointY), (endPointX - startPointX)) * (180 / Math.PI));\n    };\n    PdfLineAnnotation.prototype._calculateLineBounds = function (linePoints, leaderLineExt, leaderLine, leaderOffset, lineStyle, borderWidth) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (linePoints && linePoints.length === 4) {\n            var angle = this._getAngle(linePoints);\n            var leaderLines = 0;\n            var lineAngle = 0;\n            if (leaderLine < 0) {\n                leaderLines = -(leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLines = leaderLine;\n                lineAngle = angle;\n            }\n            var x1y1 = [linePoints[0], linePoints[1]];\n            var x2y2 = [linePoints[2], linePoints[3]];\n            if (leaderOffset !== 0) {\n                var offsetPoint1 = this._getAxisValue(x1y1, (lineAngle + 90), leaderOffset);\n                var offsetPoint2 = this._getAxisValue(x2y2, (lineAngle + 90), leaderOffset);\n                linePoints[0] = offsetPoint1[0];\n                linePoints[1] = offsetPoint1[1];\n                linePoints[2] = offsetPoint2[0];\n                linePoints[3] = offsetPoint2[1];\n            }\n            var startingPoint = this._getAxisValue(x1y1, (lineAngle + 90), leaderLines + leaderOffset);\n            var endingPoint = this._getAxisValue(x2y2, (lineAngle + 90), leaderLines + leaderOffset);\n            var beginLineLeader = this._getAxisValue(x1y1, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var endLineLeader = this._getAxisValue(x2y2, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var beginLinePoint = this._getLinePoint(lineStyle.begin, borderWidth);\n            var endLinePoint = this._getLinePoint(lineStyle.end, borderWidth);\n            var widthX = [];\n            var heightY = [];\n            if ((lineAngle >= 45 && lineAngle <= 135) || (lineAngle >= 225 && lineAngle <= 315)) {\n                widthX[0] = beginLinePoint.y;\n                heightY[0] = beginLinePoint.x;\n                widthX[1] = endLinePoint.y;\n                heightY[1] = endLinePoint.x;\n            }\n            else {\n                widthX[0] = beginLinePoint.x;\n                heightY[0] = beginLinePoint.y;\n                widthX[1] = endLinePoint.x;\n                heightY[1] = endLinePoint.y;\n            }\n            var width = Math.max(widthX[0], widthX[1]);\n            var height = Math.max(heightY[0], heightY[1]);\n            if (width === 0) {\n                width = 1;\n            }\n            if (height === 0) {\n                height = 1;\n            }\n            if (startingPoint[0] === Math.min(startingPoint[0], endingPoint[0])) {\n                startingPoint[0] -= width * borderWidth;\n                endingPoint[0] += width * borderWidth;\n                startingPoint[0] = Math.min(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.min(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.max(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.max(endingPoint[0], endLineLeader[0]);\n            }\n            else {\n                startingPoint[0] += width * borderWidth;\n                endingPoint[0] -= width * borderWidth;\n                startingPoint[0] = Math.max(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.max(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.min(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.min(endingPoint[0], endLineLeader[0]);\n            }\n            if (startingPoint[1] === Math.min(startingPoint[1], endingPoint[1])) {\n                startingPoint[1] -= height * borderWidth;\n                endingPoint[1] += height * borderWidth;\n                startingPoint[1] = Math.min(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.min(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.max(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.max(endingPoint[1], endLineLeader[1]);\n            }\n            else {\n                startingPoint[1] += height * borderWidth;\n                endingPoint[1] -= height * borderWidth;\n                startingPoint[1] = Math.max(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.max(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.min(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.min(endingPoint[1], endLineLeader[1]);\n            }\n            bounds = this._getBounds([{ x: startingPoint[0], y: startingPoint[1] }, { x: endingPoint[0], y: endingPoint[1] }]);\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._getLinePoint = function (style, borderWidth) {\n        var point = { x: 0, y: 0 };\n        if (style) {\n            switch (style) {\n                case PdfLineEndingStyle.square:\n                case PdfLineEndingStyle.circle:\n                case PdfLineEndingStyle.diamond:\n                    point.x = 3;\n                    point.y = 3;\n                    break;\n                case PdfLineEndingStyle.openArrow:\n                case PdfLineEndingStyle.closedArrow:\n                    point.x = 1;\n                    point.y = 5;\n                    break;\n                case PdfLineEndingStyle.rOpenArrow:\n                case PdfLineEndingStyle.rClosedArrow:\n                    point.x = 9 + (borderWidth / 2);\n                    point.y = 5 + (borderWidth / 2);\n                    break;\n                case PdfLineEndingStyle.slash:\n                    point.x = 5;\n                    point.y = 9;\n                    break;\n                case PdfLineEndingStyle.butt:\n                    point.x = 1;\n                    point.y = 3;\n                    break;\n                default:\n                    point.x = 0;\n                    point.y = 0;\n                    break;\n            }\n        }\n        return point;\n    };\n    PdfLineAnnotation.prototype._getBounds = function (points) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (points.length > 0) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; ++i) {\n                var point = points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds.x = xmin;\n            bounds.y = ymin;\n            bounds.width = xmax - xmin;\n            bounds.height = ymax - ymin;\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._obtainLineBounds = function () {\n        var bounds = this.bounds;\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var leaderOffset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            var leaderExt = this._dictionary.has('LLE') ? this.leaderExt : 0;\n            var leaderLine = this._dictionary.has('LL') ? this.leaderLine : 0;\n            bounds = this._calculateLineBounds(this._linePoints, leaderExt, leaderLine, leaderOffset, this.lineEndingStyle, this.border.width);\n            bounds = { x: bounds.x - 8, y: bounds.y - 8, width: (bounds.width + 2 * 8), height: (bounds.height + 2 * 8) };\n        }\n        return [bounds.x, bounds.y, bounds.width, bounds.height];\n    };\n    PdfLineAnnotation.prototype._createAppearance = function () {\n        var template = new PdfTemplate(this._obtainLineBounds(), this._crossReference);\n        var parameter = new _PaintParameter();\n        _setMatrix(template, this._getRotationAngle());\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var pen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n        }\n        else if (this.border.style === PdfBorderStyle.dot) {\n            pen._dashStyle = PdfDashStyle.dot;\n        }\n        parameter.borderPen = pen;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var brush = new PdfBrush(typeof this.innerColor !== 'undefined' ? this._innerColor : [0, 0, 0]);\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (!this.text && !this._dictionary.has('Contents')) {\n            this.text = this.subject;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var lineWidth = font.measureString(this.text ? this.text : '', [0, 0], format, 0, 0)[0]; //66.71001;\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            if (this.leaderLine < 0) {\n                leaderLine = -(this.leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = this.leaderLine;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((lineWidth / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            if (this.opacity && this._opacity < 1) {\n                var state = graphics.save();\n                graphics.setTransparency(this._opacity);\n                this._drawLine(graphics, pen, start, end, first, second);\n                graphics.restore(state);\n            }\n            else {\n                this._drawLine(graphics, pen, start, end, first, second);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, pen, brush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 2 * height);\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n                }\n            }\n            else {\n                if (this._dictionary.has('Measure')) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 3 * (height / 2));\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n                }\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            if (this.caption.cap) {\n                graphics.drawString(this.text, font, [(-lineWidth / 2), 0, 0, 0], null, parameter.foreBrush);\n            }\n            graphics.restore();\n            var bounds = this._obtainLineBounds();\n            var rectangleBounds = _fromRectangle({ x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] });\n            if (this._page._isNew && this._page._pageSettings && this._setAppearance && !this.flatten) {\n                rectangleBounds = _updateBounds(this, bounds);\n            }\n            this.bounds = { x: rectangleBounds[0], y: rectangleBounds[1], width: rectangleBounds[2], height: rectangleBounds[3] };\n            if ((!this.measure) && (!this._dictionary.has('Measure'))) {\n                this._dictionary.update('Rect', [rectangleBounds[0], rectangleBounds[1], rectangleBounds[2], rectangleBounds[3]]);\n            }\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._drawLine = function (graphics, pen, start, end, first, second) {\n        if (typeof this.text === 'undefined' ||\n            this._text === '' ||\n            this.caption.type === PdfLineCaptionType.top ||\n            (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n            graphics.drawLine(pen, start[0], -start[1], end[0], -end[1]);\n        }\n        else {\n            graphics.drawLine(pen, start[0], -start[1], first[0], -first[1]);\n            graphics.drawLine(pen, end[0], -end[1], second[0], -second[1]);\n        }\n    };\n    PdfLineAnnotation.prototype._convertToUnit = function () {\n        var points = this._obtainLinePoints();\n        var data = new Array(points.length / 2);\n        var count = 0;\n        for (var j = 0; j < points.length; j = j + 2) {\n            data[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], (points[j + 1])];\n            count++;\n        }\n        var distance = Math.sqrt(Math.pow((data[1][0] - data[0][0]), 2) + Math.pow((data[1][1] - data[0][1]), 2));\n        var value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n        this._unitString = value.unitString;\n        return (new _PdfUnitConvertor())._convertUnits(distance, _PdfGraphicsUnit.point, value.graphicsUnit);\n    };\n    PdfLineAnnotation.prototype._obtainLinePoints = function () {\n        var points = [];\n        if (this.linePoints) {\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return points;\n    };\n    return PdfLineAnnotation;\n}(PdfComment));\nexport { PdfLineAnnotation };\n/**\n * `PdfCircleAnnotation` class represents the circle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new circle annotation with circle bounds\n * const annotation: PdfCircleAnnotation = new PdfCircleAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCircleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfCircleAnnotation, _super);\n    function PdfCircleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._measureType = PdfCircleMeasurementType.diameter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.circleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the circle annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the flag to have measurement dictionary of the circle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the flag to have measurement dictionary of the circle annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined' || this._isLoaded) {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measureType\", {\n        /**\n         * Gets the measurement type of the annotation.\n         *\n         * @returns {PdfCircleMeasurementType} Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement type of the annotation.\n         * let type: PdfCircleMeasurementType = annotation.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Contents')) {\n                var text = this._dictionary.get('Contents');\n                this._unitString = text.substring(text.length - 2);\n                this._unit = _mapMeasurementUnit(this._unitString);\n                var value = text.substring(0, text.length - 2);\n                var converter = new _PdfUnitConvertor();\n                var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, _mapGraphicsUnit(this._unitString));\n                if (radius.toString() === value) {\n                    this._measureType = PdfCircleMeasurementType.radius;\n                }\n                else {\n                    this._measureType = PdfCircleMeasurementType.diameter;\n                }\n            }\n            return this._measureType;\n        },\n        /**\n         * Sets the measurement type of the annotation.\n         *\n         * @param {PdfCircleMeasurementType} value Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement type of the annotation.\n         * annotation.type = PdfCircleMeasurementType.diameter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._measureType = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCircleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfCircleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfCircleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfCircleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n        }\n        else {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n            this._dictionary.update('Rect', _updateBounds(this));\n        }\n    };\n    PdfCircleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && isFlatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var appearanceDictionary = this._appearanceTemplate._content.dictionary;\n            var isValid = appearanceDictionary && appearanceDictionary.has('BBox') && !appearanceDictionary.has('CropBox') && !appearanceDictionary.has('MediaBox');\n            if (isValid && this.measure) {\n                var graphics = this._page.graphics;\n                var state = graphics.save();\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.setTransparency(this._opacity);\n                }\n                var point = this.bounds;\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                point.x -= box[0];\n                point.y += box[1];\n                graphics.drawTemplate(this._appearanceTemplate, point);\n                graphics.restore(state);\n                this._removeAnnotationFromPage(this._page, this);\n            }\n            else {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_2 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_2, appearance);\n                this._dictionary.update('AP', reference_2);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfCircleAnnotation.prototype._createCircleMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._convertToUnit();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var color = this.color ? this.color : [0, 0, 0];\n        var borderPen = new PdfPen(color, borderWidth);\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        parameter.foreBrush = new PdfBrush(color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.save();\n        graphics.drawEllipse(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(color, this.border.width));\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[3] / 2) - (fontsize[0] / 2);\n            graphics.drawLine(parameter.borderPen, 0, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        else {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[2] / 2) + ((nativeRectangle[2] / 4) - (fontsize[0] / 2));\n            graphics.drawLine(parameter.borderPen, nativeRectangle[2] / 2, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            graphics._template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, graphics._template._content);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            this._dictionary.update('Subtype', new _PdfName('Circle'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n        }\n        return template;\n    };\n    PdfCircleAnnotation.prototype._convertToUnit = function () {\n        var converter = new _PdfUnitConvertor();\n        var value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n        this._unitString = value.unitString;\n        var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, value.graphicsUnit);\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            radius = 2 * radius;\n        }\n        return radius;\n    };\n    return PdfCircleAnnotation;\n}(PdfComment));\nexport { PdfCircleAnnotation };\n/**\n * `PdfEllipseAnnotation` class represents the ellipse annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ellipse annotation with bounds\n * const annotation: PdfEllipseAnnotation = new PdfEllipseAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfEllipseAnnotation = /** @class */ (function (_super) {\n    __extends(PdfEllipseAnnotation, _super);\n    function PdfEllipseAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.ellipseAnnotation;\n        return _this;\n    }\n    PdfEllipseAnnotation._load = function (page, dictionary) {\n        var annot = new PdfEllipseAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfEllipseAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfEllipseAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createCircleAppearance();\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfEllipseAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_3 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_3, appearance);\n                this._dictionary.update('AP', reference_3);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    return PdfEllipseAnnotation;\n}(PdfComment));\nexport { PdfEllipseAnnotation };\n/**\n * `PdfSquareAnnotation` class represents the square annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfSquareAnnotation = new PdfSquareAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSquareAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSquareAnnotation, _super);\n    function PdfSquareAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.squareAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the square annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the border effect of the square annotation.\n         * let borderEffect : PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the square annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the border effect of the square annotation.\n         * annotation.borderEffect.intensity = 1;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the Square annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the flag to have measurement dictionary of the square annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the flag to have measurement dictionary of the square annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined') {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSquareAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSquareAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSquareAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSquareAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n        }\n        else {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (typeof this._intensity === 'undefined' &&\n                typeof this._borderEffect !== 'undefined' &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.set('I', this.borderEffect._intensity);\n                if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                    dictionary.set('S', _PdfName.get('C'));\n                }\n                this._dictionary.update('BE', dictionary);\n            }\n        }\n    };\n    PdfSquareAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n            if (this._isLoaded && !this._dictionary.has('Measure')) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var appearanceDictionary = this._appearanceTemplate._content.dictionary;\n            var isValid = appearanceDictionary && appearanceDictionary.has('BBox') && !appearanceDictionary.has('CropBox') && !appearanceDictionary.has('MediaBox');\n            if (isValid && this.measure) {\n                var graphics = this._page.graphics;\n                var state = graphics.save();\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.setTransparency(this._opacity);\n                }\n                var point = this.bounds;\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                point.x -= box[0];\n                point.y += box[1];\n                graphics.drawTemplate(this._appearanceTemplate, point);\n                graphics.restore(state);\n                this._removeAnnotationFromPage(this._page, this);\n            }\n            else {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_4 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_4, appearance);\n                this._dictionary.update('AP', reference_4);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfSquareAnnotation.prototype._createSquareMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._calculateAreaOfSquare();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' sq ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var borderPen = new PdfPen(this.color, borderWidth);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        var appearanceBounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, appearanceBounds);\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(this.color, this.border.width));\n        graphics.save();\n        graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n        var x = (nativeRectangle[2] / 2) - (fontsize[0] / 2);\n        var y = (nativeRectangle[3] / 2) - (fontsize[1] / 2);\n        graphics.translateTransform(x, -y - font._metrics._getHeight());\n        graphics.drawString((area.toFixed(2) + ' sq ' + this._unitString), font, [0, 0, 0, 0], null, parameter.foreBrush);\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            var tem = graphics._template._content;\n            tem.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, tem);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            var nativeRectangle1 = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            nativeRectangle1[2] = (this.bounds.x + this.bounds.width);\n            nativeRectangle1[3] = size[1] - this.bounds.y;\n            if (this._isBounds) {\n                nativeRectangle = nativeRectangle1;\n            }\n            if (this._page._isNew && this._page._pageSettings) {\n                nativeRectangle1 = _updateBounds(this);\n            }\n            this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var reference = this._crossReference._getNextReference();\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            this._dictionary.update('Subject', ('Area Measurement'));\n            if (typeof this.subject === 'undefined') {\n                this._dictionary.update('Subject', ('Area Measurement'));\n            }\n            this._dictionary.update('MeasurementTypes', 129);\n            this._dictionary.update('Subtype', new _PdfName('Square'));\n            this._dictionary.update('IT', new _PdfName('SquareDimension'));\n            var elements = this._dictionary.getArray('Rect');\n            var vertices = new Array(elements.length * 2);\n            vertices[0] = elements[0];\n            vertices[1] = elements[3];\n            vertices[2] = elements[0];\n            vertices[3] = elements[1];\n            vertices[4] = elements[2];\n            vertices[5] = elements[1];\n            vertices[6] = elements[2];\n            vertices[7] = elements[3];\n            this._dictionary.update('Vertices', vertices);\n        }\n        return template;\n    };\n    PdfSquareAnnotation.prototype._calculateAreaOfSquare = function () {\n        var area;\n        var converter = new _PdfUnitConvertor();\n        var value;\n        if (this.bounds.width === this.bounds.height) {\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * width;\n        }\n        else {\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var height = converter._convertUnits(this.bounds.height, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * height;\n        }\n        return area;\n    };\n    return PdfSquareAnnotation;\n}(PdfComment));\nexport { PdfSquareAnnotation };\n/**\n * `PdfRectangleAnnotation` class represents the rectangle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfRectangleAnnotation = new PdfRectangleAnnotation(10, 10, 200, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRectangleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRectangleAnnotation, _super);\n    function PdfRectangleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rectangleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the rectangle annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the border effect of the rectangle annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the rectangle annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Sets the border effect of rectangle annotation.\n         * annotation. borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRectangleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRectangleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRectangleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRectangleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfRectangleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (isNormalMatrix && this._page.rotation !== PdfRotationAngle.angle0 ||\n                this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_5 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_5, appearance);\n                this._dictionary.update('AP', reference_5);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfRectangleAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics.drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._removeAnnotationFromPage(this._page, this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    return PdfRectangleAnnotation;\n}(PdfComment));\nexport { PdfRectangleAnnotation };\n/**\n * `PdfPolygonAnnotation` class represents the polygon annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new polygon annotation with bounds\n * const annotation: PdfPolygonAnnotation = new PdfPolygonAnnotation([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolygonAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolygonAnnotation, _super);\n    function PdfPolygonAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Polygon'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        _this._type = _PdfAnnotationType.polygonAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the polygon annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the border effect of the polygon annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the polygon annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the border effect of the polygon annotation\n         * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy ;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the polygon annotation.\n         *\n         * @returns {number} Line extension.\n         *  ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the line extension of the polygon annotation\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the polygon annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the line extension of the polygon annotation\n         * annotation.lineExtension = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfPolygonAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolygonAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolygonAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolygonAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var array = [];\n        for (var i = 0; i < this._points.length; i++) {\n            var value = this._points[Number.parseInt(i.toString(), 10)];\n            array.push(value);\n        }\n        if (array[0] !== array[array.length - 2] || array[1] !== array[array.length - 1]) {\n            array[array.length] = this._points[0];\n            array[array.length] = this._points[1];\n        }\n        this._points = array;\n        var polygonBounds = this._getBoundsValue(this._points);\n        var bounds = [polygonBounds.x,\n            polygonBounds.y,\n            polygonBounds.x + polygonBounds.width,\n            polygonBounds.y + polygonBounds.height];\n        this._dictionary.update('Rect', bounds);\n        this._dictionary.update('LLE', this._lineExtension);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n        }\n        this._dictionary.update('Vertices', this._points);\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfPolygonAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._flatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (this._dictionary.has('AP')) {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box && box.length >= 2) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotationFromPage(this._page, this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_6 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_6, appearance);\n                this._dictionary.update('AP', reference_6);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolygonAnnotation.prototype._createPolygonAppearance = function (flatten) {\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.color && this.border.width > 0) {\n                borderPen = new PdfPen(this.color, this.border.width);\n            }\n            var backgroundBrush = void 0;\n            if (this.innerColor) {\n                backgroundBrush = new PdfBrush(this.innerColor);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen || backgroundBrush) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                    var graphicsPath = new _PdfPath();\n                    graphicsPath._addPolygon(this._getLinePoints());\n                    this._drawCloudStyle(graphics, backgroundBrush, borderPen, radius, 0.833, graphicsPath._points, false);\n                }\n                else {\n                    graphics.drawPolygon(this._getLinePoints(), borderPen, backgroundBrush);\n                }\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.restore(state);\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            if (typeof this._borderEffect !== 'undefined' &&\n                typeof this.borderEffect.intensity !== 'undefined' && this.borderEffect.intensity !== 0 &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                rect.x = boundsValue.x - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.y = boundsValue.y - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.width = boundsValue.width + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n                rect.height = boundsValue.height + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n            }\n            else {\n                rect.x = boundsValue.x - this.border.width;\n                rect.y = boundsValue.y - this.border.width;\n                rect.width = boundsValue.width + (2 * this.border.width);\n                rect.height = boundsValue.height + (2 * this.border.width);\n            }\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && this.color) {\n                parameter.borderPen = new PdfPen(this._color, this.border.width);\n            }\n            if (this.color) {\n                parameter.foreBrush = new PdfBrush(this._color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                var graphicsPath = new _PdfPath();\n                graphicsPath._addPolygon(this._getLinePoints());\n                this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n            }\n            else {\n                graphics.drawPolygon(this._getLinePoints(), parameter.borderPen, parameter.backBrush);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolygonAnnotation.prototype._getLinePoints = function () {\n        var polygonPoints;\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var pageWidth = pageSize[0];\n        if (this._dictionary.has('Vertices') && !this._isBounds) {\n            var rotation = void 0;\n            if (this._page._pageDictionary.has('Rotate')) {\n                rotation = this._page._pageDictionary.get('Rotate');\n            }\n            if (this._page.rotation) {\n                if (this._page.rotation === PdfRotationAngle.angle90) {\n                    rotation = 90;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle180) {\n                    rotation = 180;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle270) {\n                    rotation = 270;\n                }\n            }\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                var points_1 = [];\n                linePoints.forEach(function (value) {\n                    points_1.push(value);\n                });\n                polygonPoints = [];\n                for (var j = 0; j < points_1.length; j = j + 2) {\n                    if (this.flatten) {\n                        polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], (pageHeight - points_1[j + 1])]);\n                    }\n                    else {\n                        polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], -points_1[j + 1]]);\n                    }\n                }\n                if (rotation) {\n                    if (rotation === 270) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageWidth - x;\n                        }\n                    }\n                    else if (rotation === 90) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            if (this._page._origin[1] !== 0) {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    (polygonPoints[Number.parseInt(k.toString(), 10)][1] - pageHeight);\n                            }\n                            else {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            }\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = x;\n                        }\n                    }\n                    else if (rotation === 180) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageWidth - x;\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageHeight -\n                                polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                        }\n                    }\n                }\n            }\n        }\n        else if (this._points !== null) {\n            var points_2 = [];\n            this._points.forEach(function (value) {\n                points_2.push(value);\n            });\n            polygonPoints = [];\n            for (var j = 0; j < this._points.length; j = j + 2) {\n                if (this.flatten) {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], (pageHeight - points_2[j + 1])]);\n                }\n                else {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], -points_2[j + 1]]);\n                }\n            }\n        }\n        return polygonPoints;\n    };\n    return PdfPolygonAnnotation;\n}(PdfComment));\nexport { PdfPolygonAnnotation };\n/**\n * `PdfPolyLineAnnotation` class represents the polyline annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new poly line annotation with bounds\n * const annotation: PdfPolyLineAnnotation = new PdfPolyLineAnnotation ([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolyLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolyLineAnnotation, _super);\n    function PdfPolyLineAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._beginLine = PdfLineEndingStyle.none;\n        _this._endLine = PdfLineEndingStyle.none;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        _this._type = _PdfAnnotationType.polyLineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"beginLineStyle\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let beginLineStyle: PdfLineEndingStyle = annotation.beginLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._beginLine = _mapLineEndingStyle(lineStyles[0].name);\n                }\n            }\n            return this._beginLine;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the begin line ending style of the annotation.\n         * annotation.beginLineStyle = PdfLineEndingStyle.slash;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._beginLine) {\n                this._beginLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"endLineStyle\", {\n        /**\n         * Gets the end line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let endLineStyle: PdfLineEndingStyle = annotation.endLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._endLine = _mapLineEndingStyle(lineStyles[1].name);\n                }\n            }\n            return this._endLine;\n        },\n        /**\n         * Sets the end line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the end line ending style of the annotation.\n         * annotation.endLineStyle = PdfLineEndingStyle.square;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._endLine) {\n                this._endLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the square annotation.\n         *\n         * @returns {number} Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the line extension of annotation.\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the square annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the line extension of the annotation.\n         * annotation.lineExtension = 3;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPolyLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolyLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolyLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolyLineAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var points = this._getLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        this._polylinePoints = points;\n        this._pathTypes = pathTypes;\n        var path = new _PdfPath();\n        path._points = points;\n        path._pathTypes = pathTypes;\n        this._dictionary.update('Vertices', this._points);\n        var lineStyle = [];\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n        this._dictionary.update('LE', lineStyle);\n        this._dictionary.update('LLE', this._lineExtension);\n        var polyLineBounds = this._getBoundsValue(this._points);\n        var rectangle = [polyLineBounds.x,\n            polyLineBounds.y,\n            polyLineBounds.x + polyLineBounds.width,\n            polyLineBounds.y + polyLineBounds.height];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._flatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotationFromPage(this._page, this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_7 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_7, appearance);\n                this._dictionary.update('AP', reference_7);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._createPolyLineAppearance = function (flatten) {\n        var color = this.color ? this.color : [0, 0, 0];\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.border.width > 0) {\n                borderPen = new PdfPen(color, this.border.width);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                var points = this._getLinePoints();\n                var pathTypes = [];\n                pathTypes.push(0);\n                if (points && points.length > 0) {\n                    for (var i = 1; i < points.length; i++) {\n                        pathTypes.push(1);\n                    }\n                    var path = new _PdfPath();\n                    path._points = points;\n                    path._pathTypes = pathTypes;\n                    graphics._drawPath(path, borderPen);\n                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                        graphics.restore(state);\n                    }\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            rect.x = boundsValue.x - this.border.width;\n            rect.y = boundsValue.y - this.border.width;\n            rect.width = boundsValue.width + (2 * this.border.width);\n            rect.height = boundsValue.height + (2 * this.border.width);\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && color) {\n                parameter.borderPen = new PdfPen(color, this.border.width);\n            }\n            if (color) {\n                parameter.foreBrush = new PdfBrush(color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            var path = new _PdfPath();\n            if (typeof this._polylinePoints !== 'undefined' && this._polylinePoints !== null) {\n                path._points = this._polylinePoints;\n            }\n            else {\n                path._points = this._getLinePoints();\n            }\n            if (typeof this._pathTypes !== 'undefined' && this._polylinePoints !== null) {\n                path._pathTypes = this._pathTypes;\n            }\n            else {\n                this._pathTypes = [];\n                this._pathTypes.push(0);\n                for (var i = 1; i < path._points.length; i++) {\n                    this._pathTypes.push(1);\n                }\n                path._pathTypes = this._pathTypes;\n            }\n            graphics._drawPath(path, parameter.borderPen, parameter.backBrush);\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                var lineStyle = [];\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                this._dictionary.update('LE', lineStyle);\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolyLineAnnotation.prototype._getLinePoints = function () {\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var points;\n        if (this._dictionary.has('Vertices') && !this._isBounds && (!this._setAppearance || (this._setAppearance && this.flatten))) {\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                points = [];\n                for (var j = 0; j < linePoints.length; j = j + 2) {\n                    points.push([linePoints[Number.parseInt(j.toString(), 10)], (pageHeight - linePoints[j + 1])]);\n                }\n            }\n        }\n        else if (this._points) {\n            var polyLinepoints_1 = [];\n            this._points.forEach(function (value) {\n                polyLinepoints_1.push(value);\n            });\n            points = [];\n            for (var j = 0; j < polyLinepoints_1.length; j = j + 2) {\n                if (this.flatten) {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], (pageHeight - polyLinepoints_1[j + 1])]);\n                }\n                else {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], -polyLinepoints_1[j + 1]]);\n                }\n            }\n        }\n        return points;\n    };\n    return PdfPolyLineAnnotation;\n}(PdfComment));\nexport { PdfPolyLineAnnotation };\n/**\n * `PdfAngleMeasurementAnnotation` class represents the angle measurement annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new angle measurement annotation\n * const annotation: PdfAngleMeasurementAnnotation = new PdfAngleMeasurementAnnotation([[100, 700], [150, 650], [100, 600]]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAngleMeasurementAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAngleMeasurementAnnotation, _super);\n    function PdfAngleMeasurementAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._linePoints = [];\n        _this._firstIntersectionPoint = [0, 0];\n        _this._secondIntersectionPoint = [0, 0];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined' && points.length > 0) {\n            if (points.length > 6) {\n                throw new Error('Points length should not be greater than 3');\n            }\n            _this._pointArray = points;\n            for (var i = 0; i < points.length; i++) {\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][0]);\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][1]);\n            }\n        }\n        _this._type = _PdfAnnotationType.angleMeasurementAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAngleMeasurementAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the angle measurement annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Gets the flag to have measurement dictionary of the angle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Sets the flag to add measurement dictionary to the annotation.\n         * annotation.measure = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && !this._isLoaded) {\n                this._measure = value;\n                this.caption.cap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAngleMeasurementAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAngleMeasurementAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAngleMeasurementAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAngleMeasurementAnnotation.prototype._postProcess = function () {\n        if (!this._pointArray) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._appearanceTemplate = this._createAngleMeasureAppearance();\n    };\n    PdfAngleMeasurementAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten && this._setAppearance) {\n                this._appearanceTemplate = this._createAngleMeasureAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAngleMeasureAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    PdfAngleMeasurementAnnotation.prototype._createAngleMeasureAppearance = function () {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var angle = (this._calculateAngle() * (180.0 / Math.PI));\n        if (angle < 0) {\n            angle = -angle;\n        }\n        if (angle > 180) {\n            angle = 360 - angle;\n        }\n        this._dictionary.update('Vertices', this._linePoints);\n        var ds = 'font:' +\n            font._metrics._postScriptName +\n            ' ' +\n            font._size +\n            'pt; color:' +\n            this._colorToHex(this.color);\n        this._dictionary.update('DS', ds);\n        if (this.text === (' ' + angle.toFixed(2) + '°')) {\n            this._dictionary.update('Contents', this.text);\n        }\n        else if (this.text) {\n            this._dictionary.update('Contents', this.text);\n        }\n        if (typeof this.subject === 'undefined') {\n            this._dictionary.update('Subject', 'Angle Measurement');\n        }\n        this._dictionary.update('MeasurementTypes', 1152);\n        this._dictionary.update('Subtype', new _PdfName('PolyLine'));\n        this._dictionary.update('IT', new _PdfName('PolyLineAngle'));\n        var measureDictionary = new _PdfDictionary();\n        var d = [];\n        var t = [];\n        var a = [];\n        var x = [];\n        var v = [];\n        measureDictionary.set('Type', _PdfName.get('measureDictionary'));\n        measureDictionary.set('R', '1 in = 1 in');\n        measureDictionary.set('Subtype', 'RL');\n        measureDictionary.set('TargetUnitConversion', 0.1388889);\n        var dDictionary = new _PdfDictionary();\n        dDictionary.set('U', 'in');\n        dDictionary.set('Type', 'NumberFormat');\n        dDictionary.set('C', 1);\n        dDictionary.set('D', 1);\n        dDictionary.set('SS', '');\n        d.push(dDictionary);\n        var tDictionary = new _PdfDictionary();\n        tDictionary.set('U', '°');\n        tDictionary.set('Type', 'NumberFormat');\n        tDictionary.set('C', 1);\n        tDictionary.set('D', 1);\n        tDictionary.set('FD', true);\n        tDictionary.set('SS', '');\n        t.push(tDictionary);\n        var aDictionary = new _PdfDictionary();\n        aDictionary.set('U', 'sq in');\n        aDictionary.set('Type', 'NumberFormat');\n        aDictionary.set('C', 1);\n        aDictionary.set('D', 1);\n        aDictionary.set('FD', true);\n        aDictionary.set('SS', '');\n        a.push(aDictionary);\n        var vDictionary = new _PdfDictionary();\n        vDictionary.set('U', 'cu in');\n        vDictionary.set('Type', 'NumberFormat');\n        vDictionary.set('C', 1);\n        vDictionary.set('D', 1);\n        vDictionary.set('FD', true);\n        vDictionary.set('SS', '');\n        v.push(vDictionary);\n        var xDictionary = new _PdfDictionary();\n        xDictionary.set('U', 'in');\n        xDictionary.set('Type', 'NumberFormat');\n        xDictionary.set('C', 1);\n        xDictionary.set('D', 1);\n        xDictionary.set('SS', '');\n        x.push(xDictionary);\n        measureDictionary.set('D', d);\n        measureDictionary.set('T', t);\n        measureDictionary.set('A', a);\n        measureDictionary.set('X', x);\n        measureDictionary.set('V', v);\n        if (this._dictionary.has('Measure')) {\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, measureDictionary);\n        measureDictionary._updated = true;\n        this._dictionary.update('Measure', reference);\n        var rectValue = [0, 0, 0, 0];\n        var boundsValue = this._getAngleBoundsValue();\n        var points = this._obtainLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        var graphicspath = new _PdfPath();\n        graphicspath._addRectangle(points[1][0] - this._radius, -(points[1][1] + this._radius), 2 * this._radius, 2 * this._radius);\n        var size = font.measureString(angle.toString() + '°', [0, 0], format, 0, 0);\n        var midPoint = [(this._firstIntersectionPoint[0] + this._secondIntersectionPoint[0]) / 2,\n            ((this._firstIntersectionPoint[1] + this._secondIntersectionPoint[1]) / 2)];\n        var center = [points[1][0], -points[1][1]];\n        var x1 = points[1][0] + this._radius * Math.cos((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var y = points[1][1] + this._radius * Math.sin((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var start = [midPoint[0], midPoint[1]];\n        var xDiff = start[0] - center[0];\n        var yDiff = start[1] - center[1];\n        var midpointAngle = ((Math.atan2(yDiff, xDiff)) * (180.0 / Math.PI));\n        var left = false;\n        var right = false;\n        var up = false;\n        var down = false;\n        if (midpointAngle > 0) {\n            if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                up = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        else {\n            midpointAngle = -midpointAngle;\n            if (midpointAngle === 0) {\n                (new _PdfPath())._addRectangle(boundsValue[0], boundsValue[1], boundsValue[2], boundsValue[3]);\n            }\n            else if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                down = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        if (rectValue[0] === 0 && rectValue[1] === 0 && rectValue[2] === 0 && rectValue[3] === 0) {\n            rectValue = boundsValue;\n            this.bounds = { x: boundsValue[0], y: boundsValue[1], width: boundsValue[2], height: boundsValue[3] };\n        }\n        var path = new _PdfPath();\n        path._pathTypes = pathTypes;\n        path._points = points;\n        this._dictionary.set('Rect', [rectValue[0], rectValue[1], rectValue[0] + rectValue[2], rectValue[1] + rectValue[3]]);\n        var appearance = new PdfAppearance(this, boundsValue);\n        appearance.normal = new PdfTemplate(rectValue, this._crossReference);\n        var template = appearance.normal;\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        var pen = new PdfPen(this._color, width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n        }\n        var brush = new PdfBrush(this._color);\n        graphics.save();\n        path._addArc(points[1][0] - this._radius, points[1][1] - this._radius, 2 * this._radius, 2 * this._radius, this._startAngle, this._sweepAngle);\n        graphics._drawPath(path, pen);\n        if (up) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), -(-y + font._metrics._getHeight() + 2), 0, 0], null, brush);\n        }\n        else if (right) {\n            graphics.drawString(angle.toString() + '°', font, [x1 + 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (left) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - size[0] - 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (down) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), (y + 2), 0, 0], null, brush);\n        }\n        graphics.restore();\n        graphics._template._content.dictionary._updated = true;\n        var reference1 = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference1, graphics._template._content);\n        graphics._template._content.reference = reference1;\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var appearanceDictionary = new _PdfDictionary();\n        appearanceDictionary.set('N', reference1);\n        appearanceDictionary._updated = true;\n        this._dictionary.set('AP', appearanceDictionary);\n        return template;\n    };\n    PdfAngleMeasurementAnnotation.prototype._getAngleBoundsValue = function () {\n        var points = this._obtainLinePoints();\n        for (var i = 0; i < points.length; i++) {\n            points[Number.parseInt(i.toString(), 10)][1] = -points[Number.parseInt(i.toString(), 10)][1];\n        }\n        var path = new _PdfPath();\n        path._points = points;\n        path._pathTypes = [0, 1, 1];\n        return path._getBounds();\n    };\n    PdfAngleMeasurementAnnotation.prototype._obtainLinePoints = function () {\n        var points;\n        var collection;\n        if (this._linePoints) {\n            points = new Array(this._linePoints.length);\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n            collection = new Array(points.length / 2);\n            var count = 0;\n            for (var j = 0; j < points.length; j = j + 2) {\n                collection[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], -points[j + 1]];\n                count++;\n            }\n        }\n        return collection;\n    };\n    PdfAngleMeasurementAnnotation.prototype._calculateAngle = function () {\n        var points = [0, 0];\n        if (typeof this._linePoints !== 'undefined' && this._linePoints.length === 0 && this._isLoaded) {\n            if (this._dictionary.has('Vertices')) {\n                this._linePoints = this._dictionary.get('Vertices');\n            }\n        }\n        for (var i = 0; i < this._linePoints.length; i++) {\n            points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n        }\n        var collection = [];\n        for (var j = 0; j < points.length; j = j + 2) {\n            collection.push([points[Number.parseInt(j.toString(), 10)], points[j + 1]]);\n        }\n        var point1 = collection[0];\n        var point2 = collection[1];\n        var point3 = collection[2];\n        var firstLineDistance = Math.sqrt(Math.pow((point2[0] - point1[0]), 2) + Math.pow((point2[1] - point1[1]), 2));\n        var secondLineDistance = Math.sqrt(Math.pow((point2[0] - point3[0]), 2) + Math.pow((point2[1] - point3[1]), 2));\n        this._radius = Math.min(firstLineDistance, secondLineDistance) / 4;\n        var graphicsPath = new _PdfPath();\n        graphicsPath._points = collection;\n        graphicsPath._pathTypes = [0, 1, 1];\n        var intersectionPoint1;\n        var intersectionPoint2;\n        var value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point1, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._firstIntersectionPoint[0] === 0 && this._firstIntersectionPoint[1] === 0) {\n            this._firstIntersectionPoint = intersectionPoint2;\n        }\n        intersectionPoint1 = [0, 0];\n        intersectionPoint2 = [0, 0];\n        value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point3, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._secondIntersectionPoint[0] === 0 && this._secondIntersectionPoint[1] === 0) {\n            this._secondIntersectionPoint = intersectionPoint2;\n        }\n        var xDiff = this._firstIntersectionPoint[0] - point2[0];\n        var yDiff = this._firstIntersectionPoint[1] - point2[1];\n        var startAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        xDiff = this._secondIntersectionPoint[0] - point2[0];\n        yDiff = this._secondIntersectionPoint[1] - point2[1];\n        var sweepAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        startAngle = startAngle > 0 ? startAngle = 360 - startAngle : -startAngle;\n        sweepAngle = sweepAngle > 0 ? sweepAngle = 360 - sweepAngle : -sweepAngle;\n        if (startAngle === 180 && sweepAngle === 0) {\n            this._startAngle = startAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle === 0 && sweepAngle === 180) {\n            this._startAngle = sweepAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle < 180) {\n            if (startAngle > sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n            else if (startAngle + 180 < sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = (360 - sweepAngle) + startAngle;\n            }\n            else {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n        }\n        else {\n            if (startAngle < sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n            else if (startAngle - 180 > sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = (360 - startAngle) + sweepAngle;\n            }\n            else {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n        }\n        return (Math.atan2((point3[0] - point2[0]), (point3[1] - point2[1])) -\n            Math.atan2((point1[0] - point2[0]), (point1[1] - point2[1])));\n    };\n    PdfAngleMeasurementAnnotation.prototype._findLineCircleIntersectionPoints = function (centerX, centerY, radius, point1, point2, intersection1, intersection2) {\n        var dx = point2[0] - point1[0];\n        var dy = point2[1] - point1[1];\n        var a = dx * dx + dy * dy;\n        var b = 2 * (dx * (point1[0] - centerX) + dy * (point1[1] - centerY));\n        var c = (point1[0] - centerX) * (point1[0] - centerX) + (point1[1] - centerY) * (point1[1] - centerY) - radius * radius;\n        var e = b * b - 4 * a * c;\n        if ((a <= 0.0000001) || (e < 0)) {\n            intersection1 = [Number.NaN, Number.NaN];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else if (e === 0) {\n            var t = -b / (2 * a);\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else {\n            var t = ((-b + Math.sqrt(e)) / (2 * a));\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            t = ((-b - Math.sqrt(e)) / (2 * a));\n            intersection2 = [point1[0] + t * dx, point1[1] + t * dy];\n        }\n        return { first: intersection1, second: intersection2 };\n    };\n    return PdfAngleMeasurementAnnotation;\n}(PdfComment));\nexport { PdfAngleMeasurementAnnotation };\n/**\n * `PdfInkAnnotation` class represents the ink annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ink annotation with the bounds and ink points\n * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfInkAnnotation, _super);\n    function PdfInkAnnotation(points, linePoints) {\n        var _this = _super.call(this) || this;\n        _this._inkPointsCollection = [];\n        _this._previousCollection = [];\n        _this._isModified = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Ink'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n            _this.bounds = { x: points[0], y: points[1], width: points[2], height: points[3] };\n        }\n        if (typeof linePoints !== 'undefined') {\n            _this._linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.inkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfInkAnnotation.prototype, \"inkPointsCollection\", {\n        /**\n         * Gets the ink points collection of the annotation.\n         *\n         * @returns {Array<number[]>} Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfInkAnnotation = page.annotations.at(0) as PdfInkAnnotation;\n         * // Get the ink points collection of the annotation\n         * let inkPointsCollection: Array<number[]> = annotation.inkPointsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._inkPointsCollection.length === 0 && this._dictionary.has('InkList')) {\n                var inkList = this._dictionary.get('InkList');\n                if (Array.isArray(inkList) && inkList.length > 0) {\n                    this._inkPointsCollection = inkList;\n                }\n            }\n            return this._inkPointsCollection;\n        },\n        /**\n         * Sets the ink points collection of the annotation.\n         *\n         * @param {Array<number[]>} value Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * // Create a new ink annotation\n         * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n         * // Set the ink points collection of the annotation\n         * annotation.inkPointsCollection = [[422, 690, 412, 708, 408, 715, 403, 720, 400, 725], [420, 725, 420, 715, 415, 705, 400, 690, 405, 695]];\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && value.length > 0 && value !== this._inkPointsCollection) {\n                this._inkPointsCollection = value;\n                this._isModified = true;\n                if (this._isLoaded) {\n                    this._dictionary.update('InkList', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfInkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfInkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfInkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfInkAnnotation.prototype._postProcess = function () {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var nativeRectangle = this._addInkPoints();\n        var bounds = [nativeRectangle[0],\n            nativeRectangle[1],\n            nativeRectangle[0] + nativeRectangle[2],\n            nativeRectangle[1] + nativeRectangle[3]];\n        this._dictionary.update('Rect', bounds);\n        if (this._setAppearance) {\n            var appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            this._appearanceTemplate = this._createInkAppearance(template);\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n    };\n    PdfInkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._isFlatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._inkPointsCollection.length === 0) {\n                    this._inkPointsCollection = this._obtainInkListCollection();\n                }\n                var rect = this._getInkBoundsValue();\n                var template = new PdfTemplate(rect, this._crossReference);\n                _setMatrix(template, this._getRotationAngle());\n                template._writeTransformation = false;\n                this._appearanceTemplate = this._createInkAppearance(template);\n                this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        if (this._inkPointsCollection.length === 0) {\n                            this._inkPointsCollection = this._obtainInkListCollection();\n                        }\n                        var rect = this._getInkBoundsValue();\n                        var template = new PdfTemplate(rect, this._crossReference);\n                        _setMatrix(template, this._getRotationAngle());\n                        template._writeTransformation = false;\n                        this._appearanceTemplate = this._createInkAppearance(template);\n                        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten &&\n            this._appearanceTemplate &&\n            this._appearanceTemplate._size !== null &&\n            typeof this._appearanceTemplate._size !== 'undefined') {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    PdfInkAnnotation.prototype._createInkAppearance = function (template) {\n        var graphics = template.graphics;\n        if (this._inkPointsCollection !== null &&\n            this._inkPointsCollection.length > 0 &&\n            this.color !== null &&\n            typeof this._color !== 'undefined') {\n            for (var l = 0; l < this._inkPointsCollection.length; l++) {\n                if (this._inkPointsCollection[Number.parseInt(l.toString(), 10)].length % 2 === 0) {\n                    var inkPoints = this._inkPointsCollection[Number.parseInt(l.toString(), 10)];\n                    if (inkPoints.length === 2) {\n                        var locx = inkPoints[0] - 0.5;\n                        var locy = inkPoints[1] - 0.5;\n                        var locw = inkPoints[0] + 0.5;\n                        var loch = inkPoints[1] + 0.5;\n                        inkPoints = [locx, locy, locw, loch];\n                    }\n                    var point = new Array(inkPoints.length / 2);\n                    var count = 0;\n                    for (var j = 0; j < inkPoints.length; j = j + 2) {\n                        point[Number.parseInt(count.toString(), 10)] = [inkPoints[Number.parseInt(j.toString(), 10)], inkPoints[j + 1]];\n                        count++;\n                    }\n                    var pathPointCont = count + (count * 2) - 2;\n                    var pathPoints = new Array(pathPointCont);\n                    var p1 = [];\n                    var p2 = [];\n                    var value = this._getControlPoints(point, p1, p2);\n                    p1 = value.controlP1;\n                    p2 = value.controlP2;\n                    var index = 0;\n                    for (var i = 0; i < pathPointCont - 1; i = i + 3) {\n                        pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(index.toString(), 10)];\n                        pathPoints[i + 1] = p1[Number.parseInt(index.toString(), 10)];\n                        pathPoints[i + 2] = p2[Number.parseInt(index.toString(), 10)];\n                        index++;\n                    }\n                    pathPoints[pathPointCont - 1] = point[point.length - 1];\n                    if (pathPoints !== null) {\n                        var pointsCollection = pathPoints;\n                        for (var k = 0; k < pointsCollection.length; k++) {\n                            var point_1 = pointsCollection[Number.parseInt(k.toString(), 10)];\n                            pointsCollection[Number.parseInt(k.toString(), 10)] = [point_1[0], (-point_1[1])];\n                        }\n                        var path1 = new _PdfPath();\n                        var path2 = null;\n                        if (point.length === 2) {\n                            var width = point[1][0] - point[0][0];\n                            var height = point[1][1] - point[0][1];\n                            path1._addEllipse(point[0][0] + (0.5), -(point[0][1] + height + (0.5)), width, height);\n                            path2 = new _PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = path1._points;\n                        }\n                        else {\n                            path1._addBezierPoints(pointsCollection);\n                            path2 = new _PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = pointsCollection;\n                        }\n                        var borderPen = new PdfPen(this.color, this.border.width);\n                        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                            var state = graphics.save();\n                            graphics.setTransparency(this._opacity);\n                            if (this._isLoaded) {\n                                borderPen._lineCap = PdfLineCap.round;\n                            }\n                            graphics._drawPath(path2, borderPen);\n                            graphics.restore(state);\n                        }\n                        else {\n                            graphics._drawPath(path2, borderPen);\n                        }\n                    }\n                }\n            }\n            if (this._isFlatten) {\n                this.bounds = { x: this.bounds.x,\n                    y: (this._page.size[1] - (this.bounds.y + this.bounds.height)),\n                    width: this.bounds.width,\n                    height: this.bounds.height };\n            }\n        }\n        return template;\n    };\n    PdfInkAnnotation.prototype._getControlPoints = function (point, p1, p2) {\n        if (point === null) {\n            throw new Error('pointCollection');\n        }\n        var pointCount = point.length - 1;\n        if (pointCount < 1) {\n            throw new Error('At least two knot PointFs required pointCollection');\n        }\n        if (pointCount === 1) {\n            p1 = [[((2 * point[0][0] + point[1][0]) / 3), ((2 * point[0][1] + point[1][1]) / 3)]];\n            p2 = [[(2 * p1[0][0] - point[0][0]), (2 * p1[0][1] - point[0][1])]];\n        }\n        var rightVector = [];\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][0] + 2 * point[i + 1][0];\n        }\n        rightVector[0] = point[0][0] + 2 * point[1][0];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][0] + point[Number.parseInt(pointCount.toString(), 10)][0]) / 2.0;\n        var xValue = this._getSingleControlPoint(rightVector);\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][1] + 2 * point[i + 1][1];\n        }\n        rightVector[0] = point[0][1] + 2 * point[1][1];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][1] + point[Number.parseInt(pointCount.toString(), 10)][1]) / 2.0;\n        var yValue = this._getSingleControlPoint(rightVector);\n        p1 = new Array(pointCount);\n        p2 = new Array(pointCount);\n        for (var i = 0; i < pointCount; ++i) {\n            p1[Number.parseInt(i.toString(), 10)] = [xValue[Number.parseInt(i.toString(), 10)], yValue[Number.parseInt(i.toString(), 10)]];\n            if (i < pointCount - 1) {\n                p2[Number.parseInt(i.toString(), 10)] = [2 * point[i + 1][0] - xValue[i + 1], 2 * point[i + 1][1] - yValue[i + 1]];\n            }\n            else {\n                var x = (point[Number.parseInt(pointCount.toString(), 10)][0] + xValue[pointCount - 1]) / 2;\n                var y = (point[Number.parseInt(pointCount.toString(), 10)][1] + yValue[pointCount - 1]) / 2;\n                p2[Number.parseInt(i.toString(), 10)] = [x, y];\n            }\n        }\n        return { controlP1: p1, controlP2: p2 };\n    };\n    PdfInkAnnotation.prototype._getSingleControlPoint = function (rightVector) {\n        var count = rightVector.length;\n        var vector = [];\n        var tmpVector = [];\n        var divisor = 2.0;\n        vector[0] = rightVector[0] / divisor;\n        for (var i = 1; i < count; i++) {\n            tmpVector[Number.parseInt(i.toString(), 10)] = 1 / divisor;\n            divisor = (i < count - 1 ? 4.0 : 3.5) - tmpVector[Number.parseInt(i.toString(), 10)];\n            vector[Number.parseInt(i.toString(), 10)] = (rightVector[Number.parseInt(i.toString(), 10)] - vector[i - 1]) / divisor;\n        }\n        for (var i = 1; i < count; i++) {\n            vector[count - i - 1] -= tmpVector[count - i] * vector[count - i];\n        }\n        return vector;\n    };\n    PdfInkAnnotation.prototype._addInkPoints = function () {\n        var _this = this;\n        var inkCollection = [];\n        if (this._linePoints !== null && (this._previousCollection.length === 0 || this._isModified)) {\n            this._inkPointsCollection.unshift(this._linePoints);\n            this._isModified = false;\n        }\n        var isEqual = _checkInkPoints(this._inkPointsCollection, this._previousCollection);\n        if (this._inkPointsCollection !== null && !isEqual) {\n            for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                var inkList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n                inkCollection.push(inkList);\n            }\n            this._dictionary.update('InkList', inkCollection);\n        }\n        if (this._inkPointsCollection.length > 0) {\n            this._inkPointsCollection.forEach(function (inkList) {\n                _this._previousCollection.push(inkList);\n            });\n        }\n        return this._getInkBoundsValue();\n    };\n    PdfInkAnnotation.prototype._getInkBoundsValue = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this._points) {\n            this.bounds = { x: this._points[0], y: this._points[1], width: this._points[2], height: this._points[3] };\n        }\n        bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var borderWidth = this.border.width;\n        if (this._inkPointsCollection !== null) {\n            if (this._inkPointsCollection.length > 0) {\n                var termsList = [];\n                for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                    var subList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n                    if (subList !== null) {\n                        if (subList.length % 2 === 0) {\n                            for (var j = 0; j < subList.length; j++) {\n                                termsList.push(subList[Number.parseInt(j.toString(), 10)]);\n                            }\n                        }\n                    }\n                }\n                var isTwoPoints = false;\n                if (!this._isLoaded && termsList.length === 2) {\n                    isTwoPoints = true;\n                    termsList.push((termsList[0] + 1));\n                    termsList.push((termsList[1] + 1));\n                }\n                var pointCollection = new Array(termsList.length / 2);\n                var count = 0;\n                for (var j = 0; j < termsList.length; j = j + 2) {\n                    pointCollection[Number.parseInt(count.toString(), 10)] = [termsList[Number.parseInt(j.toString(), 10)],\n                        termsList[j + 1]];\n                    count++;\n                }\n                if (this._isLoaded) {\n                    if (pointCollection.length > 0) {\n                        var xMin = 0;\n                        var yMin = 0;\n                        var xMax = 0;\n                        var yMax = 0;\n                        var first = true;\n                        for (var i = 0; i < pointCollection.length; i++) {\n                            var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                            if (first) {\n                                xMin = point[0];\n                                yMin = point[1];\n                                first = false;\n                            }\n                            else {\n                                if (point[0] < xMin) {\n                                    xMin = point[0];\n                                }\n                                else if (point[0] > xMax) {\n                                    xMax = point[0];\n                                }\n                                if (point[1] < yMin) {\n                                    yMin = point[1];\n                                }\n                                else if (point[1] > yMax) {\n                                    yMax = point[1];\n                                }\n                            }\n                        }\n                        bounds = [xMin, yMin, xMax - xMin, yMax - yMin];\n                        this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n                        if (this._isFlatten || this._setAppearance) {\n                            bounds[0] = this.bounds.x - borderWidth;\n                            bounds[1] = this.bounds.y - borderWidth;\n                            bounds[2] = this.bounds.width + (2 * borderWidth);\n                            bounds[3] = this.bounds.height + (2 * borderWidth);\n                        }\n                    }\n                    else {\n                        if (this._points) {\n                            bounds = this._points;\n                        }\n                        else if (pointCollection.length > 0) {\n                            bounds = this._dictionary.get('Rect');\n                        }\n                        else {\n                            bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n                        }\n                    }\n                }\n                else {\n                    bounds = this._calculateInkBounds(pointCollection, bounds, borderWidth, isTwoPoints);\n                }\n                this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n            }\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._calculateInkBounds = function (pointCollection, bounds, borderWidth, isTwoPoints) {\n        if (pointCollection.length > 5) {\n            var xMin = 0;\n            var yMin = 0;\n            var xMax = 0;\n            var yMax = 0;\n            var first = true;\n            for (var i = 0; i < pointCollection.length; i++) {\n                var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                if (first) {\n                    xMin = point[0];\n                    yMin = point[1];\n                    xMax = point[0];\n                    yMax = point[1];\n                    first = false;\n                }\n                else {\n                    if (point[0] < xMin) {\n                        xMin = point[0];\n                    }\n                    else if (point[0] > xMax) {\n                        xMax = point[0];\n                    }\n                    if (point[1] < yMin) {\n                        yMin = point[1];\n                    }\n                    else if (point[1] > yMax) {\n                        yMax = point[1];\n                    }\n                }\n            }\n            if (bounds[2] < xMax) {\n                xMax = bounds[2];\n            }\n            if (bounds[3] < yMax) {\n                yMax = bounds[3];\n            }\n            bounds = [xMin, yMin, xMax, yMax];\n            if (this._isFlatten || this._setAppearance) {\n                var factor = isTwoPoints ? 2 : 3;\n                bounds[0] = bounds[0] - borderWidth;\n                bounds[1] = bounds[1] - borderWidth;\n                bounds[2] = bounds[2] + (factor * borderWidth);\n                bounds[3] = bounds[3] + (factor * borderWidth);\n            }\n        }\n        else {\n            if (typeof this._points === 'undefined' && pointCollection.length > 0) {\n                bounds = this._dictionary.get('Rect');\n            }\n            else {\n                bounds = this._points;\n            }\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._obtainInkListCollection = function () {\n        var path = [];\n        if (this._dictionary.has('InkList')) {\n            var inkList = this._dictionary.getArray('InkList');\n            var list = [];\n            for (var i = 0; i < inkList.length; i++) {\n                var innerList = inkList[Number.parseInt(i.toString(), 10)];\n                for (var j = 0; j < innerList.length; j++) {\n                    list.push(innerList[Number.parseInt(j.toString(), 10)]);\n                }\n                path.push(list);\n            }\n        }\n        return path;\n    };\n    return PdfInkAnnotation;\n}(PdfComment));\nexport { PdfInkAnnotation };\n/**\n * `PdfPopupAnnotation` class represents the popup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new popup annotation\n * const annotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPopupAnnotation, _super);\n    function PdfPopupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfPopupIcon.note;\n        _this._iconString = '';\n        _this._stateModel = PdfAnnotationStateModel.none;\n        _this._state = PdfAnnotationState.none;\n        _this._open = false;\n        _this._isReview = false;\n        _this._isComment = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Text'));\n        if (typeof text !== 'undefined') {\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.popupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"open\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has open or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the boolean flag indicating whether annotation has open or not.\n         * let open: boolean =  annotation.open;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Open')) {\n                this._open = this._dictionary.get('Open');\n            }\n            return this._open;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has open or not.\n         *\n         * @param {boolean} value Open.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the boolean flag indicating whether annotation has open or not.\n         * annotation.open = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._open = value;\n                this._dictionary.update('Open', this._open);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the popup annotation.\n         *\n         * @returns {PdfPopupIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the icon type of the popup annotation.\n         * let icon: PdfPopupIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapPopupIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the popup annotation.\n         *\n         * @param {PdfPopupIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the icon type of the popup annotation.\n         * annotation.icon = PdfPopupIcon.newParagraph;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"stateModel\", {\n        /**\n         * Gets the state model of the popup annotation.\n         *\n         * @returns {PdfAnnotationStateModel} Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state model of the popup annotation.\n         * let stateModel: PdfAnnotationStateModel = annotation.stateModel;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('StateModel')) {\n                this._stateModel = _mapAnnotationStateModel(this._dictionary.get('StateModel'));\n            }\n            return this._stateModel;\n        },\n        /**\n         * Sets the state model of the popup annotation.\n         *\n         * @param {PdfAnnotationStateModel} value Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state model of the popup annotation.\n         * annotation.stateModel = PdfAnnotationStateModel.marked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._stateModel = value;\n                this._dictionary.update('StateModel', _reverseMapAnnotationStateModel(this._stateModel));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"state\", {\n        /**\n         * Gets the state of the popup annotation.\n         *\n         * @returns {PdfAnnotationState} Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state of the popup annotation.\n         * let state: PdfAnnotationState = annotation.state;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('State')) {\n                this._state = _mapAnnotationState(this._dictionary.get('State'));\n            }\n            return this._state;\n        },\n        /**\n         * Sets the state of the popup annotation.\n         *\n         * @param {PdfAnnotationState} value Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state of the popup annotation.\n         * annotation.state = PdfAnnotationState.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._state = value;\n                this._dictionary.update('State', _reverseMapAnnotationState(this._state));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPopupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPopupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        if (dictionary.has('IRT')) {\n            annot._isReview = _checkReview(dictionary);\n            if (!annot._isReview) {\n                annot._isComment = _checkComment(dictionary);\n            }\n        }\n        return annot;\n    };\n    PdfPopupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPopupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var rectangle = [this.bounds.x, this.bounds.y, (this.bounds.x + this.bounds.width),\n            (this.bounds.y + this.bounds.height)];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createPopupAppearance();\n            if (this._appearanceTemplate) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dictionary = new _PdfDictionary();\n                this._appearanceTemplate._content.dictionary._updated = true;\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                this._appearanceTemplate._content.reference = reference;\n                dictionary.set('N', reference);\n                dictionary._updated = true;\n                this._dictionary.set('AP', dictionary);\n            }\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfPopupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!this._appearanceTemplate && this._isFlattenPopups && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (this._appearanceTemplate !== null) {\n                        var state = this._page.graphics.save();\n                        if (this.opacity < 1) {\n                            this._page.graphics.setTransparency(this.opacity);\n                        }\n                        this._page.graphics.drawTemplate(this._appearanceTemplate, this.bounds);\n                        this._page.graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createPopupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && this.flatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten) {\n            this._removeAnnotation(this._page, this);\n        }\n    };\n    PdfPopupAnnotation.prototype._createPopupAppearance = function () {\n        var template;\n        if (this._dictionary.has('Name')) {\n            if (this._dictionary.get('Name').name === 'Comment') {\n                if (this._dictionary.has('Rect')) {\n                    var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n                    template = new PdfTemplate(nativeRectangle, this._crossReference);\n                    _setMatrix(template, this._getRotationAngle());\n                    var graphics = template.graphics;\n                    var rectValue = this._dictionary.getArray('Rect');\n                    if (rectValue !== null) {\n                        var pen = new PdfPen([0, 0, 0], 0.3);\n                        var brush = new PdfBrush(this.color);\n                        var pen1 = new PdfPen([255, 255, 255], 1);\n                        var points = new Array();\n                        points.push([6, 8]);\n                        points.push([9, 8]);\n                        points.push([4, 12]);\n                        var path = new _PdfPath();\n                        if (this.color[0] === 0 && this.color[0] === 0 && this.color[0] === 0) {\n                            brush = new PdfBrush([255, 215, 0]);\n                        }\n                        graphics.save();\n                        var template_1 = new PdfTemplate([0, 0, 15, 14], this._crossReference);\n                        template_1.graphics.drawRectangle(0, 0, 15, 14, pen, brush);\n                        template_1.graphics.drawPolygon(points, pen, new PdfBrush([255, 255, 255]));\n                        path._addEllipse(2, 2, 11, 8);\n                        template_1.graphics._drawPath(path, pen, new PdfBrush([255, 255, 255]));\n                        template_1.graphics.drawArc(2, 2, 11, 8, 108, 12.7, pen1);\n                        template_1.graphics.drawLine(pen, 4, 12, 6.5, 10);\n                        graphics.drawTemplate(template_1, { x: 0, y: 0, width: this.bounds.width, height: this.bounds.height });\n                        graphics.restore();\n                    }\n                }\n            }\n        }\n        return template;\n    };\n    PdfPopupAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfPopupIcon.note:\n                this._iconString = 'Note';\n                break;\n            case PdfPopupIcon.comment:\n                this._iconString = 'Comment';\n                break;\n            case PdfPopupIcon.help:\n                this._iconString = 'Help';\n                break;\n            case PdfPopupIcon.insert:\n                this._iconString = 'Insert';\n                break;\n            case PdfPopupIcon.key:\n                this._iconString = 'Key';\n                break;\n            case PdfPopupIcon.newParagraph:\n                this._iconString = 'NewParagraph';\n                break;\n            case PdfPopupIcon.paragraph:\n                this._iconString = 'Paragraph';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfPopupAnnotation;\n}(PdfComment));\nexport { PdfPopupAnnotation };\n/**\n * `PdfFileLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new file link annotation\n * let annotation: PdfFileLinkAnnotation = new PdfFileLinkAnnotation(10, 40, 30, 30, \"image.png\");\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFileLinkAnnotation, _super);\n    function PdfFileLinkAnnotation(x, y, width, height, fileName) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined' && fileName !== null) {\n            _this._fileName = fileName;\n        }\n        _this._type = _PdfAnnotationType.fileLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfFileLinkAnnotation.prototype, \"action\", {\n        /**\n         * Gets the action of the annotation.\n         *\n         * @returns {string} Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Gets the action of the annotation.\n         * let action: string = annotation.action;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._action === 'undefined' && this._dictionary.has('A')) {\n                var dictionary = this._dictionary.get('A');\n                if (dictionary && dictionary.has('Next')) {\n                    var action = dictionary.get('Next');\n                    if (Array.isArray(action)) {\n                        for (var i = 0; i < action.length; i++) {\n                            var reference = action[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var actionDictionary = this._crossReference._fetch(reference);\n                                if (actionDictionary.has('JS')) {\n                                    this._action = actionDictionary.get('JS');\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return this._action;\n        },\n        /**\n         * Sets the action of the annotation.\n         *\n         * @param {string} value Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Sets the action of the annotation.\n         * annotation.action = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value === 'string') {\n                this._action = value;\n            }\n            if (this._isLoaded && typeof value === 'string') {\n                if (this.action !== value && this._dictionary.has('A')) {\n                    var dictionary = this._dictionary.get('A');\n                    if (dictionary && dictionary.has('Next')) {\n                        var action = dictionary.get('Next');\n                        if (Array.isArray(action)) {\n                            for (var i = 0; i < action.length; i++) {\n                                var reference = action[Number.parseInt(i.toString(), 10)];\n                                if (reference && reference instanceof _PdfReference) {\n                                    var actionDictionary = this._crossReference._fetch(reference);\n                                    if (actionDictionary.has('JS')) {\n                                        actionDictionary.update('JS', value);\n                                        this._action = value;\n                                        this._dictionary._updated = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFileLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFileLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfFileLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfFileLinkAnnotation.prototype._addAction = function () {\n        var _this = this;\n        if (this._dictionary.has('A')) {\n            var action = this._dictionary.get('A');\n            if (action) {\n                if (typeof this._action !== 'undefined' && this._action !== null && action.has('Next')) {\n                    var nextAction = action.get('Next');\n                    if (Array.isArray(nextAction) && nextAction.length > 0) {\n                        nextAction.forEach(function (reference) {\n                            if (reference && reference instanceof _PdfReference && reference._isNew) {\n                                _this._crossReference._cacheMap.delete(reference);\n                            }\n                        });\n                    }\n                }\n                if (action.has('F')) {\n                    _removeDuplicateReference(action, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'A');\n        }\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('Launch'));\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('Filespec'));\n        fileDictionary.set('UF', this._fileName);\n        if (typeof this._action !== 'undefined' && this._action !== null) {\n            var actionDictionary = new _PdfDictionary();\n            actionDictionary.set('Type', _PdfName.get('Action'));\n            actionDictionary.set('S', _PdfName.get('JavaScript'));\n            actionDictionary.set('JS', this._action);\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, actionDictionary);\n            actionDictionary._updated = true;\n            dictionary.set('Next', [ref]);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileDictionary);\n        fileDictionary._updated = true;\n        dictionary.set('F', reference);\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfFileLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfFileLinkAnnotation };\n/**\n * `PdfUriAnnotation` class represents the URI annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new URI annotation\n * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100, ‘http://www.google.com’);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(x, y, width, height, uri) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof uri !== 'undefined' && uri !== null) {\n            _this._uri = uri;\n        }\n        _this._type = _PdfAnnotationType.uriAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        /**\n         * Gets the uri of the annotation.\n         *\n         * @returns {string} Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfUriAnnotation = page.annotations.at(0) as PdfUriAnnotation;\n         * // Gets the uri of the annotation.\n         * let uri: string = annotation.uri;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._uri === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._uri = linkDict.get('URI');\n                }\n            }\n            return this._uri;\n        },\n        /**\n         * Sets the uri of the annotation.\n         *\n         * @param {string} value Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new URI annotation\n         * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100);\n         * // Sets the uri of the annotation\n         * annotation.uri = ‘http://www.google.com’;\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A') && value !== this.uri) {\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict.has('URI')) {\n                        this._uri = value;\n                        linkDict.update('URI', value);\n                        this._dictionary._updated = true;\n                    }\n                }\n                else {\n                    this._uri = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfUriAnnotation._load = function (page, dictionary) {\n        var annot = new PdfUriAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfUriAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfUriAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfUriAnnotation.prototype._addAction = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._uri !== 'undefined') {\n            dictionary.set('URI', this._uri);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n    };\n    PdfUriAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfUriAnnotation;\n}(PdfAnnotation));\nexport { PdfUriAnnotation };\n/**\n * `PdfDocumentLinkAnnotation` class represents the document link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new document link annotation\n * let annotation: PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(100, 150, 40, 60);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.documentLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        /**\n         * Gets the destination of the annotation.\n         *\n         * @returns {PdfDestination} Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the destination of the annotation.\n         * let destination: PdfDestination =annotation.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this.destination = this._obtainDestination();\n            }\n            return this._destination;\n        },\n        /**\n         * Sets the destination of the annotation.\n         *\n         * @param {PdfDestination} value Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== null) {\n                this._destination = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfDocumentLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfDocumentLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfDocumentLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        this._addDocument();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfDocumentLinkAnnotation.prototype._obtainDestination = function () {\n        if (this._dictionary.has('Dest')) {\n            var array = this._dictionary.get('Dest'); // eslint-disable-line\n            var holder = void 0;\n            if (array[0] instanceof _PdfReference) {\n                holder = array[0];\n            }\n            if ((typeof holder === 'undefined' || holder === null) && typeof array[0] === 'number') {\n                var pageNumber = array[0];\n                var page = this._crossReference._document.getPage(pageNumber);\n                if (page) {\n                    var mode = array[1];\n                    if (mode.name === 'XYZ') {\n                        var left = array[2];\n                        var top_3 = array[3];\n                        var zoom = array[4];\n                        var topValue = (typeof top_3 !== 'undefined' && top_3 !== null) ? (page.size[1] - top_3) : 0;\n                        var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                        this._destination = new PdfDestination(page, [leftValue, topValue]);\n                        if (typeof zoom !== 'undefined' && zoom !== null) {\n                            this._destination.zoom = zoom;\n                        }\n                        if ((typeof left === 'undefined' && left === null) || (typeof top_3 === 'undefined' && top_3 === null)\n                            || (typeof zoom === 'undefined' && zoom === null)) {\n                            this._destination._setValidation(false);\n                        }\n                    }\n                    else {\n                        this._destination = new PdfDestination(page);\n                        this._destination.mode = PdfDestinationMode.fitToPage;\n                    }\n                }\n            }\n            if (holder) {\n                var index = _getPageIndex(this._crossReference._document, this._crossReference._fetch(holder));\n                if (index >= 0) {\n                    var page = this._crossReference._document.getPage(index);\n                    if (page && array[1] instanceof _PdfName) {\n                        var mode = array[1];\n                        if (mode) {\n                            if (mode.name === 'XYZ') {\n                                var left = array[2];\n                                var top_4 = array[3];\n                                var zoom = array[4];\n                                var topValue = (typeof top_4 !== 'undefined' && top_4 !== null) ? (page.size[1] - top_4) : 0;\n                                var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                if (typeof zoom !== 'undefined' && zoom !== null) {\n                                    this._destination.zoom = zoom;\n                                }\n                                if ((typeof left === 'undefined' && left === null) || (typeof top_4 === 'undefined' && top_4 === null)\n                                    || (typeof zoom === 'undefined' && zoom === null)) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n                else {\n                    this._destination = new PdfDestination();\n                    var zoom = array[4];\n                    var mode = array[1];\n                    if (typeof zoom !== 'undefined' && zoom !== null) {\n                        this._destination.zoom = zoom;\n                    }\n                    if (mode.name === 'Fit') {\n                        this._destination.mode = PdfDestinationMode.fitToPage;\n                    }\n                    else if (mode.name === 'XYZ') {\n                        var left = array[2];\n                        var topValue = array[3];\n                        if ((typeof left === 'undefined' && left === null) || (typeof topValue === 'undefined' && topValue === null)\n                            || (typeof zoom === 'undefined' && zoom === null)) {\n                            this._destination._setValidation(false);\n                        }\n                    }\n                    this._destination._index = index;\n                }\n            }\n        }\n        else if (this._dictionary.has('A') && !this._destination) {\n            var action = this._dictionary.get('A');\n            if (action.has('D')) {\n                var reference = action.get('D'); // eslint-disable-line\n                if (reference !== null && typeof reference !== 'undefined') {\n                    var referenceArray = void 0; // eslint-disable-line\n                    if (Array.isArray(reference)) {\n                        referenceArray = reference;\n                    }\n                    else if (reference instanceof _PdfReference) {\n                        var referenceValue = this._crossReference._fetch(reference); // eslint-disable-line\n                        if (Array.isArray(referenceValue)) {\n                            referenceArray = referenceValue;\n                        }\n                    }\n                    if (referenceArray && (referenceArray[0] instanceof _PdfReference || typeof referenceArray[0] === 'number')) {\n                        var document_1 = this._crossReference._document;\n                        var index = void 0;\n                        if (referenceArray[0] instanceof _PdfReference) {\n                            index = _getPageIndex(document_1, this._crossReference._fetch(referenceArray[0]));\n                        }\n                        else {\n                            index = referenceArray[0];\n                        }\n                        var page = document_1.getPage(index);\n                        if (page) {\n                            var mode = referenceArray[1];\n                            if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                                var top_5 = referenceArray[2];\n                                var topValue = (typeof top_5 !== 'undefined' && top_5 !== null) ? (page.size[1] - top_5) : 0;\n                                this._destination = new PdfDestination(page, [0, topValue]);\n                                if (typeof top_5 === 'undefined' || top_5 === null) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'XYZ') {\n                                var left = referenceArray[2];\n                                var top_6 = referenceArray[3];\n                                var zoom = referenceArray[4];\n                                var topValue = (typeof top_6 !== 'undefined' && top_6 !== null) ? (page.size[1] - top_6) : 0;\n                                var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                if (typeof zoom !== 'undefined' && zoom !== null) {\n                                    this._destination.zoom = zoom;\n                                }\n                                if ((typeof left !== 'undefined' && left !== null) || (typeof top_6 !== 'undefined' && top_6 !== null)\n                                    || (typeof zoom !== 'undefined' && zoom !== null)) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'FitR') {\n                                if (referenceArray.length === 6) {\n                                    var left = referenceArray[2];\n                                    var bottom = referenceArray[3];\n                                    var right = referenceArray[4];\n                                    var top_7 = referenceArray[5];\n                                    this._destination = new PdfDestination(page, [left, bottom, right, top_7]);\n                                }\n                            }\n                            else if (mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return this._destination;\n    };\n    PdfDocumentLinkAnnotation.prototype._addDocument = function () {\n        if (this.destination) {\n            this._dictionary.set('Dest', this.destination._array);\n        }\n    };\n    PdfDocumentLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfDocumentLinkAnnotation };\n/**\n * `PdfTextWebLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF string format\n * const format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n * // Create a new standard font\n * const font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n * // Get the text size\n * let size: number[] = font.measureString(\"Syncfusion Site\", format, [0, 0], 0, 0);\n * // Create a new text web link annotation\n * let annot: PdfTextWebLinkAnnotation = new PdfTextWebLinkAnnotation(50, 40, size[0], size[1], [0, 0, 0], [165, 42, 42], 1);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextWebLinkAnnotation, _super);\n    function PdfTextWebLinkAnnotation(x, y, width, height, brushColor, penColor, penWidth, text) {\n        var _this = _super.call(this) || this;\n        _this._isActionAdded = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._textWebLink = typeof text !== 'undefined' && text !== null ? text : '';\n        if (typeof brushColor !== 'undefined' && brushColor !== null) {\n            _this._brush = new PdfBrush(brushColor);\n        }\n        if (typeof penColor !== 'undefined' && penColor !== null) {\n            _this._pen = new PdfPen(penColor, penWidth ? penWidth : 1);\n        }\n        _this._type = _PdfAnnotationType.textWebLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"url\", {\n        /**\n         * Gets the url of the annotation.\n         *\n         * @returns {string} Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the URL of the annotation.\n         * let url: string = annotation.url;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._url === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._url = linkDict.get('URI');\n                }\n            }\n            return this._url;\n        },\n        /**\n         * Sets the url of the annotation.\n         *\n         * @param {string} value Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the URL of the annotation.\n         * annotation.url = ‘http://www.syncfusion.com’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A')) {\n                    var linkSource = this._dictionary._get('A'); // eslint-disable-line\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict && linkDict.has('URI')) {\n                        this._url = value;\n                        linkDict.update('URI', value);\n                        if (!(linkSource instanceof _PdfReference)) {\n                            this._dictionary._updated = linkDict._updated;\n                        }\n                    }\n                }\n                else {\n                    this._url = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextWebLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextWebLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextWebLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        if (!this._isActionAdded) {\n            this._addAction();\n            this._isActionAdded = true;\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfTextWebLinkAnnotation.prototype._addAction = function () {\n        var rect = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        if (typeof this.font === 'undefined' || this.font === null) {\n            this.font = this._lineCaptionFont;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        this._page.graphics.drawString(this._textWebLink, this.font, rect, this._pen, this._brush, format);\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._url !== 'undefined') {\n            dictionary.set('URI', this._url);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [0, 0, 0]);\n    };\n    PdfTextWebLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfTextWebLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfTextWebLinkAnnotation };\n/**\n * `PdfAttachmentAnnotation` class represents the attachment annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new attachment annotation\n * const annotation: PdfAttachmentAnnotation = new PdfAttachmentAnnotation(300, 200, 30, 30, \"Nature.jpg\", imageData);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAttachmentAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAttachmentAnnotation, _super);\n    function PdfAttachmentAnnotation(x, y, width, height, fileName, data) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfAttachmentIcon.pushPin;\n        _this._iconString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        _this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        _this._type = _PdfAnnotationType.fileAttachmentAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAttachmentAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the attachment annotation.\n         *\n         * @returns {PdfAttachmentIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Gets the icon type of the attachment annotation.\n         * let icon: PdfAttachmentIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapAttachmentIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the attachment annotation.\n         *\n         * @param {PdfAttachmentIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Sets the icon type of the attachment annotation.\n         * annotation.icon = PdfAttachmentIcon.pushPin;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAttachmentAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAttachmentAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAttachmentAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAttachmentAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n        this._addAttachment();\n    };\n    PdfAttachmentAnnotation.prototype._addAttachment = function () {\n        if (this._dictionary.has('FS')) {\n            var fileSpecification = this._dictionary.get('FS');\n            if (fileSpecification && fileSpecification.has('EF')) {\n                var embeddedFile = fileSpecification.get('EF');\n                if (embeddedFile && embeddedFile.has('F')) {\n                    _removeDuplicateReference(embeddedFile, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'FS');\n        }\n        var fileSpectDictionary = new _PdfDictionary();\n        fileSpectDictionary.set('Type', _PdfName.get('Filespec'));\n        fileSpectDictionary.set('Desc', this._fileName);\n        fileSpectDictionary.set('F', this._fileName);\n        fileSpectDictionary.set('UF', this._fileName);\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('EmbeddedFile'));\n        var paramsDictionary = new _PdfDictionary();\n        var dateTime = new Date();\n        paramsDictionary.set('CreationDate', dateTime.toTimeString());\n        paramsDictionary.set('ModDate', new Date().toTimeString());\n        paramsDictionary.set('Size', this._stream.length);\n        fileDictionary.set('Params', paramsDictionary);\n        this._stream.dictionary = new _PdfDictionary();\n        this._stream.dictionary = fileDictionary;\n        fileDictionary._crossReference = this._crossReference;\n        var char1 = this._crossReference._newLine.charCodeAt(0);\n        var char2 = this._crossReference._newLine.charCodeAt(1);\n        var buffer = [char1, char2, 37, 80, 68, 70, 45];\n        fileDictionary._crossReference._writeObject(this._stream, buffer);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, this._stream);\n        fileDictionary._updated = true;\n        var efileDictionary = new _PdfDictionary();\n        efileDictionary.set('F', reference);\n        fileSpectDictionary.set('EF', efileDictionary);\n        var fsReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fsReference, fileSpectDictionary);\n        fileSpectDictionary._updated = true;\n        this._dictionary.update('FS', fsReference);\n    };\n    PdfAttachmentAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    PdfAttachmentAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfAttachmentIcon.pushPin:\n                this._iconString = 'PushPin';\n                break;\n            case PdfAttachmentIcon.tag:\n                this._iconString = 'Tag';\n                break;\n            case PdfAttachmentIcon.graph:\n                this._iconString = 'Graph';\n                break;\n            case PdfAttachmentIcon.paperClip:\n                this._iconString = 'Paperclip';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfAttachmentAnnotation;\n}(PdfComment));\nexport { PdfAttachmentAnnotation };\n/**\n * `Pdf3DAnnotation` class represents the 3D annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: Pdf3DAnnotation = page.annotations.at(0) as Pdf3DAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar Pdf3DAnnotation = /** @class */ (function (_super) {\n    __extends(Pdf3DAnnotation, _super);\n    /**\n     * Initializes a new instance of the `Pdf3DAnnotation` class.\n     *\n     * @private\n     */\n    function Pdf3DAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.movieAnnotation;\n        return _this;\n    }\n    Pdf3DAnnotation._load = function (page, dictionary) {\n        var annot = new Pdf3DAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    Pdf3DAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    Pdf3DAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return Pdf3DAnnotation;\n}(PdfAnnotation));\nexport { Pdf3DAnnotation };\n/**\n * `PdfTextMarkupAnnotation` class represents the text markup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new text markup annotation\n * let annotation: PdfTextMarkupAnnotation = new PdfTextMarkupAnnotation('Text markup', 50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextMarkupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextMarkupAnnotation, _super);\n    function PdfTextMarkupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textMarkupType = PdfTextMarkupAnnotationType.highlight;\n        _this._quadPoints = new Array(8);\n        _this._boundsCollection = [];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        if (typeof text !== 'undefined') {\n            _this._text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n            _this._boundsCollection.push([_this.bounds.x, _this.bounds.y, _this.bounds.width, _this.bounds.height]);\n        }\n        _this._type = _PdfAnnotationType.textMarkupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the textMarkUp Color type of the attachment annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined' && this._dictionary.has('C')) {\n                this._textMarkUpColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the textMarkUp Color type of the attachment annotation.\n         * annotation.textMarkUpColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._textMarkUpColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkupType\", {\n        /**\n         * Gets the markup type of the annotation.\n         *\n         * @returns {PdfTextMarkupAnnotationType} Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup type of the annotation.\n         * let textMarkupType: PdfTextMarkupAnnotationType = annotation.textMarkupType;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Subtype')) {\n                var text = this._dictionary.get('Subtype');\n                this._textMarkupType = _mapMarkupAnnotationType(text.name);\n            }\n            return this._textMarkupType;\n        },\n        /**\n         * Sets the markup type of the annotation.\n         *\n         * @param {PdfTextMarkupAnnotationType} value Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup type of the annotation.\n         * annotation.textMarkupType = PdfTextMarkupAnnotationType.squiggly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._textMarkupType = value;\n                this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(value)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"boundsCollection\", {\n        /**\n         * Gets the markup bounds collection of the annotation.\n         *\n         * @returns {Array<number[]>} Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation =  page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup bounds collection of the annotation.\n         * let boundsCollection : Array<number[]> = annotation.boundsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var collection = [];\n                if (this._dictionary.has('QuadPoints')) {\n                    var points = this._dictionary.getArray('QuadPoints');\n                    if (points && points.length > 0) {\n                        var count = points.length / 8;\n                        for (var i = 0; i < count; i++) {\n                            var x = points[4 + (i * 8)] - points[i * 8];\n                            var y = points[5 + (i * 8)] - points[1 + (i * 8)];\n                            var height = Math.sqrt((x * x) + (y * y));\n                            x = points[6 + (i * 8)] - points[4 + (i * 8)];\n                            y = points[7 + (i * 8)] - points[5 + (i * 8)];\n                            var width = Math.sqrt((x * x) + (y * y));\n                            var rect = [points[i * 8], this._page.size[1] - points[1 + (i * 8)], width, height];\n                            collection.push(rect);\n                        }\n                    }\n                }\n                return collection;\n            }\n            return this._boundsCollection;\n        },\n        /**\n         * Sets the markup bounds collection of the annotation.\n         *\n         * @param {Array<number[]>} value Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup bounds collection of the  annotation.\n         * annotation.boundsCollection = [[50, 50, 100, 100], [201, 101, 61, 31], [101, 401, 61, 31]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value !== 'undefined') {\n                if (this._boundsCollection.length > 0) {\n                    this._quadPoints = new Array(8 + (value.length * 8));\n                    for (var i = 0; i < value.length; i++) {\n                        this._boundsCollection.push(value[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n                else {\n                    this._quadPoints = new Array(8);\n                    this._boundsCollection = value;\n                }\n            }\n            if (this._isLoaded && typeof value !== 'undefined') {\n                var isChanged = false;\n                if (this.boundsCollection.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this.boundsCollection[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n                if (isChanged) {\n                    this._quadPoints = new Array((value.length * 8));\n                    var pageHeight = this._page.size[1];\n                    for (var i = 0; i < value.length; i++) {\n                        this._quadPoints[0 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[1 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[2 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[3 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[4 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[5 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[1 + (i * 8)] -\n                            value[Number.parseInt(i.toString(), 10)][3];\n                        this._quadPoints[6 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[7 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[5 +\n                            (Number.parseInt(i.toString(), 10) * 8)];\n                    }\n                    this._dictionary.update('QuadPoints', this._quadPoints);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextMarkupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextMarkupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextMarkupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextMarkupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            dictionary.set('W', this.border.width);\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        var size = this._page.size;\n        this._setQuadPoints(size);\n        var rect = [this.bounds.x,\n            size[1] - (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(this._textMarkupType)));\n        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createMarkupAppearance();\n            if (!this._isLoaded && this._boundsCollection.length > 1) {\n                var native = this._obtainNativeRectangle();\n                this._dictionary.update('Rect', [native[0], native[1], native[0] + native[2], native[1] + native[3]]);\n            }\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        if (typeof this._text !== 'undefined' && this._text !== null) {\n            this._dictionary.set('Contents', this._text);\n        }\n    };\n    PdfTextMarkupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createMarkupAppearance();\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createMarkupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (isNormalMatrix && this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (!this._dictionary.has('AP') && this._appearanceTemplate) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfTextMarkupAnnotation.prototype._createMarkupAppearance = function () {\n        var width;\n        var height = 0;\n        var rectangle;\n        if (this.boundsCollection.length > 1) {\n            var pdfPath = new _PdfPath();\n            for (var i = 0; i < this.boundsCollection.length; i++) {\n                var bounds = [];\n                bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                pdfPath._addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            }\n            var rect = pdfPath._getBounds();\n            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n            this.bounds = rectangle;\n            width = rectangle.width;\n            height = rectangle.height;\n        }\n        else {\n            if (this._dictionary.has('QuadPoints')) {\n                var quadPoints = this._dictionary.get('QuadPoints');\n                if (this._quadPoints !== null) {\n                    for (var i = 0; i < (quadPoints.length / 8); i++) {\n                        if (this._isLoaded) {\n                            var point = new Array();\n                            var j = 0;\n                            for (var k = 0; k < quadPoints.length;) {\n                                var x1 = quadPoints[Number.parseInt(k.toString(), 10)];\n                                var y1 = quadPoints[k + 1];\n                                point[Number.parseInt(j.toString(), 10)] = [x1, y1];\n                                k = k + 2;\n                                j++;\n                            }\n                            var path = new _PdfPath();\n                            path._addLines(point);\n                            var rect = path._getBounds();\n                            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n                            width = rectangle.width;\n                            height = rectangle.height;\n                        }\n                        else {\n                            var x = Math.floor(quadPoints[4 + (i * 8)]) - Math.floor(quadPoints[0 + (i * 8)]);\n                            var y = Math.floor(quadPoints[5 + (i * 8)]) - Math.floor(quadPoints[1 + (i * 8)]);\n                            height = Math.sqrt((x * x) + (y * y));\n                            x = Math.floor(quadPoints[6 + (i * 8)]) - Math.floor(quadPoints[4 + (i * 8)]);\n                            y = Math.floor(quadPoints[7 + (i * 8)]) - Math.floor(quadPoints[5 + (i * 8)]);\n                            width = Math.sqrt((x * x) + (y * y));\n                            this.bounds = { x: this.bounds.x, y: this.bounds.y, width: width, height: height };\n                        }\n                    }\n                }\n            }\n        }\n        var nativeRectangle = [0, 0, width, height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var graphics = template.graphics;\n        if (typeof this.opacity !== 'undefined') {\n            graphics.setTransparency(this.opacity, this.opacity, PdfBlendMode.multiply);\n        }\n        if (this.textMarkUpColor) {\n            var pdfPen = new PdfPen(this.textMarkUpColor, this.border.width);\n            var brush = new PdfBrush(this.textMarkUpColor);\n            var x1 = 0;\n            var y1 = 0;\n            var w1 = 0;\n            var h1 = 0;\n            if (this.boundsCollection.length > 1) {\n                for (var i = 0; i < this.boundsCollection.length; i++) {\n                    var bounds = [];\n                    bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                    bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                    bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                    if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                        graphics.drawRectangle(bounds[0] - rectangle.x, bounds[1] - rectangle.y, bounds[2], bounds[3], brush);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                        pdfPen._width = bounds[3] * 0.02;\n                        graphics.save();\n                        graphics.translateTransform(bounds[0] - rectangle.x, (bounds[1] - rectangle.y));\n                        graphics.setClip([0, 0, bounds[2], bounds[3]]);\n                        graphics._drawPath(this._drawSquiggly(bounds[2], bounds[3]), pdfPen);\n                        graphics.restore();\n                    }\n                }\n            }\n            else {\n                if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                    graphics.drawRectangle(0, 0, width, height, brush);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                    graphics.drawLine(pdfPen, 0, height - ((height / 2) / 3), width, height - ((height / 2) / 3));\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                    graphics.drawLine(pdfPen, 0, height / 2, width, height / 2);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                    pdfPen._width = height * 0.02;\n                    graphics._drawPath(this._drawSquiggly(Math.round(width), Math.round(height)), pdfPen);\n                }\n                if (this._isLoaded) {\n                    this._dictionary.update('Rect', [rectangle.x, rectangle.y, rectangle.x + rectangle.width, rectangle.y + rectangle.height]);\n                }\n            }\n        }\n        return template;\n    };\n    PdfTextMarkupAnnotation.prototype._drawSquiggly = function (width, height) {\n        if (Math.floor(width) % 2 !== 0 || Math.round(width) > width) {\n            width = Math.floor(width) + 1;\n        }\n        var path = new _PdfPath();\n        var pathPoints = new Array();\n        var pathPointsCount = Math.ceil((width / height) * 16);\n        var length = width / (pathPointsCount / 2);\n        var location = parseFloat(((length + length) * 0.6).toFixed(2));\n        var zigZag = location;\n        var x = 0;\n        for (var i = 0; i < pathPointsCount; i++) {\n            var y = ((height - location) + zigZag) - (height * 0.02);\n            var temp = [x, parseFloat(y.toFixed(2))];\n            pathPoints.push(temp);\n            if (zigZag === 0) {\n                zigZag = location;\n            }\n            else {\n                zigZag = 0;\n            }\n            x = x + length;\n        }\n        path._addLines(pathPoints);\n        return path;\n    };\n    PdfTextMarkupAnnotation.prototype._setQuadPoints = function (pageSize) {\n        var textQuadLocation = [];\n        var pageHeight = pageSize[1];\n        this._boundsCollection[0] = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var noofRect = this._quadPoints.length / 8;\n        for (var i = 0; i < noofRect; i++) {\n            var locationX = this._boundsCollection[Number.parseInt(i.toString(), 10)][0];\n            var locationY = this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n            textQuadLocation[0 + (i * 8)] = locationX;\n            textQuadLocation[1 + (i * 8)] = (pageHeight - locationY);\n            textQuadLocation[2 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]);\n            textQuadLocation[3 + (i * 8)] = (pageHeight - locationY);\n            textQuadLocation[4 + (i * 8)] = locationX;\n            textQuadLocation[5 + (i * 8)] = (textQuadLocation[1 + (i * 8)] - this._boundsCollection[Number.parseInt(i.toString(), 10)][3]);\n            textQuadLocation[6 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]);\n            textQuadLocation[7 + (i * 8)] = textQuadLocation[5 + (i * 8)];\n        }\n        this._points = textQuadLocation;\n        this._dictionary.set('QuadPoints', this._points);\n    };\n    return PdfTextMarkupAnnotation;\n}(PdfComment));\nexport { PdfTextMarkupAnnotation };\n/**\n * `PdfWatermarkAnnotation` class represents the watermark annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new water mark annotation\n * const annotation: PdfWatermarkAnnotation = new PdfWatermarkAnnotation('Water Mark', 50, 100, 100, 50);\n * // Set the color of the annotation\n * annotation.color = [0, 0, 0];\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWatermarkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWatermarkAnnotation, _super);\n    function PdfWatermarkAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._watermarkText = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Watermark'));\n        if (typeof text !== 'undefined') {\n            _this._watermarkText = text;\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.watermarkAnnotation;\n        return _this;\n    }\n    PdfWatermarkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfWatermarkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfWatermarkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfWatermarkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (typeof this.color === 'undefined') {\n            this.color = [0, 0, 0];\n        }\n        this._appearanceTemplate = this._createWatermarkAppearance();\n        this._dictionary.update('Rect', _updateBounds(this));\n        if (typeof this.opacity !== 'undefined' && this._opacity !== 1.0) {\n            this._dictionary.set('CA', this._opacity);\n        }\n    };\n    PdfWatermarkAnnotation.prototype._createWatermarkAppearance = function () {\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        this._rotateAngle = this._getRotationAngle();\n        if (typeof this.rotationAngle !== 'undefined' && this._rotate !== PdfRotationAngle.angle0 || this._rotateAngle !== PdfRotationAngle.angle0) {\n            if (this._rotateAngle === 0) {\n                this._rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this._rotateAngle);\n        }\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, nativeRectangle);\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        _setMatrix(template, this._rotateAngle);\n        var graphics = appearance.normal.graphics;\n        var width = this.border.width / 2;\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        var borderPen = new PdfPen(this.color, width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        if (this._isLoaded) {\n            if (this._dictionary.has('Contents')) {\n                this._watermarkText = this._dictionary.get('Contents');\n            }\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        else {\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        if (typeof this._watermarkText !== 'undefined') {\n            graphics.drawString(this._watermarkText, font, [0, 0, 0, 0], borderPen, backBrush, format);\n        }\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dictionary = new _PdfDictionary();\n        graphics._template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, graphics._template._content);\n        graphics._template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        return template;\n    };\n    PdfWatermarkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten) {\n                this._appearanceTemplate = this._createWatermarkAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createWatermarkAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n    };\n    return PdfWatermarkAnnotation;\n}(PdfAnnotation));\nexport { PdfWatermarkAnnotation };\n/**\n * `PdfRubberStampAnnotation` class represents the rubber stamp annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRubberStampAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRubberStampAnnotation, _super);\n    function PdfRubberStampAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfRubberStampAnnotationIcon.draft;\n        _this._stampWidth = 0;\n        _this._iconString = '';\n        _this.rotateAngle = 0;\n        _this._stampAppearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 20, PdfFontStyle.italic | PdfFontStyle.bold);\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Stamp'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rubberStampAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the rubber stamp annotation.\n         *\n         * @returns {PdfRubberStampAnnotationIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n         * // Gets the icon type of the rubber stamp annotation.\n         * let icon: PdfRubberStampAnnotationIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapRubberStampIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the rubber stamp annotation.\n         *\n         * @param {PdfRubberStampAnnotationIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n         * // Sets the icon type of the rubber stamp annotation.\n         * annotation.icon = PdfRubberStampAnnotationIcon.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get('#' + this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"appearance\", {\n        /**\n         * Get the appearance of the rubber stamp annotation. (Read only)\n         *\n         * @returns {PdfAppearance} Returns the appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return null;\n            }\n            if (typeof this._appearance === 'undefined') {\n                var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n                this._appearance = new PdfAppearance(this, nativeRectangle);\n                this._appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            }\n            return this._appearance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Create an appearance template for a rubber stamp annotation.\n     *\n     * @returns {PdfTemplate} Returns the appearance template of the annotation.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n     * // Gets the appearance template of the annotation.\n     * let template: PdfTemplate = annotation.createTemplate();\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRubberStampAnnotation.prototype.createTemplate = function () {\n        var template;\n        if (this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        template = new PdfTemplate();\n                        template._isExported = true;\n                        var templateDictionary = appearanceStream.dictionary;\n                        var matrix = templateDictionary.getArray('Matrix');\n                        var bounds = templateDictionary.getArray('BBox');\n                        if (matrix) {\n                            var mMatrix = [];\n                            for (var i = 0; i < matrix.length; i++) {\n                                var value = matrix[Number.parseInt(i.toString(), 10)];\n                                mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                            }\n                            if (bounds && bounds.length > 3) {\n                                var rect = _toRectangle(bounds);\n                                var rectangle = this._transformBBox(rect, mMatrix);\n                                template._size = [rectangle[2], rectangle[3]];\n                            }\n                        }\n                        else if (bounds) {\n                            templateDictionary.update('Matrix', [1, 0, 0, 1, -bounds[0], -bounds[1]]);\n                            template._size = [bounds[2], bounds[3]];\n                        }\n                        template._exportStream(dictionary, this._crossReference);\n                    }\n                }\n            }\n            else {\n                template = this._createRubberStampAppearance();\n            }\n        }\n        return template;\n    };\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"_innerTemplateBounds\", {\n        get: function () {\n            var innerBounds;\n            if (this._isLoaded) {\n                innerBounds = this._obtainInnerBounds();\n                innerBounds.x = this.bounds.x;\n                innerBounds.y = this.bounds.y;\n            }\n            return innerBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRubberStampAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRubberStampAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRubberStampAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRubberStampAnnotation.prototype._postProcess = function () {\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        this._appearanceTemplate = this._createRubberStampAppearance();\n    };\n    PdfRubberStampAnnotation.prototype._transformBBox = function (bBoxValue, matrix) {\n        var xCoordinate = [];\n        var yCoordinate = [];\n        var point1 = this._transformPoint(bBoxValue.x, bBoxValue.height, matrix);\n        xCoordinate[0] = point1[0];\n        yCoordinate[0] = point1[1];\n        var point2 = this._transformPoint(bBoxValue.width, bBoxValue.y, matrix);\n        xCoordinate[1] = point2[0];\n        yCoordinate[1] = point2[1];\n        var point3 = this._transformPoint(bBoxValue.x, bBoxValue.y, matrix);\n        xCoordinate[2] = point3[0];\n        yCoordinate[2] = point3[1];\n        var point4 = this._transformPoint(bBoxValue.width, bBoxValue.height, matrix);\n        xCoordinate[3] = point4[0];\n        yCoordinate[3] = point4[1];\n        var rect = [this._minValue(xCoordinate), this._minValue(yCoordinate),\n            this._maxValue(xCoordinate), this._maxValue(yCoordinate)];\n        return rect;\n    };\n    PdfRubberStampAnnotation.prototype._transformPoint = function (x, y, matrix) {\n        var point = [];\n        point[0] = x * matrix[0] + y * matrix[2] + matrix[4];\n        point[1] = x * matrix[1] + y * matrix[3] + matrix[5];\n        return point;\n    };\n    PdfRubberStampAnnotation.prototype._minValue = function (values) {\n        var minimum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] < minimum) {\n                minimum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return minimum;\n    };\n    PdfRubberStampAnnotation.prototype._maxValue = function (values) {\n        var maximum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] > maximum) {\n                maximum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return maximum;\n    };\n    PdfRubberStampAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var isTransformBBox = false;\n        if (this._isLoaded && (this._setAppearance || isFlatten || this._isExport)) {\n            if ((!isFlatten && !this._isExport) || this._setAppearance) {\n                this._appearanceTemplate = this._createRubberStampAppearance();\n            }\n            if (!this._appearanceTemplate && (this._isExport || isFlatten) && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        var isStamp = false;\n                        if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                            var isRotated = false;\n                            var size = void 0;\n                            var rect = void 0;\n                            if (appearanceStream) {\n                                isRotated = (this._page.rotation === PdfRotationAngle.angle0 &&\n                                    this.rotateAngle === PdfRotationAngle.angle0);\n                                if (!isRotated) {\n                                    isRotated = (this._page.rotation !== PdfRotationAngle.angle0 &&\n                                        this.rotateAngle === PdfRotationAngle.angle0);\n                                }\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            isStamp = true;\n                            isTransformBBox = isRotated ? true : false;\n                            if (isTransformBBox) {\n                                var matrix = appearanceStream.dictionary.getArray('Matrix');\n                                if (matrix) {\n                                    var mMatrix = [];\n                                    for (var i = 0; i < matrix.length; i++) {\n                                        var value = matrix[Number.parseInt(i.toString(), 10)];\n                                        mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                                    }\n                                    var bounds = appearanceStream.dictionary.getArray('BBox');\n                                    if (bounds && bounds.length > 3) {\n                                        rect = _toRectangle(bounds);\n                                        var rectangle = this._transformBBox(rect, mMatrix);\n                                        size = [rectangle[2], rectangle[3]];\n                                        this._appearanceTemplate._size = size;\n                                    }\n                                    else {\n                                        size = [rect.width, rect.height];\n                                    }\n                                }\n                            }\n                            else {\n                                size = [rect.width, rect.height];\n                            }\n                        }\n                        if (!isStamp) {\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (!(this._isImported && this._dictionary.has('AP'))) {\n                this._postProcess();\n            }\n            if ((!this._appearanceTemplate) && (isFlatten || this._isImported)) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRubberStampAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isTransformBBox) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isTransformBBox);\n            }\n            else {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRubberStampAnnotation.prototype._createRubberStampAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance;\n        if (this._appearance) {\n            appearance = this._appearance;\n            if (!this._dictionary.has('Name')) {\n                this._dictionary.update('Name', _PdfName.get('#23CustomStamp'));\n            }\n        }\n        else {\n            this._iconString = this._obtainIconName(this.icon);\n            this._dictionary.update('Name', _PdfName.get('#23' + this._iconString));\n            appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        var template = appearance.normal;\n        if (typeof this._rotate !== 'undefined' && (this._rotate !== PdfRotationAngle.angle0 || this._getRotationAngle() !== 0)) {\n            this.rotateAngle = this._getRotationAngle();\n            if (this.rotateAngle === 0) {\n                this.rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this.rotateAngle);\n        }\n        _setMatrix(template, this.rotateAngle);\n        if (!this._appearance) {\n            this._drawStampAppearance(template);\n        }\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dictionary = new _PdfDictionary();\n        template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        this._dictionary.set('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n        this._dictionary.update('Rect', _updateBounds(this));\n        return template;\n    };\n    PdfRubberStampAnnotation.prototype._drawStampAppearance = function (template) {\n        var stringFormat = new PdfStringFormat();\n        stringFormat.alignment = PdfTextAlignment.center;\n        stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n        var backBrush = new PdfBrush(this._obtainBackGroundColor());\n        var borderPen = new PdfPen(this._obtainBorderColor(), this.border.width);\n        var graphics = template.graphics;\n        graphics.save();\n        graphics.scaleTransform(template._size[0] / (this._stampWidth + 4), (template._size[1] / 28));\n        var rubberFont = this._stampAppearanceFont;\n        this._drawRubberStamp(graphics, borderPen, backBrush, rubberFont, stringFormat);\n        graphics.restore();\n    };\n    PdfRubberStampAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfRubberStampAnnotationIcon.approved:\n                this._iconString = 'Approved';\n                this._stampWidth = 126;\n                break;\n            case PdfRubberStampAnnotationIcon.asIs:\n                this._iconString = 'AsIs';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.confidential:\n                this._iconString = 'Confidential';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.departmental:\n                this._iconString = 'Departmental';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.draft:\n                this._iconString = 'Draft';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.experimental:\n                this._iconString = 'Experimental';\n                this._stampWidth = 176;\n                break;\n            case PdfRubberStampAnnotationIcon.expired:\n                this._iconString = 'Expired';\n                this._stampWidth = 116;\n                break;\n            case PdfRubberStampAnnotationIcon.final:\n                this._iconString = 'Final';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.forComment:\n                this._iconString = 'ForComment';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.forPublicRelease:\n                this._iconString = 'ForPublicRelease';\n                this._stampWidth = 240;\n                break;\n            case PdfRubberStampAnnotationIcon.notApproved:\n                this._iconString = 'NotApproved';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.notForPublicRelease:\n                this._iconString = 'NotForPublicRelease';\n                this._stampWidth = 290;\n                break;\n            case PdfRubberStampAnnotationIcon.sold:\n                this._iconString = 'Sold';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.topSecret:\n                this._iconString = 'TopSecret';\n                this._stampWidth = 146;\n                break;\n            case PdfRubberStampAnnotationIcon.completed:\n                this._iconString = 'Completed';\n                this._stampWidth = 136;\n                break;\n            case PdfRubberStampAnnotationIcon.void:\n                this._iconString = 'Void';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.informationOnly:\n                this._iconString = 'InformationOnly';\n                this._stampWidth = 230;\n                break;\n            case PdfRubberStampAnnotationIcon.preliminaryResults:\n                this._iconString = 'PreliminaryResults';\n                this._stampWidth = 260;\n                break;\n        }\n        return this._iconString;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBackGroundColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 251;\n            green = 222;\n            blue = 221;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 229;\n            green = 238;\n            blue = 222;\n            color = [red, green, blue];\n        }\n        else {\n            red = 219;\n            green = 227;\n            blue = 240;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBorderColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 151;\n            green = 23;\n            blue = 15;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 73;\n            green = 110;\n            blue = 38;\n            color = [red, green, blue];\n        }\n        else {\n            red = 24;\n            green = 37;\n            blue = 100;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._drawRubberStamp = function (graphics, pen, brush, font, format) {\n        graphics.drawRoundedRectangle(2, 1, this._stampWidth, 26, 3, pen, brush);\n        var pdfBrush = new PdfBrush(this._obtainBorderColor());\n        graphics.drawString(this._iconString.toUpperCase(), font, [(this._stampWidth / 2) + 1, 15, 0, 0], null, pdfBrush, format);\n    };\n    PdfRubberStampAnnotation.prototype._obtainInnerBounds = function () {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (this._dictionary && this._dictionary.has('AP')) {\n            var appearanceDictionary = this._dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var normalAppearance = appearanceDictionary.get('N');\n                if (normalAppearance && typeof normalAppearance.dictionary !== 'undefined') {\n                    var normalAppearanceDictionary = normalAppearance.dictionary;\n                    if (normalAppearanceDictionary.has('BBox')) {\n                        var values = normalAppearanceDictionary.getArray('BBox');\n                        if (values && values.length === 4) {\n                            bounds = _toRectangle(values);\n                        }\n                    }\n                }\n            }\n        }\n        return bounds;\n    };\n    return PdfRubberStampAnnotation;\n}(PdfComment));\nexport { PdfRubberStampAnnotation };\n/**\n * `PdfSoundAnnotation` class represents the sound annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfSoundAnnotation = page.annotations.at(0) as PdfSoundAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSoundAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSoundAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfSoundAnnotation` class.\n     *\n     * @private\n     */\n    function PdfSoundAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.soundAnnotation;\n        return _this;\n    }\n    PdfSoundAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSoundAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSoundAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSoundAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfSoundAnnotation;\n}(PdfComment));\nexport { PdfSoundAnnotation };\n/**\n * `PdfFreeTextAnnotation` class represents the free text annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new free text annotation\n * const annotation: PdfFreeTextAnnotation = new PdfFreeTextAnnotation(50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFreeTextAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFreeTextAnnotation, _super);\n    function PdfFreeTextAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._intentString = '';\n        _this._markUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 7, PdfFontStyle.regular);\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._cropBoxValueX = 0;\n        _this._cropBoxValueY = 0;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FreeText'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.freeTextAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"calloutLines\", {\n        /**\n         * Gets the callout lines of the free text annotation.\n         *\n         * @returns {Array<number[]>} Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation= page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the callout lines of the free text annotation.\n         * let calloutLines: Array<number[]> = annotation.calloutLines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._calloutLines === 'undefined') {\n                this._calloutLines = this._getCalloutLinePoints();\n            }\n            return this._calloutLines;\n        },\n        /**\n         * Sets the callout lines of the free text annotation.\n         *\n         * @param {Array<number[]>} value Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the callout lines of the free text annotation.\n         * annotation.calloutLines = [[100, 450], [100, 200], [100, 150]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded) {\n                this._calloutLines = value;\n            }\n            var isChanged = false;\n            if (this._isLoaded && value.length >= 2) {\n                if (this._calloutLines.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this._calloutLines[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n            }\n            if (isChanged) {\n                var pageHeight = this._page.size[1];\n                var lines = [];\n                for (var i = 0; i < value.length; i++) {\n                    if (i < value.length) {\n                        lines.push(value[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                        lines.push((pageHeight + this._cropBoxValueY) - value[Number.parseInt(i.toString(), 10)][1]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                this._calloutLines = value;\n                this._dictionary.update('CL', lines);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the Line ending style of the annotation.\n         * let lineEndingStyle: PdfLineEndingStyle = annotation.lineEndingStyle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            this._lineEndingStyle = this._obtainLineEndingStyle();\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = PdfLineEndingStyle.closedArrow;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._dictionary.update('LE', _PdfName.get(_reverseMapEndingStyle(value)));\n            }\n            this._lineEndingStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text markup color of the annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined') {\n                var color = void 0;\n                if (this._dictionary.has('TextColor')) {\n                    this._textMarkUpColor = _parseColor(this._dictionary.getArray('TextColor'));\n                    return this._textMarkUpColor;\n                }\n                if (this._dictionary.has('DS')) {\n                    var collections = this._dictionary.get('DS').split(';');\n                    for (var i = 0; i < collections.length; i++) {\n                        if (collections[Number.parseInt(i.toString(), 10)].indexOf('color') !== -1) {\n                            color = collections[Number.parseInt(i.toString(), 10)].split(':')[1];\n                            if (color.startsWith('#')) {\n                                color = color.substring(1);\n                            }\n                            this._textMarkUpColor = _convertToColor(color);\n                            return this._textMarkUpColor;\n                        }\n                    }\n                }\n                if (!this._textMarkUpColor && this._dictionary.has('RC')) {\n                    //Need to code\n                }\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text markup color of the annotation.\n         * annotation.textMarkUpColor = [200, 200, 200];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._textMarkUpColor = value;\n                var ds = 'font:' +\n                    this.font._metrics._postScriptName +\n                    ' ' +\n                    this.font._size +\n                    'pt;style:' + _reverseMapPdfFontStyle(this.font._style) +\n                    ';color:' +\n                    this._colorToHex(value);\n                this._dictionary.update('DS', ds);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._font) {\n                this._font = this._obtainFont();\n                if ((this._font === null || typeof this._font === 'undefined') || (!this._isLoaded && this._font.size === 1)) {\n                    this._font = this._markUpFont;\n                }\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('DA')) {\n                this._borderColor = this._obtainColor();\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [150, 150, 150];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._borderColor = value;\n                this._dictionary.update('DA', this._getBorderColorString(this.borderColor));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"annotationIntent\", {\n        /**\n         * Gets the intent of the annotation.\n         *\n         * @returns {PdfAnnotationIntent} Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the intent of the annotation.\n         * let annotationIntent: PdfAnnotationIntent = annotation.annotationIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('IT')) {\n                this._annotationIntent = _mapAnnotationIntent(this._dictionary.get('IT').name);\n            }\n            else {\n                this._annotationIntent = PdfAnnotationIntent.none;\n            }\n            return this._annotationIntent;\n        },\n        /**\n         * Sets the intent of the annotation.\n         *\n         * @param {PdfAnnotationIntent} value Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the intent of the annotation.\n         * annotation.annotationIntent = PdfAnnotationIntent.freeTextTypeWriter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._annotationIntent = value;\n                if (value === PdfAnnotationIntent.none) {\n                    this._dictionary.update('Subj', 'Text Box');\n                }\n                else {\n                    this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFreeTextAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFreeTextAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfFreeTextAnnotation.prototype._setPaddings = function (paddings) {\n        this._paddings = paddings;\n    };\n    PdfFreeTextAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFreeTextAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        this._updateCropBoxValues();\n        if (isFlatten || this._setAppearance) {\n            this._appearanceTemplate = this._createAppearance();\n        }\n        if (!isFlatten) {\n            this._dictionary.update('Rect', _updateBounds(this));\n            this._saveFreeTextDictionary();\n        }\n    };\n    PdfFreeTextAnnotation.prototype._updateCropBoxValues = function () {\n        if (this._page) {\n            var cropOrMediaBox = void 0;\n            if (this._page._pageDictionary.has('CropBox')) {\n                cropOrMediaBox = this._page._pageDictionary.getArray('CropBox');\n            }\n            else if (this._page._pageDictionary.has('MediaBox')) {\n                cropOrMediaBox = this._page._pageDictionary.getArray('MediaBox');\n            }\n            if (cropOrMediaBox) {\n                this._cropBoxValueX = cropOrMediaBox[0];\n                this._cropBoxValueY = cropOrMediaBox[1];\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._appearanceTemplate && !this._dictionary.has('AP')) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._dictionary.has('AP')) {\n                if (this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                    this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n                }\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_8 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_8, appearance);\n                this._dictionary.update('AP', reference_8);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics.drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._removeAnnotationFromPage(this._page, this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    PdfFreeTextAnnotation.prototype._createAppearance = function () {\n        var template;\n        var borderWidth = this.border.width / 2;\n        var nativeRectangle = this._obtainAppearanceBounds();\n        var rotationAngle = this.rotate;\n        if (rotationAngle === 0 || rotationAngle === 90 || rotationAngle === 180 || rotationAngle === 270) {\n            this._isAllRotation = false;\n        }\n        if (rotationAngle > 0 && this._isAllRotation) {\n            template = new PdfTemplate([0, 0, nativeRectangle[2], nativeRectangle[3]], this._crossReference);\n        }\n        else {\n            template = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        _setMatrix(template, this._getRotationAngle());\n        var parameter = new _PaintParameter();\n        var text = this._obtainText();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var alignment = this._obtainTextAlignment();\n        var borderColor = this._obtainColor();\n        var borderPen = new PdfPen(borderColor, this.border.width);\n        if (this.border.width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        var rectangle = this._obtainStyle(borderPen, nativeRectangle, borderWidth, parameter);\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        if (this.textMarkUpColor) {\n            parameter.backBrush = new PdfBrush(this._textMarkUpColor);\n        }\n        parameter.borderWidth = this.border.width;\n        if (this.calloutLines && this._calloutLines.length >= 2) {\n            this._drawCallOuts(graphics, borderPen);\n            if (this._isLoaded && typeof this._lineEndingStyle === 'undefined') {\n                this._lineEndingStyle = this.lineEndingStyle;\n            }\n            if (this._lineEndingStyle !== PdfLineEndingStyle.none) {\n                var linePoints = this._obtainLinePoints();\n                var angle = this._getAngle(linePoints);\n                var endPoint = this._getAxisValue([linePoints[2], linePoints[3]], 90, 0);\n                this._drawLineEndStyle(endPoint, graphics, angle, borderPen, parameter.foreBrush, this.lineEndingStyle, this.border.width, false);\n            }\n            if (!this._dictionary.has('RD')) {\n                rectangle = [this.bounds.x,\n                    -((this._page.size[1] - (this.bounds.y + this.bounds.height))),\n                    this.bounds.width,\n                    -this.bounds.height];\n            }\n            else {\n                rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            }\n            rectangle[0] = rectangle[0] + this._cropBoxValueX;\n            rectangle[1] = rectangle[1] - this._cropBoxValueY;\n            this._calculateRectangle(rectangle);\n            parameter.bounds = rectangle;\n        }\n        else {\n            rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            parameter.bounds = rectangle;\n        }\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [rectangle[0] - outerRectangle[0], (-(rectangle[1])) - outerRectangle[1], rectangle[2] - outerRectangle[2],\n            (((-rectangle[1]) - outerRectangle[1]) + (-rectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < value.length; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.update('RD', value);\n        if (this.opacity && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.save();\n        }\n        this._drawFreeTextRectangle(graphics, parameter, rectangle, alignment);\n        this._drawFreeMarkUpText(graphics, parameter, rectangle, text, alignment);\n        if (this.opacity && this._opacity < 1) {\n            graphics.restore();\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.restore();\n        }\n        var bounds = this._obtainAppearanceBounds();\n        this._dictionary.set('Rect', [bounds[0], bounds[1], bounds[0] + bounds[2], bounds[1] + bounds[3]]);\n        return template;\n    };\n    PdfFreeTextAnnotation.prototype._calculateRectangle = function (innerRectangle) {\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [innerRectangle[0] - outerRectangle[0],\n            (-(innerRectangle[1])) - outerRectangle[1], innerRectangle[2] - outerRectangle[2],\n            (((-innerRectangle[1]) - outerRectangle[1]) + (-innerRectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < 4; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.set('RD', value);\n    };\n    PdfFreeTextAnnotation.prototype._obtainAnnotationIntent = function (_annotationIntent) {\n        switch (_annotationIntent) {\n            case PdfAnnotationIntent.freeTextCallout:\n                this._intentString = 'FreeTextCallout';\n                break;\n            case PdfAnnotationIntent.freeTextTypeWriter:\n                this._intentString = 'FreeTextTypeWriter';\n                break;\n        }\n        return this._intentString;\n    };\n    PdfFreeTextAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        if (!fontData.size && this._dictionary.has('RC')) {\n            //Parse XML data\n        }\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeMarkUpText = function (graphics, parameter, rectangle, text, alignment) {\n        var isRotation = false;\n        var angle = this.rotate;\n        if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n            rectangle = [-rectangle[1], rectangle[0], -rectangle[3], rectangle[2]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n            rectangle = [-(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2], -rectangle[3]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n            rectangle = [(rectangle[1] + rectangle[3]), -(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2]];\n        }\n        else if (angle === 0 && !this._isAllRotation) {\n            rectangle = [rectangle[0], (rectangle[1] + rectangle[3]), rectangle[2], rectangle[3]];\n        }\n        if ((typeof this._font === 'undefined' || this._font === null) || (!this._isLoaded && this._font.size === 1)) {\n            this._font = this._markUpFont;\n        }\n        if (angle > 0 && this._isAllRotation) {\n            isRotation = true;\n            var bounds_1 = this.bounds;\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var textSize = this._font.measureString(text, [0, 0], format, 0, 0);\n            if (angle > 0 && angle <= 91) {\n                graphics.translateTransform(textSize[1], -bounds_1.height);\n            }\n            else if (angle > 91 && angle <= 181) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -(bounds_1.height - textSize[1]));\n            }\n            else if (angle > 181 && angle <= 271) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -textSize[1]);\n            }\n            else if (angle > 271 && angle < 360) {\n                graphics.translateTransform(textSize[1], -textSize[1]);\n            }\n            graphics.rotateTransform(angle);\n            parameter.bounds = [0, 0, parameter.bounds[2], parameter.bounds[3]];\n        }\n        var bounds = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n        if (this._paddings && !this._isLoaded) {\n            var left = this._paddings._left;\n            var top_8 = this._paddings._top;\n            var right = this._paddings._right + this._paddings._left;\n            var bottom = this._paddings._top + this._paddings._bottom;\n            if (parameter.borderWidth > 0) {\n                var first_1 = rectangle[0] + (parameter.borderWidth + left);\n                var second_1 = rectangle[1] + (parameter.borderWidth + top_8);\n                var third = rectangle[2] - ((parameter.borderWidth * 2) + right);\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                else {\n                    forth = -rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                rectangle = [first_1, second_1, third, forth];\n            }\n            else {\n                var first_2 = rectangle[0] + left;\n                var second_2 = rectangle[1] + top_8;\n                var third = rectangle[2] - right;\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - bottom;\n                }\n                else {\n                    forth = -rectangle[3] - bottom;\n                }\n                rectangle = [first_2, second_2, third, forth];\n            }\n        }\n        else if (parameter.borderWidth > 0) {\n            rectangle = [rectangle[0] + (parameter.borderWidth * 1.5),\n                rectangle[1] + (parameter.borderWidth * 1.5),\n                rectangle[2] - (parameter.borderWidth * 3),\n                (rectangle[3] > 0) ? (rectangle[3] - (parameter.borderWidth * 3)) : (-rectangle[3] - (parameter.borderWidth * 3))];\n        }\n        var first = this._font._metrics._getHeight() > ((rectangle[3] > 0) ? rectangle[3] : -rectangle[3]);\n        var second = this._font._metrics._getHeight() <= ((bounds[3] > 0) ? bounds[3] : -bounds[3]);\n        var checkPaddingWithFontHeight = first && second;\n        this._drawFreeTextAnnotation(graphics, parameter, text, this._font, checkPaddingWithFontHeight ? bounds : rectangle, true, alignment, isRotation);\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextRectangle = function (graphics, parameter, rectangle, alignment) {\n        var isRotation = false;\n        if (this._dictionary.has('BE')) {\n            for (var i = 0; i < rectangle.length; i++) {\n                if (rectangle[Number.parseInt(i.toString(), 10)] < 0) {\n                    rectangle[Number.parseInt(i.toString(), 10)] = -rectangle[Number.parseInt(i.toString(), 10)];\n                }\n            }\n            this._drawAppearance(graphics, parameter, rectangle);\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n            }\n        }\n        else {\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n                parameter.bounds = [-rectangle[1], rectangle[2] + rectangle[0] - rectangle[3], -rectangle[2]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n                parameter.bounds = [-(rectangle[2] + rectangle[0]), -(rectangle[3] + rectangle[1]), rectangle[2], rectangle[3]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n                parameter.bounds = [rectangle[1] + rectangle[3], -rectangle[0], -rectangle[3], -rectangle[2]];\n            }\n            this._drawFreeTextAnnotation(graphics, parameter, '', this._font, parameter.bounds, false, alignment, isRotation);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawAppearance = function (graphics, parameter, rectangle) {\n        var graphicsPath = new _PdfPath();\n        graphicsPath._addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        if (this._dictionary.has('BE')) {\n            var dictionary = this._dictionary.get('BE');\n            if (dictionary && dictionary.has('I')) {\n                var value = dictionary.get('I');\n                var radius = value === 1 ? 4 : 9;\n                this._drawCloudStyle(graphics, parameter.foreBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, true);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextAnnotation = function (g, parameter, text, font, rectangle, isSkipDrawRectangle, alignment, isRotation) {\n        if (!isSkipDrawRectangle) {\n            g.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.foreBrush);\n        }\n        else {\n            var format = new PdfStringFormat();\n            format.lineAlignment = PdfVerticalAlignment.top;\n            format.alignment = alignment;\n            format.lineSpacing = 0;\n            if (isRotation) {\n                g.drawString(text, font, parameter.bounds, null, parameter.backBrush, format);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.backBrush, format);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getCalloutLinePoints = function () {\n        if (this._dictionary.has('CL')) {\n            var calloutLinepoints = this._dictionary.getArray('CL');\n            if (calloutLinepoints) {\n                this._calloutLines = [];\n                for (var i = 0; i < calloutLinepoints.length; i = i + 2) {\n                    var points = [calloutLinepoints[Number.parseInt(i.toString(), 10)],\n                        this._page.size[1] - calloutLinepoints[i + 1]];\n                    this._calloutLines.push(points);\n                }\n            }\n        }\n        return this._calloutLines;\n    };\n    PdfFreeTextAnnotation.prototype._obtainAppearanceBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var path = new _PdfPath();\n            var pointArray = [];\n            var length_2 = this._calloutLines.length === 2 ? 2 : 3;\n            for (var i = 0; i < length_2; i++) {\n                pointArray.push([0, 0]);\n            }\n            if (this._calloutLines.length >= 2) {\n                this._obtainCallOutsNative();\n                for (var i = 0; i < this._calloutLines.length; i++) {\n                    if (i < 3) {\n                        pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                            this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            if (pointArray.length > 0) {\n                if (this.lineEndingStyle !== PdfLineEndingStyle.none) {\n                    this._expandAppearance(pointArray);\n                }\n                path._addLines(pointArray);\n            }\n            path._addRectangle(this.bounds.x - 2, (this._page.size[1] - (this.bounds.y + this.bounds.height)) - 2, this.bounds.width + (2 * 2), this.bounds.height + (2 * 2));\n            bounds = path._getBounds();\n        }\n        else {\n            bounds = [this.bounds.x, (this._page.size[1] - (this.bounds.y + this.bounds.height)), this.bounds.width, this.bounds.height];\n        }\n        return bounds;\n    };\n    PdfFreeTextAnnotation.prototype._obtainCallOutsNative = function () {\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var size = this._page.size;\n            this._calloutsClone = [];\n            for (var i = 0; i < this._calloutLines.length; i++) {\n                this._calloutsClone.push([this._calloutLines[Number.parseInt(i.toString(), 10)][0],\n                    size[1] - this._calloutLines[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._obtainLinePoints = function () {\n        var pageHeight = this._page.size[1];\n        return [this.calloutLines[1][0],\n            pageHeight - this.calloutLines[1][1],\n            this.calloutLines[0][0],\n            pageHeight - this.calloutLines[0][1]];\n    };\n    PdfFreeTextAnnotation.prototype._obtainLineEndingStyle = function () {\n        var lineEndingStyle = PdfLineEndingStyle.square;\n        if (this._dictionary.has('LE')) {\n            lineEndingStyle = _mapLineEndingStyle(this._dictionary.get('LE').name, lineEndingStyle);\n        }\n        return lineEndingStyle;\n    };\n    PdfFreeTextAnnotation.prototype._obtainText = function () {\n        var text = '';\n        if (this._dictionary.has('Contents')) {\n            var markUpText = this._dictionary.get('Contents');\n            if (markUpText) {\n                text = markUpText;\n            }\n            if (text && text !== '') {\n                this._text = text;\n            }\n            return text;\n        }\n        else if (this._dictionary.has('RC')) {\n            //this._parseXMLData();\n            text = this._rcText;\n            return text;\n        }\n        return text;\n    };\n    PdfFreeTextAnnotation.prototype._obtainTextAlignment = function () {\n        var textAlignment = PdfTextAlignment.left;\n        var hasAlignment;\n        if (this._dictionary.has('Q')) {\n            var value = this._dictionary.get('Q');\n            if (typeof value !== 'undefined') {\n                textAlignment = value;\n                hasAlignment = true;\n            }\n        }\n        else if (this._dictionary.has('RC')) {\n            //Need to add\n        }\n        if (!hasAlignment && this._dictionary.has('DS')) {\n            var value = this._dictionary.get('DS');\n            var collections = value.split(';');\n            for (var i = 0; i < collections.length; i++) {\n                if (collections[Number.parseInt(i.toString(), 10)].indexOf('text-align') !== -1) {\n                    switch (collections[Number.parseInt(i.toString(), 10)]) {\n                        case 'left':\n                            textAlignment = PdfTextAlignment.left;\n                            break;\n                        case 'right':\n                            textAlignment = PdfTextAlignment.right;\n                            break;\n                        case 'center':\n                            textAlignment = PdfTextAlignment.center;\n                            break;\n                        case 'justify':\n                            textAlignment = PdfTextAlignment.justify;\n                            break;\n                    }\n                }\n            }\n        }\n        return textAlignment;\n    };\n    PdfFreeTextAnnotation.prototype._obtainColor = function () {\n        var color;\n        if (this._isLoaded) {\n            if (this._dictionary.has('DA')) {\n                var entry = this._dictionary.get('DA');\n                if (Array.isArray(entry) && entry.length > 0) {\n                    color = [entry[0], entry[1], entry[2]];\n                }\n                else if (typeof entry === 'string') {\n                    this._da = new _PdfDefaultAppearance(entry);\n                    color = this._da.color;\n                }\n            }\n            else if (this._dictionary.has('MK')) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BC')) {\n                    color = _parseColor(mkDict.getArray('BC'));\n                }\n            }\n            else {\n                color = [0, 0, 0];\n            }\n        }\n        else {\n            color = this._borderColor ? this._borderColor : [0, 0, 0];\n        }\n        return color;\n    };\n    PdfFreeTextAnnotation.prototype._expandAppearance = function (pointArray) {\n        var pointY = pointArray[0][1];\n        var pointX = pointArray[0][0];\n        if (pointY > this.bounds.y) {\n            if (this.lineEndingStyle !== PdfLineEndingStyle.openArrow) {\n                pointArray[0][1] -= (this.border.width * 11);\n            }\n        }\n        else {\n            pointArray[0][1] += (this.border.width * 11);\n        }\n        if (pointX <= this.bounds.x) {\n            pointArray[0][0] -= (this.border.width * 11);\n        }\n        else {\n            pointArray[0][0] += (this.border.width * 11);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawCallOuts = function (graphics, borderPen) {\n        var path = new _PdfPath();\n        var pointArray = [];\n        var length = this._calloutLines.length === 2 ? 2 : 3;\n        for (var i = 0; i < length; i++) {\n            pointArray.push([0, 0]);\n        }\n        if (this._calloutLines.length >= 2) {\n            this._obtainCallOutsNative();\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                    -this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n            }\n        }\n        if (pointArray.length > 0) {\n            path._addLines(pointArray);\n        }\n        graphics._drawPath(path, borderPen);\n    };\n    PdfFreeTextAnnotation.prototype._saveFreeTextDictionary = function () {\n        if ((typeof this.font === 'undefined' || this.font === null) || (!this._isLoaded && this.font.size === 1)) {\n            this.font = this._markUpFont;\n        }\n        this._dictionary.update('Contents', this.text);\n        if (this._isLoaded) {\n            this._textAlignment = this.textAlignment;\n        }\n        this._dictionary.update('Q', this._textAlignment);\n        if (this.annotationIntent === PdfAnnotationIntent.none) {\n            this._dictionary.update('Subj', 'Text Box');\n        }\n        else {\n            this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n        }\n        var ds = 'font:' +\n            this.font._metrics._postScriptName +\n            ' ' +\n            this.font._size +\n            'pt;style:' + _reverseMapPdfFontStyle(this.font._style) +\n            ';color:' +\n            this._colorToHex(this.textMarkUpColor);\n        this._dictionary.update('DS', ds);\n        this._dictionary.update('DA', this._getBorderColorString(this.borderColor ? this._borderColor : [0, 0, 0]));\n        var body = '<?xml version=\"1.0\"?><body xmlns=\"http://www.w3.org/1999/xhtml\"><p dir=\"ltr\">';\n        this._dictionary.update('RC', body + (this.text ? this._getXmlFormattedString(this.text) : '') + '</p></body>');\n        if (this._calloutLines && this._calloutLines.length >= 2) {\n            var pageHeight = this._page.size[1];\n            var lines = [];\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                lines.push(this._calloutLines[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                lines.push((pageHeight + this._cropBoxValueY) - this._calloutLines[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._dictionary.update('CL', lines);\n        }\n        if (this._setAppearance) {\n            var rect = this._obtainAppearanceBounds();\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getXmlFormattedString = function (markupText) {\n        markupText = markupText.replace('&', '&amp;');\n        markupText = markupText.replace('<', '&lt;');\n        markupText = markupText.replace('>', '&gt;');\n        return markupText;\n    };\n    return PdfFreeTextAnnotation;\n}(PdfComment));\nexport { PdfFreeTextAnnotation };\n/**\n * `PdfRedactionAnnotation` class represents the redaction annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new redaction annotation\n * const annotation: PdfRedactionAnnotation = new PdfRedactionAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRedactionAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRedactionAnnotation, _super);\n    function PdfRedactionAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Redact'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.redactionAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"repeatText\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @returns {boolean} repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the boolean flag indicating whether annotation has repeat text or not.\n         * let repeatText: boolean = annotation. repeatText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._repeat === 'undefined' && this._dictionary.has('Repeat')) {\n                this._repeat = this._dictionary.get('Repeat');\n            }\n            return this._repeat;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @param {boolean} value repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the boolean flag indicating whether annotation has repeat text or not.\n         * annotation.repeatText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._repeat) {\n                this._repeat = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Repeat', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textColor\", {\n        /**\n         * Gets the text color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text color of the annotation.\n         * let textColor : number[] = annotation.textColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textColor === 'undefined' && this._dictionary.has('C')) {\n                this._textColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textColor;\n        },\n        /**\n         * Sets the text color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text color of the annotation.\n         * annotation.textColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.textColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._textColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('OC')) {\n                this._borderColor = _parseColor(this._dictionary.getArray('OC'));\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.borderColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._borderColor = value;\n                    this._dictionary.update('OC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"overlayText\", {\n        /**\n         * Gets the overlay text of the annotation.\n         *\n         * @returns {string} overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the overlay text of the annotation.\n         * let overlayText: string =annotation.overlayText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._overlayText === 'undefined' && this._dictionary.has('OverlayText')) {\n                this._overlayText = this._dictionary.get('OverlayText');\n            }\n            return this._overlayText;\n        },\n        /**\n         * Sets the overlay text of the annotation.\n         *\n         * @param {string} value overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the overlay text of the annotation.\n         * annotation.overlayText = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('OverlayText', value);\n                this._overlayText = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRedactionAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRedactionAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRedactionAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRedactionAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfRedactionAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isImported) {\n            if (this._isLoaded) {\n                this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n            }\n            else {\n                this._postProcess(isFlatten);\n                if (!this._appearanceTemplate) {\n                    if (isFlatten) {\n                        if (!this._dictionary.has('AP')) {\n                            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n                        }\n                        else {\n                            var dictionary = this._dictionary.get('AP');\n                            if (dictionary && dictionary.has('N')) {\n                                var appearanceStream = dictionary.get('N');\n                                if (appearanceStream) {\n                                    var reference = dictionary.getRaw('N');\n                                    if (reference) {\n                                        appearanceStream.reference = reference;\n                                    }\n                                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (isFlatten && this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n    };\n    PdfRedactionAnnotation.prototype._createRedactionAppearance = function (isFlatten) {\n        var normalTemplate = this._createNormalAppearance();\n        if (isFlatten) {\n            if (this._isLoaded && this._page !== null) {\n                this._removeAnnotationFromPage(this._page, this);\n            }\n        }\n        else {\n            var borderTemplate = this._createBorderAppearance();\n            if (this._dictionary.has('AP')) {\n                var appearance = this._dictionary.get('AP');\n                _removeDuplicateReference(appearance, this._crossReference, 'N');\n                _removeDuplicateReference(appearance, this._crossReference, 'R');\n            }\n            var dictionary = new _PdfDictionary(this._crossReference);\n            borderTemplate._content.dictionary._updated = true;\n            var reference1 = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference1, borderTemplate._content);\n            borderTemplate._content.reference = reference1;\n            dictionary.set('N', reference1);\n            normalTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, normalTemplate._content);\n            normalTemplate._content.reference = reference;\n            dictionary.set('R', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        return normalTemplate;\n    };\n    PdfRedactionAnnotation.prototype._createBorderAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var actualWidth = this.border.width;\n        var pen;\n        if (this.border.width > 0 && this.borderColor) {\n            pen = new PdfPen(this.borderColor, actualWidth);\n        }\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n        }\n        return template;\n    };\n    PdfRedactionAnnotation.prototype._createNormalAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        var borderPen;\n        if (this.textColor && this.border.width > 0) {\n            borderPen = new PdfPen(this.textColor, this.border.width);\n        }\n        var backBrush;\n        var textcolor;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this.innerColor);\n        }\n        if (this.textColor) {\n            textcolor = new PdfBrush(this.textColor);\n        }\n        else {\n            textcolor = new PdfBrush([128, 128, 128]);\n        }\n        parameter.backBrush = backBrush;\n        parameter.borderWidth = width;\n        var widths = this.border.width;\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n        }\n        graphics.restore();\n        if (this.overlayText && this._overlayText !== '') {\n            var col = 0;\n            var row = 0;\n            if (typeof this.font === 'undefined' || this.font === null) {\n                this.font = this._lineCaptionFont;\n            }\n            var y = 0;\n            var x = 0;\n            var diff = 0;\n            var rectangle = void 0;\n            if (this._isLoaded) {\n                this._textAlignment = this.textAlignment;\n            }\n            var format = new PdfStringFormat(this._textAlignment, PdfVerticalAlignment.middle);\n            var textsize = this.font.measureString(this.overlayText, [0, 0], format, 0, 0);\n            if (this._isLoaded && typeof this._repeat === 'undefined') {\n                this._repeat = this.repeatText;\n            }\n            if (this._repeat) {\n                if (textsize[0] <= 0) {\n                    textsize[0] = 1;\n                }\n                col = this.bounds.width / textsize[0];\n                row = Math.floor(this.bounds.height / this.font._size);\n                diff = Math.abs(this.bounds.width - (Math.floor(col) * textsize[0]));\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                for (var i = 1; i < col; i++) {\n                    for (var j = 0; j < row; j++) {\n                        rectangle = [x, y, 0, 0];\n                        graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n                        y = y + this.font._size;\n                    }\n                    x = x + textsize[0];\n                    y = 0;\n                }\n            }\n            else {\n                diff = Math.abs(this.bounds.width - textsize[0]);\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                rectangle = [x, 0, 0, 0];\n                graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n            }\n        }\n        return template;\n    };\n    return PdfRedactionAnnotation;\n}(PdfAnnotation));\nexport { PdfRedactionAnnotation };\n/**\n * `PdfRichMediaAnnotation` class represents the rich media annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRichMediaAnnotation = page.annotations.at(0) as PdfRichMediaAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRichMediaAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRichMediaAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfRichMediaAnnotation` class.\n     *\n     * @private\n     */\n    function PdfRichMediaAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.richMediaAnnotation;\n        return _this;\n    }\n    PdfRichMediaAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRichMediaAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRichMediaAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRichMediaAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            this._flattenPopUp();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfRichMediaAnnotation;\n}(PdfAnnotation));\nexport { PdfRichMediaAnnotation };\n/**\n * `PdfWidgetAnnotation` class represents the widget annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWidgetAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWidgetAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfWidgetAnnotation` class.\n     *\n     * @private\n     */\n    function PdfWidgetAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._isAutoResize = false;\n        _this._visibility = PdfFormFieldVisibility.visible;\n        _this._isFont = false;\n        _this._isTransparentBackColor = false;\n        _this._isTransparentBorderColor = false;\n        _this._isWidget = true;\n        _this._type = _PdfAnnotationType.widgetAnnotation;\n        return _this;\n    }\n    /**\n     * Parse an existing widget annotation.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @returns {PdfWidgetAnnotation} Widget.\n     */\n    PdfWidgetAnnotation._load = function (dictionary, crossReference) {\n        var widget = new PdfWidgetAnnotation();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        return widget;\n    };\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"page\", {\n        /**\n         * Gets the page object (Read only).\n         *\n         * @returns {PdfPage} page object.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the page object.\n         * let page: PdfPage = item.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getPage();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the fore color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._defaultAppearance) {\n                this._color = this._da.color;\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the fore color of the annotation.\n         * annotation.color = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.color === 'undefined' || this._color !== value) {\n                this._color = value;\n            }\n            var isNew = false;\n            if (!this._defaultAppearance) {\n                this._da = new _PdfDefaultAppearance('');\n                isNew = true;\n            }\n            if (isNew || this._da.color !== value) {\n                this._da.color = value;\n                this._dictionary.update('DA', this._da.toString());\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the back color of the annotation\n         * let backColor: number[] = field.itemAt(0).backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field item\n         * field.itemAt(0).backColor = [255, 0, 0];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBorderColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                return (mkDictionary && mkDictionary.has('BC'));\n            }\n            else {\n                return !this._isTransparentBorderColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor();\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255.. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation.\n         *\n         * @returns {number} Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotationAngle === 'undefined') {\n                if (this._mkDictionary && this._mkDictionary.has('R')) {\n                    this._rotationAngle = this._mkDictionary.get('R');\n                }\n                else if (this._dictionary.has('R')) {\n                    this._rotationAngle = this._dictionary.get('R');\n                }\n            }\n            return this._rotationAngle;\n        },\n        /**\n         * Sets the rotation angle of the annotation.\n         *\n         * @param {number} value Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.rotate === 'undefined' || this._rotationAngle !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('R', value);\n                this._rotationAngle = value;\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the annotation.\n         *\n         * @returns {PdfHighlightMode} Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the highlight mode of the annotation.\n         * let highlightMode: PdfHighlightMode = annotation.highlightMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._highlightMode === 'undefined' && this._dictionary.has('H')) {\n                var mode = this._dictionary.get('H');\n                this._highlightMode = _mapHighlightMode(mode.name);\n            }\n            return this._highlightMode;\n        },\n        /**\n         * Sets the highlight mode of the annotation.\n         *\n         * @param {PdfHighlightMode} value Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the highlight mode of the annotation.\n         * annotation.highlightMode = PdfHighlightMode.noHighlighting;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._highlightMode !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds : {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && typeof this._bounds === 'undefined') {\n                this._bounds = _calculateBounds(this._dictionary, this._getPage());\n            }\n            if (typeof this._bounds === 'undefined' || this._bounds === null) {\n                this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value Bounds\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {0, 0, 50, 50};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            this._bounds = value;\n            if (this._page && this._page._isNew && this._page._pageSettings) {\n                this._dictionary.update('Rect', _updateBounds(this));\n            }\n            else {\n                this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._getPage()));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textAlignment === 'undefined' && this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.left;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._textAlignment === 'undefined' || this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"visibility\", {\n        /**\n         * Gets the visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the visibility.\n         * let visibility: PdfFormFieldVisibility = field.itemAt(0).visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var flag = PdfAnnotationFlag.default;\n                if (this._hasFlags) {\n                    flag = this.flags;\n                    var flagValue = 3;\n                    if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                        flagValue = 0;\n                    }\n                    if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                        flagValue = 1;\n                    }\n                    if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                        flagValue &= 2;\n                    }\n                    switch (flagValue) {\n                        case 0:\n                            value = PdfFormFieldVisibility.hidden;\n                            break;\n                        case 1:\n                            value = PdfFormFieldVisibility.hiddenPrintable;\n                            break;\n                        case 2:\n                            value = PdfFormFieldVisibility.visibleNotPrintable;\n                            break;\n                        case 3:\n                            value = PdfFormFieldVisibility.visible;\n                            break;\n                    }\n                }\n                else {\n                    value = PdfFormFieldVisibility.visibleNotPrintable;\n                }\n            }\n            else {\n                return this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the visibility.\n         *\n         * @param {PdfFormFieldVisibility} value Visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the visibility.\n         * let field.itemAt(0).visibility = PdfFormFieldVisibility.hiddenPrintable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                _updateVisibility(this._dictionary, value);\n                this._dictionary._updated = true;\n            }\n            else {\n                switch (value) {\n                    case PdfFormFieldVisibility.hidden:\n                        this.flags = PdfAnnotationFlag.hidden;\n                        break;\n                    case PdfFormFieldVisibility.hiddenPrintable:\n                        this.flags = PdfAnnotationFlag.noView | PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visible:\n                        this.flags = PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visibleNotPrintable:\n                        this.flags = PdfAnnotationFlag.default;\n                        break;\n                }\n                this._visibility = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the item.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the font of the item.\n         * let font: PdfFont = item.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._pdfFont) {\n                var fontName = void 0;\n                if (this._crossReference) {\n                    var form = this._crossReference._document.form;\n                    var fontData = this._obtainFontDetails();\n                    if (form && form._dictionary.has('DR')) {\n                        var resources = form._dictionary.get('DR');\n                        if (resources.has('Font')) {\n                            var fonts = resources.get('Font');\n                            if (fonts.has(fontData.name)) {\n                                var fontDictionary = fonts.get(fontData.name);\n                                if (fontDictionary && fontData.name && fontDictionary.has('BaseFont')) {\n                                    var baseFont = fontDictionary.get('BaseFont');\n                                    var textFontStyle = PdfFontStyle.regular;\n                                    if (baseFont) {\n                                        fontName = baseFont.name;\n                                        textFontStyle = _getFontStyle(baseFont.name);\n                                        if (fontName.includes('-')) {\n                                            fontName = fontName.substring(0, fontName.indexOf('-'));\n                                        }\n                                        this._pdfFont = _mapFont(fontName, fontData.size, textFontStyle, this);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ((this._pdfFont === null || typeof this._pdfFont === 'undefined') || (!this._isLoaded && this._pdfFont.size === 1)) {\n                this._pdfFont = this._circleCaptionFont;\n            }\n            return this._pdfFont;\n        },\n        /**\n         * Sets the font of the item.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Set the font of the item.\n         * item.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._pdfFont = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined' && this._dictionary.has('DA')) {\n                var da = this._dictionary.get('DA');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfWidgetAnnotation.prototype._create = function (page, bounds, field) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        this._ref = this._crossReference._getNextReference();\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary._currentObj = this;\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('Type', _PdfName.get('Annot'));\n        this._dictionary.update('Subtype', _PdfName.get('Widget'));\n        this.flags |= PdfAnnotationFlag.print;\n        this._dictionary.update('P', page._ref);\n        page._addWidget(this._ref);\n        this.border = new PdfAnnotationBorder();\n        this.bounds = bounds;\n        if (field) {\n            this._field = field;\n            this._dictionary.update('Parent', this._field._ref);\n        }\n        return this._dictionary;\n    };\n    PdfWidgetAnnotation.prototype._doPostProcess = function (isFlatten, recreateAppearance) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (recreateAppearance === void 0) { recreateAppearance = false; }\n        if (isFlatten || recreateAppearance) {\n            var appearanceStream = void 0;\n            if (recreateAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                //appearanceStream = this._createAppearance();\n            }\n            if (!appearanceStream && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var bounds = void 0;\n                if (isFlatten) {\n                    var template = new PdfTemplate(appearanceStream, this._crossReference);\n                    var page = this._getPage();\n                    if (page) {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        if (page.rotation === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(90);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(-180);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(270);\n                        }\n                        bounds = { x: this.bounds.x, y: this.bounds.y, width: template._size[0], height: template._size[1] };\n                        graphics.drawTemplate(template, bounds);\n                        graphics.restore();\n                    }\n                }\n                else {\n                    var appearance = void 0;\n                    if (this._dictionary.has('AP')) {\n                        appearance = this._dictionary.get('AP');\n                    }\n                    else {\n                        var reference_9 = this._crossReference._getNextReference();\n                        appearance = new _PdfDictionary(this._crossReference);\n                        this._crossReference._cacheMap.set(reference_9, appearance);\n                        this._dictionary.update('AP', reference_9);\n                    }\n                    _removeDuplicateReference(appearance, this._crossReference, 'N');\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, appearanceStream);\n                    appearance.update('N', reference);\n                }\n            }\n            this._dictionary._updated = false;\n        }\n    };\n    PdfWidgetAnnotation.prototype._initializeFont = function (font) {\n        this._pdfFont = font;\n        var document;\n        if (this._crossReference) {\n            document = this._crossReference._document;\n            var resource = void 0;\n            if (document) {\n                if (document.form._dictionary.has('DR')) {\n                    resource = document.form._dictionary.get('DR');\n                }\n                else {\n                    resource = new _PdfDictionary(this._crossReference);\n                }\n            }\n            var fontDict = void 0;\n            var isReference = false;\n            if (resource.has('Font')) {\n                var obj = resource.getRaw('Font'); // eslint-disable-line\n                if (obj && obj instanceof _PdfReference) {\n                    isReference = true;\n                    fontDict = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    fontDict = obj;\n                }\n            }\n            if (!fontDict) {\n                fontDict = new _PdfDictionary(this._crossReference);\n                resource.update('Font', fontDict);\n            }\n            var keyName = _PdfName.get(_getNewGuidString());\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            if (font instanceof PdfTrueTypeFont) {\n                if (this._pdfFont._pdfFontInternals) {\n                    this._crossReference._cacheMap.set(reference, this._pdfFont._pdfFontInternals);\n                }\n            }\n            else if (this._pdfFont._dictionary) {\n                this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            }\n            fontDict.update(keyName.name, reference);\n            resource._updated = true;\n            document.form._dictionary.update('DR', resource);\n            document.form._dictionary._updated = true;\n            this._fontName = keyName.name;\n            var defaultAppearance = new _PdfDefaultAppearance();\n            defaultAppearance.fontName = this._fontName;\n            defaultAppearance.fontSize = this._pdfFont._size;\n            defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n            this._dictionary.update('DA', defaultAppearance.toString());\n            if (isReference) {\n                resource._updated = true;\n            }\n            this._isFont = true;\n        }\n    };\n    PdfWidgetAnnotation.prototype._getPage = function () {\n        if (!this._page) {\n            var document_2;\n            if (this._crossReference) {\n                document_2 = this._crossReference._document;\n            }\n            var page = void 0;\n            if (this._dictionary.has('P')) {\n                var ref = this._dictionary.getRaw('P');\n                if (ref && document_2) {\n                    for (var i = 0; i < document_2.pageCount; i++) {\n                        var entry = document_2.getPage(i);\n                        if (entry && entry._ref === ref) {\n                            page = entry;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!page && document_2 && this._ref) {\n                page = _findPage(document_2, this._ref);\n            }\n            this._page = page;\n        }\n        return this._page;\n    };\n    PdfWidgetAnnotation.prototype._beginSave = function () {\n        if (!this._isLoaded && !this._page._isNew) {\n            var value = this._bounds;\n            this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._page));\n        }\n    };\n    PdfWidgetAnnotation.prototype._parseBackColor = function () {\n        var value;\n        if ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor)) {\n            if (typeof this._backColor === 'undefined') {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BG')) {\n                    var colorArray = dictionary.getArray('BG');\n                    if (colorArray) {\n                        this._backColor = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof this._backColor === 'undefined' || this._backColor === null) {\n                this._backColor = [255, 255, 255];\n            }\n            value = this._backColor;\n        }\n        return value;\n    };\n    PdfWidgetAnnotation.prototype._parseBorderColor = function () {\n        var value;\n        if ((this._isLoaded && this._hasBorderColor) || (!this._isLoaded && !this._isTransparentBorderColor)) {\n            if (typeof this._borderColor === 'undefined') {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BC')) {\n                    var colorArray = dictionary.getArray('BC');\n                    if (colorArray) {\n                        this._borderColor = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof this._borderColor === 'undefined' || this._borderColor === null) {\n                this._borderColor = [0, 0, 0];\n            }\n            value = this._borderColor;\n        }\n        return value;\n    };\n    PdfWidgetAnnotation.prototype._updateBackColor = function (value, setAppearance) {\n        if (setAppearance === void 0) { setAppearance = false; }\n        var isChanged = false;\n        if (value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n                isChanged = true;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            if (typeof this.backColor === 'undefined' || this._backColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._backColor = [value[0], value[1], value[2]];\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        if (setAppearance && isChanged && this._field) {\n            this._field._setAppearance = true;\n        }\n    };\n    PdfWidgetAnnotation.prototype._updateBorderColor = function (value, setAppearance) {\n        if (setAppearance === void 0) { setAppearance = false; }\n        if (value.length === 4 && value[3] !== 255) {\n            this._isTransparentBorderColor = true;\n            if (this._dictionary.has('BC')) {\n                delete this._dictionary._map.BC;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BC')) {\n                delete mkDictionary._map.BC;\n                if (this._dictionary.has('BS')) {\n                    var bsDictionary = this._dictionary.get('BS');\n                    if (bsDictionary && bsDictionary.has('W')) {\n                        delete bsDictionary._map.W;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n        }\n        else {\n            this._isTransparentBorderColor = false;\n            if (typeof this.borderColor === 'undefined' || this.borderColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._borderColor = [value[0], value[1], value[2]];\n                this._dictionary._updated = true;\n            }\n        }\n    };\n    return PdfWidgetAnnotation;\n}(PdfAnnotation));\nexport { PdfWidgetAnnotation };\n/**\n * `PdfStateItem` class represents the check box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStateItem = /** @class */ (function (_super) {\n    __extends(PdfStateItem, _super);\n    /**\n     * Initializes a new instance of the `PdfStateItem` class.\n     *\n     * @private\n     */\n    function PdfStateItem() {\n        return _super.call(this) || this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfStateItem} Widget.\n     */\n    PdfStateItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfStateItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfStateItem.prototype, \"checked\", {\n        /**\n         * Gets the flag to indicate whether the field item is checked or not.\n         *\n         * @returns {boolean} Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the flag to indicate whether the field item is checked or not.\n         * let checked: boolean = item.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag to indicate whether the field item is checked or not.\n         *\n         * @param {boolean} value Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                this._dictionary.update('AS', _PdfName.get(value ? 'Yes' : 'Off'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStateItem.prototype, \"style\", {\n        /**\n         * Gets the style of annotation.\n         *\n         * @returns {PdfCheckBoxStyle} Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the style of the annotation\n         * let style: PdfCheckBoxStyle = item.style;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('CA')) {\n                    this._style = _stringToStyle(dictionary.get('CA'));\n                }\n                else {\n                    this._style = PdfCheckBoxStyle.check;\n                }\n            }\n            return this._style;\n        },\n        /**\n         * Sets the style of annotation.\n         *\n         * @param {PdfCheckBoxStyle} value Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.style = PdfCheckBoxStyle.check;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.style !== value) {\n                this._style = value;\n                var dictionary = this._mkDictionary;\n                if (!dictionary) {\n                    dictionary = new _PdfDictionary(this._crossReference);\n                    this._dictionary.update('MK', dictionary);\n                }\n                dictionary.update('CA', _styleToString(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStateItem.prototype._doPostProcess = function () {\n        var style = this.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n        var template = _getStateTemplate(style, this);\n        if (template) {\n            var page = this._getPage();\n            if (page) {\n                var graphics = page.graphics;\n                graphics.save();\n                if (page.rotation === PdfRotationAngle.angle90) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(90);\n                }\n                else if (page.rotation === PdfRotationAngle.angle180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                }\n                else if (page.rotation === PdfRotationAngle.angle270) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(270);\n                }\n                graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n                graphics.drawTemplate(template, this.bounds);\n                graphics.restore();\n            }\n        }\n        this._dictionary._updated = false;\n    };\n    PdfStateItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value) {\n            value = (field && field.checked) ? 'Yes' : 'Off';\n        }\n        this._dictionary.update('AS', _PdfName.get(value));\n    };\n    PdfStateItem.prototype._setField = function (field) {\n        this._field = field;\n        this._field._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n        this._field._addToKid(this);\n    };\n    return PdfStateItem;\n}(PdfWidgetAnnotation));\nexport { PdfStateItem };\n/**\n * `PdfRadioButtonListItem` class represents the radio button field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Create and add third item\n * let third: PdfRadioButtonListItem = new PdfRadioButtonListItem('50-59', {x: 100, y: 200, width: 20, height: 20}, field);\n * field.add(third);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListItem = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListItem, _super);\n    function PdfRadioButtonListItem(value, bounds, item) {\n        var _this = _super.call(this) || this;\n        if (item && value && bounds) {\n            if (item instanceof PdfField) {\n                _this._initializeItem(value, bounds, item.page, item);\n            }\n            else {\n                _this._initializeItem(value, bounds, item);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfRadioButtonListItem} Widget.\n     */\n    PdfRadioButtonListItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfRadioButtonListItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not.\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"value\", {\n        /**\n         * Gets the value of the radio button list field item\n         *\n         * @returns {string} Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the value of the radio button list field item\n         * let value: string = item.value;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && !this._optionValue) {\n                this._optionValue = _getItemValue(this._dictionary);\n            }\n            return this._optionValue;\n        },\n        /**\n         * Sets the value of the radio button list field item\n         *\n         * @param {string} option Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Sets the value of the radio button list field item\n         * item.value = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (option) {\n            this._optionValue = option;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the back color of the annotation\n         * let backColor: number[] = annotation.backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Sets the back color of the radio button list item\n         * field.itemAt(0).backColor = [255, 255, 255];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRadioButtonListItem.prototype._initializeItem = function (value, bounds, page, field) {\n        this._optionValue = value;\n        this._page = page;\n        this._create(this._page, bounds, this._field);\n        this.textAlignment = PdfTextAlignment.left;\n        this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        this._mkDictionary.update('BC', [0, 0, 0]);\n        this._mkDictionary.update('BG', [1, 1, 1]);\n        this.style = PdfCheckBoxStyle.circle;\n        this._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        if (field) {\n            this._setField(field);\n            this._dictionary.update('Parent', field._ref);\n        }\n    };\n    PdfRadioButtonListItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value && field && field.selectedIndex !== -1) {\n            value = field.itemAt(field.selectedIndex).value;\n        }\n        if (this.value === value) {\n            this._dictionary.update('AS', _PdfName.get(this.value));\n        }\n        else {\n            this._dictionary.update('AS', _PdfName.get('Off'));\n        }\n    };\n    return PdfRadioButtonListItem;\n}(PdfStateItem));\nexport { PdfRadioButtonListItem };\n/**\n * `PdfListBoxItem` class represents the list and combo box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListFieldItem = /** @class */ (function (_super) {\n    __extends(PdfListFieldItem, _super);\n    function PdfListFieldItem(text, value, field) {\n        var _this = _super.call(this) || this;\n        if (text && value) {\n            _this._initializeItem(text, value, field);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfListFieldItem} Widget.\n     */\n    PdfListFieldItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfListFieldItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfListFieldItem.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the text of the list field item\n         * let text: string = item.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                this._text = this._field._options[Number.parseInt(this._index.toString(), 10)][1];\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Sets the text of the list field item\n         * item.text = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                if (value !== this._field._options[Number.parseInt(this._index.toString(), 10)][1]) {\n                    this._field._options[Number.parseInt(this._index.toString(), 10)][1] = value;\n                    this._text = value;\n                    this._field._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListFieldItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not (Read only).\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfListFieldItem.prototype._initializeItem = function (text, value, field) {\n        this._text = text;\n        this._value = value;\n        if (field && field instanceof PdfListBoxField) {\n            field._addToOptions(this, field);\n        }\n    };\n    return PdfListFieldItem;\n}(PdfStateItem));\nexport { PdfListFieldItem };\n/**\n * `PdfAnnotationCaption` class represents the caption text and properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Create and set annotation caption values\n * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCaption = /** @class */ (function () {\n    function PdfAnnotationCaption(cap, type, offset) {\n        this._cap = typeof cap !== 'undefined' ? cap : false;\n        this._type = typeof type !== 'undefined' ? type : PdfLineCaptionType.inline;\n        this._offset = typeof offset !== 'undefined' ? offset : [0, 0];\n    }\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"cap\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation has caption or not.\n         * let cap: boolean = annotation.caption.cap;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._cap;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @param {boolean} value Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether annotation has caption or not.\n         * annotation.caption.cap = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._cap) {\n                this._cap = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Cap', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"type\", {\n        /**\n         * Gets the caption type of the annotation.\n         *\n         * @returns {PdfLineCaptionType} Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption type of the annotation.\n         * let type: PdfLineCaptionType = annotation.caption.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._type;\n        },\n        /**\n         * Sets the caption type of the annotation.\n         *\n         * @param {PdfLineCaptionType} value Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the caption type of the annotation.\n         * annotation.caption.type = PdfLineCaptionType.inline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._type) {\n                this._type = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CP', _PdfName.get(value === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"offset\", {\n        /**\n         * Gets the offset position of the annotation.\n         *\n         * @returns {Array<number>} Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the offset position of the annotation.\n         * let offset: Array<number> = annotation.caption.offset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._offset;\n        },\n        /**\n         * Sets the offset position of the annotation.\n         *\n         * @param {Array<number>} value Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the offset position of the annotation.\n         * annotation.caption.offset = [10, 10];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (_areNotEqual(value, this._offset)) {\n                this._offset = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CO', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCaption;\n}());\nexport { PdfAnnotationCaption };\n/**\n * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationLineEndingStyle = /** @class */ (function () {\n    function PdfAnnotationLineEndingStyle(begin, end) {\n        this._begin = typeof begin !== 'undefined' ? begin : PdfLineEndingStyle.none;\n        this._end = typeof end !== 'undefined' ? end : PdfLineEndingStyle.none;\n    }\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"begin\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let begin: PdfLineEndingStyle = annotation.lineEndingStyle.begin;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._begin;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._begin) {\n                this._begin = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(value)), _PdfName.get(_reverseMapEndingStyle(this._end))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"end\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let end: PdfLineEndingStyle = annotation.lineEndingStyle.end;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._end;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._end) {\n                this._end = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(this._begin)), _PdfName.get(_reverseMapEndingStyle(value))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationLineEndingStyle;\n}());\nexport { PdfAnnotationLineEndingStyle };\n/**\n * `PdfInteractiveBorder` class represents the border of the field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the width of the field border.\n * let width: number = field.border.width;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInteractiveBorder = /** @class */ (function () {\n    function PdfInteractiveBorder(width, style, dash) {\n        this._width = typeof width !== 'undefined' ? width : 1;\n        this._style = typeof style !== 'undefined' ? style : PdfBorderStyle.solid;\n        if (typeof dash !== 'undefined' && Array.isArray(dash)) {\n            this._dash = dash;\n        }\n    }\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the field border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width of the annotation border.\n         * let width: number = field.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the field border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"style\", {\n        /**\n         * Gets the border line style of the field border.\n         *\n         * @returns {PdfBorderStyle} Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border line style of the annotation border.\n         * let style: PdfBorderStyle = field.border.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the border line style of the field border.\n         *\n         * @param {PdfBorderStyle} value Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"dash\", {\n        /**\n         * Gets the dash pattern of the field border.\n         *\n         * @returns {Array<number>} Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the dash pattern of the field border.\n         * let dash: Array<number> = field.border.dash;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._dash;\n        },\n        /**\n         * Sets the dash pattern of the field border.\n         *\n         * @param {Array<number>} value Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._dash === 'undefined' || _areNotEqual(value, this._dash)) {\n                this._dash = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    bs.update('D', this._dash);\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfInteractiveBorder;\n}());\nexport { PdfInteractiveBorder };\n/**\n * `PdfAnnotationBorder` class represents the border properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n * //Sets the width of the annotation border.\n * border.width = 10;\n * //Sets the style of the annotation border.\n * border.style = PdfBorderStyle.dashed;\n * //Sets the dash pattern of the annotation border.\n * border.dash = [1, 2, 1];\n * // Sets the border to the PDF form field\n * annotation.border = border;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationBorder = /** @class */ (function (_super) {\n    __extends(PdfAnnotationBorder, _super);\n    function PdfAnnotationBorder(width, hRadius, vRadius, style, dash) {\n        var _this = _super.call(this, width, style, dash) || this;\n        _this._hRadius = typeof hRadius !== 'undefined' ? hRadius : 0;\n        _this._vRadius = typeof vRadius !== 'undefined' ? vRadius : 0;\n        return _this;\n    }\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the annotation border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the width of the annotation border.\n         * let width: number = annotation.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the annotation border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"hRadius\", {\n        /**\n         * Gets the horizontal radius of the annotation border.\n         *\n         * @returns {number} horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the horizontal radius of the annotation border.\n         * let hRadius: number = annotation.border.hRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hRadius;\n        },\n        /**\n         * Sets the horizontal radius of the annotation border.\n         *\n         * @param {number} value horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the horizontal radius of the annotation border.\n         * border.hRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._hRadius) {\n                this._hRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"vRadius\", {\n        /**\n         * Gets the vertical radius of the annotation border.\n         *\n         * @returns {number} vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the vertical radius of the annotation border.\n         * let vRadius: number = annotation.border.vRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._vRadius;\n        },\n        /**\n         * Sets the vertical radius of the annotation border.\n         *\n         * @param {number} value vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the vertical radius of the annotation border.\n         * border.vRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._vRadius) {\n                this._vRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationBorder;\n}(PdfInteractiveBorder));\nexport { PdfAnnotationBorder };\n/**\n * `PdfBorderEffect` class represents the border effects of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n * // Initializes a new instance of the `PdfBorderEffect` class.\n * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n * // Sets the intensity of the annotation border.\n * borderEffect.intensity = 2;\n * // Sets the effect style of the annotation border.\n * borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Sets border effect to the annotation.\n * annotation.borderEffect = borderEffect;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBorderEffect = /** @class */ (function () {\n    function PdfBorderEffect(dictionary) {\n        this._intensity = 0;\n        if (typeof dictionary !== 'undefined' && dictionary !== null) {\n            if (dictionary.has('BE')) {\n                var borderEffect = this._dictionary.get('BE');\n                if (borderEffect) {\n                    if (borderEffect.has('I')) {\n                        this._intensity = borderEffect.get('I');\n                    }\n                    if (borderEffect.has('S')) {\n                        this._style = this._getBorderEffect(borderEffect.get('S'));\n                    }\n                }\n            }\n        }\n        else {\n            this._dictionary = new _PdfDictionary();\n            this._dictionary.set('I', this._intensity);\n            this._dictionary.set('S', this._styleToEffect(this._style));\n        }\n    }\n    Object.defineProperty(PdfBorderEffect.prototype, \"intensity\", {\n        /**\n         * Gets the intensity of the annotation border.\n         *\n         * @returns {number} intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._intensity;\n        },\n        /**\n         * Sets the intensity of the annotation border.\n         *\n         * @param {number} value intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._intensity) {\n                this._intensity = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ? this._dictionary.get('BE') : new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorderEffect.prototype, \"style\", {\n        /**\n         * Gets the effect style of the annotation border.\n         *\n         * @returns {PdfBorderEffectStyle} effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the effect style of the annotation border.\n         *\n         * @param {PdfBorderEffectStyle} value effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ?\n                        this._dictionary.get('BE') :\n                        new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBorderEffect.prototype._getBorderEffect = function (value) {\n        if (value === '/C') {\n            return PdfBorderEffectStyle.cloudy;\n        }\n        else {\n            return PdfBorderEffectStyle.solid;\n        }\n    };\n    PdfBorderEffect.prototype._styleToEffect = function (value) {\n        if (value === PdfBorderEffectStyle.cloudy) {\n            return 'C';\n        }\n        else {\n            return 'S';\n        }\n    };\n    return PdfBorderEffect;\n}());\nexport { PdfBorderEffect };\nvar _PaintParameter = /** @class */ (function () {\n    function _PaintParameter() {\n        this.borderWidth = 1;\n    }\n    return _PaintParameter;\n}());\nexport { _PaintParameter };\nvar _CloudStyleArc = /** @class */ (function () {\n    function _CloudStyleArc() {\n        this.startAngle = 0;\n        this.endAngle = 0;\n    }\n    return _CloudStyleArc;\n}());\n","import { _PdfDictionary, _PdfReference } from './../pdf-primitives';\nimport { _checkReview } from './../utils';\nimport { PdfLineAnnotation, PdfCircleAnnotation, PdfEllipseAnnotation, PdfAngleMeasurementAnnotation, PdfRectangleAnnotation, PdfSquareAnnotation, PdfPolyLineAnnotation, PdfPolygonAnnotation, PdfInkAnnotation, PdfPopupAnnotation, PdfAttachmentAnnotation, Pdf3DAnnotation, PdfFileLinkAnnotation, PdfWatermarkAnnotation, PdfRubberStampAnnotation, PdfSoundAnnotation, PdfFreeTextAnnotation, PdfRedactionAnnotation, PdfRichMediaAnnotation, PdfTextMarkupAnnotation, PdfDocumentLinkAnnotation, PdfTextWebLinkAnnotation, PdfUriAnnotation, PdfComment } from './annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\n/**\n * The class provides methods and properties to handle the collection of `PdfAnnotation`.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation coolection from first page\n * let annotations: PdfAnnotationCollection = document.getPage(0).annotations;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    /**\n     * Represents a annotation collection.\n     *\n     * @private\n     * @param {Array<_PdfReference>} array Annotation references.\n     * @param {_PdfCrossReference} xref Cross reference object.\n     * @param {PdfPage} page PDF page object.\n     */\n    function PdfAnnotationCollection(array, xref, page) {\n        this._isExport = false;\n        this._annotations = array;\n        this._page = page;\n        this._crossReference = xref;\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @returns {number} Number of annotations.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation count\n         * let count: number = page.annotations.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._annotations.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfAnnotation` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfAnnotation} Annotation at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        if (!this._parsedAnnotations.has(index)) {\n            var dictionary = this._annotations[Number.parseInt(index.toString(), 10)];\n            if (typeof dictionary !== 'undefined' && dictionary instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(dictionary);\n            }\n            if (typeof dictionary !== 'undefined' && dictionary instanceof _PdfDictionary) {\n                var annotation = this._parseAnnotation(dictionary);\n                if (annotation) {\n                    annotation._ref = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._parsedAnnotations.set(index, annotation);\n                }\n            }\n        }\n        return this._parsedAnnotations.get(index);\n    };\n    /**\n     * Add a new `PdfAnnotation` into the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to add.\n     * @returns {number} Annotation index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Add a new annotation into the collection\n     * page.annotations.add(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        if (typeof annotation === 'undefined' || annotation === null) {\n            throw Error('annotation cannot be null or undefined');\n        }\n        if (annotation._isLoaded) {\n            throw Error('cannot add an existing annotation');\n        }\n        annotation._initialize(this._page);\n        var reference;\n        if (typeof annotation._ref !== 'undefined' && annotation._ref._isNew) {\n            reference = annotation._ref;\n        }\n        else {\n            reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, annotation._dictionary);\n            annotation._ref = reference;\n        }\n        var index = this._annotations.length;\n        this._annotations.push(reference);\n        this._parsedAnnotations.set(index, annotation);\n        var isAdded = false;\n        if (this._page._pageDictionary.has('Annots')) {\n            var collection = this._page._pageDictionary.get('Annots');\n            if (collection !== null && typeof collection !== 'undefined' && collection.indexOf(reference) === -1) {\n                collection.push(reference);\n                this._page._pageDictionary.set('Annots', collection);\n                isAdded = true;\n            }\n        }\n        if (!isAdded) {\n            this._page._pageDictionary.set('Annots', this._annotations);\n        }\n        this._page._pageDictionary._updated = true;\n        if (annotation instanceof PdfComment) {\n            this._addCommentsAndReview(annotation, annotation._dictionary.get('F'));\n        }\n        this._updateCustomAppearanceResource(annotation);\n        return index;\n    };\n    /**\n     * Remove an annotation from the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access first annotation from the PDF page\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Remove an annotation from the collection\n     * page.annotations.remove(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.remove = function (annotation) {\n        if (annotation._ref) {\n            var index = this._annotations.indexOf(annotation._ref);\n            if (index > -1) {\n                this.removeAt(index);\n            }\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index.\n     *\n     * @param {number} index Annotation index.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Remove an annotation from the collection\n     * page.annotations.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.removeAt = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        var reference = this._annotations[Number.parseInt(index.toString(), 10)];\n        if (reference && this._page) {\n            var array = this._page._getProperty('Annots');\n            var actualIndex = array.indexOf(reference);\n            if (actualIndex > -1) {\n                array.splice(actualIndex, 1);\n            }\n            this._page._pageDictionary.set('Annots', array);\n            this._page._pageDictionary._updated = true;\n            if (this._annotations.indexOf(reference) > -1) {\n                this._annotations.splice(index, 1);\n            }\n            if (this._parsedAnnotations.has(index)) {\n                this._parsedAnnotations.delete(index);\n                this._reorderParsedAnnotations(index);\n            }\n            var crossReference = this._page._crossReference;\n            if (crossReference && crossReference._cacheMap.has(reference)) {\n                crossReference._cacheMap.delete(reference);\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reorderParsedAnnotations = function (index) {\n        var result = new Map();\n        this._parsedAnnotations.forEach(function (value, key) {\n            if (key > index) {\n                result.set(key - 1, value);\n            }\n            else {\n                result.set(key, value);\n            }\n        });\n        this._parsedAnnotations = result;\n    };\n    PdfAnnotationCollection.prototype._updateCustomAppearanceResource = function (annotation) {\n        if (annotation instanceof PdfRubberStampAnnotation && typeof annotation._appearance !== 'undefined') {\n            annotation._appearance.normal.graphics._processResources(annotation._crossReference);\n        }\n    };\n    PdfAnnotationCollection.prototype._addCommentsAndReview = function (annotation, flag) {\n        this._updateChildReference(annotation, annotation.comments, flag);\n        this._updateChildReference(annotation, annotation.reviewHistory, flag);\n    };\n    PdfAnnotationCollection.prototype._updateChildReference = function (annotation, collection, flag) {\n        if (collection && collection.count > 0) {\n            if (flag !== 30) {\n                for (var i = 0; i < collection.count; i++) {\n                    var childAnnotation = collection._collection[Number.parseInt(i.toString(), 10)];\n                    if (childAnnotation && !childAnnotation._dictionary.has('IRT')) {\n                        if (i === 0 || !collection._isReview) {\n                            childAnnotation._dictionary.update('IRT', annotation._ref);\n                        }\n                        else {\n                            childAnnotation._dictionary.update('IRT', collection._collection[i - 1]._ref);\n                        }\n                        if (collection._isReview) {\n                            childAnnotation._isReview = true;\n                        }\n                        else {\n                            childAnnotation._isComment = true;\n                        }\n                        this.add(childAnnotation);\n                    }\n                }\n            }\n            else {\n                throw new Error('Could not add comments/reviews to the review');\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._parseAnnotation = function (dictionary) {\n        var annot;\n        if (dictionary.has('Subtype')) {\n            var key = dictionary.get('Subtype');\n            var size = dictionary.get('Rect');\n            if (key) {\n                var link = void 0;\n                switch (key.name) {\n                    case 'Line':\n                        annot = PdfLineAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Circle':\n                        if (dictionary.has('Measure')) {\n                            annot = PdfCircleAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            var width = size[2] - size[0];\n                            var height = size[3] - size[1];\n                            if (width === height) {\n                                annot = PdfCircleAnnotation._load(this._page, dictionary);\n                            }\n                            else {\n                                annot = PdfEllipseAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        break;\n                    case 'Square':\n                        if (size[2] === size[3]) {\n                            annot = PdfSquareAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            annot = PdfRectangleAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Polygon':\n                        annot = PdfPolygonAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'PolyLine':\n                        if (dictionary.has('Measure') && dictionary.has('IT')) {\n                            var type = dictionary.get('IT');\n                            if (type && type.name === 'PolyLineAngle') {\n                                annot = PdfAngleMeasurementAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        if (!annot) {\n                            annot = PdfPolyLineAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Ink':\n                        annot = PdfInkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Popup':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Text':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Link':\n                        if (dictionary.has('A')) {\n                            link = dictionary.get('A');\n                        }\n                        if (link && link.has('S')) {\n                            var type = link.get('S').name;\n                            if (type) {\n                                var isTextWebLink = this._hasValidBorder(dictionary.getArray('Border'));\n                                if (type === 'URI') {\n                                    annot = isTextWebLink ?\n                                        PdfTextWebLinkAnnotation._load(this._page, dictionary) :\n                                        this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'Launch') {\n                                    annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                                }\n                                else if (type === 'GoToR') {\n                                    annot = this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'GoTo') {\n                                    annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                                }\n                            }\n                        }\n                        else if (key.name === 'Link') {\n                            annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'FileAttachment':\n                        annot = PdfAttachmentAnnotation._load(this._page, dictionary);\n                        break;\n                    case '3D':\n                        annot = Pdf3DAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'FreeText':\n                        annot = PdfFreeTextAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Redact':\n                        annot = PdfRedactionAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'RichMedia':\n                        annot = PdfRichMediaAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Watermark':\n                        annot = PdfWatermarkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Stamp':\n                        annot = PdfRubberStampAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Sound':\n                        annot = PdfSoundAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Highlight':\n                    case 'Squiggly':\n                    case 'StrikeOut':\n                    case 'Underline':\n                        annot = PdfTextMarkupAnnotation._load(this._page, dictionary);\n                        break;\n                }\n            }\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._getLinkAnnotation = function (dictionary) {\n        var annot;\n        if (dictionary.has('A')) {\n            var remote = dictionary.get('A');\n            if (remote && remote.has('S')) {\n                var link = remote.get('S');\n                if (link && link.name === 'GoToR' && remote.has('F')) {\n                    annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                }\n                else if (link && link.name === 'URI') {\n                    annot = PdfUriAnnotation._load(this._page, dictionary);\n                }\n            }\n        }\n        else {\n            annot = PdfUriAnnotation._load(this._page, dictionary);\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._hasValidBorder = function (border) {\n        if (typeof border === 'undefined' || border === null) {\n            return false;\n        }\n        for (var i = 0; i < border.length; i++) {\n            var val = 0;\n            var value = border[Number.parseInt(i.toString(), 10)];\n            if (value !== null && typeof value !== 'undefined') {\n                val = value;\n            }\n            if (val > 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n    PdfAnnotationCollection.prototype._doPostProcess = function (isFlatten) {\n        for (var i = this.count - 1; i >= 0; i--) {\n            var annotation = this.at(i);\n            if (annotation) {\n                annotation._isExport = this._isExport;\n                annotation._doPostProcess(annotation.flatten || isFlatten);\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reArrange = function (ref, tabIndex, index) {\n        if (this._annotations) {\n            if (tabIndex > this._annotations.length) {\n                tabIndex = 0;\n            }\n            if (index >= this._annotations.length) {\n                index = this._annotations.indexOf(ref);\n            }\n            var annotationDictionary = this._crossReference.\n                _fetch(this._annotations[Number.parseInt(index.toString(), 10)]);\n            if (annotationDictionary.has('Parent')) {\n                var parentReference = annotationDictionary.getRaw('Parent');\n                if ((parentReference && parentReference === ref) || ref ===\n                    this._annotations[Number.parseInt(index.toString(), 10)]) {\n                    var temp = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._annotations[Number.parseInt(index.toString(), 10)] = this._annotations[Number.parseInt(tabIndex.toString(), 10)];\n                    this._annotations[Number.parseInt(tabIndex.toString(), 10)] = temp;\n                }\n            }\n        }\n        return this._annotations;\n    };\n    PdfAnnotationCollection.prototype._clear = function () {\n        this._annotations = [];\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    };\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n/**\n * Represents the collection of `PdfPopupAnnotation`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation collection from first page\n * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n * // Gets the comments of annotation\n * let comments: PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotationCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPopupAnnotationCollection` class\n     *\n     * @private\n     * @param {PdfAnnotation} annotation Annotation reference\n     * @param {boolean} isReview Boolean flag to set review\n     */\n    function PdfPopupAnnotationCollection(annotation, isReview) {\n        this._collection = [];\n        this._annotation = annotation;\n        this._isReview = isReview;\n        if (this._annotation._isLoaded || typeof annotation._page !== 'undefined') {\n            this._page = annotation._page;\n            this._parentDictionary = annotation._dictionary;\n            if (this._annotation._isLoaded) {\n                this._parseCommentsOrReview();\n            }\n        }\n    }\n    Object.defineProperty(PdfPopupAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @private\n         * @returns {number} Number of annotations\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access annotation collection from first page\n         * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n         * // Gets the comments of annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Gets the count of comments\n         * let count: number = comments.count;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the popup annotation at the specified index.\n     *\n     * @private\n     * @param {number} index Index of the annotation\n     * @returns {number} Annotation at the specified index\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._collection.length) {\n            throw Error('Index out of range.');\n        }\n        return this._collection[Number.parseInt(index.toString(), 10)];\n    };\n    /**\n     * Add a new popup annotation into the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to add\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Create a new popup annotation\n     * const popupAnnotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n     * popupAnnotation.author = 'Syncfusion';\n     * // Add a new popup annotation into the collection\n     * annotation.comments.add(popupAnnotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.add = function (annotation) {\n        if (this._annotation._dictionary.get('F') === 30) {\n            throw new Error('Could not add comments/reviews to the review');\n        }\n        annotation._dictionary.update('F', ((this._annotation.flags === PdfAnnotationFlag.locked) ? 128 : (this._isReview ? 30 : 28)));\n        if (this._annotation && (this._annotation._isLoaded || (this._page && this._annotation._ref))) {\n            this._page.annotations.add(annotation);\n            var length_1 = this._collection.length;\n            if (length_1 === 0 || !this._isReview) {\n                annotation._dictionary.update('IRT', this._annotation._ref);\n            }\n            else {\n                annotation._dictionary.update('IRT', this._collection[Number.parseInt((length_1 - 1).toString(), 10)]._ref);\n            }\n            if (this._isReview) {\n                annotation._isReview = true;\n            }\n            else {\n                annotation._isComment = true;\n            }\n        }\n        this._collection.push(annotation);\n    };\n    /**\n     * Remove an annotation from the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Remove the comment\n     * comments.remove(comment);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.remove = function (annotation) {\n        var index = this._collection.indexOf(annotation);\n        if (index > -1) {\n            this.removeAt(index);\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index\n     *\n     * @param {number} index Annotation index to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Remove the first comment\n     * comments.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.removeAt = function (index) {\n        if (index > -1 && index < this._collection.length) {\n            var annotation = this._collection[Number.parseInt(index.toString(), 10)];\n            if (this._isReview && index < this._collection.length - 1) {\n                var nextAnnotation = this._collection[Number.parseInt((index + 1).toString(), 10)];\n                var previous = annotation._dictionary._get('IRT');\n                nextAnnotation._dictionary.set('IRT', previous);\n                nextAnnotation._dictionary._updated = true;\n            }\n            this._collection.splice(index, 1);\n            this._page.annotations.remove(annotation);\n        }\n        else {\n            throw new Error('Index out of range.');\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseCommentsOrReview = function () {\n        if (this._isReview) {\n            this._parseReview();\n        }\n        else {\n            this._parseComments();\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseReview = function () {\n        var collection = this._page.annotations;\n        var map = new Map();\n        map.set(this._annotation._ref, this._annotation);\n        if (collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var reference = annotation._dictionary._get('IRT');\n                if (annotation._isReview && reference && map.has(reference)) {\n                    this._collection.push(annotation);\n                    map.set(annotation._ref, annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var reference = dictionary._get('IRT');\n                        if (annotation._isReview && reference && map.has(reference)) {\n                            this._collection.push(annotation);\n                            map.set(annotation._ref, annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n        map.clear();\n    };\n    PdfPopupAnnotationCollection.prototype._parseComments = function () {\n        var collection = this._page.annotations;\n        if (collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var dictionary = annotation._dictionary;\n                var isReview = _checkReview(dictionary);\n                var reference = dictionary._get('IRT');\n                if (reference && reference === this._annotation._ref && !isReview) {\n                    this._collection.push(annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var isReview = _checkReview(dictionary);\n                        var reference = dictionary._get('IRT');\n                        if (reference && reference === this._annotation._ref && !isReview) {\n                            this._collection.push(annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    return PdfPopupAnnotationCollection;\n}());\nexport { PdfPopupAnnotationCollection };\n","import { _PdfDictionary, _PdfReference, _PdfName } from './pdf-primitives';\nimport { _getInheritableProperty } from './utils';\nimport { PdfAnnotationCollection } from './annotations/annotation-collection';\nimport { PdfGraphics } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfContentStream } from './base-stream';\nimport { PdfRotationAngle, PdfDestinationMode, PdfFormFieldsTabOrder, PdfPageOrientation } from './enumerator';\n/**\n * Represents a page loaded from the PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function () {\n    /**\n     * Represents a loaded page of the PDF document.\n     *\n     * @private\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {number} pageIndex page index.\n     * @param {_PdfDictionary} dictionary page Dictionary.\n     * @param {_PdfReference} reference page reference.\n     */\n    function PdfPage(crossReference, pageIndex, dictionary, reference) {\n        this._isAnnotationParsed = false;\n        this._isNew = false;\n        this._pageIndex = pageIndex;\n        this._pageDictionary = dictionary;\n        this._crossReference = crossReference;\n        this._ref = reference;\n    }\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets the collection of the page's annotations (Read only).\n         *\n         * @returns {PdfAnnotationCollection} Annotation collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation collection\n         * let annotations: PdfAnnotationCollection = page.annotations;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotations === 'undefined') {\n                if (this._pageDictionary.has('Annots')) {\n                    var annots = this._getProperty('Annots');\n                    if (annots && Array.isArray(annots)) {\n                        var widgets_1;\n                        if (this._crossReference._document._catalog._catalogDictionary.has('AcroForm')) {\n                            widgets_1 = this._crossReference._document.form._parseWidgetReferences();\n                        }\n                        if (widgets_1 && widgets_1.length > 0) {\n                            var validAnnotations_1 = [];\n                            annots.forEach(function (entry) {\n                                if (widgets_1.indexOf(entry) === -1) {\n                                    validAnnotations_1.push(entry);\n                                }\n                            });\n                            this._annotations = new PdfAnnotationCollection(validAnnotations_1, this._crossReference, this);\n                        }\n                        else {\n                            this._annotations = new PdfAnnotationCollection(annots, this._crossReference, this);\n                        }\n                    }\n                }\n                if (typeof this._annotations === 'undefined') {\n                    this._annotations = new PdfAnnotationCollection([], this._crossReference, this);\n                }\n            }\n            return this._annotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the page (Read only).\n         *\n         * @returns {number[]} Page width and height as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the width and height of the PDF page as number array\n         * let size: number[] = page.size;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                var mBox = this.mediaBox;\n                var width = 0;\n                var height = 0;\n                if (mBox) {\n                    width = mBox[2] - mBox[0];\n                    height = mBox[3] !== 0 ? mBox[3] - mBox[1] : mBox[1];\n                }\n                if (height < 0) {\n                    height = -height;\n                }\n                if (width < 0) {\n                    width = -width;\n                }\n                this._size = [width, height];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the page (Read only).\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the rotation angle of the page\n         * let rotation: PdfRotationAngle = page.rotation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = 0;\n            if (typeof this._rotation === 'undefined') {\n                angle = _getInheritableProperty(this._pageDictionary, 'Rotate', false, true, 'Parent');\n                if (angle < 0) {\n                    angle += 360;\n                }\n                this._rotation = (typeof angle !== 'undefined') ? ((angle / 90) % 4) : PdfRotationAngle.angle0;\n            }\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the PDF page\n         *\n         * @param {PdfRotationAngle} value rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Sets the rotation angle of the PDF page\n         * page.rotate = PdfRotationAngle.angle90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isNew) {\n                this._rotation = value;\n                var rotate = Math.floor(this._rotation) * 90;\n                if (rotate >= 360) {\n                    rotate = rotate % 360;\n                }\n                this._pageDictionary.update('Rotate', rotate);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"tabOrder\", {\n        /**\n         * Gets the tab order of a PDF form field.\n         *\n         * @returns {PdfFormFieldsTabOrder} tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the tab order of a PDF form field.\n         * let tabOrder: PdfFormFieldsTabOrder = page.tabOrder;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._obtainTabOrder();\n        },\n        /**\n         * Sets the tab order of a PDF form field.\n         *\n         * @param {PdfFormFieldsTabOrder} value tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Sets the tab order of a PDF form field.\n         * page.tabOrder = PdfFormFieldsTabOrder.row;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabOrder = value;\n            var tabs = '';\n            if (this._tabOrder !== PdfFormFieldsTabOrder.none) {\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    tabs = 'R';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    tabs = 'C';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.structure) {\n                    tabs = 'S';\n                }\n            }\n            this._pageDictionary.update('Tabs', _PdfName.get(tabs));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"cropBox\", {\n        /**\n         * Gets the bounds that define the area intended for display or printing in the PDF viewer application (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the cropBox of the PDF page as number array\n         * let cropBox: number[] = page.cropBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = _getInheritableProperty(this._pageDictionary, 'CropBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = [0, 0, 0, 0];\n            }\n            return this._cBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"mediaBox\", {\n        /**\n         * Gets the size that specify the width and height of the page (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the mediaBox of the PDF page as number array\n         * let mediaBox: number[] = page.mediaBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = _getInheritableProperty(this._pageDictionary, 'MediaBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = [0, 0, 0, 0];\n            }\n            return this._mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"orientation\", {\n        /**\n         * Gets the orientation of the page (Read only).\n         *\n         * @returns {PdfPageOrientation} Page orientation.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the orientation of the PDF page\n         * let orientation: number[] = page.orientation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._orientation === 'undefined') {\n                if (typeof this.size !== 'undefined') {\n                    var size = this.size;\n                    if (size[0] > size[1]) {\n                        this._orientation = PdfPageOrientation.landscape;\n                    }\n                    else {\n                        this._orientation = PdfPageOrientation.portrait;\n                    }\n                }\n            }\n            return this._orientation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"_origin\", {\n        get: function () {\n            if (typeof this._o === 'undefined' || (this._o[0] === 0 && this._o[1] === 0)) {\n                this._o = [this.mediaBox[0], this._mBox[1]];\n            }\n            return this._o;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Gets the graphics of the page (Read only).\n         *\n         * @returns {PdfGraphics} Page graphics.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * //Create a new pen.\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * //Draw line on the page graphics.\n         * graphics.drawLine(pen, 10, 10, 100, 100);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._g === 'undefined' || this._needInitializeGraphics) {\n                this._parseGraphics();\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPage.prototype._addWidget = function (reference) {\n        var annots;\n        if (this._pageDictionary.has('Annots')) {\n            annots = this._getProperty('Annots');\n        }\n        if (annots && Array.isArray(annots)) {\n            annots.push(reference);\n        }\n        else {\n            this._pageDictionary.update('Annots', [reference]);\n        }\n        this._pageDictionary._updated = true;\n    };\n    PdfPage.prototype._getProperty = function (key, getArray) {\n        if (getArray === void 0) { getArray = false; }\n        var value = _getInheritableProperty(this._pageDictionary, key, getArray, false); // eslint-disable-line\n        if (!Array.isArray(value)) {\n            return value;\n        }\n        if (value.length === 1 || !(value[0] instanceof _PdfDictionary)) {\n            return value[0];\n        }\n        return _PdfDictionary.merge(this._crossReference, value);\n    };\n    PdfPage.prototype._parseGraphics = function () {\n        this._loadContents();\n        var saveStream = new _PdfContentStream([32, 113, 32, 10]);\n        var saveReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(saveReference, saveStream);\n        this._contents.splice(0, 0, saveReference);\n        var restoreStream = new _PdfContentStream([32, 81, 32, 10]);\n        var restoreReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(restoreReference, restoreStream);\n        this._contents.push(restoreReference);\n        var contentStream = new _PdfContentStream([]);\n        var contentReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(contentReference, contentStream);\n        this._contents.push(contentReference);\n        this._pageDictionary.set('Contents', this._contents);\n        this._pageDictionary._updated = true;\n        this._initializeGraphics(contentStream);\n    };\n    PdfPage.prototype._loadContents = function () {\n        var contents = this._pageDictionary.getRaw('Contents'); // eslint-disable-line\n        var ref;\n        if (contents !== null && typeof contents !== 'undefined' && contents instanceof _PdfReference) {\n            ref = contents;\n            contents = this._crossReference._fetch(ref);\n        }\n        if (contents && contents instanceof _PdfBaseStream) {\n            this._contents = [ref];\n        }\n        else if (contents && Array.isArray(contents)) {\n            this._contents = contents;\n        }\n        else {\n            this._contents = [];\n        }\n    };\n    PdfPage.prototype._initializeGraphics = function (stream) {\n        var isInvalidCase = false;\n        var llx = 0;\n        var lly = 0;\n        var urx = 0;\n        var ury = 0;\n        var size = this.size;\n        var mbox = this.mediaBox;\n        if (mbox && mbox.length >= 4) {\n            llx = mbox[0];\n            lly = mbox[1];\n            urx = mbox[2];\n            ury = mbox[3];\n        }\n        var cbox;\n        if (this._pageDictionary.has('CropBox')) {\n            cbox = this.cropBox;\n            if (cbox && cbox.length >= 4) {\n                var cx = cbox[0];\n                var cy = cbox[1];\n                var crx = cbox[2];\n                var cry = cbox[3];\n                var isValid = (cx < 0 || cy < 0 || crx < 0 || cry < 0) &&\n                    (Math.floor(Math.abs(cy)) === Math.floor(Math.abs(size[1]))) &&\n                    (Math.floor(Math.abs(cx)) === Math.floor(Math.abs(size[0])));\n                if (isValid) {\n                    this._g = new PdfGraphics([Math.max(cx, crx), Math.max(cy, cry)], stream, this._crossReference, this);\n                }\n                else {\n                    this._g = new PdfGraphics(size, stream, this._crossReference, this);\n                    this._g._cropBox = cbox;\n                }\n            }\n            else {\n                this._g = new PdfGraphics(size, stream, this._crossReference, this);\n            }\n        }\n        else if ((llx < 0 || lly < 0 || urx < 0 || ury < 0) &&\n            (Math.floor(Math.abs(lly)) === Math.floor(Math.abs(size[1]))) &&\n            (Math.floor(Math.abs(urx)) === Math.floor(Math.abs(size[0])))) {\n            var width = Math.max(llx, urx);\n            var height = Math.max(lly, ury);\n            if (width <= 0 || height <= 0) {\n                isInvalidCase = true;\n                if (llx < 0) {\n                    llx = -llx;\n                }\n                if (lly < 0) {\n                    lly = -lly;\n                }\n                if (urx < 0) {\n                    urx = -urx;\n                }\n                if (ury < 0) {\n                    ury = -ury;\n                }\n                width = Math.max(llx, urx);\n                height = Math.max(lly, ury);\n            }\n            this._g = new PdfGraphics([width, height], stream, this._crossReference, this);\n        }\n        else {\n            this._g = new PdfGraphics(size, stream, this._crossReference, this);\n        }\n        if (this._pageDictionary.has('MediaBox')) {\n            this._g._mediaBoxUpperRightBound = isInvalidCase ? -lly : ury;\n        }\n        this._graphicsState = this._g.save();\n        var origin = this._origin;\n        if ((origin[0] >= 0 && origin[1] >= 0) || Math.sign(origin[0]) !== Math.sign(origin[1])) {\n            this._g._initializeCoordinates();\n        }\n        else {\n            this._g._initializeCoordinates(this);\n        }\n        //Need to code - set transparency group\n        if (!this._isNew) {\n            var rotation = this.rotation;\n            if (!Number.isNaN(rotation) && (rotation !== PdfRotationAngle.angle0 || this._pageDictionary.has('Rotate'))) {\n                var rotate = void 0;\n                if (this._pageDictionary.has('Rotate')) {\n                    rotate = this._pageDictionary.get('Rotate');\n                }\n                else {\n                    rotate = rotation * 90;\n                }\n                var clip = this._g._clipBounds;\n                if (rotate === 90) {\n                    this._g.translateTransform(0, size[1]);\n                    this._g.rotateTransform(-90);\n                    this._g._clipBounds = [clip[0], clip[1], size[0], size[1]];\n                }\n                else if (rotate === 180) {\n                    this._g.translateTransform(size[0], size[1]);\n                    this._g.rotateTransform(-180);\n                }\n                else if (rotate === 270) {\n                    this._g.translateTransform(size[0], 0);\n                    this._g.rotateTransform(-270);\n                    this._g._clipBounds = [clip[0], clip[1], size[1], size[0]];\n                }\n            }\n        }\n        if (this._isNew && this._pageSettings) {\n            var clipBounds = this._getActualBounds(this._pageSettings);\n            this._g._clipTranslateMargins(clipBounds);\n        }\n        this._needInitializeGraphics = false;\n    };\n    PdfPage.prototype._getActualBounds = function (pageSettings) {\n        var actualSize = pageSettings._getActualSize();\n        return [pageSettings.margins.left, pageSettings.margins.top, actualSize[0], actualSize[1]];\n    };\n    PdfPage.prototype._fetchResources = function () {\n        if (typeof this._resourceObject === 'undefined') {\n            if (this._pageDictionary && this._pageDictionary.has('Resources')) {\n                var obj = this._pageDictionary.getRaw('Resources'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined' && obj instanceof _PdfReference) {\n                    this._hasResourceReference = true;\n                    this._resourceObject = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    this._resourceObject = obj;\n                }\n            }\n            else {\n                this._resourceObject = new _PdfDictionary(this._crossReference);\n                this._pageDictionary.update('Resources', this._resourceObject);\n            }\n        }\n        return this._resourceObject;\n    };\n    PdfPage.prototype._getCropOrMediaBox = function () {\n        var box;\n        if (this._pageDictionary.has('CropBox')) {\n            box = this._pageDictionary.getArray('CropBox');\n        }\n        else if (this._pageDictionary.has('MediaBox')) {\n            box = this._pageDictionary.getArray('MediaBox');\n        }\n        return box;\n    };\n    PdfPage.prototype._beginSave = function () {\n        if (typeof this._graphicsState !== 'undefined') {\n            this.graphics.restore(this._graphicsState);\n            this._graphicsState = null;\n            this._needInitializeGraphics = true;\n        }\n    };\n    PdfPage.prototype._destroy = function () {\n        this._pageDictionary = undefined;\n        this._size = undefined;\n        this._mBox = undefined;\n        this._cBox = undefined;\n        this._o = undefined;\n        this._g = undefined;\n        this._graphicsState = undefined;\n        this._contents = undefined;\n    };\n    PdfPage.prototype._obtainTabOrder = function () {\n        if (this._pageDictionary.has('Tabs')) {\n            var tabOrder = this._pageDictionary.get('Tabs');\n            if (tabOrder === _PdfName.get('R')) {\n                this._tabOrder = PdfFormFieldsTabOrder.row;\n            }\n            else if (tabOrder === _PdfName.get('C')) {\n                this._tabOrder = PdfFormFieldsTabOrder.column;\n            }\n            else if (tabOrder === _PdfName.get('S')) {\n                this._tabOrder = PdfFormFieldsTabOrder.structure;\n            }\n            else if (tabOrder === _PdfName.get('W')) {\n                this._tabOrder = PdfFormFieldsTabOrder.widget;\n            }\n        }\n        if (this._tabOrder === null || typeof this._tabOrder === 'undefined') {\n            this._tabOrder = PdfFormFieldsTabOrder.none;\n        }\n        return this._tabOrder;\n    };\n    PdfPage.prototype._removeAnnotation = function (reference) {\n        if (this._pageDictionary.has('Annots')) {\n            var annots = this._getProperty('Annots');\n            if (annots && Array.isArray(annots)) {\n                var index = annots.indexOf(reference);\n                if (index >= 0) {\n                    annots.splice(index, 1);\n                }\n                this._pageDictionary.set('Annots', annots);\n                this._pageDictionary._updated = true;\n            }\n        }\n    };\n    return PdfPage;\n}());\nexport { PdfPage };\n/**\n * `PdfDestination` class represents the PDF destination.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n * // Initializes a new instance of the `PdfDestination` class.\n * let destination: PdfDestination = new PdfDestination();\n * // Sets the zoom factor.\n * destination.zoom = 20;\n * // Sets the page where the destination is situated.\n * destination.page = page;\n * // Sets the mode of the destination.\n * destination.mode = PdfDestinationMode.fitToPage;\n * // Sets the location of the destination.\n * destination.location = [20, 20];\n * // Sets the bounds of the destination.\n * destination.destinationBounds = [20, 20, 100, 50];\n * // Sets destination to  document link annotation.\n * annotation.destination = destination;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(page, location) {\n        this._location = [0, 0];\n        this._destinationMode = PdfDestinationMode.location;\n        this._zoom = 0;\n        this._isValid = true;\n        this._index = 0;\n        this._destinationBounds = [0, 0, 0, 0];\n        this._array = Array(); // eslint-disable-line\n        if (typeof page !== 'undefined' && page !== null) {\n            if (page.rotation === PdfRotationAngle.angle180) {\n                this._location = [page.graphics._size[0], this._location[1]];\n            }\n            else if (page.rotation === PdfRotationAngle.angle90) {\n                this._location = [0, 0];\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                this._location = [page.graphics._size[0], 0];\n            }\n            else {\n                this._location = [0, this._location[1]];\n            }\n            this._page = page;\n            this._index = page._pageIndex;\n        }\n        if (typeof location !== 'undefined' && location.length === 2) {\n            this._location = location;\n        }\n        if (typeof location !== 'undefined' && location.length === 4) {\n            this._location = [location[0], location[1]];\n            this._destinationBounds = location;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        /**\n         * Gets the zoom factor.\n         *\n         * @returns {number} zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the zoom factor of the destination.\n         * let zoom: number = annot.destination.zoom;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._zoom;\n        },\n        /**\n         * Sets the zoom factor.\n         *\n         * @param {number} value zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._zoom) {\n                this._zoom = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets the page where the destination is situated.\n         *\n         * @returns {PdfPage} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page of the destination.\n         * let page: PdfPage = annot.destination.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._page;\n        },\n        /**\n         * Sets the page where the destination is situated.\n         *\n         * @param {PdfPage} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._page) {\n                this._page = value;\n                this._initializePrimitive();\n                this._index = value._pageIndex;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"pageIndex\", {\n        /**\n         * Gets the page index of bookmark destination (Read only).\n         *\n         * @returns {number} index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page index of the destination.\n         * let pageIndex: number = annot.destination.pageIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets the mode of the destination.\n         *\n         * @returns {PdfDestinationMode} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the mode of the destination.\n         * let mode: PdfDestinationMode = annot.destination.mode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationMode;\n        },\n        /**\n         * Sets the mode of the destination.\n         *\n         * @param {PdfDestinationMode} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationMode) {\n                this._destinationMode = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets the location of the destination.\n         *\n         * @returns {number[]} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the location of the destination.\n         * let location: number[] = annot.destination.location;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._location;\n        },\n        /**\n         * Sets the location of the destination.\n         *\n         * @param {number[]} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._location) {\n                this._location = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"destinationBounds\", {\n        /**\n         * Gets the bounds of the destination.\n         *\n         * @returns {number[]} bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the bounds of the destination.\n         * let destinationBounds: number[] = annot.destination.destinationBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationBounds;\n        },\n        /**\n         * Sets the bounds of the destination.\n         *\n         * @param {number[]} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationBounds) {\n                this._destinationBounds = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"isValid\", {\n        /**\n         * Gets a value indicating whether this instance is valid (Read only).\n         *\n         * @returns {boolean} value indicating whether this instance is valid.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets a value indicating whether this instance is valid.\n         * let isValid: boolean = annot.destination.isValid;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isValid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDestination.prototype._setValidation = function (value) {\n        this._isValid = value;\n    };\n    PdfDestination.prototype._initializePrimitive = function () {\n        this._array = [];\n        var page = this._page;\n        var element = this._page._pageDictionary;\n        if (typeof element !== 'undefined' && element !== null) {\n            this._array.push(this._page._ref);\n        }\n        switch (this._destinationMode) {\n            case PdfDestinationMode.location:\n                this._array.push(_PdfName.get('XYZ'));\n                if (typeof page !== 'undefined' && page !== null) {\n                    this._array.push(this._location[0]);\n                    this._array.push(this._page.graphics._size[1] - this._location[1]);\n                }\n                else {\n                    this._array.push(0);\n                    this._array.push(0);\n                }\n                this._array.push(this._zoom);\n                break;\n            case PdfDestinationMode.fitToPage:\n                this._array.push(_PdfName.get('Fit'));\n                break;\n            case PdfDestinationMode.fitR:\n                this._array.push(_PdfName.get('FitR'));\n                this._array.push(this._destinationBounds[0]);\n                this._array.push(this._destinationBounds[1]);\n                this._array.push(this._destinationBounds[2]);\n                this._array.push(this._destinationBounds[3]);\n                break;\n            case PdfDestinationMode.fitH:\n                this._array.push(_PdfName.get('FitH'));\n                this._array.push((typeof page !== 'undefined' && page !== null) ? page._size[1] - this._location[1] : 0);\n                break;\n        }\n        if (this._parent) {\n            this._parent._dictionary.set('D', this._array);\n            this._parent._dictionary._updated = true;\n        }\n    };\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","import { _ImageFormat } from './../../enumerator';\nvar _ImageDecoder = /** @class */ (function () {\n    function _ImageDecoder() {\n        this._format = _ImageFormat.unknown;\n        this._height = 0;\n        this._width = 0;\n        this._bitsPerComponent = 8;\n        this._position = 0;\n        this._noOfComponents = -1;\n    }\n    _ImageDecoder.prototype._reset = function () {\n        this._position = 0;\n    };\n    _ImageDecoder.prototype._getBuffer = function (index) {\n        return this._stream[Number.parseInt(index.toString(), 10)];\n    };\n    _ImageDecoder.prototype._read = function (buffer, offset, count, stream) {\n        if (stream && Array.isArray(stream)) {\n            var result = 0;\n            if (count <= stream.length && stream.length - offset >= count) {\n                for (var i = 0; i < count; i++) {\n                    buffer[Number.parseInt(i.toString(), 10)] = stream[Number.parseInt(offset.toString(), 10)];\n                    offset++;\n                    result++;\n                }\n            }\n            return { 'outputBuffer': buffer, 'offset': offset, 'length': result };\n        }\n        else {\n            for (var index = offset; index < count; index++) {\n                var position = this._position;\n                buffer[Number.parseInt(index.toString(), 10)] = this._getBuffer(position);\n                this._position++;\n            }\n        }\n    };\n    _ImageDecoder.prototype._readString = function (length) {\n        var result = '';\n        for (var i = 0; i < length; i++) {\n            result += String.fromCharCode(this._readByte());\n        }\n        return result;\n    };\n    _ImageDecoder.prototype._seek = function (length) {\n        this._position += length;\n    };\n    _ImageDecoder.prototype._readByte = function () {\n        if (this._position < this._stream.byteLength) {\n            var value = this._getBuffer(this._position);\n            this._position += 1;\n            return value;\n        }\n        else {\n            throw new Error('Error decoding JPEG image. Invalid offset.');\n        }\n    };\n    _ImageDecoder.prototype._toUnsigned16 = function (value) {\n        value = value & 0xFFFF;\n        return value < 0 ? (value + 0x10000) : value;\n    };\n    _ImageDecoder.prototype._readUnsigned32 = function (offset) {\n        var i1 = this._getBuffer(offset + 3);\n        var i2 = this._getBuffer(offset + 2);\n        var i3 = this._getBuffer(offset + 1);\n        var i4 = this._getBuffer(offset);\n        return i1 | (i2 << 8) | (i3 << 16) | (i4 << 24);\n    };\n    return _ImageDecoder;\n}());\nexport { _ImageDecoder };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ImageDecoder } from './image-decoder';\nimport { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nvar _JpegDecoder = /** @class */ (function (_super) {\n    __extends(_JpegDecoder, _super);\n    /**\n     * Initializes a new instance of the `_JpegDecoder` class.\n     *\n     * @private\n     * @param {Uint8Array} stream byte array.\n     */\n    function _JpegDecoder(stream) {\n        var _this = _super.call(this) || this;\n        _this._stream = stream;\n        _this._initialize();\n        return _this;\n    }\n    Object.defineProperty(_JpegDecoder.prototype, \"_imageDataAsNumberArray\", {\n        get: function () {\n            return this._imageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _JpegDecoder.prototype._initialize = function () {\n        this._format = _ImageFormat.jpeg;\n        this._readHeader();\n        this._reset();\n        this._imageData = new Uint8Array(this._stream.byteLength);\n        this._read(this._imageData, 0, this._imageData.byteLength);\n    };\n    _JpegDecoder.prototype._readHeader = function () {\n        this._reset();\n        var imgData = new Uint8Array(this._stream.byteLength);\n        this._read(imgData, 0, imgData.byteLength);\n        var i = 4;\n        var length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n        var isLengthExceed = false;\n        while (i < imgData.byteLength) {\n            i += length;\n            if (i < imgData.byteLength) {\n                if (this._getBuffer(i + 1) === 192) {\n                    this._height = this._getBuffer(i + 5) * 256 + this._getBuffer(i + 6);\n                    this._width = this._getBuffer(i + 7) * 256 + this._getBuffer(i + 8);\n                    this._noOfComponents = this._getBuffer(i + 9);\n                    if (this._width !== 0 && this._height !== 0) {\n                        return;\n                    }\n                }\n                else {\n                    i += 2;\n                    length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this._reset();\n            this._seek(2);\n            this._readExceededJpegImage();\n        }\n    };\n    _JpegDecoder.prototype._getImageDictionary = function () {\n        var data = []; // eslint-disable-line\n        this._imageStream = new _PdfStream(data, new _PdfDictionary());\n        this._imageStream.isImageStream = true;\n        var tempString = '';\n        var decodedString = '';\n        for (var i = 0; i < this._imageDataAsNumberArray.byteLength; i++) {\n            tempString += ' ' + String.fromCharCode(this._getBuffer(i));\n        }\n        for (var i = 0; i < tempString.length; i++) {\n            if (i % 2 !== 0) {\n                decodedString += tempString[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._imageStream.data = [decodedString];\n        this._imageStream._isCompress = false;\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', new _PdfName('XObject'));\n        dictionary.set('Subtype', new _PdfName('Image'));\n        dictionary.set('Width', this._width);\n        dictionary.set('Height', this._height);\n        dictionary.set('BitsPerComponent', this._bitsPerComponent);\n        dictionary.set('Filter', new _PdfName('DCTDecode'));\n        dictionary.set('ColorSpace', new _PdfName(this._getColorSpace()));\n        dictionary.set('DecodeParms', this._getDecodeParams());\n        this._imageStream.dictionary = dictionary;\n        this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n        for (var i = 0; i < this._imageStream.data[0].length; i++) {\n            this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n        }\n        this._imageStream.end = this._imageStream.bytes.length;\n        this._imageStream.dictionary._updated = true;\n        return this._imageStream;\n    };\n    _JpegDecoder.prototype._getColorSpace = function () {\n        if (this._noOfComponents === 1) {\n            return 'DeviceGray';\n        }\n        else if (this._noOfComponents === 4) {\n            return 'DeviceCMYK';\n        }\n        return 'DeviceRGB';\n    };\n    _JpegDecoder.prototype._getDecodeParams = function () {\n        var decodeParams = new _PdfDictionary();\n        decodeParams.set('Columns', this._width);\n        decodeParams.set('BlackIs1', true);\n        decodeParams.set('K', -1);\n        decodeParams.set('Predictor', 15);\n        decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n        return decodeParams;\n    };\n    _JpegDecoder.prototype._skipStream = function () {\n        var length = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n        this._seek(2);\n        if (length < 2) {\n            throw new Error('Error decoding JPEG image');\n        }\n        else if (length > 0) {\n            this._seek(length - 2);\n        }\n    };\n    _JpegDecoder.prototype._readExceededJpegImage = function () {\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this._getMarker();\n            switch (marker) {\n                case 0x00C0:\n                case 0x00C1:\n                case 0x00C2:\n                case 0x00C3:\n                case 0x00C5:\n                case 0x00C6:\n                case 0x00C7:\n                case 0x00C9:\n                case 0x00CA:\n                case 0x00CB:\n                case 0x00CD:\n                case 0x00CE:\n                case 0x00CF:\n                    this._seek(3);\n                    this._height = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._width = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._noOfComponents = this._getBuffer(this._position);\n                    this._seek(1);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this._skipStream();\n                    break;\n            }\n        }\n    };\n    _JpegDecoder.prototype._getMarker = function () {\n        var skippedByte = 0;\n        var marker = this._readByte();\n        while (marker !== 255) {\n            skippedByte++;\n            marker = this._readByte();\n        }\n        do {\n            marker = this._readByte();\n        } while (marker === 255);\n        if (skippedByte !== 0) {\n            throw new Error('Error decoding JPEG image');\n        }\n        return this._toUnsigned16(marker);\n    };\n    return _JpegDecoder;\n}(_ImageDecoder));\nexport { _JpegDecoder };\n","export var _InflaterState;\n(function (_InflaterState) {\n    _InflaterState[_InflaterState[\"readingHeader\"] = 0] = \"readingHeader\";\n    _InflaterState[_InflaterState[\"readingBFinal\"] = 1] = \"readingBFinal\";\n    _InflaterState[_InflaterState[\"readingBType\"] = 2] = \"readingBType\";\n    _InflaterState[_InflaterState[\"readingNlCodes\"] = 3] = \"readingNlCodes\";\n    _InflaterState[_InflaterState[\"readingNdCodes\"] = 4] = \"readingNdCodes\";\n    _InflaterState[_InflaterState[\"readingCodes\"] = 5] = \"readingCodes\";\n    _InflaterState[_InflaterState[\"readingClCodes\"] = 6] = \"readingClCodes\";\n    _InflaterState[_InflaterState[\"readingTcBefore\"] = 7] = \"readingTcBefore\";\n    _InflaterState[_InflaterState[\"readingTcAfter\"] = 8] = \"readingTcAfter\";\n    _InflaterState[_InflaterState[\"decodeTop\"] = 9] = \"decodeTop\";\n    _InflaterState[_InflaterState[\"iLength\"] = 10] = \"iLength\";\n    _InflaterState[_InflaterState[\"fLength\"] = 11] = \"fLength\";\n    _InflaterState[_InflaterState[\"dCode\"] = 12] = \"dCode\";\n    _InflaterState[_InflaterState[\"unCompressedAligning\"] = 13] = \"unCompressedAligning\";\n    _InflaterState[_InflaterState[\"unCompressedByte1\"] = 14] = \"unCompressedByte1\";\n    _InflaterState[_InflaterState[\"unCompressedByte2\"] = 15] = \"unCompressedByte2\";\n    _InflaterState[_InflaterState[\"unCompressedByte3\"] = 16] = \"unCompressedByte3\";\n    _InflaterState[_InflaterState[\"unCompressedByte4\"] = 17] = \"unCompressedByte4\";\n    _InflaterState[_InflaterState[\"decodeUnCompressedBytes\"] = 18] = \"decodeUnCompressedBytes\";\n    _InflaterState[_InflaterState[\"srFooter\"] = 19] = \"srFooter\";\n    _InflaterState[_InflaterState[\"rFooter\"] = 20] = \"rFooter\";\n    _InflaterState[_InflaterState[\"vFooter\"] = 21] = \"vFooter\";\n    _InflaterState[_InflaterState[\"done\"] = 22] = \"done\";\n})(_InflaterState || (_InflaterState = {}));\nexport var _BlockType;\n(function (_BlockType) {\n    _BlockType[_BlockType[\"unCompressedType\"] = 0] = \"unCompressedType\";\n    _BlockType[_BlockType[\"staticType\"] = 1] = \"staticType\";\n    _BlockType[_BlockType[\"dynamicType\"] = 2] = \"dynamicType\";\n})(_BlockType || (_BlockType = {}));\n","import { _copyRange } from './../utils';\nvar _DecompressedOutput = /** @class */ (function () {\n    function _DecompressedOutput() {\n        this._end = 0;\n        this._usedBytes = 0;\n        this._dOutput = Array(_DecompressedOutput._dOutSize).fill(0);\n        this._end = 0;\n        this._usedBytes = 0;\n    }\n    Object.defineProperty(_DecompressedOutput.prototype, \"_unusedBytes\", {\n        get: function () {\n            return _DecompressedOutput._dOutSize - this._usedBytes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _DecompressedOutput.prototype._write = function (b) {\n        this._dOutput[this._end++] = b;\n        this._end &= _DecompressedOutput._dOutMask;\n        ++this._usedBytes;\n    };\n    _DecompressedOutput.prototype._writeLD = function (length, distance) {\n        this._usedBytes += length;\n        var copyStart = (this._end - distance) & _DecompressedOutput._dOutMask;\n        var border = _DecompressedOutput._dOutSize - length;\n        if (copyStart <= border && this._end < border) {\n            if (length <= distance) {\n                _copyRange(this._dOutput, this._end, this._dOutput, copyStart, copyStart + length);\n                this._end += length;\n            }\n            else {\n                while (length-- > 0) {\n                    this._dOutput[this._end++] = this._dOutput[copyStart++];\n                }\n            }\n        }\n        else {\n            while (length-- > 0) {\n                this._dOutput[this._end++] = this._dOutput[copyStart++];\n                this._end &= _DecompressedOutput._dOutMask;\n                copyStart &= _DecompressedOutput._dOutMask;\n            }\n        }\n    };\n    _DecompressedOutput.prototype._copyFrom = function (input, length) {\n        length = Math.min(Math.min(length, _DecompressedOutput._dOutSize - this._usedBytes), input._bytes);\n        var copied;\n        var tailLen = _DecompressedOutput._dOutSize - this._end;\n        if (length > tailLen) {\n            copied = input._copyTo(this._dOutput, this._end, tailLen);\n            if (copied === tailLen) {\n                copied += input._copyTo(this._dOutput, 0, length - tailLen);\n            }\n        }\n        else {\n            copied = input._copyTo(this._dOutput, this._end, length);\n        }\n        this._end = (this._end + copied) & _DecompressedOutput._dOutMask;\n        this._usedBytes += copied;\n        return copied;\n    };\n    _DecompressedOutput.prototype._copyTo = function (output, offset, length) {\n        var end;\n        if (length > this._usedBytes) {\n            end = this._end;\n            length = this._usedBytes;\n        }\n        else {\n            end = (this._end - this._usedBytes + length) & _DecompressedOutput._dOutMask;\n        }\n        var copied = length;\n        var tailLen = length - end;\n        var sourceStart = _DecompressedOutput._dOutSize - tailLen;\n        if (tailLen > 0) {\n            for (var i = 0; i < tailLen && i + sourceStart < this._dOutput.length && i + offset < output.length; i++) {\n                output[offset + i] = this._dOutput[sourceStart + i];\n            }\n            var sourceStartIndex_1 = _DecompressedOutput._dOutSize - tailLen;\n            _copyRange(output, offset, this._dOutput, sourceStartIndex_1, sourceStartIndex_1 + tailLen);\n            offset += tailLen;\n            length = end;\n        }\n        sourceStart = end - length;\n        var sourceStartIndex = end - length;\n        _copyRange(output, offset, this._dOutput, sourceStartIndex, end);\n        this._usedBytes -= copied;\n        return { 'count': copied, 'data': output };\n    };\n    _DecompressedOutput._dOutSize = 32768;\n    _DecompressedOutput._dOutMask = 32767;\n    return _DecompressedOutput;\n}());\nexport { _DecompressedOutput };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ImageDecoder } from './image-decoder';\nimport { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nimport { _bytesToString, _toUnsigned, _toSigned32 } from './../../utils';\nimport { _DeflateStream } from './../../compression/deflate-stream';\n/* eslint-disable */\nvar _PngDecoder = /** @class */ (function (_super) {\n    __extends(_PngDecoder, _super);\n    /**\n     * Initializes a new instance of the `_PngDecoder` class.\n     *\n     * @private\n     * @param {Uint8Array} stream byte array.\n     */\n    function _PngDecoder(stream) {\n        var _this = _super.call(this) || this;\n        _this._stream = stream;\n        _this._format = _ImageFormat.png;\n        _this._isRedGreenBlue = false;\n        _this._isDecode = false;\n        _this._shades = false;\n        _this._ideateDecode = true;\n        _this._colors = 0;\n        _this._bitsPerPixel = 0;\n        _this._idatLength = 0;\n        _this._inputBands = 0;\n        _this._position = 8;\n        _this._initialize();\n        return _this;\n    }\n    _PngDecoder.prototype._initialize = function () {\n        var header;\n        var result = this._hasValidChunkType(header);\n        while (result.hasValidChunk) {\n            header = result.type;\n            switch (header) {\n                case _PngChunkTypes.iHDR:\n                    this._readHeader();\n                    break;\n                case _PngChunkTypes.iDAT:\n                    this._readImageData();\n                    break;\n                case _PngChunkTypes.sRGB:\n                    this._isRedGreenBlue = true;\n                    this._ignoreChunk();\n                    break;\n                case _PngChunkTypes.pLTE:\n                    this._readPhotoPlate();\n                    break;\n                case _PngChunkTypes.iEND:\n                    this._decodeImageData();\n                    break;\n                case _PngChunkTypes.tRNS:\n                    this._readTransparency();\n                    break;\n                case _PngChunkTypes.tEXt:\n                case _PngChunkTypes.iTXt:\n                case _PngChunkTypes.zTXt:\n                case _PngChunkTypes.hIST:\n                case _PngChunkTypes.sBIT:\n                case _PngChunkTypes.iCCP:\n                case _PngChunkTypes.pHYs:\n                case _PngChunkTypes.tIME:\n                case _PngChunkTypes.bKGD:\n                case _PngChunkTypes.gAMA:\n                case _PngChunkTypes.cHRM:\n                case _PngChunkTypes.unknown:\n                    this._ignoreChunk();\n                    break;\n                default:\n                    break;\n            }\n            result = this._hasValidChunkType(header);\n        }\n    };\n    _PngDecoder.prototype._hasValidChunkType = function (type) {\n        type = _PngChunkTypes.unknown;\n        if (this._position + 8 <= this._stream.byteLength) {\n            this._currentChunkLength = this._readUnsigned32(this._position);\n            this._seek(4);\n            var chunk = this._readString(4);\n            var header = this._getChunkType(chunk);\n            if (typeof header !== 'undefined' && header !== null) {\n                type = header;\n                return { 'type': type, 'hasValidChunk': true };\n            }\n            if (this._stream.byteLength === this._position) {\n                return { 'type': type, 'hasValidChunk': false };\n            }\n            else {\n                return { 'type': type, 'hasValidChunk': true };\n            }\n        }\n        else {\n            return { 'type': type, 'hasValidChunk': false };\n        }\n    };\n    _PngDecoder.prototype._ignoreChunk = function () {\n        if (this._currentChunkLength > 0) {\n            this._seek(this._currentChunkLength + 4);\n        }\n    };\n    _PngDecoder.prototype._readHeader = function () {\n        this._header = new _PngHeader();\n        this._header._width = this._readUnsigned32(this._position);\n        this._seek(4);\n        this._header._height = this._readUnsigned32(this._position);\n        this._seek(4);\n        this._header._bitDepth = this._readByte();\n        this._header._colorType = this._readByte();\n        this._header._compression = this._readByte();\n        this._header._filter = this._getFilterType(this._readByte());\n        this._header._interlace = this._readByte();\n        this._colors = (this._header._colorType === 3 || (this._header._colorType & 2) === 0) ? 1 : 3;\n        this._width = this._header._width;\n        this._height = this._header._height;\n        this._bitsPerComponent = this._header._bitDepth;\n        this._setBitsPerPixel();\n        this._seek(4);\n    };\n    _PngDecoder.prototype._setBitsPerPixel = function () {\n        this._bitsPerPixel = this._header._bitDepth === 16 ? 2 : 1;\n        if (this._header._colorType === 0) {\n            this._idatLength = Number.parseInt(((this._bitsPerComponent * this._width + 7) / 8).toString(), 10) * this._height;\n            this._inputBands = 1;\n        }\n        else if (this._header._colorType === 2) {\n            this._idatLength = this._width * this._height * 3;\n            this._inputBands = 3;\n            this._bitsPerPixel *= 3;\n        }\n        else if (this._header._colorType === 3) {\n            if (this._header._interlace === 1) {\n                this._idatLength = Number.parseInt(((this._header._bitDepth * this._width + 7) / 8).toString(), 10) * this._height;\n            }\n            this._inputBands = 1;\n            this._bitsPerPixel = 1;\n        }\n        else if (this._header._colorType === 4) {\n            this._idatLength = this._width * this._height;\n            this._inputBands = 2;\n            this._bitsPerPixel *= 2;\n        }\n        else if (this._header._colorType === 6) {\n            this._idatLength = this._width * 3 * this._height;\n            this._inputBands = 4;\n            this._bitsPerPixel *= 4;\n        }\n    };\n    _PngDecoder.prototype._readImageData = function () {\n        if (!this._encodedStream || this._encodedStream.length === 0) {\n            this._encodedStream = [];\n        }\n        if (this._currentChunkLength <= this._stream.byteLength && this._stream.byteLength - this._position >= this._currentChunkLength) {\n            for (var i = 0; i < this._currentChunkLength; i++) {\n                this._encodedStream.push(this._readByte());\n            }\n        }\n        this._seek(4);\n    };\n    _PngDecoder.prototype._readPhotoPlate = function () {\n        if (this._header._colorType === 3) {\n            this._colorSpace = [];\n            this._colorSpace.push(_PdfName.get('Indexed'));\n            this._colorSpace.push(this._getPngColorSpace());\n            this._colorSpace.push(this._currentChunkLength / 3 - 1);\n            var buffer = new Uint8Array(this._currentChunkLength);\n            this._read(buffer, 0, this._currentChunkLength);\n            this._colorSpace.push(_bytesToString(buffer));\n            this._seek(4);\n        }\n        else {\n            this._ignoreChunk();\n        }\n    };\n    _PngDecoder.prototype._readTransparency = function () {\n        if (this._header._colorType === 3) {\n            var alpha = new Uint8Array(this._currentChunkLength);\n            this._read(alpha, 0, this._currentChunkLength);\n            this._seek(4);\n            this._alpha = [];\n            for (var i = 0; i < alpha.length; i++) {\n                this._alpha.push(alpha[Number.parseInt(i.toString(), 10)]);\n                var sh = alpha[Number.parseInt(i.toString(), 10)] & 0xff;\n                if (sh !== 0 && sh !== 255) {\n                    this._shades = true;\n                }\n            }\n        }\n        else {\n            this._ignoreChunk();\n        }\n    };\n    _PngDecoder.prototype._getPngColorSpace = function () {\n        if (!this._isRedGreenBlue) {\n            if ((this._header._colorType & 2) === 0) {\n                return _PdfName.get('DeviceGray');\n            }\n            else {\n                return _PdfName.get('DeviceRGB');\n            }\n        }\n        else {\n            var colorspace = [];\n            var calRGB = new _PdfDictionary();\n            var whitePoint = [1, 1, 1];\n            var gammaArray = [2.2, 2.2, 2.2];\n            calRGB.set('Gamma', gammaArray);\n            if (this._isRedGreenBlue) {\n                var wpX = 0.3127;\n                var wpY = 0.329;\n                var redX = 0.64;\n                var redY = 0.33;\n                var greenX = 0.3;\n                var greenY = 0.6;\n                var bX = 0.15;\n                var bY = 0.06;\n                var t = wpY * ((greenX - bX) * redY - (redX - bX) * greenY + (redX - greenX) * bY);\n                var alphaY = redY * ((greenX - bX) * wpY - (wpX - bX) * greenY + (wpX - greenX) * bY) / t;\n                var alphaX = alphaY * redX / redY;\n                var alphaZ = alphaY * ((1 - redX) / redY - 1);\n                var blueY = -greenY * ((redX - bX) * wpY - (wpX - bX) * redY + (wpX - redX) * bY) / t;\n                var blueX = blueY * greenX / greenY;\n                var blueZ = blueY * ((1 - greenX) / greenY - 1);\n                var colorY = bY * ((redX - greenX) * wpY - (wpX - greenX) * wpY + (wpX - redX) * greenY) / t;\n                var colorX = colorY * bX / bY;\n                var colorZ = colorY * ((1 - bX) / bY - 1);\n                var whiteX = alphaX + blueX + colorX;\n                var whiteY = 1;\n                var whiteZ = alphaZ + blueZ + colorZ;\n                whitePoint = [whiteX, whiteY, whiteZ];\n                calRGB.set('Matrix', [alphaX, alphaY, alphaZ, blueX, blueY, blueZ, colorX, colorY, colorZ]);\n            }\n            calRGB.set('WhitePoint', whitePoint);\n            colorspace.push(_PdfName.get('CalRGB'));\n            colorspace.push(calRGB);\n            return colorspace;\n        }\n    };\n    _PngDecoder.prototype._decodeImageData = function () {\n        var header = this._header;\n        this._isDecode = (header._interlace === 1) || (header._bitDepth === 16) || ((header._colorType & 4) !== 0) || this._shades;\n        if (this._isDecode) {\n            if ((header._colorType & 4) !== 0 || this._shades) {\n                this._maskData = Array(this._width * this._height).fill(0);\n            }\n            if (this._encodedStream) {\n                this._dataStream = this._getDeflatedData(this._encodedStream);\n                this._dataStreamOffset = 0;\n            }\n            if (this._idatLength > 0) {\n                this._decodedImageData = Array(this._idatLength).fill(0);\n            }\n            this._readDecodeData();\n            if (this._decodedImageData && this._decodedImageData.length === 0 && this._shades) {\n                this._ideateDecode = false;\n                this._decodedImageData = this._encodedStream;\n            }\n        }\n        else {\n            this._ideateDecode = false;\n            this._decodedImageData = this._encodedStream;\n        }\n    };\n    _PngDecoder.prototype._getDeflatedData = function (data) {\n        var idatData = data.slice(2, data.length - 4);\n        var deflateStream = new _DeflateStream(idatData, 0, true);\n        var buffer = Array(4096).fill(0);\n        var numRead = 0;\n        var outputData = [];\n        do {\n            var result = deflateStream._read(buffer, 0, buffer.length);\n            numRead = result.count;\n            buffer = result.data;\n            for (var i = 0; i < numRead; i++) {\n                outputData.push(buffer[Number.parseInt(i.toString(), 10)]);\n            }\n        } while (numRead > 0);\n        return outputData;\n    };\n    _PngDecoder.prototype._readDecodeData = function () {\n        if (this._header._interlace !== 1) {\n            this._decodeData(0, 0, 1, 1, this._width, this._height);\n        }\n        else {\n            this._decodeData(0, 0, 8, 8, Math.floor((this._width + 7) / 8), Math.floor((this._height + 7) / 8));\n            this._decodeData(4, 0, 8, 8, Math.floor((this._width + 3) / 8), Math.floor((this._height + 7) / 8));\n            this._decodeData(0, 4, 4, 8, Math.floor((this._width + 3) / 4), Math.floor((this._height + 3) / 8));\n            this._decodeData(2, 0, 4, 4, Math.floor((this._width + 1) / 4), Math.floor((this._height + 3) / 4));\n            this._decodeData(0, 2, 2, 4, Math.floor((this._width + 1) / 2), Math.floor((this._height + 1) / 4));\n            this._decodeData(1, 0, 2, 2, Math.floor(this._width / 2), Math.floor((this._height + 1) / 2));\n            this._decodeData(0, 1, 1, 2, this._width, Math.floor(this._height / 2));\n        }\n    };\n    _PngDecoder.prototype._decodeData = function (xOffset, yOffset, xStep, yStep, width, height) {\n        if ((width === 0) || (height === 0)) {\n            return;\n        }\n        else {\n            var bytesPerRow = Math.floor((this._inputBands * width * this._header._bitDepth + 7) / 8);\n            var current = Array(bytesPerRow).fill(0);\n            var prior = Array(bytesPerRow).fill(0);\n            for (var sourceY = 0, destinationY = yOffset; sourceY < height; sourceY++, destinationY += yStep) {\n                var filter = this._dataStream[this._dataStreamOffset];\n                this._dataStreamOffset = this._dataStreamOffset + 1;\n                this._dataStreamOffset = this._readStream(this._dataStream, this._dataStreamOffset, current, bytesPerRow);\n                switch (this._getFilterType(filter)) {\n                    case _PngFilterTypes.none:\n                        break;\n                    case _PngFilterTypes.sub:\n                        this._decompressSub(current, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    case _PngFilterTypes.up:\n                        this._decompressUp(current, prior, bytesPerRow);\n                        break;\n                    case _PngFilterTypes.average:\n                        this._decompressAverage(current, prior, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    case _PngFilterTypes.paeth:\n                        this._decompressPaeth(current, prior, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    default:\n                        throw new Error('Unknown PNG filter');\n                }\n                this._processPixels(current, xOffset, xStep, destinationY, width);\n                var tmp = prior;\n                prior = current;\n                current = tmp;\n            }\n        }\n    };\n    _PngDecoder.prototype._readStream = function (stream, streamOffset, data, count) {\n        var result = this._read(data, streamOffset, count, stream);\n        data = result.outputBuffer;\n        streamOffset = result.offset;\n        var n = result.length;\n        if (n <= 0) {\n            throw new Error('Insufficient data');\n        }\n        return streamOffset;\n    };\n    _PngDecoder.prototype._decompressSub = function (data, count, bitsPerPixel) {\n        for (var i = bitsPerPixel; i < count; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + (data[i - bitsPerPixel] & 0xff), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressUp = function (data, pData, count) {\n        for (var i = 0; i < count; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + (pData[Number.parseInt(i.toString(), 10)] & 0xff), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressAverage = function (data, pData, count, bitsPerPixel) {\n        for (var i = 0; i < bitsPerPixel; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((Math.floor(((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + (pData[Number.parseInt(i.toString(), 10)] & 0xff)) / 2)), 8);\n        }\n        for (var i = bitsPerPixel; i < count; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(Math.floor((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + ((data[i - bitsPerPixel] & 0xff) + (pData[Number.parseInt(i.toString(), 10)] & 0xff)) / 2), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressPaeth = function (data, pData, count, bitsPerPixel) {\n        var val;\n        var pp;\n        var pr;\n        var prp;\n        for (var i = 0; i < bitsPerPixel; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(val + pr, 8);\n        }\n        for (var i = bitsPerPixel; i < count; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pp = data[i - bitsPerPixel] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            prp = pData[i - bitsPerPixel] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((val + this._paethPredictor(pp, pr, prp)), 8);\n        }\n    };\n    _PngDecoder.prototype._paethPredictor = function (a, b, c) {\n        var p = a + b - c;\n        var pa = Math.abs(p - a);\n        var pb = Math.abs(p - b);\n        var pc = Math.abs(p - c);\n        if ((pa <= pb) && (pa <= pc)) {\n            return a;\n        }\n        else if (pb <= pc) {\n            return b;\n        }\n        else {\n            return c;\n        }\n    };\n    _PngDecoder.prototype._processPixels = function (data, x, step, y, width) {\n        var sourceX = 0;\n        var destX = 0;\n        var size = 0;\n        var pixel = this._getPixel(data);\n        if (this._header._colorType === 0 || this._header._colorType === 3 || this._header._colorType === 4) {\n            size = 1;\n        }\n        else if (this._header._colorType === 2 || this._header._colorType === 6) {\n            size = 3;\n        }\n        if (this._decodedImageData && this._decodedImageData.length > 0) {\n            destX = x;\n            var depth = (this._header._bitDepth === 16) ? 8 : this._header._bitDepth;\n            var yStep = Math.floor((size * width * depth + 7) / 8);\n            for (sourceX = 0; sourceX < width; sourceX++) {\n                this._decodedImageData = this._setPixel(this._decodedImageData, pixel, this._inputBands * sourceX, size, destX, y, this._header._bitDepth, yStep);\n                destX += step;\n            }\n        }\n        var shades = (this._header._colorType & 4) !== 0 || this._shades;\n        if (shades) {\n            if ((this._header._colorType & 4) !== 0) {\n                if (this._header._bitDepth === 16) {\n                    for (var i = 0; i < width; ++i) {\n                        var temp = i * this._inputBands + size;\n                        var unsigned = _toUnsigned(pixel[Number.parseInt(temp.toString(), 10)], 32);\n                        pixel[Number.parseInt(temp.toString(), 10)] = _toSigned32(unsigned >> 8);\n                    }\n                }\n                var yStep = width;\n                destX = x;\n                for (sourceX = 0; sourceX < width; sourceX++) {\n                    this._maskData = this._setPixel(this._maskData, pixel, this._inputBands * sourceX + size, 1, destX, y, 8, yStep);\n                    destX += step;\n                }\n            }\n            else {\n                var yStep = width;\n                var dt = [0];\n                destX = x;\n                for (sourceX = 0; sourceX < width; sourceX++) {\n                    var index = pixel[Number.parseInt(sourceX.toString(), 10)];\n                    if (index < this._alpha.length) {\n                        dt[0] = this._alpha[Number.parseInt(index.toString(), 10)];\n                    }\n                    else {\n                        dt[0] = 255;\n                    }\n                    this._maskData = this._setPixel(this._maskData, dt, 0, 1, destX, y, 8, yStep);\n                    destX += step;\n                }\n            }\n        }\n    };\n    _PngDecoder.prototype._getPixel = function (data) {\n        if (this._header._bitDepth === 8) {\n            var pixel = Array(data.length).fill(0);\n            for (var i = 0; i < pixel.length; ++i) {\n                pixel[Number.parseInt(i.toString(), 10)] = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            }\n            return pixel;\n        }\n        else if (this._header._bitDepth === 16) {\n            var pixel = Array(Math.floor(data.length / 2)).fill(0);\n            for (var i = 0; i < pixel.length; ++i) {\n                pixel[Number.parseInt(i.toString(), 10)] = ((data[i * 2] & 0xff) << 8) + (data[i * 2 + 1] & 0xff);\n            }\n            return pixel;\n        }\n        else {\n            var pixel = Array(Math.floor((data.length * 8) / this._header._bitDepth)).fill(0);\n            var index = 0;\n            var p = Math.floor(8 / this._header._bitDepth);\n            var mask = (1 << this._header._bitDepth) - 1;\n            for (var n = 0; n < data.length; ++n) {\n                for (var i = p - 1; i >= 0; --i) {\n                    var hb = this._header._bitDepth * i;\n                    var d = data[Number.parseInt(n.toString(), 10)];\n                    pixel[index++] = ((hb < 1) ? d : _toSigned32(_toUnsigned(d, 32) >> hb)) & mask;\n                }\n            }\n            return pixel;\n        }\n    };\n    _PngDecoder.prototype._setPixel = function (imageData, data, offset, size, x, y, bitDepth, bpr) {\n        if (bitDepth === 8) {\n            var position = bpr * y + size * x;\n            for (var i = 0; i < size; ++i) {\n                imageData[position + i] = _toUnsigned(data[i + offset], 8);\n            }\n        }\n        else if (bitDepth === 16) {\n            var position = bpr * y + size * x;\n            for (var i = 0; i < size; ++i) {\n                imageData[position + i] = _toUnsigned((data[i + offset] >> 8), 8);\n            }\n        }\n        else {\n            var position = Math.floor((bpr * y + x) / (8 / bitDepth));\n            var t = data[Number.parseInt(offset.toString(), 10)]\n                << Number.parseInt((8 - bitDepth * (x % (8 / bitDepth)) - bitDepth).toString(), 10);\n            imageData[Number.parseInt(position.toString(), 10)] = imageData[Number.parseInt(position.toString(), 10)] | _toUnsigned(t, 8);\n        }\n        return imageData;\n    };\n    _PngDecoder.prototype._getImageDictionary = function () {\n        var data = [];\n        this._imageStream = new _PdfStream(data, new _PdfDictionary());\n        this._imageStream.isImageStream = true;\n        var decodedString = '';\n        for (var i = 0; i < this._decodedImageData.length; i++) {\n            decodedString += String.fromCharCode(this._decodedImageData[Number.parseInt(i.toString(), 10)]);\n        }\n        this._imageStream.data = [decodedString];\n        this._imageStream._isCompress = this._isDecode && this._ideateDecode;\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', new _PdfName('XObject'));\n        dictionary.set('Subtype', new _PdfName('Image'));\n        dictionary.set('Width', this._width);\n        dictionary.set('Height', this._height);\n        if (this._bitsPerComponent === 16) {\n            dictionary.set('BitsPerComponent', 8);\n        }\n        else {\n            dictionary.set('BitsPerComponent', this._bitsPerComponent);\n        }\n        if (!this._isDecode || !this._ideateDecode) {\n            dictionary.set('Filter', new _PdfName('FlateDecode'));\n        }\n        if ((this._header._colorType & 2) === 0) {\n            dictionary.set('ColorSpace', _PdfName.get('DeviceGray'));\n        }\n        else {\n            dictionary.set('ColorSpace', _PdfName.get('DeviceRGB'));\n        }\n        if (!this._isDecode || this._shades && !this._ideateDecode) {\n            dictionary.set('DecodeParms', this._getDecodeParams());\n        }\n        this._imageStream.dictionary = dictionary;\n        this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n        for (var i = 0; i < this._imageStream.data[0].length; i++) {\n            this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n        }\n        this._imageStream.end = this._imageStream.bytes.length;\n        this._imageStream.dictionary._updated = true;\n        this._setMask();\n        return this._imageStream;\n    };\n    _PngDecoder.prototype._setMask = function () {\n        if (this._maskData && this._maskData.length > 0) {\n            this._maskStream = new _PdfStream(this._maskData, new _PdfDictionary());\n            this._maskStream._isCompress = this._isDecode && this._ideateDecode;\n            var dictionary = new _PdfDictionary();\n            dictionary.set('Type', new _PdfName('XObject'));\n            dictionary.set('Subtype', new _PdfName('Image'));\n            dictionary.set('Width', this._width);\n            dictionary.set('Height', this._height);\n            if (this._bitsPerComponent === 16) {\n                dictionary.set('BitsPerComponent', 8);\n            }\n            else {\n                dictionary.set('BitsPerComponent', this._bitsPerComponent);\n            }\n            dictionary.set('ColorSpace', _PdfName.get('DeviceGray'));\n            this._maskStream.dictionary = dictionary;\n            this._maskStream.bytes = new Uint8Array(this._maskData);\n            this._maskStream.end = this._maskStream.bytes.length;\n            this._maskStream.dictionary._updated = true;\n        }\n    };\n    _PngDecoder.prototype._getDecodeParams = function () {\n        var decodeParams = new _PdfDictionary();\n        decodeParams.set('Columns', this._width);\n        decodeParams.set('Colors', this._colors);\n        decodeParams.set('Predictor', 15);\n        decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n        return decodeParams;\n    };\n    _PngDecoder.prototype._getChunkType = function (chunk) {\n        switch (chunk) {\n            case 'IHDR':\n                return _PngChunkTypes.iHDR;\n            case 'PLTE':\n                return _PngChunkTypes.pLTE;\n            case 'IDAT':\n                return _PngChunkTypes.iDAT;\n            case 'IEND':\n                return _PngChunkTypes.iEND;\n            case 'bKGD':\n                return _PngChunkTypes.bKGD;\n            case 'cHRM':\n                return _PngChunkTypes.cHRM;\n            case 'gAMA':\n                return _PngChunkTypes.gAMA;\n            case 'hIST':\n                return _PngChunkTypes.hIST;\n            case 'pHYs':\n                return _PngChunkTypes.pHYs;\n            case 'sBIT':\n                return _PngChunkTypes.sBIT;\n            case 'tEXt':\n                return _PngChunkTypes.tEXt;\n            case 'tIME':\n                return _PngChunkTypes.tIME;\n            case 'tRNS':\n                return _PngChunkTypes.tRNS;\n            case 'zTXt':\n                return _PngChunkTypes.zTXt;\n            case 'sRGB':\n                return _PngChunkTypes.sRGB;\n            case 'iCCP':\n                return _PngChunkTypes.iCCP;\n            case 'iTXt':\n                return _PngChunkTypes.iTXt;\n            case 'Unknown':\n                return _PngChunkTypes.unknown;\n            default:\n                return null;\n        }\n    };\n    _PngDecoder.prototype._getFilterType = function (type) {\n        switch (type) {\n            case 1:\n                return _PngFilterTypes.sub;\n            case 2:\n                return _PngFilterTypes.up;\n            case 3:\n                return _PngFilterTypes.average;\n            case 4:\n                return _PngFilterTypes.paeth;\n            default:\n                return _PngFilterTypes.none;\n        }\n    };\n    return _PngDecoder;\n}(_ImageDecoder));\nexport { _PngDecoder };\nvar _PngHeader = /** @class */ (function () {\n    function _PngHeader() {\n        this._width = 0;\n        this._height = 0;\n        this._colorType = 0;\n        this._compression = 0;\n        this._bitDepth = 0;\n        this._interlace = 0;\n        this._filter = _PngFilterTypes.none;\n    }\n    return _PngHeader;\n}());\nvar _PngChunkTypes;\n(function (_PngChunkTypes) {\n    _PngChunkTypes[_PngChunkTypes[\"iHDR\"] = 0] = \"iHDR\";\n    _PngChunkTypes[_PngChunkTypes[\"pLTE\"] = 1] = \"pLTE\";\n    _PngChunkTypes[_PngChunkTypes[\"iDAT\"] = 2] = \"iDAT\";\n    _PngChunkTypes[_PngChunkTypes[\"iEND\"] = 3] = \"iEND\";\n    _PngChunkTypes[_PngChunkTypes[\"bKGD\"] = 4] = \"bKGD\";\n    _PngChunkTypes[_PngChunkTypes[\"cHRM\"] = 5] = \"cHRM\";\n    _PngChunkTypes[_PngChunkTypes[\"gAMA\"] = 6] = \"gAMA\";\n    _PngChunkTypes[_PngChunkTypes[\"hIST\"] = 7] = \"hIST\";\n    _PngChunkTypes[_PngChunkTypes[\"pHYs\"] = 8] = \"pHYs\";\n    _PngChunkTypes[_PngChunkTypes[\"sBIT\"] = 9] = \"sBIT\";\n    _PngChunkTypes[_PngChunkTypes[\"tEXt\"] = 10] = \"tEXt\";\n    _PngChunkTypes[_PngChunkTypes[\"tIME\"] = 11] = \"tIME\";\n    _PngChunkTypes[_PngChunkTypes[\"tRNS\"] = 12] = \"tRNS\";\n    _PngChunkTypes[_PngChunkTypes[\"zTXt\"] = 13] = \"zTXt\";\n    _PngChunkTypes[_PngChunkTypes[\"sRGB\"] = 14] = \"sRGB\";\n    _PngChunkTypes[_PngChunkTypes[\"iCCP\"] = 15] = \"iCCP\";\n    _PngChunkTypes[_PngChunkTypes[\"iTXt\"] = 16] = \"iTXt\";\n    _PngChunkTypes[_PngChunkTypes[\"unknown\"] = 17] = \"unknown\";\n})(_PngChunkTypes || (_PngChunkTypes = {}));\nvar _PngFilterTypes;\n(function (_PngFilterTypes) {\n    _PngFilterTypes[_PngFilterTypes[\"none\"] = 0] = \"none\";\n    _PngFilterTypes[_PngFilterTypes[\"sub\"] = 1] = \"sub\";\n    _PngFilterTypes[_PngFilterTypes[\"up\"] = 2] = \"up\";\n    _PngFilterTypes[_PngFilterTypes[\"average\"] = 3] = \"average\";\n    _PngFilterTypes[_PngFilterTypes[\"paeth\"] = 4] = \"paeth\";\n})(_PngFilterTypes || (_PngFilterTypes = {}));\n","import { _toUnsigned } from './../utils';\nvar _InBuffer = /** @class */ (function () {\n    function _InBuffer() {\n        this._bBuffer = 0;\n        this._bInBuffer = 0;\n        this._begin = 0;\n        this._end = 0;\n    }\n    Object.defineProperty(_InBuffer.prototype, \"_bytes\", {\n        get: function () {\n            return (this._end - this._begin) + Math.floor(this._bInBuffer / 8);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _InBuffer.prototype._needsInput = function () {\n        return this._begin === this._end;\n    };\n    _InBuffer.prototype._availableBits = function (count) {\n        if (this._bInBuffer < count) {\n            if (this._needsInput()) {\n                return false;\n            }\n            this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n            this._bInBuffer += 8;\n            if (this._bInBuffer < count) {\n                if (this._needsInput()) {\n                    return false;\n                }\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        return true;\n    };\n    _InBuffer.prototype._load16Bits = function () {\n        if (this._bInBuffer < 8) {\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        else if (this._bInBuffer < 16) {\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        return this._bBuffer;\n    };\n    _InBuffer.prototype._getBitMask = function (count) {\n        return (_toUnsigned(1, 32) << count) - 1;\n    };\n    _InBuffer.prototype._getBits = function (count) {\n        if (!this._availableBits(count)) {\n            return -1;\n        }\n        var result = this._bBuffer & this._getBitMask(count);\n        this._bBuffer >>= count;\n        this._bInBuffer -= count;\n        return result;\n    };\n    _InBuffer.prototype._copyTo = function (output, offset, length) {\n        var bitBuffer = 0;\n        while (this._bInBuffer > 0 && length > 0) {\n            output[offset++] = _toUnsigned(this._bBuffer, 8);\n            this._bBuffer >>= 8;\n            this._bInBuffer -= 8;\n            length--;\n            bitBuffer++;\n        }\n        if (length === 0) {\n            return bitBuffer;\n        }\n        var avail = this._end - this._begin;\n        if (length > avail) {\n            length = avail;\n        }\n        for (var i = 0; i < length && i + this._begin < this._buffer.length && i + offset < output.length; i++) {\n            output[offset + i] = this._buffer[this._begin + i];\n        }\n        this._begin += length;\n        return bitBuffer + length;\n    };\n    _InBuffer.prototype._setInput = function (buffer, offset, length) {\n        this._buffer = buffer;\n        this._begin = offset;\n        this._end = offset + length;\n    };\n    _InBuffer.prototype._skipBits = function (n) {\n        this._bBuffer >>= n;\n        this._bInBuffer -= n;\n    };\n    _InBuffer.prototype._skipByteBoundary = function () {\n        this._bBuffer >>= this._bInBuffer % 8;\n        this._bInBuffer = this._bInBuffer - (this._bInBuffer % 8);\n    };\n    return _InBuffer;\n}());\nexport { _InBuffer };\n","import { _toUnsigned, _toSigned16 } from './../utils';\nvar _HuffmanTree = /** @class */ (function () {\n    function _HuffmanTree() {\n    }\n    _HuffmanTree.prototype._load = function (code) {\n        this._clArray = code;\n        this._initialize();\n    };\n    _HuffmanTree.prototype._loadTree = function (isLengthTree) {\n        this._clArray = isLengthTree ? this._getLengthTree() : this._getDepthTree();\n        this._initialize();\n    };\n    _HuffmanTree.prototype._initialize = function () {\n        if (this._clArray.length === _HuffmanTree._maxLengthTree) {\n            this._tBits = 9;\n        }\n        else {\n            this._tBits = 7;\n        }\n        this._tMask = (1 << this._tBits) - 1;\n        this._createTable();\n    };\n    _HuffmanTree.prototype._getLengthTree = function () {\n        var lTree = Array(_HuffmanTree._maxLengthTree).fill(0);\n        for (var i = 0; i <= 143; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(8, 8);\n        }\n        for (var i = 144; i <= 255; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(9, 8);\n        }\n        for (var i = 256; i <= 279; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(7, 8);\n        }\n        for (var i = 280; i <= 287; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(8, 8);\n        }\n        return lTree;\n    };\n    _HuffmanTree.prototype._getDepthTree = function () {\n        return Array(_HuffmanTree._maxDepthTree).fill(5);\n    };\n    _HuffmanTree.prototype._calculateHashCode = function () {\n        var bit = Array(17).fill(0);\n        for (var i = 0; i < this._clArray.length; i++) {\n            bit[this._clArray[Number.parseInt(i.toString(), 10)]]++;\n        }\n        bit[0] = 0;\n        var next = Array(17).fill(0);\n        var temp = 0;\n        for (var bits = 1; bits <= 16; bits++) {\n            temp = (temp + bit[bits - 1]) << 1;\n            next[Number.parseInt(bits.toString(), 10)] = temp;\n        }\n        var code = Array(_HuffmanTree._maxLengthTree).fill(0);\n        for (var i = 0; i < this._clArray.length; i++) {\n            var len = this._clArray[Number.parseInt(i.toString(), 10)];\n            if (len > 0) {\n                code[Number.parseInt(i.toString(), 10)] = this._bitReverse(next[Number.parseInt(len.toString(), 10)], len);\n                next[Number.parseInt(len.toString(), 10)]++;\n            }\n        }\n        return code;\n    };\n    _HuffmanTree.prototype._bitReverse = function (code, length) {\n        var newcode = 0;\n        do {\n            newcode |= code & 1;\n            newcode <<= 1;\n            code >>= 1;\n        } while (--length > 0);\n        return newcode >> 1;\n    };\n    _HuffmanTree.prototype._createTable = function () {\n        var codeArray = this._calculateHashCode();\n        this._table = Array(1 << this._tBits).fill(0);\n        this._left = Array(2 * this._clArray.length).fill(0);\n        this._right = Array(2 * this._clArray.length).fill(0);\n        var avail = _toSigned16(this._clArray.length);\n        for (var ch = 0; ch < this._clArray.length; ch++) {\n            var len = this._clArray[Number.parseInt(ch.toString(), 10)];\n            if (len > 0) {\n                var start = codeArray[Number.parseInt(ch.toString(), 10)];\n                if (len <= this._tBits) {\n                    var i = 1 << len;\n                    if (start >= i) {\n                        throw new Error('Invalid Data.');\n                    }\n                    var l = 1 << (this._tBits - len);\n                    for (var j = 0; j < l; j++) {\n                        this._table[Number.parseInt(start.toString(), 10)] = _toSigned16(ch);\n                        start += i;\n                    }\n                }\n                else {\n                    var ofBits = len - this._tBits;\n                    var bitMask = 1 << this._tBits;\n                    var index = start & ((1 << this._tBits) - 1);\n                    var array = this._table;\n                    do {\n                        var value = _toSigned16(array[Number.parseInt(index.toString(), 10)]);\n                        if (value === 0) {\n                            array[Number.parseInt(index.toString(), 10)] = _toSigned16(-avail);\n                            value = _toSigned16(-avail);\n                            avail++;\n                        }\n                        if (value > 0) {\n                            throw new Error('Invalid Data.');\n                        }\n                        if ((start & bitMask) === 0) {\n                            array = this._left;\n                        }\n                        else {\n                            array = this._right;\n                        }\n                        index = -value;\n                        bitMask <<= 1;\n                        ofBits--;\n                    } while (ofBits !== 0);\n                    array[Number.parseInt(index.toString(), 10)] = _toSigned16(ch);\n                }\n            }\n        }\n    };\n    _HuffmanTree.prototype._getNextSymbol = function (input) {\n        var bitBuffer = input._load16Bits();\n        if (input._bInBuffer === 0) {\n            return -1;\n        }\n        var symbol = this._table[bitBuffer & this._tMask];\n        if (symbol < 0) {\n            var mask = _toUnsigned((1 << this._tBits), 32);\n            do {\n                symbol = -symbol;\n                if ((bitBuffer & mask) === 0) {\n                    symbol = this._left[Number.parseInt(symbol.toString(), 10)];\n                }\n                else {\n                    symbol = this._right[Number.parseInt(symbol.toString(), 10)];\n                }\n                mask <<= 1;\n            } while (symbol < 0);\n        }\n        var codeLength = this._clArray[Number.parseInt(symbol.toString(), 10)];\n        if (codeLength <= 0) {\n            throw new Error('Invalid Data.');\n        }\n        if (codeLength > input._bInBuffer) {\n            return -1;\n        }\n        input._skipBits(codeLength);\n        return symbol;\n    };\n    _HuffmanTree._maxLengthTree = 288;\n    _HuffmanTree._maxDepthTree = 32;\n    _HuffmanTree._nCLength = 19;\n    return _HuffmanTree;\n}());\nexport { _HuffmanTree };\n","import { _InflaterState, _BlockType } from './enum';\nimport { _DecompressedOutput } from './decompressed-output';\nimport { _InBuffer } from './in-buffer';\nimport { _HuffmanTree } from './huffman-tree';\nimport { _toUnsigned, _copyRange } from './../utils';\n/* eslint-disable */\nvar _Inflater = /** @class */ (function () {\n    function _Inflater() {\n        this._extraLengthBits = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];\n        this._staticDistanceTreeTable = [0x00, 0x10, 0x08, 0x18, 0x04, 0x14, 0x0c, 0x1c, 0x02, 0x12, 0x0a, 0x1a, 0x06, 0x16, 0x0e, 0x1e,\n            0x01, 0x11, 0x09, 0x19, 0x05, 0x15, 0x0d, 0x1d, 0x03, 0x13, 0x0b, 0x1b, 0x07, 0x17, 0x0f, 0x1f];\n        this._lengthBase = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115,\n            131, 163, 195, 227, 258];\n        this._distanceBasePosition = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049,\n            3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0];\n        this._codeOrder = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n        this._bfinal = 0;\n        this._bLength = 0;\n        this._blBuffer = [0, 0, 0, 0];\n        this._blockType = _BlockType.unCompressedType;\n        this._caSize = 0;\n        this._clCodeCount = 0;\n        this._extraBits = 0;\n        this._lengthCode = 0;\n        this._length = 0;\n        this._llCodeCount = 0;\n        this._output = new _DecompressedOutput();\n        this._input = new _InBuffer();\n        this._loopCounter = 0;\n        this._codeList = Array(_HuffmanTree._maxLengthTree + _HuffmanTree._maxDepthTree).fill(0);\n        this._cltcl = Array(_HuffmanTree._nCLength).fill(0);\n        this._inflaterState = _InflaterState.readingBFinal;\n    }\n    Object.defineProperty(_Inflater.prototype, \"_finished\", {\n        get: function () {\n            return this._inflaterState === _InflaterState.done || this._inflaterState === _InflaterState.vFooter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _Inflater.prototype._setInput = function (inputBytes, offset, length) {\n        this._input._setInput(inputBytes, offset, length);\n    };\n    _Inflater.prototype._inflate = function (bytes, offset, length) {\n        var i = 0;\n        do {\n            var result = this._output._copyTo(bytes, offset, length);\n            var copied = result.count;\n            bytes = result.data;\n            if (copied > 0) {\n                offset += copied;\n                i += copied;\n                length -= copied;\n            }\n            if (length === 0) {\n                break;\n            }\n        } while (!this._finished && this._decode());\n        return { 'count': i, 'data': bytes };\n    };\n    _Inflater.prototype._decode = function () {\n        var eob = false;\n        var result = false;\n        if (this._finished) {\n            return true;\n        }\n        if (this._inflaterState === _InflaterState.readingBFinal) {\n            if (!this._input._availableBits(1)) {\n                return false;\n            }\n            this._bfinal = this._input._getBits(1);\n            this._inflaterState = _InflaterState.readingBType;\n        }\n        if (this._inflaterState === _InflaterState.readingBType) {\n            if (!this._input._availableBits(2)) {\n                this._inflaterState = _InflaterState.readingBType;\n                return false;\n            }\n            this._blockType = this._getBlockType(this._input._getBits(2));\n            if (this._blockType === _BlockType.dynamicType) {\n                this._inflaterState = _InflaterState.readingNlCodes;\n            }\n            else if (this._blockType === _BlockType.staticType) {\n                this._llTree = new _HuffmanTree();\n                this._llTree._loadTree(true);\n                this._distanceTree = new _HuffmanTree();\n                this._distanceTree._loadTree(false);\n                this._inflaterState = _InflaterState.decodeTop;\n            }\n            else if (this._blockType === _BlockType.unCompressedType) {\n                this._inflaterState = _InflaterState.unCompressedAligning;\n            }\n        }\n        if (this._blockType === _BlockType.dynamicType) {\n            if (this._getInflaterStateValue(this._inflaterState) < this._getInflaterStateValue(_InflaterState.decodeTop)) {\n                result = this._decodeDynamicBlockHeader();\n            }\n            else {\n                var returnedValue = this._decodeBlock(eob);\n                result = returnedValue.result;\n                eob = returnedValue.eob;\n                this._output = returnedValue.output;\n            }\n        }\n        else if (this._blockType === _BlockType.staticType) {\n            var returnedValue = this._decodeBlock(eob);\n            result = returnedValue.result;\n            eob = returnedValue.eob;\n            this._output = returnedValue.output;\n        }\n        else if (this._blockType === _BlockType.unCompressedType) {\n            var returnedValue = this._decodeUncompressedBlock(eob);\n            result = returnedValue.result;\n            eob = returnedValue.eob;\n            this._output = returnedValue.output;\n        }\n        if (eob && (this._bfinal !== 0)) {\n            this._inflaterState = _InflaterState.done;\n        }\n        return result;\n    };\n    _Inflater.prototype._decodeUncompressedBlock = function (endBlock) {\n        endBlock = false;\n        while (true) {\n            switch (this._inflaterState) {\n                case _InflaterState.unCompressedAligning:\n                    this._input._skipByteBoundary();\n                    this._inflaterState = _InflaterState.unCompressedByte1;\n                    if (!this._unCompressedByte()) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.unCompressedByte1:\n                case _InflaterState.unCompressedByte2:\n                case _InflaterState.unCompressedByte3:\n                case _InflaterState.unCompressedByte4:\n                    if (!this._unCompressedByte()) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.decodeUnCompressedBytes:\n                    this._bLength -= this._output._copyFrom(this._input, this._bLength);\n                    if (this._bLength === 0) {\n                        this._inflaterState = _InflaterState.readingBFinal;\n                        endBlock = true;\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    if (this._output._unusedBytes === 0) {\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    return { 'result': false, 'eob': endBlock, 'output': this._output };\n                default:\n                    break;\n            }\n        }\n    };\n    _Inflater.prototype._unCompressedByte = function () {\n        var bits = this._input._getBits(8);\n        if (bits < 0) {\n            return false;\n        }\n        var inflaterstate = this._getInflaterStateValue(this._inflaterState);\n        var unCompressedByte = this._getInflaterStateValue(_InflaterState.unCompressedByte1);\n        this._blBuffer[inflaterstate - unCompressedByte] = _toUnsigned(bits, 8);\n        if (this._inflaterState === _InflaterState.unCompressedByte4) {\n            this._bLength = this._blBuffer[0] + (this._blBuffer[1]) * 256;\n            if (_toUnsigned(this._bLength, 16) !== _toUnsigned((~(this._blBuffer[2] + (this._blBuffer[3]) * 256)), 16)) {\n                throw new Error('Ivalid block length.');\n            }\n        }\n        this._inflaterState = this._getInflaterState(this._getInflaterStateValue(this._inflaterState) + 1);\n        return true;\n    };\n    _Inflater.prototype._decodeBlock = function (endBlock) {\n        endBlock = false;\n        var fb = this._output._unusedBytes;\n        while (fb > 258) {\n            var symbol = void 0;\n            var dCodeResult = void 0;\n            var fLengthResult = void 0;\n            var inLengthResult = void 0;\n            switch (this._inflaterState) {\n                case _InflaterState.decodeTop:\n                    symbol = this._llTree._getNextSymbol(this._input);\n                    if (symbol < 0) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    if (symbol < 256) {\n                        this._output._write(_toUnsigned(symbol, 8));\n                        --fb;\n                    }\n                    else if (symbol === 256) {\n                        endBlock = true;\n                        this._inflaterState = _InflaterState.readingBFinal;\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    else {\n                        symbol -= 257;\n                        if (symbol < 8) {\n                            symbol += 3;\n                            this._extraBits = 0;\n                        }\n                        else if (symbol === 28) {\n                            symbol = 258;\n                            this._extraBits = 0;\n                        }\n                        else {\n                            if (symbol < 0 || symbol >= this._extraLengthBits.length) {\n                                throw new Error('Invalid data.');\n                            }\n                            this._extraBits = this._extraLengthBits[Number.parseInt(symbol.toString(), 10)];\n                        }\n                        this._length = symbol;\n                        inLengthResult = this._inLength(fb);\n                        fb = inLengthResult.fb;\n                        if (!inLengthResult.value) {\n                            return { 'result': false, 'eob': endBlock, 'output': this._output };\n                        }\n                    }\n                    break;\n                case _InflaterState.iLength:\n                    inLengthResult = this._inLength(fb);\n                    fb = inLengthResult.fb;\n                    if (!inLengthResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.fLength:\n                    fLengthResult = this._fLength(fb);\n                    fb = fLengthResult.fb;\n                    if (!fLengthResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.dCode:\n                    dCodeResult = this._dcode(fb);\n                    fb = dCodeResult.fb;\n                    if (!dCodeResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        return { 'result': true, 'eob': endBlock, 'output': this._output };\n    };\n    _Inflater.prototype._inLength = function (fb) {\n        if (this._extraBits > 0) {\n            this._inflaterState = _InflaterState.iLength;\n            var bits = this._input._getBits(this._extraBits);\n            if (bits < 0) {\n                return { 'value': false, 'fb': fb };\n            }\n            if (this._length < 0 || this._length >= this._lengthBase.length) {\n                throw new Error('Invalid data.');\n            }\n            this._length = this._lengthBase[this._length] + bits;\n        }\n        this._inflaterState = _InflaterState.fLength;\n        var fLengthResult = this._fLength(fb);\n        fb = fLengthResult.fb;\n        if (!fLengthResult.value) {\n            return { 'value': false, 'fb': fb };\n        }\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._fLength = function (fb) {\n        if (this._blockType === _BlockType.dynamicType) {\n            this._distanceCode = this._distanceTree._getNextSymbol(this._input);\n        }\n        else {\n            this._distanceCode = this._input._getBits(5);\n            if (this._distanceCode >= 0) {\n                this._distanceCode = this._staticDistanceTreeTable[this._distanceCode];\n            }\n        }\n        if (this._distanceCode < 0) {\n            return { 'value': false, 'fb': fb };\n        }\n        this._inflaterState = _InflaterState.dCode;\n        var dCodeResult = this._dcode(fb);\n        fb = dCodeResult.fb;\n        if (!dCodeResult.value) {\n            return { 'value': false, 'fb': fb };\n        }\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._dcode = function (fb) {\n        var offset;\n        if (this._distanceCode > 3) {\n            this._extraBits = (this._distanceCode - 2) >> 1;\n            var bits = this._input._getBits(this._extraBits);\n            if (bits < 0) {\n                return { 'value': false, 'fb': fb };\n            }\n            offset = this._distanceBasePosition[this._distanceCode] + bits;\n        }\n        else {\n            offset = this._distanceCode + 1;\n        }\n        this._output._writeLD(this._length, offset);\n        fb -= this._length;\n        this._inflaterState = _InflaterState.decodeTop;\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._decodeDynamicBlockHeader = function () {\n        switch (this._inflaterState) {\n            case _InflaterState.readingNlCodes:\n                this._llCodeCount = this._input._getBits(5);\n                if (this._llCodeCount < 0) {\n                    return false;\n                }\n                this._llCodeCount += 257;\n                this._inflaterState = _InflaterState.readingNdCodes;\n                if (!this._readingNDCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingNdCodes:\n                if (!this._readingNDCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingCodes:\n                if (!this._readingCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingClCodes:\n                if (!this._readingCLCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingTcBefore:\n            case _InflaterState.readingTcAfter:\n                if (!this._readingTCBefore()) {\n                    return false;\n                }\n                break;\n            default:\n                break;\n        }\n        var literalTreeCodeLength = Array(_HuffmanTree._maxLengthTree).fill(0);\n        _copyRange(literalTreeCodeLength, 0, this._codeList, 0, this._llCodeCount);\n        var distanceTreeCodeLength = Array(_HuffmanTree._maxDepthTree).fill(0);\n        _copyRange(distanceTreeCodeLength, 0, this._codeList, this._llCodeCount, this._llCodeCount + this._dCodeCount);\n        this._llTree = new _HuffmanTree();\n        this._llTree._load(literalTreeCodeLength);\n        this._distanceTree = new _HuffmanTree();\n        this._distanceTree._load(distanceTreeCodeLength);\n        this._inflaterState = _InflaterState.decodeTop;\n        return true;\n    };\n    _Inflater.prototype._readingNDCodes = function () {\n        this._dCodeCount = this._input._getBits(5);\n        if (this._dCodeCount < 0) {\n            return false;\n        }\n        this._dCodeCount += 1;\n        this._inflaterState = _InflaterState.readingCodes;\n        if (!this._readingCodes()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingCodes = function () {\n        this._clCodeCount = this._input._getBits(4);\n        if (this._clCodeCount < 0) {\n            return false;\n        }\n        this._clCodeCount += 4;\n        this._loopCounter = 0;\n        this._inflaterState = _InflaterState.readingClCodes;\n        if (!this._readingCLCodes()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingCLCodes = function () {\n        while (this._loopCounter < this._clCodeCount) {\n            var bits = this._input._getBits(3);\n            if (bits < 0) {\n                return false;\n            }\n            this._cltcl[this._codeOrder[this._loopCounter]] = _toUnsigned(bits, 8);\n            ++this._loopCounter;\n        }\n        for (var i = this._clCodeCount; i < this._codeOrder.length; i++) {\n            this._cltcl[this._codeOrder[Number.parseInt(i.toString(), 10)]] = 0;\n        }\n        this._clTree = new _HuffmanTree();\n        this._clTree._load(this._cltcl);\n        this._caSize = this._llCodeCount + this._dCodeCount;\n        this._loopCounter = 0;\n        this._inflaterState = _InflaterState.readingTcBefore;\n        if (!this._readingTCBefore()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingTCBefore = function () {\n        while (this._loopCounter < this._caSize) {\n            if (this._inflaterState === _InflaterState.readingTcBefore) {\n                this._lengthCode = this._clTree._getNextSymbol(this._input);\n                if (this._lengthCode < 0) {\n                    return false;\n                }\n            }\n            if (this._lengthCode <= 15) {\n                this._codeList[this._loopCounter++] = _toUnsigned(this._lengthCode, 8);\n            }\n            else {\n                if (!this._input._availableBits(7)) {\n                    this._inflaterState = _InflaterState.readingTcAfter;\n                    return false;\n                }\n                var repeatCount = void 0;\n                if (this._lengthCode === 16) {\n                    if (this._loopCounter === 0) {\n                        throw new Error('Invalid data.');\n                    }\n                    var previousCode = _toUnsigned(this._codeList[this._loopCounter - 1], 8);\n                    repeatCount = this._input._getBits(2) + 3;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = previousCode;\n                    }\n                }\n                else if (this._lengthCode === 17) {\n                    repeatCount = this._input._getBits(3) + 3;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = 0;\n                    }\n                }\n                else {\n                    repeatCount = this._input._getBits(7) + 11;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = 0;\n                    }\n                }\n            }\n            this._inflaterState = _InflaterState.readingTcBefore;\n        }\n        return true;\n    };\n    _Inflater.prototype._getBlockType = function (type) {\n        if (type === _BlockType.unCompressedType) {\n            return _BlockType.unCompressedType;\n        }\n        else if (type === _BlockType.staticType) {\n            return _BlockType.staticType;\n        }\n        else {\n            return _BlockType.dynamicType;\n        }\n    };\n    _Inflater.prototype._getInflaterState = function (value) {\n        switch (value) {\n            case 0:\n                return _InflaterState.readingHeader;\n            case 2:\n                return _InflaterState.readingBFinal;\n            case 3:\n                return _InflaterState.readingBType;\n            case 4:\n                return _InflaterState.readingNlCodes;\n            case 5:\n                return _InflaterState.readingNdCodes;\n            case 6:\n                return _InflaterState.readingCodes;\n            case 7:\n                return _InflaterState.readingClCodes;\n            case 8:\n                return _InflaterState.readingTcBefore;\n            case 9:\n                return _InflaterState.readingTcAfter;\n            case 10:\n                return _InflaterState.decodeTop;\n            case 11:\n                return _InflaterState.iLength;\n            case 12:\n                return _InflaterState.fLength;\n            case 13:\n                return _InflaterState.dCode;\n            case 15:\n                return _InflaterState.unCompressedAligning;\n            case 16:\n                return _InflaterState.unCompressedByte1;\n            case 17:\n                return _InflaterState.unCompressedByte2;\n            case 18:\n                return _InflaterState.unCompressedByte3;\n            case 19:\n                return _InflaterState.unCompressedByte4;\n            case 20:\n                return _InflaterState.decodeUnCompressedBytes;\n            case 21:\n                return _InflaterState.srFooter;\n            case 22:\n                return _InflaterState.rFooter;\n            case 23:\n                return _InflaterState.vFooter;\n            case 24:\n                return _InflaterState.done;\n            default:\n                return _InflaterState.readingHeader;\n        }\n    };\n    _Inflater.prototype._getInflaterStateValue = function (state) {\n        switch (state) {\n            case _InflaterState.readingHeader:\n                return 0;\n            case _InflaterState.readingBFinal:\n                return 2;\n            case _InflaterState.readingBType:\n                return 3;\n            case _InflaterState.readingNlCodes:\n                return 4;\n            case _InflaterState.readingNdCodes:\n                return 5;\n            case _InflaterState.readingCodes:\n                return 6;\n            case _InflaterState.readingClCodes:\n                return 7;\n            case _InflaterState.readingTcBefore:\n                return 8;\n            case _InflaterState.readingTcAfter:\n                return 9;\n            case _InflaterState.decodeTop:\n                return 10;\n            case _InflaterState.iLength:\n                return 11;\n            case _InflaterState.fLength:\n                return 12;\n            case _InflaterState.dCode:\n                return 13;\n            case _InflaterState.unCompressedAligning:\n                return 15;\n            case _InflaterState.unCompressedByte1:\n                return 16;\n            case _InflaterState.unCompressedByte2:\n                return 17;\n            case _InflaterState.unCompressedByte3:\n                return 18;\n            case _InflaterState.unCompressedByte4:\n                return 19;\n            case _InflaterState.decodeUnCompressedBytes:\n                return 20;\n            case _InflaterState.srFooter:\n                return 21;\n            case _InflaterState.rFooter:\n                return 22;\n            case _InflaterState.vFooter:\n                return 23;\n            case _InflaterState.done:\n                return 24;\n            default:\n                return 0;\n        }\n    };\n    return _Inflater;\n}());\nexport { _Inflater };\n","import { _Inflater } from './inflater';\nvar _DeflateStream = /** @class */ (function () {\n    function _DeflateStream(data, offset, leaveOpen) {\n        this._offset = offset;\n        this._data = data;\n        this._leaveOpen = leaveOpen;\n        this._inflater = new _Inflater();\n        this._buffer = Array(8192).fill(0);\n    }\n    _DeflateStream.prototype._read = function (array, offset, count) {\n        var length;\n        var cOffset = offset;\n        var rCount = count;\n        while (true) { // eslint-disable-line\n            var inflateResult = this._inflater._inflate(array, cOffset, rCount);\n            length = inflateResult.count;\n            array = inflateResult.data;\n            cOffset += length;\n            rCount -= length;\n            if (rCount === 0) {\n                break;\n            }\n            if (this._inflater._finished) {\n                break;\n            }\n            var result = this._readBytes();\n            var bytes = result.count;\n            this._buffer = result.buffer;\n            if (bytes === 0) {\n                break;\n            }\n            this._inflater._setInput(this._buffer, 0, bytes);\n        }\n        return { count: count - rCount, data: array };\n    };\n    _DeflateStream.prototype._readBytes = function () {\n        if (this._offset >= this._data.length) {\n            return { buffer: [], count: 0 };\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < this._buffer.length && i + this._offset < this._data.length; i++) {\n                this._buffer[Number.parseInt(i.toString(), 10)] = this._data[this._offset + i];\n                count++;\n            }\n            this._offset += count;\n            return { buffer: this._buffer, count: count };\n        }\n    };\n    return _DeflateStream;\n}());\nexport { _DeflateStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary } from './pdf-primitives';\nimport { _byteArrayToHexString, _bytesToString } from './utils';\nvar _PdfBaseStream = /** @class */ (function () {\n    function _PdfBaseStream() {\n        this._isCompress = true;\n    }\n    _PdfBaseStream.prototype.getByte = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getBytes = function (length) {\n        return null;\n    };\n    Object.defineProperty(_PdfBaseStream.prototype, \"length\", {\n        get: function () {\n            throw new Error('Abstract getter `length` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isEmpty\", {\n        get: function () {\n            throw new Error('Abstract getter `isEmpty` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isDataLoaded\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfBaseStream.prototype.peekByte = function () {\n        var peekedByte = this.getByte();\n        if (peekedByte !== -1) {\n            this.offset--;\n        }\n        return peekedByte;\n    };\n    _PdfBaseStream.prototype.peekBytes = function (length) {\n        var bytes = this.getBytes(length);\n        this.offset -= bytes.length;\n        return bytes;\n    };\n    _PdfBaseStream.prototype.getUnsignedInteger16 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        if (b0 === -1 || b1 === -1) {\n            return -1;\n        }\n        return (b0 << 8) + b1;\n    };\n    _PdfBaseStream.prototype.getInt32 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        var b2 = this.getByte();\n        var b3 = this.getByte();\n        return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    };\n    _PdfBaseStream.prototype.getByteRange = function (begin, end) {\n        return null;\n    };\n    _PdfBaseStream.prototype.makeSubStream = function (start, length, dictionary) {\n        return null;\n    };\n    _PdfBaseStream.prototype.readBlock = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.reset = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.moveStart = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getString = function (isHex, bytes) {\n        if (isHex === void 0) { isHex = false; }\n        if (typeof bytes === 'undefined' || bytes === null) {\n            bytes = this.getBytes();\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            return _bytesToString(bytes);\n        }\n    };\n    _PdfBaseStream.prototype.skip = function (n) {\n        this.offset += n || 1;\n    };\n    _PdfBaseStream.prototype.getBaseStreams = function () {\n        return null;\n    };\n    return _PdfBaseStream;\n}());\nexport { _PdfBaseStream };\nvar _PdfStream = /** @class */ (function (_super) {\n    __extends(_PdfStream, _super);\n    function _PdfStream(arrayBuffer, dictionary, start, length) {\n        var _this = _super.call(this) || this;\n        _this.isImageStream = false;\n        _this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n        if (typeof start !== 'undefined') {\n            _this.start = start;\n        }\n        else {\n            _this.start = 0;\n        }\n        _this.position = _this.start;\n        _this.end = start + length || _this.bytes.length;\n        _this.dictionary = dictionary;\n        return _this;\n    }\n    Object.defineProperty(_PdfStream.prototype, \"position\", {\n        /**\n         * Gets the position of the stream.\n         *\n         * @returns {number} offset position.\n         */\n        get: function () {\n            return this.offset;\n        },\n        /**\n         * Sets the position of the stream.\n         *\n         * @param {number} value offset position.\n         */\n        set: function (value) {\n            this.offset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"length\", {\n        /**\n         * Gets the length of the stream (Read only).\n         *\n         * @returns {number} length.\n         */\n        get: function () {\n            return this.end - this.start;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"isEmpty\", {\n        /**\n         * Gets a value indicating whether the stream is empty (Read only).\n         *\n         * @returns {boolean} stream empty or not.\n         */\n        get: function () {\n            return this.length === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"data\", {\n        /**\n         * Gets the data of the stream.\n         *\n         * @returns {string[]} data of the stream.\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        /**\n         * Sets the data of the stream.\n         *\n         * @param {string[]} value data.\n         */\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfStream.prototype.getByte = function () {\n        if (this.position >= this.end) {\n            return -1;\n        }\n        return this.bytes[this.position++];\n    };\n    _PdfStream.prototype.getBytes = function (length) {\n        var bytes = this.bytes;\n        var position = this.position;\n        var strEnd = this.end;\n        if (!length) {\n            return bytes.subarray(position, strEnd);\n        }\n        var end = position + length;\n        if (end > strEnd) {\n            end = strEnd;\n        }\n        this.position = end;\n        return bytes.subarray(position, end);\n    };\n    _PdfStream.prototype.getByteRange = function (begin, end) {\n        if (begin < 0) {\n            begin = 0;\n        }\n        if (end > this.end) {\n            end = this.end;\n        }\n        return this.bytes.subarray(begin, end);\n    };\n    _PdfStream.prototype.reset = function () {\n        this.position = this.start;\n    };\n    _PdfStream.prototype.moveStart = function () {\n        this.start = this.position;\n    };\n    _PdfStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (dictionary === void 0) { dictionary = null; }\n        return new _PdfStream(this.bytes.buffer, dictionary, start, length);\n    };\n    _PdfStream.prototype.readBlock = function () {\n        throw new Error('Abstract method `readBlock` called');\n    };\n    _PdfStream.prototype._clearStream = function () {\n        if (this.dictionary !== null && typeof this.dictionary !== 'undefined' && this.dictionary.has('Filter')) {\n            delete this.dictionary._map.Filter;\n        }\n        this._isCompress = true;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._write = function (text) {\n        this.bytes = new Uint8Array(text.length);\n        for (var i = 0; i < text.length; i++) {\n            this.bytes[Number.parseInt(i.toString(), 10)] = text.charCodeAt(i);\n        }\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._writeBytes = function (data) {\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text = text + String.fromCharCode(data[Number.parseInt(i.toString(), 10)]);\n        }\n        this.bytes = new Uint8Array(data);\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    return _PdfStream;\n}(_PdfBaseStream));\nexport { _PdfStream };\nvar _PdfContentStream = /** @class */ (function (_super) {\n    __extends(_PdfContentStream, _super);\n    function _PdfContentStream(bytes) {\n        var _this = _super.call(this) || this;\n        _this._bytes = bytes;\n        _this.dictionary = new _PdfDictionary();\n        _this.dictionary._updated = true;\n        return _this;\n    }\n    Object.defineProperty(_PdfContentStream.prototype, \"length\", {\n        get: function () {\n            return this._bytes.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfContentStream.prototype.write = function (data) {\n        if (typeof data === 'string') {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data.charCodeAt(i));\n            }\n        }\n        else {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        this.dictionary._updated = true;\n    };\n    _PdfContentStream.prototype.getString = function (isHex) {\n        if (isHex === void 0) { isHex = false; }\n        var bytes = new Uint8Array(this._bytes);\n        if (typeof bytes === 'undefined' || bytes === null || typeof bytes.length === 'undefined') {\n            throw new Error('Invalid argument for bytesToString');\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            var len = bytes.length;\n            var max = 8192;\n            if (len < max) {\n                return String.fromCharCode.apply(null, bytes);\n            }\n            var stringBuffer = [];\n            for (var i = 0; i < len; i += max) {\n                stringBuffer.push(String.fromCharCode.apply(null, bytes.subarray(i, Math.min(i + max, len))));\n            }\n            return stringBuffer.join('');\n        }\n    };\n    return _PdfContentStream;\n}(_PdfBaseStream));\nexport { _PdfContentStream };\nvar _PdfNullStream = /** @class */ (function (_super) {\n    __extends(_PdfNullStream, _super);\n    function _PdfNullStream() {\n        return _super.call(this, new Uint8Array(0)) || this;\n    }\n    return _PdfNullStream;\n}(_PdfStream));\nexport { _PdfNullStream };\n","import { _TokenType } from './enumerator';\nvar _ContentParser = /** @class */ (function () {\n    function _ContentParser(contentStream) {\n        this._recordCollection = [];\n        this._operands = [];\n        this._lexer = new _ContentLexer(contentStream);\n    }\n    _ContentParser.prototype._readContent = function () {\n        this._parseObject(_TokenType.eof);\n        return this._recordCollection;\n    };\n    _ContentParser.prototype._parseObject = function (tokenType) {\n        var symbol;\n        while ((symbol = this._getNextToken()) !== _TokenType.eof) { // eslint-disable-line\n            if (symbol === tokenType || symbol === _TokenType.none) {\n                return;\n            }\n            switch (symbol) {\n                case _TokenType.comment:\n                    break;\n                case _TokenType.number:\n                    if (this._lexer._operatorParams === '-') {\n                        this._operands.push('0');\n                    }\n                    else {\n                        this._operands.push(this._lexer._operatorParams);\n                    }\n                    break;\n                case _TokenType.real:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.string:\n                case _TokenType.hexString:\n                case _TokenType.unicodeHexString:\n                case _TokenType.unicodeString:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.name:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.operator:\n                    this._createRecord();\n                    this._operands = [];\n                    break;\n                case _TokenType.beginArray:\n                    break;\n                case _TokenType.endArray:\n                    throw new Error('Error while parsing content');\n            }\n        }\n    };\n    _ContentParser.prototype._createRecord = function () {\n        var operand = this._lexer._operatorParams;\n        var record = new _PdfRecord(operand, this._operands);\n        this._recordCollection.push(record);\n    };\n    _ContentParser.prototype._getNextToken = function () {\n        return this._lexer._getNextToken();\n    };\n    return _ContentParser;\n}());\nexport { _ContentParser };\nvar _ContentLexer = /** @class */ (function () {\n    function _ContentLexer(data) {\n        this._tokenType = _TokenType.none;\n        this._currentCharacter = '\\0';\n        this._nextCharacter = '\\0';\n        this._offset = 0;\n        this._data = data instanceof Uint8Array ? data : new Uint8Array(data);\n    }\n    _ContentLexer.prototype._getNextToken = function () {\n        this._operatorParams = '';\n        var value = this._moveToNextChar();\n        switch (value) {\n            case '%':\n                return this._tokenType = this._getComment();\n            case '/':\n                return this._tokenType = this._getName();\n            case '[':\n            case '(':\n                return this._tokenType = this._getLiteralString();\n            case '+':\n            case '-':\n                return this._tokenType = this._getNumber();\n            case '<':\n                return this._tokenType = this._getEncodedDecimalString();\n            case '.':\n                return this._tokenType = this._getNumber();\n            case '\"':\n            case '\\'':\n                return this._tokenType = this._getOperator();\n        }\n        if (!isNaN(parseInt(value, 10))) {\n            return this._tokenType = this._getNumber();\n        }\n        if ((/[a-zA-Z]/).test(value)) {\n            return this._tokenType = this._getOperator();\n        }\n        if (value === String.fromCharCode(65535)) {\n            return this._tokenType = _TokenType.eof;\n        }\n        return this._tokenType = _TokenType.none;\n    };\n    _ContentLexer.prototype._getComment = function () {\n        this._operatorParams = '';\n        var value;\n        var flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        while (flag) {\n            flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        }\n        return _TokenType.comment;\n    };\n    _ContentLexer.prototype._getName = function () {\n        this._operatorParams = '';\n        var flag = false;\n        while (!flag) {\n            var value = this._consumeValue();\n            switch (value) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                case '%':\n                case '(':\n                case ')':\n                case '<':\n                case '>':\n                case '[':\n                case ']':\n                case '/':\n                    flag = true;\n                    return _TokenType.name;\n                default:\n                    break;\n            }\n        }\n        return _TokenType.none;\n    };\n    _ContentLexer.prototype._getNumber = function () {\n        var value = this._currentCharacter;\n        if (value === '+' || value === '-') {\n            this._operatorParams += this._currentCharacter;\n            value = this._getNextChar();\n        }\n        while (!isNaN(parseInt(value, 10)) || value === '.') {\n            if (!isNaN(parseInt(value, 10))) {\n                this._operatorParams += this._currentCharacter;\n            }\n            else if (value === '.') {\n                if (this._operatorParams.includes('.')) {\n                    break;\n                }\n                else {\n                    this._operatorParams += this._currentCharacter;\n                }\n            }\n            value = this._getNextChar();\n        }\n        return _TokenType.number;\n    };\n    _ContentLexer.prototype._getOperator = function () {\n        this._operatorParams = '';\n        var value = this._currentCharacter;\n        while (this._isOperator(value)) {\n            value = this._consumeValue();\n        }\n        return _TokenType.operator;\n    };\n    _ContentLexer.prototype._isOperator = function (value) {\n        if ((/[a-zA-Z]/).test(value)) {\n            return true;\n        }\n        switch (value) {\n            case '*':\n            case '\\'':\n            case '\\\"': // eslint-disable-line\n            case '1':\n            case '0':\n                return true;\n        }\n        return false;\n    };\n    _ContentLexer.prototype._getLiteralString = function () {\n        this._operatorParams = '';\n        var beginChar = this._currentCharacter;\n        var literal;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (beginChar === '(') {\n                literal = this._getLiteralStringValue(value);\n                this._operatorParams += literal;\n                value = this._getNextChar();\n                flag = false;\n                break;\n            }\n            else {\n                if (value === '(') {\n                    value = this._consumeValue();\n                    literal = this._getLiteralStringValue(value);\n                    this._operatorParams += literal;\n                    value = this._getNextChar();\n                    continue;\n                }\n                else if (value === ']') {\n                    flag = false;\n                    value = this._consumeValue();\n                    break;\n                }\n                value = this._consumeValue();\n            }\n        }\n        return _TokenType.string;\n    };\n    _ContentLexer.prototype._getEncodedDecimalString = function () {\n        var startChar = '<';\n        var endChar = '>';\n        var space = ' ';\n        var parentLevel = 0;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (value === startChar) {\n                parentLevel++;\n                value = this._consumeValue();\n            }\n            else if (value === endChar) {\n                if (parentLevel === 0) {\n                    this._consumeValue();\n                    flag = false;\n                    break;\n                }\n                else if (parentLevel === 1) {\n                    value = this._consumeValue();\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    if (parentLevel === 1 && value === space) {\n                        flag = false;\n                        break;\n                    }\n                }\n                else {\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    value = this._consumeValue();\n                }\n            }\n            else {\n                value = this._consumeValue();\n                if (value === String.fromCharCode(65535)) {\n                    flag = false;\n                    break;\n                }\n            }\n        }\n        return _TokenType.hexString;\n    };\n    _ContentLexer.prototype._getLiteralStringValue = function (value) {\n        var parenthesesCount = 0;\n        var literal = '';\n        var flag = true;\n        while (flag) {\n            if (value === '\\\\') {\n                literal += value;\n                value = this._getNextChar();\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === '(') {\n                parenthesesCount++;\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === ')' && parenthesesCount !== 0) {\n                literal += value;\n                value = this._getNextChar();\n                parenthesesCount--;\n                continue;\n            }\n            if (value === ')' && parenthesesCount === 0) {\n                literal += value;\n                flag = false;\n                return literal;\n            }\n            literal += value;\n            value = this._getNextChar();\n        }\n        return literal;\n    };\n    _ContentLexer.prototype._consumeValue = function () {\n        this._operatorParams += this._currentCharacter;\n        return this._getNextChar();\n    };\n    _ContentLexer.prototype._moveToNextChar = function () {\n        while (this._currentCharacter !== String.fromCharCode(65535)) {\n            switch (this._currentCharacter) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                    this._getNextChar();\n                    break;\n                default:\n                    return this._currentCharacter;\n            }\n        }\n        return this._currentCharacter;\n    };\n    _ContentLexer.prototype._getNextChar = function () {\n        if (this._data.length <= this._offset) {\n            if (this._nextCharacter === 'Q' || (this._currentCharacter === 'D' && this._nextCharacter === 'o')) {\n                this._currentCharacter = this._nextCharacter;\n                this._nextCharacter = String.fromCharCode(65535);\n                return this._currentCharacter;\n            }\n            this._currentCharacter = String.fromCharCode(65535);\n            this._nextCharacter = String.fromCharCode(65535);\n        }\n        else {\n            this._currentCharacter = this._nextCharacter;\n            this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n            if (this._currentCharacter === '\\x0D') {\n                if (this._nextCharacter === '\\x0A') {\n                    this._currentCharacter = this._nextCharacter;\n                    if (this._data.length <= this._offset) {\n                        this._nextCharacter = String.fromCharCode(65535);\n                    }\n                    else {\n                        this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n                    }\n                }\n                else {\n                    this._currentCharacter = '\\x0A';\n                }\n            }\n        }\n        return this._currentCharacter;\n    };\n    return _ContentLexer;\n}());\nexport { _ContentLexer };\nvar _PdfRecord = /** @class */ (function () {\n    function _PdfRecord(operator, operands) {\n        this._operator = operator;\n        this._operands = operands;\n    }\n    return _PdfRecord;\n}());\nexport { _PdfRecord };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nvar _PdfDecodeStream = /** @class */ (function (_super) {\n    __extends(_PdfDecodeStream, _super);\n    function _PdfDecodeStream(maybeMinBufferLength) {\n        var _this = _super.call(this) || this;\n        _this._rawMinBufferLength = maybeMinBufferLength || 0;\n        _this.offset = 0;\n        _this.bufferLength = 0;\n        _this.eof = false;\n        _this.buffer = new Uint8Array(0);\n        _this.minBufferLength = 512;\n        if (maybeMinBufferLength) {\n            while (_this.minBufferLength < maybeMinBufferLength) {\n                _this.minBufferLength *= 2;\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(_PdfDecodeStream.prototype, \"isEmpty\", {\n        get: function () {\n            while (!this.eof && this.bufferLength === 0) {\n                this.readBlock();\n            }\n            return this.bufferLength === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDecodeStream.prototype.ensureBuffer = function (requested) {\n        var buffer = this.buffer;\n        if (requested <= buffer.byteLength) {\n            return buffer;\n        }\n        var size = this.minBufferLength;\n        while (size < requested) {\n            size *= 2;\n        }\n        var buffer2 = new Uint8Array(size);\n        buffer2.set(buffer);\n        this.buffer = buffer2;\n        return this.buffer;\n    };\n    _PdfDecodeStream.prototype.getByte = function () {\n        var position = this.offset;\n        while (this.bufferLength <= position) {\n            if (this.eof) {\n                return -1;\n            }\n            this.readBlock();\n        }\n        return this.buffer[this.offset++];\n    };\n    _PdfDecodeStream.prototype.getBytes = function (length) {\n        var position = this.offset;\n        var end;\n        if (length) {\n            this.ensureBuffer(position + length);\n            end = position + length;\n            while (!this.eof && this.bufferLength < end) {\n                this.readBlock();\n            }\n            var bufEnd = this.bufferLength;\n            if (end > bufEnd) {\n                end = bufEnd;\n            }\n        }\n        else {\n            while (!this.eof) {\n                this.readBlock();\n            }\n            end = this.bufferLength;\n        }\n        this.offset = end;\n        return this.buffer.subarray(position, end);\n    };\n    _PdfDecodeStream.prototype.reset = function () {\n        this.offset = 0;\n    };\n    _PdfDecodeStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (length === undefined) {\n            while (!this.eof) {\n                this.readBlock();\n            }\n        }\n        else {\n            var end = start + length;\n            while (this.bufferLength <= end && !this.eof) {\n                this.readBlock();\n            }\n        }\n        return new _PdfStream(this.buffer, dictionary, start, length);\n    };\n    _PdfDecodeStream.prototype.getBaseStreams = function () {\n        return this.stream ? this.stream.getBaseStreams() : null;\n    };\n    _PdfDecodeStream.prototype.moveStart = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    _PdfDecodeStream.prototype.getByteRange = function (begin, end) {\n        throw new Error('Invalid call from decode stream. begin: ' + begin + ', end: ' + end);\n    };\n    _PdfDecodeStream.prototype.readBlock = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    return _PdfDecodeStream;\n}(_PdfBaseStream));\nexport { _PdfDecodeStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nvar _PdfDecryptStream = /** @class */ (function (_super) {\n    __extends(_PdfDecryptStream, _super);\n    function _PdfDecryptStream(stream, maybeLength, cipher) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this._chunkSize = 512;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        _this._cipher = cipher;\n        _this._nextChunk = null;\n        _this._initialized = false;\n        return _this;\n    }\n    _PdfDecryptStream.prototype.readBlock = function () {\n        var chunk;\n        if (this._initialized) {\n            chunk = this._nextChunk;\n        }\n        else {\n            chunk = this.stream.getBytes(this._chunkSize);\n            this._initialized = true;\n        }\n        if (!chunk || chunk.length === 0) {\n            this.eof = true;\n            return;\n        }\n        this._nextChunk = this.stream.getBytes(this._chunkSize);\n        var hasMoreData = this._nextChunk && this._nextChunk.length > 0;\n        chunk = this._cipher._decryptBlock(chunk, !hasMoreData);\n        var bufferLength = this.bufferLength;\n        var n = chunk.length;\n        var buffer = this.ensureBuffer(bufferLength + n);\n        for (var i = 0; i < n; i++) {\n            buffer[bufferLength++] = chunk[Number.parseInt(i.toString(), 10)];\n        }\n        this.bufferLength = bufferLength;\n    };\n    return _PdfDecryptStream;\n}(_PdfDecodeStream));\nexport { _PdfDecryptStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { FormatError } from './utils';\nvar codeLenCodeMap = new Int32Array([\n    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15\n]);\nvar lengthDecode = new Int32Array([\n    0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a,\n    0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f,\n    0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073,\n    0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102\n]);\nvar distDecode = new Int32Array([\n    0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d,\n    0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1,\n    0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01,\n    0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001\n]);\nvar fixedLitCodeTab = [\n    new Int32Array([\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0,\n        0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0,\n        0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0,\n        0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8,\n        0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8,\n        0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8,\n        0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4,\n        0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4,\n        0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4,\n        0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc,\n        0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec,\n        0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc,\n        0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2,\n        0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2,\n        0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2,\n        0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca,\n        0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea,\n        0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da,\n        0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6,\n        0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6,\n        0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6,\n        0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce,\n        0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee,\n        0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de,\n        0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe,\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1,\n        0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1,\n        0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1,\n        0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9,\n        0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9,\n        0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9,\n        0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5,\n        0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5,\n        0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5,\n        0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd,\n        0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed,\n        0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd,\n        0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3,\n        0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3,\n        0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3,\n        0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb,\n        0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb,\n        0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db,\n        0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7,\n        0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7,\n        0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7,\n        0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf,\n        0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef,\n        0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df,\n        0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff\n    ]),\n    9\n];\nvar fixedDistCodeTab = [\n    new Int32Array([\n        0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c,\n        0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000,\n        0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d,\n        0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000\n    ]),\n    5\n];\nvar _PdfFlateStream = /** @class */ (function (_super) {\n    __extends(_PdfFlateStream, _super);\n    function _PdfFlateStream(stream, maybeLength) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var cmf = stream.getByte();\n        var flg = stream.getByte();\n        if ((cmf & 0x0f) !== 0x08) {\n            throw new FormatError(\"Unknown compression method in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (((cmf << 8) + flg) % 31 !== 0) {\n            throw new FormatError(\"Bad flag check in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (flg & 0x20) {\n            throw new FormatError(\"Bad flag bit set in flate stream: \" + cmf + \", \" + flg);\n        }\n        _this.codeSize = 0;\n        _this.codeBuffer = 0;\n        return _this;\n    }\n    _PdfFlateStream.prototype.getBits = function (bits) {\n        var stream = this.stream;\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < bits) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        b = codeBuffer & ((1 << bits) - 1);\n        this.codeBuffer = codeBuffer >> bits;\n        this.codeSize = codeSize -= bits;\n        return b;\n    };\n    _PdfFlateStream.prototype.getCode = function (table) {\n        var stream = this.stream;\n        var codes = table[0];\n        var maxLen = table[1];\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < maxLen) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        var code = codes[codeBuffer & ((1 << maxLen) - 1)];\n        var codeLen = code >> 16;\n        var codeVal = code & 0xffff;\n        if (!(codeLen < 1 || codeSize < codeLen)) {\n            this.codeBuffer = codeBuffer >> codeLen;\n            this.codeSize = codeSize - codeLen;\n        }\n        return codeVal;\n    };\n    _PdfFlateStream.prototype.generateHuffmanTable = function (lengths) {\n        var n = lengths.length;\n        var maximumLength = 0;\n        var i;\n        for (i = 0; i < n; ++i) {\n            if (lengths[i] > maximumLength) { // eslint-disable-line\n                maximumLength = lengths[i]; // eslint-disable-line\n            }\n        }\n        var size = 1 << maximumLength;\n        var codes = new Int32Array(size);\n        for (var len = 1, code = 0, skip = 2; len <= maximumLength; ++len, code <<= 1, skip <<= 1) {\n            for (var val = 0; val < n; ++val) {\n                if (lengths[val] === len) { // eslint-disable-line\n                    var code2 = 0;\n                    var t = code;\n                    for (i = 0; i < len; ++i) {\n                        code2 = (code2 << 1) | (t & 1);\n                        t >>= 1;\n                    }\n                    for (i = code2; i < size; i += skip) {\n                        codes[i] = (len << 16) | val; // eslint-disable-line\n                    }\n                    ++code;\n                }\n            }\n        }\n        return [codes, maximumLength];\n    };\n    _PdfFlateStream.prototype.readBlock = function () {\n        var buffer;\n        var length;\n        var stream = this.stream;\n        var hdr = this.getBits(3);\n        if (hdr & 1) {\n            this.eof = true;\n        }\n        hdr >>= 1;\n        if (hdr === 0) {\n            var b = stream.getByte();\n            var blockLen = b;\n            b = stream.getByte();\n            blockLen |= b << 8;\n            b = stream.getByte();\n            var check = b;\n            b = stream.getByte();\n            check |= b << 8;\n            if (!(check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0))) {\n                this.codeBuffer = 0;\n                this.codeSize = 0;\n                var bufferLength = this.bufferLength;\n                var end = bufferLength + blockLen;\n                buffer = this.ensureBuffer(end);\n                this.bufferLength = end;\n                if (blockLen === 0) {\n                    if (stream.peekByte() === -1) {\n                        this.eof = true;\n                    }\n                }\n                else {\n                    var block = stream.getBytes(blockLen);\n                    buffer.set(block, bufferLength);\n                    if (block.length < blockLen) {\n                        this.eof = true;\n                    }\n                }\n                return;\n            }\n        }\n        var litCodeTable;\n        var distCodeTable;\n        if (hdr === 1) {\n            litCodeTable = fixedLitCodeTab;\n            distCodeTable = fixedDistCodeTab;\n        }\n        else if (hdr === 2) {\n            var numLitCodes = this.getBits(5) + 257;\n            var numDistCodes = this.getBits(5) + 1;\n            var numCodeLenCodes = this.getBits(4) + 4;\n            var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n            var i = void 0;\n            for (i = 0; i < numCodeLenCodes; ++i) {\n                codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3); // eslint-disable-line\n            }\n            var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n            length = 0;\n            i = 0;\n            var codes = numLitCodes + numDistCodes;\n            var codeLengths = new Uint8Array(codes);\n            var bitsLength = void 0;\n            var bitsOffset = void 0;\n            var what = void 0;\n            while (i < codes) {\n                var code = this.getCode(codeLenCodeTab);\n                if (code === 16) {\n                    bitsLength = 2;\n                    bitsOffset = 3;\n                    what = length;\n                }\n                else if (code === 17) {\n                    bitsLength = 3;\n                    bitsOffset = 3;\n                    what = length = 0;\n                }\n                else if (code === 18) {\n                    bitsLength = 7;\n                    bitsOffset = 11;\n                    what = length = 0;\n                }\n                else {\n                    codeLengths[i++] = length = code;\n                    continue;\n                }\n                var repeatLength = this.getBits(bitsLength) + bitsOffset;\n                while (repeatLength-- > 0) {\n                    codeLengths[i++] = what;\n                }\n            }\n            litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n            distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n        }\n        buffer = this.buffer;\n        var limit = buffer ? buffer.length : 0;\n        var position = this.bufferLength;\n        while (true) { // eslint-disable-line\n            var code1 = this.getCode(litCodeTable);\n            if (code1 < 256) {\n                if (position + 1 >= limit) {\n                    buffer = this.ensureBuffer(position + 1);\n                    limit = buffer.length;\n                }\n                buffer[position++] = code1;\n                continue;\n            }\n            if (code1 === 256) {\n                this.bufferLength = position;\n                return;\n            }\n            code1 -= 257;\n            code1 = lengthDecode[code1]; // eslint-disable-line\n            var code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            length = (code1 & 0xffff) + code2;\n            code1 = this.getCode(distCodeTable);\n            code1 = distDecode[code1]; // eslint-disable-line\n            code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            var dist = (code1 & 0xffff) + code2;\n            if (position + length >= limit) {\n                buffer = this.ensureBuffer(position + length);\n                limit = buffer.length;\n            }\n            for (var k = 0; k < length; ++k, ++position) {\n                buffer[position] = buffer[position - dist]; // eslint-disable-line\n            }\n        }\n    };\n    return _PdfFlateStream;\n}(_PdfDecodeStream));\nexport { _PdfFlateStream };\n","import { _PdfDictionary, _PdfReferenceSet, _PdfReferenceSetCache, _PdfReference, _isName } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar _PdfCatalog = /** @class */ (function () {\n    function _PdfCatalog(xref) {\n        this._crossReference = xref;\n        this._catalogDictionary = xref._getCatalogObj();\n        if (!(this._catalogDictionary instanceof _PdfDictionary)) {\n            throw new FormatError('Catalog object is not a dictionary.');\n        }\n        else {\n            this._catalogDictionary.isCatalog = true;\n        }\n        this._topPagesDictionary = this._catalogDictionary.get('Pages');\n        this.pageKidsCountCache = new _PdfReferenceSetCache();\n        this.pageIndexCache = new _PdfReferenceSetCache();\n    }\n    Object.defineProperty(_PdfCatalog.prototype, \"version\", {\n        get: function () {\n            var value;\n            if (this._catalogDictionary.has('Version')) {\n                var version = this._catalogDictionary.get('Version');\n                if (version) {\n                    value = version.name;\n                }\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"pageCount\", {\n        get: function () {\n            var obj = this._topPagesDictionary.get('Count');\n            if (typeof obj === 'undefined' || !Number.isInteger(obj)) {\n                throw new FormatError('Invalid page count');\n            }\n            return obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"acroForm\", {\n        get: function () {\n            var form;\n            if (this._catalogDictionary.has('AcroForm')) {\n                form = this._catalogDictionary.get('AcroForm');\n            }\n            if (form === null || typeof form === 'undefined') {\n                form = this._createForm();\n            }\n            return form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* eslint-disable */\n    _PdfCatalog.prototype._createForm = function () {\n        var form = new _PdfDictionary(this._crossReference);\n        var ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(ref, form);\n        this._catalogDictionary.set('AcroForm', ref);\n        this._catalogDictionary._updated = true;\n        this._crossReference._allowCatalog = true;\n        form._updated = true;\n        return form;\n    };\n    _PdfCatalog.prototype.getPageDictionary = function (pageIndex) {\n        var nodesToVisit = [this._topPagesDictionary];\n        var visitedNodes = new _PdfReferenceSet();\n        var pagesRef = this._catalogDictionary.getRaw('Pages');\n        if (pagesRef instanceof _PdfReference) {\n            visitedNodes.put(pagesRef);\n        }\n        var xref = this._crossReference;\n        var pageKidsCountCache = this.pageKidsCountCache;\n        var pageIndexCache = this.pageIndexCache;\n        var currentPageIndex = 0;\n        while (nodesToVisit.length > 0) {\n            var currentNode = nodesToVisit.pop();\n            if (currentNode !== null && typeof currentNode !== 'undefined' && currentNode instanceof _PdfReference) {\n                var count_1 = pageKidsCountCache.get(currentNode);\n                if (count_1 >= 0 && currentPageIndex + count_1 <= pageIndex) {\n                    currentPageIndex += count_1;\n                    continue;\n                }\n                if (visitedNodes.has(currentNode)) {\n                    throw new FormatError('Pages tree contains circular reference.');\n                }\n                visitedNodes.put(currentNode);\n                var obj = xref._fetch(currentNode);\n                if (obj instanceof _PdfDictionary) {\n                    var type = obj.getRaw('Type');\n                    if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                        type = xref._fetch(type);\n                    }\n                    if (_isName(type, 'Page') || !obj.has('Kids')) {\n                        if (!pageKidsCountCache.has(currentNode)) {\n                            pageKidsCountCache.put(currentNode, 1);\n                        }\n                        if (!pageIndexCache.has(currentNode)) {\n                            pageIndexCache.put(currentNode, currentPageIndex);\n                        }\n                        if (currentPageIndex === pageIndex) {\n                            return { dictionary: obj, reference: currentNode };\n                        }\n                        currentPageIndex++;\n                        continue;\n                    }\n                }\n                nodesToVisit.push(obj);\n                continue;\n            }\n            if (!(currentNode instanceof _PdfDictionary)) {\n                throw new FormatError('Page dictionary kid reference points to wrong type of object.');\n            }\n            var objId = currentNode.objId;\n            var count = currentNode.get('Count');\n            if (count !== null && typeof count !== 'undefined' && count instanceof _PdfReference) {\n                count = xref._fetch(count);\n            }\n            if (count !== null && typeof count !== 'undefined' && Number.isInteger(count) && count >= 0) {\n                if (objId && !pageKidsCountCache.has(objId)) {\n                    pageKidsCountCache.set(objId, count);\n                }\n                if (currentPageIndex + count <= pageIndex) {\n                    currentPageIndex += count;\n                    continue;\n                }\n            }\n            var kids = currentNode.getRaw('Kids');\n            if (kids !== null && typeof kids !== 'undefined' && kids instanceof _PdfReference) {\n                kids = xref._fetch(kids);\n            }\n            if (!Array.isArray(kids)) {\n                var type = currentNode.getRaw('Type');\n                if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                    type = xref._fetch(type);\n                }\n                if (_isName(type, 'Page') || !currentNode.has('Kids')) {\n                    if (currentPageIndex === pageIndex) {\n                        return { dictionary: currentNode, reference: null };\n                    }\n                    currentPageIndex++;\n                    continue;\n                }\n                throw new FormatError('Page dictionary kids object is not an array.');\n            }\n            for (var last = kids.length - 1; last >= 0; last--) {\n                nodesToVisit.push(kids[last]);\n            }\n        }\n        throw new Error(\"Page index \" + pageIndex + \" not found.\");\n    };\n    _PdfCatalog.prototype._destroy = function () {\n        if (this._catalogDictionary) {\n            this._catalogDictionary = undefined;\n        }\n        if (this._topPagesDictionary) {\n            this._topPagesDictionary = undefined;\n        }\n        if (this.pageIndexCache) {\n            this.pageIndexCache.clear();\n            this.pageIndexCache = undefined;\n        }\n        if (this.pageKidsCountCache) {\n            this.pageKidsCountCache.clear();\n            this.pageKidsCountCache = undefined;\n        }\n    };\n    return _PdfCatalog;\n}());\nexport { _PdfCatalog };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { _PdfDictionary } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar PdfPredictorStream = /** @class */ (function (_super) {\n    __extends(PdfPredictorStream, _super);\n    function PdfPredictorStream(stream, maybeLength, params) {\n        var _this = _super.call(this, maybeLength) || this;\n        if (!(params instanceof _PdfDictionary)) {\n            return stream;\n        }\n        var predictor = (_this.predictor = params.get('Predictor') || 1);\n        if (predictor <= 1) {\n            return stream;\n        }\n        if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n            throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        if (predictor === 2) {\n            _this.readBlock = _this.readBlockTiff;\n        }\n        else {\n            _this.readBlock = _this.readBlockPng;\n        }\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var colors = (_this.colors = params.get('Colors') || 1);\n        var bits = (_this.bits = params.get('BPC', 'BitsPerComponent') || 8);\n        var columns = (_this.columns = params.get('Columns') || 1);\n        _this.pixBytes = (colors * bits + 7) >> 3;\n        _this.rowBytes = (columns * colors * bits + 7) >> 3;\n        return _this;\n    }\n    PdfPredictorStream.prototype.readBlockTiff = function () {\n        var rowBytes = this.rowBytes;\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var bits = this.bits;\n        var colors = this.colors;\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var inbuf = 0;\n        var outbuf = 0;\n        var inbits = 0;\n        var outbits = 0;\n        var position = bufferLength;\n        var i;\n        if (bits === 1 && colors === 1) {\n            for (i = 0; i < rowBytes; ++i) {\n                var c = rawBytes[i] ^ inbuf; // eslint-disable-line\n                c ^= c >> 1;\n                c ^= c >> 2;\n                c ^= c >> 4;\n                inbuf = (c & 1) << 7;\n                buffer[position++] = c;\n            }\n        }\n        else if (bits === 8) {\n            for (i = 0; i < colors; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; ++i) {\n                buffer[position] = buffer[position - colors] + rawBytes[i]; // eslint-disable-line\n                position++;\n            }\n        }\n        else if (bits === 16) {\n            var bytesPerPixel = colors * 2;\n            for (i = 0; i < bytesPerPixel; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; i += 2) {\n                var sum = ((rawBytes[i] & 0xff) << 8) + // eslint-disable-line\n                    (rawBytes[i + 1] & 0xff) +\n                    ((buffer[position - bytesPerPixel] & 0xff) << 8) +\n                    (buffer[position - bytesPerPixel + 1] & 0xff);\n                buffer[position++] = (sum >> 8) & 0xff;\n                buffer[position++] = sum & 0xff;\n            }\n        }\n        else {\n            var compArray = new Uint8Array(colors + 1);\n            var bitMask = (1 << bits) - 1;\n            var j = 0;\n            var k = bufferLength;\n            var columns = this.columns;\n            for (i = 0; i < columns; ++i) {\n                for (var kk = 0; kk < colors; ++kk) {\n                    if (inbits < bits) {\n                        inbuf = (inbuf << 8) | (rawBytes[j++] & 0xff);\n                        inbits += 8;\n                    }\n                    compArray[kk] = (compArray[kk] + (inbuf >> (inbits - bits))) & bitMask; // eslint-disable-line\n                    inbits -= bits;\n                    outbuf = (outbuf << bits) | compArray[kk]; // eslint-disable-line\n                    outbits += bits;\n                    if (outbits >= 8) {\n                        buffer[k++] = (outbuf >> (outbits - 8)) & 0xff;\n                        outbits -= 8;\n                    }\n                }\n            }\n            if (outbits > 0) {\n                buffer[k++] = (outbuf << (8 - outbits)) + (inbuf & ((1 << (8 - outbits)) - 1));\n            }\n        }\n        this.bufferLength += rowBytes;\n    };\n    PdfPredictorStream.prototype.readBlockPng = function () {\n        var rowBytes = this.rowBytes;\n        var pixBytes = this.pixBytes;\n        var predictor = this.stream.getByte();\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n        if (prevRow.length === 0) {\n            prevRow = new Uint8Array(rowBytes);\n        }\n        var i;\n        var j = bufferLength;\n        var up;\n        var c;\n        switch (predictor) {\n            case 0:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                break;\n            case 1:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (buffer[j - pixBytes] + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 2:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = (prevRow[i] + rawBytes[i]) & 0xff; // eslint-disable-line\n                }\n                break;\n            case 3:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = (prevRow[i] >> 1) + rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (((prevRow[i] + buffer[j - pixBytes]) >> 1) + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 4:\n                for (i = 0; i < pixBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    c = rawBytes[i]; // eslint-disable-line\n                    buffer[j++] = up + c;\n                }\n                for (; i < rowBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    var upLeft = prevRow[i - pixBytes];\n                    var left = buffer[j - pixBytes];\n                    var p = left + up - upLeft;\n                    var pa = p - left;\n                    if (pa < 0) {\n                        pa = -pa;\n                    }\n                    var pb = p - up;\n                    if (pb < 0) {\n                        pb = -pb;\n                    }\n                    var pc = p - upLeft;\n                    if (pc < 0) {\n                        pc = -pc;\n                    }\n                    c = rawBytes[i]; // eslint-disable-line\n                    if (pa <= pb && pa <= pc) {\n                        buffer[j++] = left + c;\n                    }\n                    else if (pb <= pc) {\n                        buffer[j++] = up + c;\n                    }\n                    else {\n                        buffer[j++] = upLeft + c;\n                    }\n                }\n                break;\n            default:\n                throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        this.bufferLength += rowBytes;\n    };\n    return PdfPredictorStream;\n}(_PdfDecodeStream));\nexport { PdfPredictorStream };\n","import { _PdfCommand, _PdfName, _PdfDictionary, _isCommand, _PdfReference, _isName } from './pdf-primitives';\nimport { _isWhiteSpace, FormatError, ParserEndOfFileException, _decodeText } from './utils';\nimport { _PdfNullStream } from './base-stream';\nimport { PdfPredictorStream } from './predictor-stream';\nimport { _PdfFlateStream } from './flate-stream';\nvar maxCacheLength = 1000;\nvar maxNumberLength = 5552;\nvar endOfFile = 'EOF';\nvar specialChars = [\n    1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n];\nvar _PdfLexicalOperator = /** @class */ (function () {\n    function _PdfLexicalOperator(stream) {\n        this.stream = stream;\n        this.nextChar();\n        this.stringBuffer = [];\n        this._hexStringNumber = 0;\n        this.beginInlineImagePosition = -1;\n    }\n    _PdfLexicalOperator.prototype.nextChar = function () {\n        return (this.currentChar = this.stream.getByte());\n    };\n    _PdfLexicalOperator.prototype.peekChar = function () {\n        return this.stream.peekByte();\n    };\n    _PdfLexicalOperator.prototype.getNumber = function () {\n        var ch = this.currentChar;\n        var eNotation = false;\n        var divideBy = 0;\n        var sign = 0;\n        if (ch === 0x2d) {\n            sign = -1;\n            ch = this.nextChar();\n            if (ch === 0x2d) {\n                ch = this.nextChar();\n            }\n        }\n        else if (ch === 0x2b) {\n            sign = 1;\n            ch = this.nextChar();\n        }\n        if (ch === 0x0a || ch === 0x0d) {\n            do {\n                ch = this.nextChar();\n            } while (ch === 0x0a || ch === 0x0d);\n        }\n        if (ch === 0x2e) {\n            divideBy = 10;\n            ch = this.nextChar();\n        }\n        if (ch < 0x30 || ch > 0x39) {\n            if (_isWhiteSpace(ch) || ch === -1) {\n                if (divideBy === 10 && sign === 0) {\n                    return 0;\n                }\n                if (divideBy === 0 && sign === -1) {\n                    return 0;\n                }\n            }\n            throw new FormatError(\"Invalid number: \" + String.fromCharCode(ch) + \" (charCode \" + ch + \")\");\n        }\n        sign = sign || 1;\n        var baseValue = ch - 0x30;\n        var powerValue = 0;\n        var powerValueSign = 1;\n        ch = this.nextChar();\n        while (ch >= 0) {\n            if (ch >= 0x30 && ch <= 0x39) {\n                var currentDigit = ch - 0x30;\n                if (eNotation) {\n                    powerValue = powerValue * 10 + currentDigit;\n                }\n                else {\n                    if (divideBy !== 0) {\n                        divideBy *= 10;\n                    }\n                    baseValue = baseValue * 10 + currentDigit;\n                }\n            }\n            else if (ch === 0x2e) {\n                if (divideBy === 0) {\n                    divideBy = 1;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (ch === 0x2d) {\n                ch = this.nextChar();\n                continue;\n            }\n            else if (ch === 0x45 || ch === 0x65) {\n                ch = this.peekChar();\n                if (ch === 0x2b || ch === 0x2d) {\n                    powerValueSign = ch === 0x2d ? -1 : 1;\n                    this.nextChar();\n                }\n                else if (ch < 0x30 || ch > 0x39) {\n                    break;\n                }\n                eNotation = true;\n            }\n            else {\n                break;\n            }\n            ch = this.nextChar();\n        }\n        if (divideBy !== 0) {\n            baseValue /= divideBy;\n        }\n        if (eNotation) {\n            baseValue *= Math.pow(10, (powerValueSign * powerValue));\n        }\n        return sign * baseValue;\n    };\n    _PdfLexicalOperator.prototype.getString = function () {\n        var numParen = 1;\n        var done = false;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.nextChar();\n        while (true) { // eslint-disable-line\n            var charBuffered = false;\n            switch (ch | 0) {\n                case -1:\n                    done = true;\n                    break;\n                case 0x28:\n                    ++numParen;\n                    stringBuffer.push('(');\n                    break;\n                case 0x29:\n                    if (--numParen === 0) {\n                        this.nextChar();\n                        done = true;\n                    }\n                    else {\n                        stringBuffer.push(')');\n                    }\n                    break;\n                case 0x5c:\n                    ch = this.nextChar();\n                    switch (ch) {\n                        case -1:\n                            done = true;\n                            break;\n                        case 0x6e:\n                            stringBuffer.push('\\n');\n                            break;\n                        case 0x72:\n                            stringBuffer.push('\\r');\n                            break;\n                        case 0x74:\n                            stringBuffer.push('\\t');\n                            break;\n                        case 0x62:\n                            stringBuffer.push('\\b');\n                            break;\n                        case 0x66:\n                            stringBuffer.push('\\f');\n                            break;\n                        case 0x5c:\n                        case 0x28:\n                        case 0x29:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                            var x = ch & 0x0f; // eslint-disable-line\n                            ch = this.nextChar();\n                            charBuffered = true;\n                            if (ch >= 0x30 && ch <= 0x37) {\n                                x = (x << 3) + (ch & 0x0f);\n                                ch = this.nextChar();\n                                if (ch >= 0x30 && ch <= 0x37) {\n                                    charBuffered = false;\n                                    x = (x << 3) + (ch & 0x0f);\n                                }\n                            }\n                            stringBuffer.push(String.fromCharCode(x));\n                            break;\n                        case 0x0d:\n                            if (this.peekChar() === 0x0a) {\n                                this.nextChar();\n                            }\n                            break;\n                        case 0x0a:\n                            break;\n                        default:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                    }\n                    break;\n                default:\n                    stringBuffer.push(String.fromCharCode(ch));\n                    break;\n            }\n            if (done) {\n                break;\n            }\n            if (!charBuffered) {\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getName = function () {\n        var ch;\n        var previousCh;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            if (ch === 0x23) {\n                ch = this.nextChar();\n                if (specialChars[ch]) { // eslint-disable-line\n                    stringBuffer.push('#');\n                    break;\n                }\n                var x = this._toHexDigit(ch);\n                if (x !== -1) {\n                    previousCh = ch;\n                    ch = this.nextChar();\n                    var x2 = this._toHexDigit(ch);\n                    if (x2 === -1) {\n                        stringBuffer.push('#', String.fromCharCode(previousCh));\n                        if (specialChars[ch]) { // eslint-disable-line\n                            break;\n                        }\n                        stringBuffer.push(String.fromCharCode(ch));\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((x << 4) | x2));\n                }\n                else {\n                    stringBuffer.push('#', String.fromCharCode(ch));\n                }\n            }\n            else {\n                stringBuffer.push(String.fromCharCode(ch));\n            }\n            ch = this.nextChar();\n        }\n        return _PdfName.get(stringBuffer.join(''));\n    };\n    _PdfLexicalOperator.prototype.getHexString = function () {\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.currentChar;\n        var isFirstHex = true;\n        var firstDigit;\n        var secondDigit;\n        this._hexStringNumber = 0;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                break;\n            }\n            else if (ch === 0x3e) {\n                this.nextChar();\n                break;\n            }\n            else if (specialChars[ch] === 1) { // eslint-disable-line\n                ch = this.nextChar();\n                continue;\n            }\n            else {\n                if (isFirstHex) {\n                    firstDigit = this._toHexDigit(ch);\n                    if (firstDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                }\n                else {\n                    secondDigit = this._toHexDigit(ch);\n                    if (secondDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((firstDigit << 4) | secondDigit));\n                }\n                isFirstHex = !isFirstHex;\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getObject = function () {\n        var comment = false;\n        var ch = this.currentChar;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                return endOfFile;\n            }\n            if (comment) {\n                if (ch === 0x0a || ch === 0x0d) {\n                    comment = false;\n                }\n            }\n            else if (ch === 0x25) {\n                comment = true;\n            }\n            else if (specialChars[ch] !== 1) { // eslint-disable-line\n                break;\n            }\n            ch = this.nextChar();\n        }\n        switch (ch | 0) {\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x2b:\n            case 0x2d:\n            case 0x2e:\n                return this.getNumber();\n            case 0x28:\n                return this.getString();\n            case 0x2f:\n                return this.getName();\n            case 0x5b:\n                this.nextChar();\n                return _PdfCommand.get('[');\n            case 0x5d:\n                this.nextChar();\n                return _PdfCommand.get(']');\n            case 0x3c:\n                ch = this.nextChar();\n                if (ch === 0x3c) {\n                    this.nextChar();\n                    return _PdfCommand.get('<<');\n                }\n                return this.getHexString();\n            case 0x3e:\n                ch = this.nextChar();\n                if (ch === 0x3e) {\n                    this.nextChar();\n                    return _PdfCommand.get('>>');\n                }\n                return _PdfCommand.get('>');\n            case 0x7b:\n                this.nextChar();\n                return _PdfCommand.get('{');\n            case 0x7d:\n                this.nextChar();\n                return _PdfCommand.get('}');\n            case 0x29:\n                this.nextChar();\n                throw new FormatError(\"Illegal character: \" + ch);\n        }\n        var str = String.fromCharCode(ch);\n        if (ch < 0x20 || ch > 0x7f) {\n            var nextCh = this.peekChar();\n            if (nextCh >= 0x20 && nextCh <= 0x7f) {\n                this.nextChar();\n                return _PdfCommand.get(str);\n            }\n        }\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            var possibleCommand = str + String.fromCharCode(ch);\n            if (str.length === 128) {\n                throw new FormatError(\"Command token too long: \" + str.length);\n            }\n            str = possibleCommand;\n            ch = this.nextChar();\n        }\n        if (str === 'true') {\n            return true;\n        }\n        if (str === 'false') {\n            return false;\n        }\n        if (str === 'null') {\n            return null;\n        }\n        if (str === 'BI') {\n            this.beginInlineImagePosition = this.stream.position;\n        }\n        return _PdfCommand.get(str);\n    };\n    _PdfLexicalOperator.prototype.peekObj = function () {\n        var streamPos = this.stream.position;\n        var currentChar = this.currentChar;\n        var beginInlineImagePosition = this.beginInlineImagePosition;\n        var nextObj; // eslint-disable-line\n        try {\n            nextObj = this.getObject();\n        }\n        catch (ex) { } // eslint-disable-line\n        this.stream.position = streamPos;\n        this.currentChar = currentChar;\n        this.beginInlineImagePosition = beginInlineImagePosition;\n        return nextObj;\n    };\n    _PdfLexicalOperator.prototype.skipToNextLine = function () {\n        var ch = this.currentChar;\n        while (ch >= 0) {\n            if (ch === 0x0d) {\n                ch = this.nextChar();\n                if (ch === 0x0a) {\n                    this.nextChar();\n                }\n                break;\n            }\n            else if (ch === 0x0a) {\n                this.nextChar();\n                break;\n            }\n            ch = this.nextChar();\n        }\n    };\n    _PdfLexicalOperator.prototype._toHexDigit = function (ch) {\n        if (ch >= 0x30 && ch <= 0x39) {\n            return ch & 0x0f;\n        }\n        if ((ch >= 0x41 && ch <= 0x46) || (ch >= 0x61 && ch <= 0x66)) {\n            return (ch & 0x0f) + 9;\n        }\n        return -1;\n    };\n    return _PdfLexicalOperator;\n}());\nexport { _PdfLexicalOperator };\nvar _PdfParser = /** @class */ (function () {\n    function _PdfParser(lexicalOperator, xref, allowStreams, recoveryMode) {\n        if (allowStreams === void 0) { allowStreams = false; }\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        this._isColorSpace = false;\n        this._isPassword = false;\n        this.lexicalOperator = lexicalOperator;\n        this.xref = xref;\n        this.allowStreams = allowStreams;\n        this.recoveryMode = recoveryMode;\n        this.imageCache = new Map();\n        this.refill();\n    }\n    _PdfParser.prototype.refill = function () {\n        this.first = this.lexicalOperator.getObject();\n        this.second = this.lexicalOperator.getObject();\n    };\n    _PdfParser.prototype.shift = function () {\n        if (this.second instanceof _PdfCommand && this.second.command === 'ID') {\n            this.first = this.second;\n            this.second = null;\n        }\n        else {\n            this.first = this.second;\n            this.second = this.lexicalOperator.getObject();\n        }\n    };\n    _PdfParser.prototype.tryShift = function () {\n        try {\n            this.shift();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    _PdfParser.prototype.getObject = function (cipherTransform) {\n        var first = this.first; // eslint-disable-line\n        this.shift();\n        if (first instanceof _PdfCommand) {\n            switch (first.command) {\n                case 'BI':\n                    return this.makeInlineImage(cipherTransform);\n                case '[':\n                    var array = []; // eslint-disable-line\n                    while (!_isCommand(this.first, ']') && this.first !== endOfFile) {\n                        var entry = this.getObject(cipherTransform); // eslint-disable-line\n                        if (array.length === 0 && _isName(entry, 'Indexed')) {\n                            this._isColorSpace = true;\n                        }\n                        entry = _decodeText(entry, this._isColorSpace, this._isPassword);\n                        array.push(entry);\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return array;\n                        }\n                        throw new ParserEndOfFileException('End of file inside array.');\n                    }\n                    this._isColorSpace = false;\n                    this.shift();\n                    return array;\n                case '<<':\n                    var dictionary = new _PdfDictionary(this.xref); // eslint-disable-line\n                    while (!_isCommand(this.first, '>>') && this.first !== endOfFile) {\n                        if (!(this.first instanceof _PdfName)) {\n                            this.shift();\n                            continue;\n                        }\n                        var key = this.first.name;\n                        if (key === 'U' || key === 'O' || key === 'ID') {\n                            this._isPassword = true;\n                        }\n                        this.shift();\n                        var isEnd = this._checkEnd();\n                        if (isEnd) {\n                            break;\n                        }\n                        var value = this.getObject(cipherTransform); // eslint-disable-line\n                        value = _decodeText(value, this._isColorSpace, this._isPassword);\n                        this._isPassword = false;\n                        dictionary.set(key, value);\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return dictionary;\n                        }\n                        throw new ParserEndOfFileException('End of file inside dictionary.');\n                    }\n                    if (_isCommand(this.second, 'stream')) {\n                        if (this.allowStreams === true) {\n                            return this.makeStream(dictionary, cipherTransform);\n                        }\n                        else {\n                            return dictionary;\n                        }\n                    }\n                    this.shift();\n                    return dictionary;\n                default:\n                    return first;\n            }\n        }\n        if (Number.isInteger(first)) {\n            if (Number.isInteger(this.first) && _isCommand(this.second, 'R')) {\n                var ref = _PdfReference.get(first, this.first);\n                this.shift();\n                this.shift();\n                return ref;\n            }\n            return first;\n        }\n        if (typeof first === 'string') {\n            if (cipherTransform) {\n                return cipherTransform.decryptString(first);\n            }\n            return first;\n        }\n        return first;\n    };\n    _PdfParser.prototype.findDiscreteDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var foundEnd = false;\n        var b;\n        var markerLength;\n        b = stream.getByte();\n        while (b !== -1) {\n            if (b !== 0xff) {\n                b = stream.getByte();\n                continue;\n            }\n            switch (stream.getByte()) {\n                case 0x00:\n                    break;\n                case 0xff:\n                    stream.skip(-1);\n                    break;\n                case 0xd9:\n                    foundEnd = true;\n                    break;\n                case 0xc0:\n                case 0xc1:\n                case 0xc2:\n                case 0xc3:\n                case 0xc5:\n                case 0xc6:\n                case 0xc7:\n                case 0xc9:\n                case 0xca:\n                case 0xcb:\n                case 0xcd:\n                case 0xce:\n                case 0xcf:\n                case 0xc4:\n                case 0xcc:\n                case 0xda:\n                case 0xdb:\n                case 0xdc:\n                case 0xdd:\n                case 0xde:\n                case 0xdf:\n                case 0xe0:\n                case 0xe1:\n                case 0xe2:\n                case 0xe3:\n                case 0xe4:\n                case 0xe5:\n                case 0xe6:\n                case 0xe7:\n                case 0xe8:\n                case 0xe9:\n                case 0xea:\n                case 0xeb:\n                case 0xec:\n                case 0xed:\n                case 0xee:\n                case 0xef:\n                case 0xfe:\n                    markerLength = stream.getUnsignedInteger16();\n                    if (markerLength > 2) {\n                        stream.skip(markerLength - 2);\n                    }\n                    else {\n                        stream.skip(-2);\n                    }\n                    break;\n            }\n            if (foundEnd) {\n                break;\n            }\n            b = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (b === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        while ((ch = stream.getByte()) !== -1) { // eslint-disable-line\n            if (ch === 0x7e) {\n                var tildePos = stream.position;\n                ch = stream.peekByte();\n                while (_isWhiteSpace(ch)) {\n                    stream.skip();\n                    ch = stream.peekByte();\n                }\n                if (ch === 0x3e) {\n                    stream.skip();\n                    break;\n                }\n                if (stream.position > tildePos) {\n                    var maybeEI = stream.peekBytes(2);\n                    if (maybeEI[0] === 0x45 && maybeEI[1] === 0x49) {\n                        break;\n                    }\n                }\n            }\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findHexDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (ch === 0x3e) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.inlineStreamSkipEI = function (stream) {\n        var state = 0;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else if (state === 2) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n    };\n    _PdfParser.prototype.makeInlineImage = function (cipherTransform) {\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream;\n        var dictionary = new _PdfDictionary(this.xref);\n        var dictLength;\n        while (!_isCommand(this.first, 'ID') && this.first !== endOfFile) {\n            if (!(this.first instanceof _PdfName)) {\n                throw new FormatError('Dictionary key must be a name object');\n            }\n            var key = this.first.name;\n            this.shift();\n            if (this.first.name === endOfFile) {\n                break;\n            }\n            dictionary.set(key, this.getObject(cipherTransform));\n        }\n        if (lexicalOperator.beginInlineImagePosition !== -1) {\n            dictLength = stream.position - lexicalOperator.beginInlineImagePosition;\n        }\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var filterName;\n        if (filter instanceof _PdfName) {\n            filterName = filter.name;\n        }\n        else if (Array.isArray(filter)) {\n            var reference = filter[0]; // eslint-disable-line\n            var filterZero = (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) ?\n                this.xref._fetch(reference) :\n                reference;\n            if (filterZero) {\n                filterName = filterZero.name;\n            }\n        }\n        var startPos = stream.position;\n        var length;\n        switch (filterName) {\n            case 'DCT':\n            case 'DCTDecode':\n                length = this.findDiscreteDecodeInlineStreamEnd(stream);\n                break;\n            case 'A85':\n            case 'ASCII85Decode':\n                length = this.findDecodeInlineStreamEnd(stream);\n                break;\n            case 'AHx':\n            case 'ASCIIHexDecode':\n                length = this.findHexDecodeInlineStreamEnd(stream);\n                break;\n            default:\n                length = this.findDefaultInlineStreamEnd(stream);\n        }\n        var imageStream = stream.makeSubStream(startPos, length, dictionary); // eslint-disable-line\n        var cacheKey;\n        if (length < maxCacheLength && dictLength < maxNumberLength) {\n            var imageBytes = imageStream.getBytes();\n            imageStream.reset();\n            var initialStreamPos = stream.position;\n            stream.position = lexicalOperator.beginInlineImagePosition;\n            var dictBytes = stream.getBytes(dictLength);\n            stream.position = initialStreamPos;\n            cacheKey = this._computeMaxNumber(imageBytes) + '_' + this._computeMaxNumber(dictBytes);\n            var cacheEntry = this.imageCache.get(cacheKey);\n            if (cacheEntry !== undefined) {\n                this.second = _PdfCommand.get('EI');\n                this.shift();\n                cacheEntry.reset();\n                return cacheEntry;\n            }\n        }\n        if (cipherTransform) {\n            imageStream = cipherTransform.createStream(imageStream, length);\n        }\n        imageStream = this.filter(imageStream, dictionary, length);\n        imageStream.dictionary = dictionary;\n        if (cacheKey !== undefined) {\n            this.imageCache.set(cacheKey, imageStream);\n        }\n        this.second = _PdfCommand.get('EI');\n        this.shift();\n        return imageStream;\n    };\n    _PdfParser.prototype._computeMaxNumber = function (bytes) {\n        var bytesLength = bytes.length;\n        var a = 1;\n        var b = 0;\n        for (var i = 0; i < bytesLength; ++i) {\n            a += bytes[i] & 0xff; // eslint-disable-line\n            b += a;\n        }\n        return (b % 65521 << 16) | a % 65521;\n    };\n    _PdfParser.prototype.makeStream = function (dictionary, cipherTransform) {\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream; // eslint-disable-line\n        lexicalOperator.skipToNextLine();\n        var startPosition = stream.position - 1;\n        var length = dictionary.get('Length');\n        if (!Number.isInteger(length)) {\n            length = 0;\n        }\n        stream.position = startPosition + length;\n        lexicalOperator.nextChar();\n        if (this.tryShift() && _isCommand(this.second, 'endstream')) {\n            this.shift();\n        }\n        else {\n            var endStreamSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d]);\n            var actualLength = this._findStreamLength(startPosition, endStreamSignature);\n            if (actualLength < 0) {\n                var end = endStreamSignature.length - 1;\n                var truncatedSignature = endStreamSignature.slice(0, end);\n                var maybeLength = this._findStreamLength(startPosition, truncatedSignature);\n                if (maybeLength >= 0) {\n                    var lastByte = stream.peekBytes(end + 1)[end]; // eslint-disable-line\n                    if (_isWhiteSpace(lastByte)) {\n                        actualLength = maybeLength;\n                    }\n                }\n                if (actualLength < 0) {\n                    throw new FormatError('Missing endstream command.');\n                }\n            }\n            length = actualLength;\n            lexicalOperator.nextChar();\n            this.shift();\n            this.shift();\n        }\n        this.shift();\n        stream = stream.makeSubStream(startPosition, length, dictionary);\n        if (cipherTransform) {\n            stream = cipherTransform.createStream(stream, length);\n        }\n        stream = this.filter(stream, dictionary, length);\n        stream.dictionary = dictionary;\n        return stream;\n    };\n    _PdfParser.prototype.filter = function (stream, dictionary, length) {\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var params = dictionary.get('DP', 'DecodeParms'); // eslint-disable-line\n        if (filter instanceof _PdfName) {\n            return this.makeFilter(stream, filter.name, length, params);\n        }\n        var maybeLength = length;\n        if (Array.isArray(filter)) {\n            var filterArray = filter; // eslint-disable-line\n            var paramsArray = params; // eslint-disable-line\n            for (var i = 0; i < filterArray.length; ++i) {\n                var reference = filterArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                filter = reference instanceof _PdfReference ? this.xref._fetch(reference) : reference;\n                if (!(filter instanceof _PdfName)) {\n                    throw new FormatError(\"Bad filter name '\" + filter + \"'\");\n                }\n                params = null;\n                if (Array.isArray(paramsArray) && i in paramsArray) {\n                    var ref = paramsArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    params = ref instanceof _PdfReference ? this.xref._fetch(ref) : ref;\n                }\n                stream = this.makeFilter(stream, filter.name, maybeLength, params);\n                maybeLength = null;\n            }\n        }\n        return stream;\n    };\n    _PdfParser.prototype.makeFilter = function (stream, name, maybeLength, params) {\n        if (maybeLength === 0) {\n            return new _PdfNullStream();\n        }\n        try {\n            if (name === 'Fl' || name === 'FlateDecode') {\n                if (params) {\n                    return new PdfPredictorStream(new _PdfFlateStream(stream, maybeLength), maybeLength, params);\n                }\n                return new _PdfFlateStream(stream, maybeLength);\n            }\n            return stream;\n        }\n        catch (ex) {\n            return new _PdfNullStream();\n        }\n    };\n    _PdfParser.prototype._findStreamLength = function (startPosition, signature) {\n        var stream = this.lexicalOperator.stream;\n        stream.position = startPosition;\n        var length = 2048;\n        var signatureLength = signature.length;\n        while (stream.position < stream.end) {\n            var scanBytes = stream.peekBytes(length);\n            var scanLength = scanBytes.length - signatureLength;\n            if (scanLength <= 0) {\n                break;\n            }\n            var position = 0;\n            while (position < scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return stream.position - startPosition;\n                }\n                position++;\n            }\n            stream.position += scanLength;\n        }\n        return -1;\n    };\n    _PdfParser.prototype.findDefaultInlineStreamEnd = function (stream) {\n        var startPosition = stream.position;\n        var n = 10;\n        var state = 0;\n        var ch;\n        var endImagePosition;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else {\n                if (state !== 2) {\n                    throw new Error('findDefaultInlineStreamEnd - invalid state.');\n                }\n                if (ch === 0x20 || ch === 0xa || ch === 0xd) {\n                    endImagePosition = stream.position;\n                    var followingBytes = stream.peekBytes(n);\n                    for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n                        ch = followingBytes[i]; // eslint-disable-line\n                        if (ch === 0x0 && followingBytes[i + 1] !== 0x0) {\n                            continue;\n                        }\n                        if (ch !== 0xa && ch !== 0xd && (ch < 0x20 || ch > 0x7f)) {\n                            state = 0;\n                            break;\n                        }\n                    }\n                    if (state !== 2) {\n                        ch = stream.getByte();\n                        continue;\n                    }\n                    if (state === 2) {\n                        break;\n                    }\n                }\n                else {\n                    state = 0;\n                }\n            }\n            ch = stream.getByte();\n        }\n        if (ch === -1) {\n            if (typeof endImagePosition !== 'undefined') {\n                stream.skip(-(stream.position - endImagePosition));\n            }\n        }\n        var endOffset = 4;\n        stream.skip(-endOffset);\n        ch = stream.peekByte();\n        stream.skip(endOffset);\n        if (!_isWhiteSpace(ch)) {\n            endOffset--;\n        }\n        return stream.position - endOffset - startPosition;\n    };\n    _PdfParser.prototype._checkEnd = function () {\n        if (this.first === endOfFile) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return _PdfParser;\n}());\nexport { _PdfParser };\n/* eslint-disable */\nvar _Linearization = /** @class */ (function () {\n    function _Linearization(stream) {\n        this.isValid = false;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        var dictionary = parser.getObject();\n        this.isValid = Number.isInteger(obj1) && Number.isInteger(obj2) && _isCommand(obj3, 'obj') && typeof dictionary !== 'undefined';\n        if (this.isValid) {\n            var obj = dictionary.get('Linearized');\n            this.isValid = typeof obj !== 'undefined' && obj > 0;\n        }\n        if (this.isValid) {\n            var length_1 = this.getInt(dictionary, 'L');\n            if (length_1 !== stream.length) {\n                throw new Error('The L parameter in the linearization dictionary ' + 'does not equal the stream length.');\n            }\n            this.length = length_1;\n            this.hints = this.getHints(dictionary);\n            this.objectNumberFirst = this.getInt(dictionary, 'O');\n            this.endFirst = this.getInt(dictionary, 'E');\n            this.pageCount = this.getInt(dictionary, 'N');\n            this.mainXRefEntriesOffset = this.getInt(dictionary, 'T');\n            this.pageFirst = dictionary.has('P') ? this.getInt(dictionary, 'P', true) : 0;\n        }\n    }\n    _Linearization.prototype.getInt = function (dictionary, name, allowZeroValue) {\n        if (allowZeroValue === void 0) { allowZeroValue = false; }\n        var obj = dictionary.get(name);\n        if (typeof obj !== 'undefined' && Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n            return obj;\n        }\n        throw new Error(\"The '\" + name + \"' parameter in the linearization \" + 'dictionary is invalid.');\n    };\n    _Linearization.prototype.getHints = function (dictionary) {\n        var hints = dictionary.getArray('H');\n        var hintsLength = hints.length;\n        if (hints && (hintsLength === 2 || hintsLength === 4)) {\n            for (var index = 0; index < hintsLength; index++) {\n                var hint = hints[index];\n                if (!(Number.isInteger(hint) && hint > 0)) {\n                    throw new Error(\"Hint (\" + index + \") in the linearization dictionary is invalid.\");\n                }\n            }\n            return hints;\n        }\n        throw new Error('Hint array in the linearization dictionary is invalid.');\n    };\n    return _Linearization;\n}());\nexport { _Linearization };\n/* eslint-enable */\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _isName, _PdfName } from './../pdf-primitives';\nimport { FormatError, _stringToBytes, _areArrayEqual, _bytesToString } from './../utils';\nimport { _PdfDecryptStream } from './../decrypt-stream';\nvar _PdfEncryptor = /** @class */ (function () {\n    function _PdfEncryptor(dictionary, id, password) {\n        if (password === void 0) { password = ''; }\n        this._isUserPassword = true;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = true;\n        this._defaultPasswordBytes = new Uint8Array([0x28, 0xbf, 0x4e, 0x5e, 0x4e, 0x75, 0x8a, 0x41, 0x64, 0x00, 0x4e, 0x56, 0xff,\n            0xfa, 0x01, 0x08, 0x2e, 0x2e, 0x00, 0xb6, 0xd0, 0x68, 0x3e, 0x80, 0x2f, 0x0c, 0xa9, 0xfe, 0x64, 0x53, 0x69, 0x7a]);\n        var filter = dictionary.get('Filter');\n        if (!_isName(filter, 'Standard')) {\n            throw new FormatError('unknown encryption method');\n        }\n        this._filterName = filter.name;\n        this._dictionary = dictionary;\n        var algorithm = dictionary.get('V');\n        if (!Number.isInteger(algorithm) || (algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5)) {\n            throw new FormatError('unsupported encryption algorithm');\n        }\n        this._algorithm = algorithm;\n        var keyLength = dictionary.get('Length');\n        if (!keyLength) {\n            if (algorithm <= 3) {\n                keyLength = 40;\n            }\n            else {\n                var cfDictionary = dictionary.get('CF');\n                var streamCryptoName = dictionary.get('StmF');\n                if (cfDictionary && streamCryptoName) {\n                    cfDictionary.suppressEncryption = true;\n                    var handlerDictionary = cfDictionary.get(streamCryptoName.name);\n                    keyLength = (handlerDictionary && handlerDictionary.get('Length')) || 128;\n                    if (keyLength < 40) {\n                        keyLength <<= 3;\n                    }\n                }\n            }\n        }\n        if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n            throw new FormatError('invalid key length');\n        }\n        var ownerPassword = _stringToBytes(dictionary.get('O'), false, true).subarray(0, 32);\n        var userPassword = _stringToBytes(dictionary.get('U'), false, true).subarray(0, 32);\n        var flag = dictionary.get('P');\n        var revision = dictionary.get('R');\n        this._encryptMetaData = (algorithm === 4 || algorithm === 5) && dictionary.get('EncryptMetadata') !== false;\n        var fileIdBytes = _stringToBytes(id, false, true);\n        var passwordBytes;\n        if (password) {\n            if (revision === 6) {\n                password = encodeURIComponent(password);\n            }\n            passwordBytes = _stringToBytes(password);\n        }\n        var encryptionKey;\n        if (algorithm !== 5) {\n            encryptionKey = this._prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n            if (encryptionKey) {\n                this._isUserPassword = true;\n                if (password) {\n                    var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                    var ownerEncryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                    if (ownerEncryptionKey && _areArrayEqual(ownerEncryptionKey, encryptionKey)) {\n                        this._hasUserPasswordOnly = true;\n                    }\n                }\n            }\n        }\n        else {\n            var ownerValidationKey = _stringToBytes(dictionary.get('O'), false, true);\n            var ownerValidationSalt = ownerValidationKey.subarray(32, 40);\n            var ownerKeySalt = ownerValidationKey.subarray(40, 48);\n            var userValidationKey = _stringToBytes(dictionary.get('U'), false, true);\n            var uBytes = userValidationKey.subarray(0, 48);\n            var userValidationSalt = userValidationKey.subarray(32, 40);\n            var userKeySalt = userValidationKey.subarray(40, 48);\n            var ownerEncryption = _stringToBytes(dictionary.get('OE'), false, true);\n            var userEncryption = _stringToBytes(dictionary.get('UE'), false, true);\n            var algorithm_1;\n            if (revision === 6) {\n                algorithm_1 = new _AdvancedEncryption();\n            }\n            else {\n                algorithm_1 = new _BasicEncryption();\n            }\n            var p = void 0;\n            if (passwordBytes) {\n                p = passwordBytes.subarray(0, Math.min(127, passwordBytes.length));\n            }\n            else {\n                p = new Uint8Array([]);\n            }\n            if (algorithm_1._checkUserPassword(p, userValidationSalt, userPassword)) {\n                encryptionKey = this._createEncryptionKey(true, p, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = true;\n                if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                    this._hasUserPasswordOnly = true;\n                }\n            }\n            else if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                encryptionKey = this._createEncryptionKey(false, passwordBytes, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = false;\n            }\n        }\n        if (!encryptionKey) {\n            if (password) {\n                var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                encryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                this._isUserPassword = false;\n            }\n            else {\n                throw new Error('Cannot open an encrypted document. The password is invalid.');\n            }\n        }\n        if (algorithm >= 4) {\n            var cipherDictionary = dictionary.get('CF');\n            if (cipherDictionary) {\n                cipherDictionary.suppressEncryption = true;\n                if (cipherDictionary.has('StdCF')) {\n                    var standardCryptFilter = cipherDictionary.get('StdCF');\n                    if (standardCryptFilter && standardCryptFilter.has('AuthEvent')) {\n                        var event_1 = standardCryptFilter.get('AuthEvent');\n                        if (event_1 && event_1.name === 'EFOpen') {\n                            this._encryptOnlyAttachment = true;\n                        }\n                    }\n                }\n            }\n            this._cipherDictionary = cipherDictionary;\n            this._stream = dictionary.get('StmF') || _PdfName.get('Identity');\n            this._string = dictionary.get('StrF') || _PdfName.get('Identity');\n            this._eff = dictionary.get('EFF') || this._stream;\n        }\n        if (!encryptionKey && !this._encryptOnlyAttachment) {\n            throw new Error('Cannot open an encrypted document. The password is invalid.');\n        }\n        this._encryptionKey = encryptionKey;\n    }\n    Object.defineProperty(_PdfEncryptor.prototype, \"_md5\", {\n        get: function () {\n            if (typeof this._messageDigest === 'undefined') {\n                this._messageDigest = new _MD5();\n            }\n            return this._messageDigest;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfEncryptor.prototype._createEncryptionKey = function (isUserKey, password, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm) {\n        if (isUserKey) {\n            return algorithm._getUserKey(password, userKeySalt, userEncryption);\n        }\n        else {\n            return algorithm._getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n        }\n    };\n    _PdfEncryptor.prototype._prepareKeyData = function (id, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetaData) {\n        var hashData = new Uint8Array(40 + ownerPassword.length + id.length);\n        var i = 0;\n        var j = 0;\n        var n;\n        if (password) {\n            n = Math.min(32, password.length);\n            for (; i < n; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        for (j = 0, n = ownerPassword.length; j < n; ++j) {\n            hashData[i++] = ownerPassword[Number.parseInt(j.toString(), 10)];\n        }\n        hashData[i++] = flags & 0xff;\n        hashData[i++] = (flags >> 8) & 0xff;\n        hashData[i++] = (flags >> 16) & 0xff;\n        hashData[i++] = (flags >>> 24) & 0xff;\n        for (j = 0, n = id.length; j < n; ++j) {\n            hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n        }\n        if (revision >= 4 && !encryptMetaData) {\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, keyLengthInBytes);\n            }\n        }\n        var encryptionKey = hash.subarray(0, keyLengthInBytes);\n        var cipher;\n        var checkData;\n        if (revision >= 3) {\n            for (i = 0; i < 32; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = this._defaultPasswordBytes[Number.parseInt(i.toString(), 10)];\n            }\n            for (j = 0, n = id.length; j < n; ++j) {\n                hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n            }\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._md5.hash(hashData, 0, i));\n            n = encryptionKey.length;\n            var derivedKey = new Uint8Array(n);\n            for (j = 1; j <= 19; ++j) {\n                for (var k = 0; k < n; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = encryptionKey[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                checkData = cipher._encryptBlock(checkData);\n            }\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._defaultPasswordBytes);\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        return encryptionKey;\n    };\n    _PdfEncryptor.prototype._decodeUserPassword = function (password, ownerPassword, revision, keyLength) {\n        var hashData = new Uint8Array(32);\n        var i = 0;\n        var j = 0;\n        var n = Math.min(32, password.length);\n        for (; i < n; ++i) {\n            hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, hash.length);\n            }\n        }\n        var cipher;\n        var userPassword;\n        if (revision >= 3) {\n            userPassword = ownerPassword;\n            var derivedKey = new Uint8Array(keyLengthInBytes);\n            for (j = 19; j >= 0; j--) {\n                for (var k = 0; k < keyLengthInBytes; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = hash[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                userPassword = cipher._encryptBlock(userPassword);\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(hash.subarray(0, keyLengthInBytes));\n            userPassword = cipher._encryptBlock(ownerPassword);\n        }\n        return userPassword;\n    };\n    _PdfEncryptor.prototype._createCipherTransform = function (objectNumber, generationNumber) {\n        if (this._algorithm === 4 || this._algorithm === 5) {\n            var stringCipher = this._buildCipherConstructor(this._cipherDictionary, this._string, objectNumber, generationNumber, this._encryptionKey);\n            var streamCipher = this._buildCipherConstructor(this._cipherDictionary, this._stream, objectNumber, generationNumber, this._encryptionKey);\n            return new _CipherTransform(stringCipher, streamCipher);\n        }\n        var key = this._buildObjectKey(objectNumber, generationNumber, this._encryptionKey, false);\n        return new _CipherTransform(new _NormalCipherFour(key), new _NormalCipherFour(key));\n    };\n    _PdfEncryptor.prototype._buildCipherConstructor = function (cipherDictionary, name, objectNumber, generationNumber, key) {\n        var cryptFilter = cipherDictionary.get(name.name);\n        var cfm;\n        if (cryptFilter) {\n            cfm = cryptFilter.get('CFM');\n        }\n        if (!cfm) {\n            return new _NullCipher();\n        }\n        switch (cfm.name) {\n            case 'None':\n                return new _NullCipher();\n            case 'AESV2':\n                return new _AdvancedEncryption128Cipher(this._buildObjectKey(objectNumber, generationNumber, key, true));\n            case 'AESV3':\n                return new _AdvancedEncryption256Cipher(key);\n            case 'V2':\n                return new _NormalCipherFour(this._buildObjectKey(objectNumber, generationNumber, key, false));\n        }\n        throw new FormatError('Unknown cryptography method');\n    };\n    _PdfEncryptor.prototype._buildObjectKey = function (objectNumber, generationNumber, encryptionKey, isAdvancedEncryption) {\n        if (isAdvancedEncryption === void 0) { isAdvancedEncryption = false; }\n        var key = new Uint8Array(encryptionKey.length + 9);\n        var i;\n        for (i = 0; i < encryptionKey.length; ++i) {\n            key[Number.parseInt(i.toString(), 10)] = encryptionKey[Number.parseInt(i.toString(), 10)];\n        }\n        key[i++] = objectNumber & 0xff;\n        key[i++] = (objectNumber >> 8) & 0xff;\n        key[i++] = (objectNumber >> 16) & 0xff;\n        key[i++] = generationNumber & 0xff;\n        key[i++] = (generationNumber >> 8) & 0xff;\n        if (isAdvancedEncryption) {\n            key[i++] = 0x73;\n            key[i++] = 0x41;\n            key[i++] = 0x6c;\n            key[i++] = 0x54;\n        }\n        var hash = this._md5.hash(key, 0, i);\n        return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n    };\n    return _PdfEncryptor;\n}());\nexport { _PdfEncryptor };\nvar _MD5 = /** @class */ (function () {\n    function _MD5() {\n        this._r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9,\n            14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21,\n            6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n        this._k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983,\n            1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632,\n            643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501,\n            -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353,\n            -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651,\n            -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744,\n            -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n    }\n    _MD5.prototype.hash = function (data, offset, length) {\n        var h0 = 1732584193;\n        var h1 = -271733879;\n        var h2 = -1732584194;\n        var h3 = 271733878;\n        var paddedLength = (length + 72) & ~63;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j = 0;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = (length << 3) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        var w = new Int32Array(16);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j, i += 4) {\n                w[Number.parseInt(j.toString(), 10)] = padded[Number.parseInt(i.toString(), 10)] |\n                    (padded[i + 1] << 8) |\n                    (padded[i + 2] << 16) |\n                    (padded[i + 3] << 24);\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = void 0;\n            var f = void 0;\n            for (j = 0; j < 64; ++j) {\n                if (j < 16) {\n                    e = (b & c) | (~b & d);\n                    f = j;\n                }\n                else if (j < 32) {\n                    e = (d & b) | (~d & c);\n                    f = (5 * j + 1) & 15;\n                }\n                else if (j < 48) {\n                    e = b ^ c ^ d;\n                    f = (3 * j + 5) & 15;\n                }\n                else {\n                    e = c ^ (b | ~d);\n                    f = (7 * j) & 15;\n                }\n                var previous = d;\n                var current = (a + e + this._k[Number.parseInt(j.toString(), 10)] + w[Number.parseInt(f.toString(), 10)]) | 0;\n                var rotate = this._r[Number.parseInt(j.toString(), 10)];\n                d = c;\n                c = b;\n                b = (b + ((current << rotate) | (current >>> (32 - rotate)))) | 0;\n                a = previous;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n        }\n        return new Uint8Array([h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >>> 24) & 0xFF, h1 & 0xFF,\n            (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >>> 24) & 0xFF, h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF,\n            (h2 >>> 24) & 0xFF, h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >>> 24) & 0xFF\n        ]);\n    };\n    return _MD5;\n}());\nexport { _MD5 };\nvar _Sha256 = /** @class */ (function () {\n    function _Sha256() {\n    }\n    _Sha256.prototype._rotateRight = function (x, n) {\n        return (x >>> n) | (x << (32 - n));\n    };\n    _Sha256.prototype._sigma = function (x) {\n        return this._rotateRight(x, 2) ^ this._rotateRight(x, 13) ^ this._rotateRight(x, 22);\n    };\n    _Sha256.prototype._sigmaPrime = function (x) {\n        return this._rotateRight(x, 6) ^ this._rotateRight(x, 11) ^ this._rotateRight(x, 25);\n    };\n    _Sha256.prototype._littleSigma = function (x) {\n        return this._rotateRight(x, 7) ^ this._rotateRight(x, 18) ^ (x >>> 3);\n    };\n    _Sha256.prototype._littleSigmaPrime = function (x) {\n        return this._rotateRight(x, 17) ^ this._rotateRight(x, 19) ^ (x >>> 10);\n    };\n    _Sha256.prototype._hash = function (data, offset, length) {\n        var h0 = 0x6a09e667;\n        var h1 = 0xbb67ae85;\n        var h2 = 0x3c6ef372;\n        var h3 = 0xa54ff53a;\n        var h4 = 0x510e527f;\n        var h5 = 0x9b05688c;\n        var h6 = 0x1f83d9ab;\n        var h7 = 0x5be0cd19;\n        var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98,\n            0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6,\n            0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3,\n            0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e,\n            0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116,\n            0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814,\n            0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n        var paddedLength = Math.ceil((length + 9) / 64) * 64;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Uint32Array(64);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                    (padded[i + 1] << 16) |\n                    (padded[i + 2] << 8) |\n                    padded[i + 3];\n                i += 4;\n            }\n            for (j = 16; j < 64; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (this._littleSigmaPrime(w[j - 2]) +\n                    w[j - 7] +\n                    this._littleSigma(w[j - 15]) + w[j - 16]) | 0;\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = h4;\n            var f = h5;\n            var g = h6;\n            var h = h7;\n            var t1 = void 0;\n            var t2 = void 0;\n            for (j = 0; j < 64; ++j) {\n                t1 = h +\n                    this._sigmaPrime(e) +\n                    ((e & f) ^ (~e & g)) +\n                    k[Number.parseInt(j.toString(), 10)] +\n                    w[Number.parseInt(j.toString(), 10)];\n                t2 = this._sigma(a) + ((a & b) ^ (a & c) ^ (b & c));\n                h = g;\n                g = f;\n                f = e;\n                e = (d + t1) | 0;\n                d = c;\n                c = b;\n                b = a;\n                a = (t1 + t2) | 0;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n            h4 = (h4 + e) | 0;\n            h5 = (h5 + f) | 0;\n            h6 = (h6 + g) | 0;\n            h7 = (h7 + h) | 0;\n        }\n        return new Uint8Array([(h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, (h0) & 0xFF, (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF,\n            (h1 >> 8) & 0xFF, (h1) & 0xFF, (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, (h2) & 0xFF, (h3 >> 24) & 0xFF,\n            (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, (h3) & 0xFF, (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, (h4) & 0xFF,\n            (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, (h5) & 0xFF, (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF,\n            (h6) & 0xFF, (h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, (h7) & 0xFF\n        ]);\n    };\n    return _Sha256;\n}());\nexport { _Sha256 };\nvar _Sha512 = /** @class */ (function () {\n    function _Sha512() {\n        this._k = [new _Word64(0x428a2f98, 0xd728ae22), new _Word64(0x71374491, 0x23ef65cd),\n            new _Word64(0xb5c0fbcf, 0xec4d3b2f), new _Word64(0xe9b5dba5, 0x8189dbbc),\n            new _Word64(0x3956c25b, 0xf348b538), new _Word64(0x59f111f1, 0xb605d019),\n            new _Word64(0x923f82a4, 0xaf194f9b), new _Word64(0xab1c5ed5, 0xda6d8118),\n            new _Word64(0xd807aa98, 0xa3030242), new _Word64(0x12835b01, 0x45706fbe),\n            new _Word64(0x243185be, 0x4ee4b28c), new _Word64(0x550c7dc3, 0xd5ffb4e2),\n            new _Word64(0x72be5d74, 0xf27b896f), new _Word64(0x80deb1fe, 0x3b1696b1),\n            new _Word64(0x9bdc06a7, 0x25c71235), new _Word64(0xc19bf174, 0xcf692694),\n            new _Word64(0xe49b69c1, 0x9ef14ad2), new _Word64(0xefbe4786, 0x384f25e3),\n            new _Word64(0x0fc19dc6, 0x8b8cd5b5), new _Word64(0x240ca1cc, 0x77ac9c65),\n            new _Word64(0x2de92c6f, 0x592b0275), new _Word64(0x4a7484aa, 0x6ea6e483),\n            new _Word64(0x5cb0a9dc, 0xbd41fbd4), new _Word64(0x76f988da, 0x831153b5),\n            new _Word64(0x983e5152, 0xee66dfab), new _Word64(0xa831c66d, 0x2db43210),\n            new _Word64(0xb00327c8, 0x98fb213f), new _Word64(0xbf597fc7, 0xbeef0ee4),\n            new _Word64(0xc6e00bf3, 0x3da88fc2), new _Word64(0xd5a79147, 0x930aa725),\n            new _Word64(0x06ca6351, 0xe003826f), new _Word64(0x14292967, 0x0a0e6e70),\n            new _Word64(0x27b70a85, 0x46d22ffc), new _Word64(0x2e1b2138, 0x5c26c926),\n            new _Word64(0x4d2c6dfc, 0x5ac42aed), new _Word64(0x53380d13, 0x9d95b3df),\n            new _Word64(0x650a7354, 0x8baf63de), new _Word64(0x766a0abb, 0x3c77b2a8),\n            new _Word64(0x81c2c92e, 0x47edaee6), new _Word64(0x92722c85, 0x1482353b),\n            new _Word64(0xa2bfe8a1, 0x4cf10364), new _Word64(0xa81a664b, 0xbc423001),\n            new _Word64(0xc24b8b70, 0xd0f89791), new _Word64(0xc76c51a3, 0x0654be30),\n            new _Word64(0xd192e819, 0xd6ef5218), new _Word64(0xd6990624, 0x5565a910),\n            new _Word64(0xf40e3585, 0x5771202a), new _Word64(0x106aa070, 0x32bbd1b8),\n            new _Word64(0x19a4c116, 0xb8d2d0c8), new _Word64(0x1e376c08, 0x5141ab53),\n            new _Word64(0x2748774c, 0xdf8eeb99), new _Word64(0x34b0bcb5, 0xe19b48a8),\n            new _Word64(0x391c0cb3, 0xc5c95a63), new _Word64(0x4ed8aa4a, 0xe3418acb),\n            new _Word64(0x5b9cca4f, 0x7763e373), new _Word64(0x682e6ff3, 0xd6b2b8a3),\n            new _Word64(0x748f82ee, 0x5defb2fc), new _Word64(0x78a5636f, 0x43172f60),\n            new _Word64(0x84c87814, 0xa1f0ab72), new _Word64(0x8cc70208, 0x1a6439ec),\n            new _Word64(0x90befffa, 0x23631e28), new _Word64(0xa4506ceb, 0xde82bde9),\n            new _Word64(0xbef9a3f7, 0xb2c67915), new _Word64(0xc67178f2, 0xe372532b),\n            new _Word64(0xca273ece, 0xea26619c), new _Word64(0xd186b8c7, 0x21c0c207),\n            new _Word64(0xeada7dd6, 0xcde0eb1e), new _Word64(0xf57d4f7f, 0xee6ed178),\n            new _Word64(0x06f067aa, 0x72176fba), new _Word64(0x0a637dc5, 0xa2c898a6),\n            new _Word64(0x113f9804, 0xbef90dae), new _Word64(0x1b710b35, 0x131c471b),\n            new _Word64(0x28db77f5, 0x23047d84), new _Word64(0x32caab7b, 0x40c72493),\n            new _Word64(0x3c9ebe0a, 0x15c9bebc), new _Word64(0x431d67c4, 0x9c100d4c),\n            new _Word64(0x4cc5d4be, 0xcb3e42b6), new _Word64(0x597f299c, 0xfc657e2a),\n            new _Word64(0x5fcb6fab, 0x3ad6faec), new _Word64(0x6c44198c, 0x4a475817)];\n    }\n    _Sha512.prototype._sigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(28);\n        buffer.assign(x);\n        buffer.rotateRight(34);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(39);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._sigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(14);\n        buffer.assign(x);\n        buffer.rotateRight(18);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(41);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(1);\n        buffer.assign(x);\n        buffer.rotateRight(8);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(7);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(19);\n        buffer.assign(x);\n        buffer.rotateRight(61);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(6);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._hash = function (data, offset, length, isMode384) {\n        if (isMode384 === void 0) { isMode384 = false; }\n        var h0;\n        var h1;\n        var h2;\n        var h3;\n        var h4;\n        var h5;\n        var h6;\n        var h7;\n        if (isMode384) {\n            h0 = new _Word64(0xcbbb9d5d, 0xc1059ed8);\n            h1 = new _Word64(0x629a292a, 0x367cd507);\n            h2 = new _Word64(0x9159015a, 0x3070dd17);\n            h3 = new _Word64(0x152fecd8, 0xf70e5939);\n            h4 = new _Word64(0x67332667, 0xffc00b31);\n            h5 = new _Word64(0x8eb44a87, 0x68581511);\n            h6 = new _Word64(0xdb0c2e0d, 0x64f98fa7);\n            h7 = new _Word64(0x47b5481d, 0xbefa4fa4);\n        }\n        else {\n            h0 = new _Word64(0x6a09e667, 0xf3bcc908);\n            h1 = new _Word64(0xbb67ae85, 0x84caa73b);\n            h2 = new _Word64(0x3c6ef372, 0xfe94f82b);\n            h3 = new _Word64(0xa54ff53a, 0x5f1d36f1);\n            h4 = new _Word64(0x510e527f, 0xade682d1);\n            h5 = new _Word64(0x9b05688c, 0x2b3e6c1f);\n            h6 = new _Word64(0x1f83d9ab, 0xfb41bd6b);\n            h7 = new _Word64(0x5be0cd19, 0x137e2179);\n        }\n        var paddedLength = Math.ceil((length + 17) / 128) * 128;\n        var padded = new Uint8Array(paddedLength);\n        var i;\n        for (i = 0; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 16;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Array(80);\n        for (i = 0; i < 80; i++) {\n            w[Number.parseInt(i.toString(), 10)] = new _Word64(0, 0);\n        }\n        var a = new _Word64(0, 0);\n        var b = new _Word64(0, 0);\n        var c = new _Word64(0, 0);\n        var d = new _Word64(0, 0);\n        var e = new _Word64(0, 0);\n        var f = new _Word64(0, 0);\n        var g = new _Word64(0, 0);\n        var h = new _Word64(0, 0);\n        var t1 = new _Word64(0, 0);\n        var t2 = new _Word64(0, 0);\n        var buffer1 = new _Word64(0, 0);\n        var buffer2 = new _Word64(0, 0);\n        var buffer3;\n        for (i = 0; i < paddedLength;) {\n            var j = void 0;\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)].high =\n                    (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                        (padded[i + 1] << 16) |\n                        (padded[i + 2] << 8) |\n                        padded[i + 3];\n                w[Number.parseInt(j.toString(), 10)].low =\n                    (padded[i + 4] << 24) |\n                        (padded[i + 5] << 16) |\n                        (padded[i + 6] << 8) |\n                        padded[i + 7];\n                i += 8;\n            }\n            for (j = 16; j < 80; ++j) {\n                buffer3 = w[Number.parseInt(j.toString(), 10)];\n                this._littleSigmaPrime(buffer3, w[j - 2], buffer2);\n                buffer3.add(w[j - 7]);\n                this._littleSigma(buffer1, w[j - 15], buffer2);\n                buffer3.add(buffer1);\n                buffer3.add(w[j - 16]);\n            }\n            a.assign(h0);\n            b.assign(h1);\n            c.assign(h2);\n            d.assign(h3);\n            e.assign(h4);\n            f.assign(h5);\n            g.assign(h6);\n            h.assign(h7);\n            for (j = 0; j < 80; ++j) {\n                t1.assign(h);\n                this._sigmaPrime(buffer1, e, buffer2);\n                t1.add(buffer1);\n                buffer1.assign(e);\n                buffer1.and(f);\n                buffer2.assign(e);\n                buffer2.not();\n                buffer2.and(g);\n                buffer1.xor(buffer2);\n                t1.add(buffer1);\n                t1.add(this._k[Number.parseInt(j.toString(), 10)]);\n                t1.add(w[Number.parseInt(j.toString(), 10)]);\n                this._sigma(t2, a, buffer2);\n                buffer1.assign(a);\n                buffer1.and(b);\n                buffer2.assign(a);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                buffer2.assign(b);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                t2.add(buffer1);\n                buffer3 = h;\n                h = g;\n                g = f;\n                f = e;\n                d.add(t1);\n                e = d;\n                d = c;\n                c = b;\n                b = a;\n                buffer3.assign(t1);\n                buffer3.add(t2);\n                a = buffer3;\n            }\n            h0.add(a);\n            h1.add(b);\n            h2.add(c);\n            h3.add(d);\n            h4.add(e);\n            h5.add(f);\n            h6.add(g);\n            h7.add(h);\n        }\n        var result;\n        if (!isMode384) {\n            result = new Uint8Array(64);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n            h6.copyTo(result, 48);\n            h7.copyTo(result, 56);\n        }\n        else {\n            result = new Uint8Array(48);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n        }\n        return result;\n    };\n    return _Sha512;\n}());\nexport { _Sha512 };\nvar _Word64 = /** @class */ (function () {\n    function _Word64(high, low) {\n        this.high = high | 0;\n        this.low = low | 0;\n    }\n    _Word64.prototype.and = function (word) {\n        this.high &= word.high;\n        this.low &= word.low;\n    };\n    _Word64.prototype.or = function (word) {\n        this.high |= word.high;\n        this.low |= word.low;\n    };\n    _Word64.prototype.not = function () {\n        this.high = ~this.high;\n        this.low = ~this.low;\n    };\n    _Word64.prototype.xor = function (word) {\n        this.high ^= word.high;\n        this.low ^= word.low;\n    };\n    _Word64.prototype.shiftRight = function (places) {\n        if (places >= 32) {\n            this.low = (this.high >>> (places - 32)) | 0;\n            this.high = 0;\n        }\n        else {\n            this.low = (this.low >>> places) | (this.high << (32 - places));\n            this.high = (this.high >>> places) | 0;\n        }\n    };\n    _Word64.prototype.shiftLeft = function (places) {\n        if (places >= 32) {\n            this.high = this.low << (places - 32);\n            this.low = 0;\n        }\n        else {\n            this.high = (this.high << places) | (this.low >>> (32 - places));\n            this.low <<= places;\n        }\n    };\n    _Word64.prototype.rotateRight = function (places) {\n        var low;\n        var high;\n        if (places & 32) {\n            high = this.low;\n            low = this.high;\n        }\n        else {\n            low = this.low;\n            high = this.high;\n        }\n        places &= 31;\n        this.low = (low >>> places) | (high << (32 - places));\n        this.high = (high >>> places) | (low << (32 - places));\n    };\n    _Word64.prototype.add = function (word) {\n        var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n        var highAdd = (this.high >>> 0) + (word.high >>> 0);\n        if (lowAdd > 0xffffffff) {\n            highAdd += 1;\n        }\n        this.low = lowAdd | 0;\n        this.high = highAdd | 0;\n    };\n    _Word64.prototype.copyTo = function (bytes, offset) {\n        bytes[Number.parseInt(offset.toString(), 10)] = (this.high >>> 24) & 0xff;\n        bytes[offset + 1] = (this.high >> 16) & 0xff;\n        bytes[offset + 2] = (this.high >> 8) & 0xff;\n        bytes[offset + 3] = this.high & 0xff;\n        bytes[offset + 4] = (this.low >>> 24) & 0xff;\n        bytes[offset + 5] = (this.low >> 16) & 0xff;\n        bytes[offset + 6] = (this.low >> 8) & 0xff;\n        bytes[offset + 7] = this.low & 0xff;\n    };\n    _Word64.prototype.assign = function (word) {\n        this.high = word.high;\n        this.low = word.low;\n    };\n    return _Word64;\n}());\nexport { _Word64 };\nvar _EncryptionKey = /** @class */ (function () {\n    function _EncryptionKey() {\n    }\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha256\", {\n        get: function () {\n            if (typeof this._sha256Obj === 'undefined') {\n                this._sha256Obj = new _Sha256();\n            }\n            return this._sha256Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha512\", {\n        get: function () {\n            if (typeof this._sha512Obj === 'undefined') {\n                this._sha512Obj = new _Sha512();\n            }\n            return this._sha512Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _EncryptionKey;\n}());\nexport { _EncryptionKey };\n// PDF17 encryption support\nvar _BasicEncryption = /** @class */ (function (_super) {\n    __extends(_BasicEncryption, _super);\n    function _BasicEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _BasicEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _BasicEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, userPassword);\n    };\n    _BasicEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _BasicEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    return _BasicEncryption;\n}(_EncryptionKey));\nexport { _BasicEncryption };\n// PDF20 encryption support\nvar _AdvancedEncryption = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption, _super);\n    function _AdvancedEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _AdvancedEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._hash(password, hashData, userBytes);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _AdvancedEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._hash(password, hashData, new Uint8Array([]));\n        return _areArrayEqual(result, userPassword);\n    };\n    _AdvancedEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._hash(password, hashData, userBytes);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._hash(password, hashData, new Uint8Array([]));\n        var cipher = new _AdvancedEncryption256Cipher(key);\n        return cipher._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._hash = function (password, input, userBytes) {\n        var data = this._sha256._hash(input, 0, input.length).subarray(0, 32);\n        var encrypted = new Uint8Array([0]);\n        var i = 0;\n        while (i < 64 || encrypted[encrypted.length - 1] > i - 32) {\n            var combinedLength = password.length + data.length + userBytes.length;\n            var combinedArray = new Uint8Array(combinedLength);\n            var writeOffset = 0;\n            combinedArray.set(password, writeOffset);\n            writeOffset += password.length;\n            combinedArray.set(data, writeOffset);\n            writeOffset += data.length;\n            combinedArray.set(userBytes, writeOffset);\n            var k1 = new Uint8Array(combinedLength * 64);\n            for (var j = 0, pos = 0; j < 64; j++) {\n                k1.set(combinedArray, pos);\n                pos += combinedLength;\n            }\n            var cipher = new _AdvancedEncryption128Cipher(data.subarray(0, 16));\n            encrypted = cipher._encrypt(k1, data.subarray(16, 32));\n            var remainder = 0;\n            for (var z = 0; z < 16; z++) {\n                remainder *= 256 % 3;\n                remainder %= 3;\n                remainder += (encrypted[Number.parseInt(z.toString(), 10)] >>> 0) % 3;\n                remainder %= 3;\n            }\n            if (remainder === 2) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length);\n            }\n            else if (remainder === 1) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length, true);\n            }\n            else if (remainder === 0) {\n                data = this._sha256._hash(encrypted, 0, encrypted.length);\n            }\n            i++;\n        }\n        return data.subarray(0, 32);\n    };\n    return _AdvancedEncryption;\n}(_EncryptionKey));\nexport { _AdvancedEncryption };\nvar _Cipher = /** @class */ (function () {\n    function _Cipher() {\n    }\n    return _Cipher;\n}());\nexport { _Cipher };\nvar _NormalCipherFour = /** @class */ (function (_super) {\n    __extends(_NormalCipherFour, _super);\n    function _NormalCipherFour(key) {\n        var _this = _super.call(this) || this;\n        _this._a = 0;\n        _this._b = 0;\n        var s = new Uint8Array(256);\n        for (var i = 0; i < 256; ++i) {\n            s[Number.parseInt(i.toString(), 10)] = i;\n        }\n        var keyLength = key.length;\n        for (var i = 0, j = 0; i < 256; ++i) {\n            var buffer = s[Number.parseInt(i.toString(), 10)];\n            j = (j + buffer + key[i % keyLength]) & 0xff;\n            s[Number.parseInt(i.toString(), 10)] = s[Number.parseInt(j.toString(), 10)];\n            s[Number.parseInt(j.toString(), 10)] = buffer;\n        }\n        _this._s = s;\n        return _this;\n    }\n    _NormalCipherFour.prototype._encryptBlock = function (data) {\n        var a = this._a;\n        var b = this._b;\n        var s = this._s;\n        var n = data.length;\n        var output = new Uint8Array(n);\n        for (var i = 0; i < n; ++i) {\n            a = (a + 1) & 0xff;\n            var first = s[Number.parseInt(a.toString(), 10)];\n            b = (b + first) & 0xff;\n            var second = s[Number.parseInt(b.toString(), 10)];\n            s[Number.parseInt(a.toString(), 10)] = second;\n            s[Number.parseInt(b.toString(), 10)] = first;\n            output[Number.parseInt(i.toString(), 10)] = data[Number.parseInt(i.toString(), 10)] ^ s[(first + second) & 0xff];\n        }\n        this._a = a;\n        this._b = b;\n        return output;\n    };\n    _NormalCipherFour.prototype._decryptBlock = function (data) {\n        return this._encryptBlock(data);\n    };\n    _NormalCipherFour.prototype._encrypt = function (data) {\n        return this._encryptBlock(data);\n    };\n    return _NormalCipherFour;\n}(_Cipher));\nexport { _NormalCipherFour };\nvar _AdvancedEncryptionBaseCipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryptionBaseCipher, _super);\n    function _AdvancedEncryptionBaseCipher() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._buffer = new Uint8Array(16);\n        _this._position = 0;\n        _this._s = new Uint8Array([\n            0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b,\n            0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,\n            0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26,\n            0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n            0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2,\n            0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,\n            0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed,\n            0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n            0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f,\n            0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,\n            0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec,\n            0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n            0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14,\n            0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,\n            0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d,\n            0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n            0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f,\n            0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,\n            0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11,\n            0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n            0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f,\n            0xb0, 0x54, 0xbb, 0x16\n        ]);\n        _this._inverseS = new Uint8Array([\n            0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e,\n            0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87,\n            0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32,\n            0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,\n            0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49,\n            0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16,\n            0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50,\n            0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,\n            0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05,\n            0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02,\n            0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41,\n            0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,\n            0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8,\n            0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89,\n            0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b,\n            0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,\n            0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59,\n            0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d,\n            0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d,\n            0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,\n            0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63,\n            0x55, 0x21, 0x0c, 0x7d\n        ]);\n        _this._mix = new Uint32Array([\n            0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927,\n            0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45,\n            0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb,\n            0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381,\n            0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf,\n            0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66,\n            0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28,\n            0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012,\n            0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec,\n            0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e,\n            0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd,\n            0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7,\n            0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89,\n            0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b,\n            0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815,\n            0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f,\n            0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa,\n            0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8,\n            0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36,\n            0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c,\n            0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742,\n            0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea,\n            0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4,\n            0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e,\n            0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360,\n            0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502,\n            0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87,\n            0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd,\n            0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3,\n            0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621,\n            0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f,\n            0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55,\n            0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26,\n            0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844,\n            0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba,\n            0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480,\n            0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce,\n            0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67,\n            0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929,\n            0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713,\n            0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed,\n            0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f,\n            0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3\n        ]);\n        return _this;\n    }\n    Object.defineProperty(_AdvancedEncryptionBaseCipher.prototype, \"_mixCol\", {\n        get: function () {\n            if (typeof this._mixC === 'undefined') {\n                this._mixC = new Uint8Array(256);\n                for (var i = 0; i < 256; i++) {\n                    if (i < 128) {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = i << 1;\n                    }\n                    else {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = (i << 1) ^ 0x1b;\n                    }\n                }\n            }\n            return this._mixC;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _AdvancedEncryptionBaseCipher.prototype._decrypt = function (input, key) {\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n            t = state[13];\n            state[13] = state[9];\n            state[9] = state[5];\n            state[5] = state[1];\n            state[1] = t;\n            t = state[14];\n            u = state[10];\n            state[14] = state[6];\n            state[10] = state[2];\n            state[6] = t;\n            state[2] = u;\n            t = state[15];\n            u = state[11];\n            v = state[7];\n            state[15] = state[3];\n            state[11] = t;\n            state[7] = u;\n            state[3] = v;\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = this._mix[state[Number.parseInt(j.toString(), 10)]];\n                var s1 = this._mix[state[j + 1]];\n                var s2 = this._mix[state[j + 2]];\n                var s3 = this._mix[state[j + 3]];\n                t = s0 ^ (s1 >>> 8) ^ (s1 << 24) ^ (s2 >>> 16) ^ (s2 << 16) ^ (s3 >>> 24) ^ (s3 << 8);\n                state[Number.parseInt(j.toString(), 10)] = (t >>> 24) & 0xff;\n                state[j + 1] = (t >> 16) & 0xff;\n                state[j + 2] = (t >> 8) & 0xff;\n                state[j + 3] = t & 0xff;\n            }\n        }\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encryptBlock = function (input, key) {\n        var s = this._s;\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        for (var i = 1; i < this._cyclesOfRepetition; i++) {\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n            }\n            v = state[1];\n            state[1] = state[5];\n            state[5] = state[9];\n            state[9] = state[13];\n            state[13] = v;\n            v = state[2];\n            u = state[6];\n            state[2] = state[10];\n            state[6] = state[14];\n            state[10] = v;\n            state[14] = u;\n            v = state[3];\n            u = state[7];\n            t = state[11];\n            state[3] = state[15];\n            state[7] = v;\n            state[11] = u;\n            state[15] = t;\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = state[j + 0];\n                var s1 = state[j + 1];\n                var s2 = state[j + 2];\n                var s3 = state[j + 3];\n                t = s0 ^ s1 ^ s2 ^ s3;\n                state[j + 0] ^= t ^ this._mixCol[s0 ^ s1];\n                state[j + 1] ^= t ^ this._mixCol[s1 ^ s2];\n                state[j + 2] ^= t ^ this._mixCol[s2 ^ s3];\n                state[j + 3] ^= t ^ this._mixCol[s3 ^ s0];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n        }\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlockHelper = function (data, finalize) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        var iv = this._iv;\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            var plain = this._decrypt(buffer, this._key);\n            for (var j = 0; j < 16; ++j) {\n                plain[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            iv = buffer;\n            result.push(plain);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        if (finalize) {\n            var lastBlock = result[result.length - 1];\n            var length_1 = lastBlock[15];\n            if (length_1 <= 16) {\n                for (var i = 15, ii = 16 - length_1; i >= ii; --i) {\n                    if (lastBlock[Number.parseInt(i.toString(), 10)] !== length_1) {\n                        length_1 = 0;\n                        break;\n                    }\n                }\n                outputLength -= length_1;\n                result[result.length - 1] = lastBlock.subarray(0, 16 - length_1);\n            }\n        }\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlock = function (data, finalize, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        if (iv) {\n            this._iv = iv;\n        }\n        else {\n            for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n                buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            }\n            if (bufferLength < 16) {\n                this._bufferLength = bufferLength;\n                return new Uint8Array(0);\n            }\n            this._iv = buffer;\n            data = data.subarray(16);\n        }\n        this._buffer = new Uint8Array(16);\n        this._bufferLength = 0;\n        this._decryptBlock = this._decryptBlockHelper;\n        return this._decryptBlock(data, finalize);\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encrypt = function (data, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        if (!iv) {\n            iv = new Uint8Array(16);\n        }\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            for (var j = 0; j < 16; ++j) {\n                buffer[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            var cipher = this._encryptBlock(buffer, this._key);\n            iv = cipher;\n            result.push(cipher);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    return _AdvancedEncryptionBaseCipher;\n}(_Cipher));\nexport { _AdvancedEncryptionBaseCipher };\nvar _AdvancedEncryption128Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption128Cipher, _super);\n    function _AdvancedEncryption128Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 10;\n        _this._keySize = 160;\n        _this._key = new Uint8Array([\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,\n            0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6,\n            0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72,\n            0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc,\n            0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10,\n            0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e,\n            0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5,\n            0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94,\n            0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02,\n            0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d,\n            0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d,\n            0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f,\n            0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb,\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d\n        ]);\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption128Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 176;\n        var s = this._s;\n        var rcon = this._key;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        for (var j = 16, i = 1; j < count; ++i) {\n            var t1 = result[j - 3];\n            var t2 = result[j - 2];\n            var t3 = result[j - 1];\n            var t4 = result[j - 4];\n            t1 = s[Number.parseInt(t1.toString(), 10)];\n            t2 = s[Number.parseInt(t2.toString(), 10)];\n            t3 = s[Number.parseInt(t3.toString(), 10)];\n            t4 = s[Number.parseInt(t4.toString(), 10)];\n            t1 ^= rcon[Number.parseInt(i.toString(), 10)];\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 16];\n                result[j + 1] = t2 ^= result[j - 15];\n                result[j + 2] = t3 ^= result[j - 14];\n                result[j + 3] = t4 ^= result[j - 13];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption128Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption128Cipher };\nvar _AdvancedEncryption256Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption256Cipher, _super);\n    function _AdvancedEncryption256Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 14;\n        _this._keySize = 224;\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption256Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 240;\n        var s = this._s;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        var r = 1;\n        var t1;\n        var t2;\n        var t3;\n        var t4;\n        for (var j = 32, i = 1; j < count; ++i) {\n            if (j % 32 === 16) {\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n            }\n            else if (j % 32 === 0) {\n                t1 = result[j - 3];\n                t2 = result[j - 2];\n                t3 = result[j - 1];\n                t4 = result[j - 4];\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n                t1 ^= r;\n                r = r << 1;\n                if (r >= 256) {\n                    r = (r ^ 0x1b) & 0xff;\n                }\n            }\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 32];\n                result[j + 1] = t2 ^= result[j - 31];\n                result[j + 2] = t3 ^= result[j - 30];\n                result[j + 3] = t4 ^= result[j - 29];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption256Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption256Cipher };\nvar _NullCipher = /** @class */ (function (_super) {\n    __extends(_NullCipher, _super);\n    function _NullCipher() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _NullCipher.prototype._decryptBlock = function (data) {\n        return data;\n    };\n    _NullCipher.prototype._encrypt = function (data) {\n        return data;\n    };\n    return _NullCipher;\n}(_Cipher));\nexport { _NullCipher };\nvar _CipherTransform = /** @class */ (function () {\n    function _CipherTransform(stringCipher, streamCipher) {\n        this._stringCipher = stringCipher;\n        this._streamCipher = streamCipher;\n    }\n    _CipherTransform.prototype.createStream = function (stream, length) {\n        return new _PdfDecryptStream(stream, length, this._streamCipher);\n    };\n    _CipherTransform.prototype.decryptString = function (s) {\n        return _bytesToString(this._stringCipher._decryptBlock(_stringToBytes(s, false, true), true));\n    };\n    _CipherTransform.prototype.encryptString = function (s) {\n        if (this._stringCipher instanceof _AdvancedEncryptionBaseCipher) {\n            var length_2 = s.length;\n            var pad = 16 - (length_2 % 16);\n            s += String.fromCharCode(pad).repeat(pad);\n            var iv = new Uint8Array(16);\n            if (typeof crypto !== 'undefined') {\n                crypto.getRandomValues(iv);\n            }\n            else {\n                for (var i = 0; i < 16; i++) {\n                    iv[Number.parseInt(i.toString(), 10)] = Math.floor(256 * Math.random());\n                }\n            }\n            var data = this._stringCipher._encrypt(_stringToBytes(s, false, true), iv);\n            var buffer = new Uint8Array(16 + data.length);\n            buffer.set(iv);\n            buffer.set(data, 16);\n            return _bytesToString(buffer);\n        }\n        return _bytesToString(this._stringCipher._encrypt(_stringToBytes(s, false, true)));\n    };\n    return _CipherTransform;\n}());\nexport { _CipherTransform };\n","import { _PdfStream } from './base-stream';\nimport { _PdfDictionary, _PdfReferenceSet, _isCommand, _PdfReference, _PdfName } from './pdf-primitives';\nimport { BaseException, FormatError, _escapePdfName, _bytesToString, ParserEndOfFileException, _numberToString, _stringToPdfString, _getSize, _stringToBigEndianBytes } from './utils';\nimport { _PdfParser, _PdfLexicalOperator } from './pdf-parser';\nimport { _PdfBaseStream } from './base-stream';\nimport { PdfCrossReferenceType } from './enumerator';\nimport { _MD5, _PdfEncryptor } from './security/encryptor';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\nvar _PdfCrossReference = /** @class */ (function () {\n    function _PdfCrossReference(document, password) {\n        this._version = '';\n        this._newLine = '\\r\\n';\n        this._password = password;\n        this._document = document;\n        this._stream = document._stream;\n        this._entries = [];\n        this._crossReferencePosition = Object.create(null);\n        this._cacheMap = new Map(); // eslint-disable-line\n        this._pendingRefs = new _PdfReferenceSet();\n    }\n    _PdfCrossReference.prototype._setStartXRef = function (startXRef) {\n        this._startXRefQueue = [startXRef];\n        this._prevStartXref = startXRef;\n        if (typeof this._prevXRefOffset === 'undefined' || this._prevXRefOffset === null) {\n            this._prevXRefOffset = startXRef;\n        }\n    };\n    _PdfCrossReference.prototype._parse = function (recoveryMode) {\n        var trailerDictionary;\n        if (!recoveryMode) {\n            trailerDictionary = this._readXRef();\n        }\n        else {\n            trailerDictionary = this._indexObjects();\n        }\n        trailerDictionary.assignXref(this);\n        this._nextReferenceNumber = trailerDictionary.get('Size');\n        this._trailer = trailerDictionary;\n        var encrypt = trailerDictionary.get('Encrypt');\n        if (encrypt) {\n            this._document._isEncrypted = true;\n            this._ids = trailerDictionary.get('ID');\n            this._permissionFlags = encrypt.get('P');\n            var fileId = this._ids && this._ids.length ? this._ids[0] : '';\n            encrypt.suppressEncryption = true;\n            this._encrypt = new _PdfEncryptor(encrypt, fileId, this._password);\n            this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.stream;\n            this._document._isUserPassword = this._encrypt._isUserPassword;\n            this._document._encryptOnlyAttachment = this._encrypt._encryptOnlyAttachment;\n            if (this._encrypt._encryptOnlyAttachment) {\n                this._document._hasUserPasswordOnly = true;\n                this._document._encryptMetaData = false;\n            }\n            else {\n                this._document._hasUserPasswordOnly = this._encrypt._hasUserPasswordOnly;\n                this._document._encryptMetaData = encrypt.has('EncryptMetadata') ? encrypt.get('EncryptMetadata') : true;\n            }\n        }\n        var hasRoot = false;\n        var root;\n        try {\n            root = trailerDictionary.get('Root');\n        }\n        catch (e) {\n            throw new BaseException('Invalid cross reference', 'XRefParseException');\n        }\n        if (root) {\n            try {\n                var pagesEntry = root.get('Pages');\n                if (pagesEntry) {\n                    this._root = root;\n                    hasRoot = true;\n                }\n            }\n            catch (ex) {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n        if (!hasRoot) {\n            if (!recoveryMode) {\n                throw new BaseException('Invalid cross reference', 'XRefParseException');\n            }\n            else {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n    };\n    _PdfCrossReference.prototype._getEntry = function (i) {\n        var xrefEntry = this._entries[i]; // eslint-disable-line\n        if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n            return xrefEntry;\n        }\n        return null;\n    };\n    _PdfCrossReference.prototype._fetch = function (ref, suppressEncryption) {\n        var entry; // eslint-disable-line\n        if (!(ref instanceof _PdfReference)) {\n            throw new Error('ref object is not a reference');\n        }\n        var objectNumber = ref.objectNumber;\n        var cacheEntry = this._cacheMap.get(ref); // eslint-disable-line\n        if (typeof cacheEntry !== 'undefined') {\n            if (cacheEntry instanceof _PdfDictionary && !cacheEntry.objId) {\n                cacheEntry.objId = objectNumber;\n            }\n            return cacheEntry;\n        }\n        var xrefEntry = this._getEntry(objectNumber);\n        if (xrefEntry === null) {\n            this._cacheMap.set(ref, xrefEntry);\n            return xrefEntry;\n        }\n        if (this._pendingRefs.has(ref)) {\n            this._pendingRefs.remove(ref);\n            throw new Error('circular reference');\n        }\n        this._pendingRefs.put(ref);\n        try {\n            if (xrefEntry.uncompressed) {\n                entry = this._fetchUncompressed(ref, xrefEntry, suppressEncryption);\n            }\n            else {\n                entry = this._fetchCompressed(ref, xrefEntry);\n            }\n            this._pendingRefs.remove(ref);\n        }\n        catch (ex) {\n            this._pendingRefs.remove(ref);\n            throw ex;\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchUncompressed = function (reference, xrefEntry, suppressEncryption) {\n        var generationNumber = reference.generationNumber;\n        var objectNumber = reference.objectNumber;\n        if (xrefEntry.gen !== generationNumber) {\n            throw new BaseException(\"Inconsistent generation in XRef: \" + reference, 'XRefEntryException');\n        }\n        var stream = this._stream.makeSubStream(xrefEntry.offset + this._stream.start, undefined);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        if (obj1 !== objectNumber || obj2 !== generationNumber || typeof obj3 === 'undefined') {\n            throw new BaseException(\"Bad (uncompressed) XRef entry: \" + reference, 'XRefEntryException');\n        }\n        var entry; // eslint-disable-line\n        if (this._encrypt && !suppressEncryption) {\n            entry = parser.getObject(this._encrypt._createCipherTransform(reference.objectNumber, reference.generationNumber));\n        }\n        else {\n            entry = parser.getObject();\n        }\n        if (!(entry instanceof _PdfBaseStream)) {\n            this._cacheMap.set(reference, entry);\n        }\n        if (entry instanceof _PdfDictionary) {\n            entry.objId = reference.toString();\n        }\n        else if (entry instanceof _PdfBaseStream) {\n            entry.dictionary.objId = reference.toString();\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchCompressed = function (ref, xrefEntry) {\n        var tableOffset = xrefEntry.offset;\n        var stream = this._fetch(_PdfReference.get(tableOffset, 0));\n        if (typeof stream === 'undefined') {\n            throw new FormatError('bad ObjStm stream');\n        }\n        var first = stream.dictionary.get('First');\n        var n = stream.dictionary.get('N');\n        var gen = ref.generationNumber;\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n            throw new FormatError('invalid first and n parameters for ObjStm stream');\n        }\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n        var nums = new Array(n);\n        var offsets = new Array(n);\n        for (var i = 0; i < n; ++i) {\n            var value = parser.getObject();\n            if (!Number.isInteger(value)) {\n                throw new FormatError(\"invalid object number in the ObjStm stream: \" + value);\n            }\n            var offset = parser.getObject();\n            if (!Number.isInteger(offset)) {\n                throw new FormatError(\"invalid object offset in the ObjStm stream: \" + offset);\n            }\n            nums[i] = value; // eslint-disable-line\n            offsets[i] = offset; // eslint-disable-line\n        }\n        var start = (stream.start || 0) + first;\n        var entries = new Array(n); // eslint-disable-line\n        for (var i = 0; i < n; ++i) {\n            var length_1 = (i < n - 1 ? (offsets[i + 1] - offsets[i]) : undefined); // eslint-disable-line\n            if (length_1 < 0) {\n                throw new FormatError('Invalid offset in the ObjStm stream.');\n            }\n            parser = new _PdfParser(new _PdfLexicalOperator(stream.makeSubStream(start + offsets[i], length_1, stream.dictionary)), this, true); // eslint-disable-line\n            var obj = parser.getObject(); // eslint-disable-line\n            entries[i] = obj; // eslint-disable-line\n            if (obj instanceof _PdfBaseStream) {\n                continue;\n            }\n            var value = nums[i]; // eslint-disable-line\n            var entry = this._entries[value]; // eslint-disable-line\n            if (entry && entry.offset === tableOffset && entry.gen === i) {\n                var objId = value + \" \" + gen;\n                this._cacheMap.set(_PdfReference.get(value, gen), obj);\n                if (obj instanceof _PdfDictionary) {\n                    obj.objId = objId;\n                }\n            }\n        }\n        var result = entries[xrefEntry.gen]; // eslint-disable-line\n        if (typeof result === 'undefined') {\n            throw new BaseException(\"Bad (compressed) XRef entry: \" + ref, 'XRefEntryException');\n        }\n        return result;\n    };\n    _PdfCrossReference.prototype._readXRef = function (recoveryMode) {\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        var stream = this._stream;\n        var startXRefParsedCache = new Set();\n        try {\n            while (this._startXRefQueue.length) {\n                var startXRef = this._startXRefQueue[0];\n                if (this._prevStartXref < startXRef) {\n                    this._prevStartXref = startXRef;\n                }\n                if (startXRefParsedCache.has(startXRef)) {\n                    this._startXRefQueue.shift();\n                    continue;\n                }\n                startXRefParsedCache.add(startXRef);\n                stream.position = startXRef + stream.start;\n                var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n                var obj = parser.getObject(); // eslint-disable-line\n                var dictionary = void 0;\n                if (_isCommand(obj, 'xref')) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.table;\n                    }\n                    dictionary = this._processXRefTable(parser);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    obj = dictionary.get('XRefStm');\n                    if (Number.isInteger(obj)) {\n                        var position = obj; // eslint-disable-line\n                        if (!(position in this._crossReferencePosition)) {\n                            this._crossReferencePosition[position] = 1; // eslint-disable-line\n                            this._startXRefQueue.push(position);\n                        }\n                    }\n                }\n                else if (Number.isInteger(obj)) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.stream;\n                    }\n                    var gen = parser.getObject();\n                    var command = parser.getObject();\n                    obj = parser.getObject();\n                    if (typeof gen === 'undefined' ||\n                        !Number.isInteger(gen) ||\n                        !_isCommand(command, 'obj') ||\n                        !(obj instanceof _PdfBaseStream)) {\n                        throw new FormatError('Invalid cross reference stream');\n                    }\n                    dictionary = this._processXRefStream(obj);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    if (!dictionary) {\n                        throw new FormatError('Failed to read XRef stream');\n                    }\n                }\n                else {\n                    throw new FormatError('Invalid XRef stream header');\n                }\n                obj = dictionary.get('Prev');\n                if (Number.isInteger(obj)) {\n                    this._startXRefQueue.push(obj);\n                }\n                else if (obj instanceof _PdfReference) {\n                    this._startXRefQueue.push(obj.objectNumber);\n                }\n                this._startXRefQueue.shift();\n            }\n            return this._topDictionary;\n        }\n        catch (e) {\n            this._startXRefQueue.shift();\n        }\n        if (recoveryMode) {\n            return undefined;\n        }\n        throw new BaseException('Invalid cross reference', 'XRefParseException');\n    };\n    _PdfCrossReference.prototype._readToken = function (data, offset) {\n        var lf = 0xa;\n        var cr = 0xd;\n        var lt = 0x3c;\n        var token = '';\n        var ch = data[offset]; // eslint-disable-line\n        while (ch !== lf && ch !== cr && ch !== lt) {\n            if (++offset >= data.length) {\n                break;\n            }\n            token += String.fromCharCode(ch);\n            ch = data[offset]; // eslint-disable-line\n        }\n        return token;\n    };\n    _PdfCrossReference.prototype._skipUntil = function (data, offset, what) {\n        var length = what.length;\n        var dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n            var i = 0;\n            while (i < length && data[offset + i] === what[i]) { // eslint-disable-line\n                ++i;\n            }\n            if (i >= length) {\n                break;\n            }\n            offset++;\n            skipped++;\n        }\n        return skipped;\n    };\n    _PdfCrossReference.prototype._indexObjects = function () {\n        var tab = 0x9;\n        var lf = 0xa;\n        var cr = 0xd;\n        var space = 0x20;\n        var percent = 0x25;\n        var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n        var endobjRegExp = /\\bendobj[\\b\\s]$/;\n        var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s<])$/;\n        var checkContentLength = 25;\n        var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n        var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n        var objBytes = new Uint8Array([111, 98, 106]);\n        var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n        this._entries.length = 0;\n        this._cacheMap.clear();\n        var stream = this._stream;\n        stream.position = 0;\n        var buffer = stream.getBytes();\n        var length = buffer.length;\n        var position = stream.start;\n        var trailers = [];\n        var crossReferencePosition = [];\n        while (position < length) {\n            var ch = buffer[position]; // eslint-disable-line\n            if (ch === tab || ch === lf || ch === cr || ch === space) {\n                ++position;\n                continue;\n            }\n            if (ch === percent) {\n                do {\n                    ++position;\n                    if (position >= length) {\n                        break;\n                    }\n                    ch = buffer[position]; // eslint-disable-line\n                } while (ch !== lf && ch !== cr);\n                continue;\n            }\n            var token = this._readToken(buffer, position);\n            var m = void 0; // eslint-disable-line\n            if (token.startsWith('xref') && (token.length === 4 || /\\s/.test(token[4]))) {\n                position += this._skipUntil(buffer, position, trailerBytes);\n                trailers.push(position);\n                position += this._skipUntil(buffer, position, startxrefBytes);\n            }\n            else {\n                m = objRegExp.exec(token);\n                if (m) {\n                    var objectNumber = Number.parseInt(m[1]) | 0; // eslint-disable-line\n                    var gen = Number.parseInt(m[2]) | 0; // eslint-disable-line\n                    var contentLength = void 0;\n                    var startPos = position + token.length;\n                    var updateEntries = false;\n                    if (!this._entries[objectNumber]) { // eslint-disable-line\n                        updateEntries = true;\n                    }\n                    else if (this._entries[objectNumber].gen === gen) { // eslint-disable-line\n                        try {\n                            var subStream = stream.makeSubStream(startPos, stream.length - startPos);\n                            var lexicalOperator = new _PdfLexicalOperator(subStream);\n                            var parser = new _PdfParser(lexicalOperator, null);\n                            parser.getObject();\n                            updateEntries = true;\n                        }\n                        catch (ex) {\n                            updateEntries = !(ex instanceof ParserEndOfFileException);\n                        }\n                    }\n                    if (updateEntries) {\n                        var info = new _PdfObjectInformation();\n                        info.offset = position - stream.start;\n                        info.gen = gen;\n                        info.uncompressed = true;\n                        this._entries[objectNumber] = info; // eslint-disable-line\n                    }\n                    while (startPos < buffer.length) {\n                        var endPos = startPos + this._skipUntil(buffer, startPos, objBytes) + 4;\n                        contentLength = endPos - position;\n                        var checkPos = Math.max(endPos - checkContentLength, startPos);\n                        var tokenStr = _bytesToString(buffer.subarray(checkPos, endPos));\n                        if (endobjRegExp.test(tokenStr)) {\n                            break;\n                        }\n                        else {\n                            var objToken = nestedObjRegExp.exec(tokenStr); // eslint-disable-line\n                            if (objToken && objToken[1]) {\n                                contentLength -= objToken[1].length;\n                                break;\n                            }\n                        }\n                        startPos = endPos;\n                    }\n                    var content = buffer.subarray(position, position + contentLength);\n                    var xrefTagOffset = this._skipUntil(content, 0, xrefBytes);\n                    if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n                        crossReferencePosition.push(position - stream.start);\n                        this._crossReferencePosition[position - stream.start] = 1;\n                    }\n                    position += contentLength;\n                }\n                else if (token.startsWith('trailer') && (token.length === 7 || /\\s/.test(token[7]))) {\n                    trailers.push(position);\n                    position += this._skipUntil(buffer, position, startxrefBytes);\n                }\n                else {\n                    position += token.length + 1;\n                }\n            }\n        }\n        for (var i = 0; i < crossReferencePosition.length; ++i) {\n            this._startXRefQueue.push(crossReferencePosition[i]); // eslint-disable-line\n            this._readXRef(true);\n        }\n        var trailerDict;\n        for (var i = 0; i < trailers.length; ++i) {\n            stream.position = trailers[i]; // eslint-disable-line\n            var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true, true);\n            var obj = parser.getObject(); // eslint-disable-line\n            if (!_isCommand(obj, 'trailer')) {\n                continue;\n            }\n            var dictionary = parser.getObject(); // eslint-disable-line\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            try {\n                var rootDict = dictionary.get('Root'); // eslint-disable-line\n                if (!(rootDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesDict = rootDict.get('Pages'); // eslint-disable-line\n                if (!(pagesDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesCount = pagesDict.get('Count');\n                if (typeof pagesCount === 'undefined' || !Number.isInteger(pagesCount)) {\n                    continue;\n                }\n            }\n            catch (ex) {\n                continue;\n            }\n            if (dictionary.has('ID')) {\n                return dictionary;\n            }\n            trailerDict = dictionary;\n        }\n        if (trailerDict) {\n            return trailerDict;\n        }\n        if (this._topDictionary) {\n            return this._topDictionary;\n        }\n        throw new BaseException('Invalid PDF structure.', 'InvalidPDFException');\n    };\n    _PdfCrossReference.prototype._processXRefTable = function (parser) {\n        if (typeof this._tableState === 'undefined') {\n            var tableState = new _PdfCrossTableState();\n            tableState.entryNum = 0;\n            tableState.streamPos = parser.lexicalOperator.stream.position;\n            tableState.parserBuf1 = parser.first;\n            tableState.parserBuf2 = parser.second;\n            this._tableState = tableState;\n        }\n        var obj = this._readXRefTable(parser);\n        if (!_isCommand(obj, 'trailer')) {\n            throw new FormatError('Invalid XRef table: could not find trailer dictionary');\n        }\n        var topDictionary = parser.getObject(); // eslint-disable-line\n        var dictionary;\n        if (topDictionary) {\n            if (topDictionary instanceof _PdfDictionary) {\n                dictionary = topDictionary;\n            }\n            else if (topDictionary instanceof _PdfBaseStream && topDictionary.dictionary) {\n                dictionary = topDictionary.dictionary;\n            }\n        }\n        if (!dictionary) {\n            throw new FormatError('Invalid cross reference: could not parse trailer dictionary');\n        }\n        this._tableState = undefined;\n        return dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefTable = function (parser) {\n        var stream = parser.lexicalOperator.stream;\n        stream.position = this._tableState.streamPos;\n        parser.first = this._tableState.parserBuf1;\n        parser.second = this._tableState.parserBuf2;\n        var obj; // eslint-disable-line\n        while (true) { // eslint-disable-line\n            if (typeof this._tableState.firstEntryNum === 'undefined' || typeof this._tableState.entryCount === 'undefined') {\n                obj = parser.getObject();\n                if (_isCommand(obj, 'trailer')) {\n                    break;\n                }\n                this._tableState.firstEntryNum = obj;\n                this._tableState.entryCount = parser.getObject();\n            }\n            var first = this._tableState.firstEntryNum;\n            var count = this._tableState.entryCount;\n            if (!Number.isInteger(first) || !Number.isInteger(count)) {\n                throw new FormatError('Invalid cross reference: wrong types in subsection header');\n            }\n            for (var i = this._tableState.entryNum; i < count; i++) {\n                this._tableState.streamPos = stream.position;\n                this._tableState.entryNum = i;\n                this._tableState.parserBuf1 = parser.first;\n                this._tableState.parserBuf2 = parser.second;\n                var entry = new _PdfObjectInformation();\n                entry.offset = parser.getObject();\n                entry.gen = parser.getObject();\n                var type = parser.getObject();\n                if (type) {\n                    switch (type.command) {\n                        case 'f':\n                            entry.free = true;\n                            break;\n                        case 'n':\n                            entry.uncompressed = true;\n                            break;\n                    }\n                }\n                if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n                    throw new FormatError(\"Invalid entry in cross reference subsection: \" + first + \", \" + count);\n                }\n                if (i === 0 && entry.free && first === 1) {\n                    first = 0;\n                }\n                if (!this._entries[i + first]) {\n                    this._entries[i + first] = entry;\n                }\n            }\n            this._tableState.entryNum = 0;\n            this._tableState.streamPos = stream.position;\n            this._tableState.parserBuf1 = parser.first;\n            this._tableState.parserBuf2 = parser.second;\n            this._tableState.firstEntryNum = undefined;\n            this._tableState.entryCount = undefined;\n        }\n        if (this._entries[0] && !this._entries[0].free) {\n            throw new FormatError('Invalid XRef table: unexpected first object');\n        }\n        return obj;\n    };\n    _PdfCrossReference.prototype._processXRefStream = function (stream) {\n        if (typeof this._streamState === 'undefined') {\n            var streamParameters = stream.dictionary;\n            var streamState = new _PdfStreamState();\n            var index = streamParameters.getArray('Index');\n            if (!index) {\n                index = [0, streamParameters.get('Size')];\n            }\n            streamState.entryRanges = index;\n            streamState.byteWidths = streamParameters.getArray('W');\n            streamState.entryNum = 0;\n            streamState.streamPos = stream.position;\n            this._streamState = streamState;\n        }\n        this._readXRefStream(stream);\n        this._streamState = undefined;\n        return stream.dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefStream = function (stream) {\n        stream.position = this._streamState.streamPos;\n        var typeFieldWidth = this._streamState.byteWidths[0];\n        var offsetFieldWidth = this._streamState.byteWidths[1];\n        var generationFieldWidth = this._streamState.byteWidths[2];\n        var entryRanges = this._streamState.entryRanges;\n        while (entryRanges.length > 0) {\n            var first = entryRanges[0];\n            var n = entryRanges[1];\n            if (!Number.isInteger(first) || !Number.isInteger(n)) {\n                throw new FormatError(\"Invalid XRef range fields: \" + first + \", \" + n);\n            }\n            if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n                throw new FormatError(\"Invalid XRef entry fields length: \" + first + \", \" + n);\n            }\n            for (var i = this._streamState.entryNum; i < n; ++i) {\n                this._streamState.entryNum = i;\n                this._streamState.streamPos = stream.position;\n                var type = 0;\n                var offset = 0;\n                var generation = 0;\n                for (var j = 0; j < typeFieldWidth; ++j) {\n                    var typeByte = stream.getByte();\n                    if (typeByte === -1) {\n                        throw new FormatError('invalid cross reference byte width type.');\n                    }\n                    type = (type << 8) | typeByte;\n                }\n                if (typeFieldWidth === 0) {\n                    type = 1;\n                }\n                for (var j = 0; j < offsetFieldWidth; ++j) {\n                    var offsetByte = stream.getByte();\n                    if (offsetByte === -1) {\n                        throw new FormatError('invalid cross reference byte width offset.');\n                    }\n                    offset = (offset << 8) | offsetByte;\n                }\n                for (var j = 0; j < generationFieldWidth; ++j) {\n                    var generationByte = stream.getByte();\n                    if (generationByte === -1) {\n                        throw new FormatError('invalid cross reference byte width generation.');\n                    }\n                    generation = (generation << 8) | generationByte;\n                }\n                var entry = new _PdfObjectInformation();\n                entry.offset = offset;\n                entry.gen = generation;\n                switch (type) {\n                    case 0:\n                        entry.free = true;\n                        break;\n                    case 1:\n                        entry.uncompressed = true;\n                        break;\n                    case 2:\n                        break;\n                    default:\n                        throw new FormatError(\"Invalid XRef entry type: \" + type);\n                }\n                if (!this._entries[first + i]) {\n                    this._entries[first + i] = entry;\n                }\n            }\n            this._streamState.entryNum = 0;\n            this._streamState.streamPos = stream.position;\n            entryRanges.splice(0, 2);\n        }\n    };\n    _PdfCrossReference.prototype._getCatalogObj = function () {\n        return this._root;\n    };\n    _PdfCrossReference.prototype._save = function () {\n        var _this = this;\n        var currentLength = this._stream.length;\n        var buffer = [this._newLine.charCodeAt(0), this._newLine.charCodeAt(1), 37, 80, 68, 70, 45];\n        this._writeString(\"\" + this._version + this._newLine, buffer);\n        buffer.push(0x25, 0x83, 0x92, 0xfa, 0xfe);\n        this._writeString(this._newLine, buffer);\n        var updatedCount = 0;\n        var uncompressedCount = 0;\n        if (this._document._fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n            var data = [];\n            var updatedStream_1 = [];\n            var archiveXRef_1 = '';\n            var indexes_1 = [];\n            indexes_1.push(0, 1);\n            var collection_1 = [];\n            var uncompressedOffsets_1 = [];\n            this._cacheMap.forEach(function (value, key) {\n                var dictionary;\n                if (value instanceof _PdfBaseStream) {\n                    dictionary = value.dictionary;\n                }\n                if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                    indexes_1.push(key.objectNumber, 1);\n                    uncompressedOffsets_1.push(currentLength + buffer.length);\n                    var cipher_1;\n                    if (_this._encrypt) {\n                        cipher_1 = _this._encrypt._createCipherTransform(key.objectNumber, key.generationNumber);\n                    }\n                    _this._writeObject(value, buffer, key, cipher_1);\n                    uncompressedCount++;\n                    dictionary._updated = false;\n                }\n            });\n            this._cacheMap.forEach(function (value, key) {\n                if (value instanceof _PdfDictionary) {\n                    if (value._updated && (!value.isCatalog || _this._allowCatalog)) {\n                        archiveXRef_1 += key.objectNumber + \" \" + updatedStream_1.length + _this._newLine;\n                        collection_1.push(key.objectNumber, 1);\n                        updatedCount++;\n                        _this._writeObject(value, updatedStream_1);\n                    }\n                }\n                else if (value instanceof _PdfBaseStream) {\n                    var dictionary = value.dictionary;\n                    if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                        indexes_1.push(key.objectNumber, 1);\n                        uncompressedOffsets_1.push(currentLength + buffer.length);\n                        _this._writeObject(value, buffer, key);\n                        uncompressedCount++;\n                        dictionary._updated = false;\n                    }\n                }\n            });\n            for (var i = 0; i < collection_1.length; i++) {\n                indexes_1.push(collection_1[parseInt(i.toString(), 10)]);\n            }\n            var archiveOffset = void 0;\n            var archiveRef = void 0;\n            if (updatedCount > 0) {\n                archiveRef = this._getNextReference();\n                indexes_1.push(archiveRef.objectNumber, 2);\n                this._writeString(archiveXRef_1, data);\n                this._writeBytes(updatedStream_1, data);\n                var newDict = new _PdfDictionary(this);\n                newDict.set('Type', _PdfName.get('ObjStm'));\n                newDict.set('N', updatedCount);\n                newDict.set('First', archiveXRef_1.length);\n                newDict.set('Length', data.length);\n                var archiveStream = new _PdfStream(data, newDict, 0, data.length);\n                archiveOffset = currentLength + buffer.length;\n                var cipher_2;\n                if (this._encrypt) {\n                    cipher_2 = this._encrypt._createCipherTransform(archiveRef.objectNumber, archiveRef.generationNumber);\n                }\n                this._writeObject(archiveStream, buffer, archiveRef, cipher_2);\n            }\n            var formatValue = Math.max(_getSize(this._stream.bytes.length + buffer.length), _getSize(this._nextReferenceNumber));\n            var newRef = this._getNextReference();\n            var newStartXref = currentLength + buffer.length;\n            var newXref = new _PdfDictionary(this);\n            newXref.set('Type', _PdfName.get('XRef'));\n            newXref.set('Index', indexes_1);\n            newXref.set('W', [1, formatValue, 1]);\n            this._copyTrailer(newXref);\n            if (this._ids && this._ids.length > 0) {\n                newXref.update('ID', [this._ids[0], this._computeMessageDigest(newStartXref)]);\n            }\n            var newXrefData = [];\n            this._writeLong(0, 1, newXrefData);\n            this._writeLong(1, formatValue, newXrefData);\n            this._writeLong(-1, 1, newXrefData);\n            if (uncompressedCount > 0) {\n                for (var index = 0; index < uncompressedCount; index++) {\n                    this._writeLong(1, 1, newXrefData);\n                    this._writeLong(uncompressedOffsets_1[index], formatValue, newXrefData); // eslint-disable-line\n                    this._writeLong(0, 1, newXrefData);\n                }\n            }\n            if (updatedCount > 0) {\n                for (var index = 0; index < updatedCount; index++) {\n                    this._writeLong(2, 1, newXrefData);\n                    this._writeLong(archiveRef.objectNumber, formatValue, newXrefData);\n                    this._writeLong(index, 1, newXrefData);\n                }\n                this._writeLong(1, 1, newXrefData);\n                this._writeLong(archiveOffset, formatValue, newXrefData);\n                this._writeLong(0, 1, newXrefData);\n            }\n            this._writeLong(1, 1, newXrefData);\n            this._writeLong(newStartXref, formatValue, newXrefData);\n            this._writeLong(0, 1, newXrefData);\n            newXref.set('Length', newXrefData.length);\n            var newXrefStream = new _PdfStream(newXrefData, newXref, 0, newXrefData.length);\n            var cipher = void 0;\n            if (this._encrypt) {\n                cipher = this._encrypt._createCipherTransform(newRef.objectNumber, newRef.generationNumber);\n            }\n            this._writeObject(newXrefStream, buffer, newRef, cipher, true);\n            this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n        }\n        else {\n            var tempBuffer_1 = '';\n            this._cacheMap.forEach(function (value, key) {\n                var dictionary;\n                if (value instanceof _PdfDictionary) {\n                    dictionary = value;\n                }\n                else if (value instanceof _PdfBaseStream) {\n                    dictionary = value.dictionary;\n                }\n                if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                    var offsetString = (currentLength + buffer.length).toString();\n                    while (offsetString.length < 10) {\n                        offsetString = '0' + offsetString;\n                    }\n                    var genString = key.generationNumber.toString();\n                    while (genString.length < 5) {\n                        genString = '0' + genString;\n                    }\n                    tempBuffer_1 += key.objectNumber + \" 1\" + _this._newLine + offsetString + \" \" + genString + \" n\" + _this._newLine;\n                    updatedCount++;\n                    _this._writeObject(value, buffer, key);\n                }\n            });\n            var newStartXref = buffer.length + currentLength;\n            this._writeString(\"xref\" + this._newLine + \"0 1\" + this._newLine + \"0000000000 65535 f\" + this._newLine, buffer);\n            if (updatedCount > 0) {\n                this._writeString(tempBuffer_1, buffer);\n            }\n            this._writeString(\"trailer\" + this._newLine, buffer);\n            var newXref = new _PdfDictionary(this);\n            this._copyTrailer(newXref);\n            this._writeDictionary(newXref, buffer, this._newLine);\n            this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n        }\n        var array = new Uint8Array(this._stream.length + buffer.length);\n        array.set(this._stream.bytes);\n        array.set(buffer, this._stream.length);\n        return array;\n    };\n    _PdfCrossReference.prototype._copyTrailer = function (newXref) {\n        var reference = this._getNextReference();\n        newXref.set('Size', reference.objectNumber);\n        newXref.set('Prev', this._prevXRefOffset);\n        var root = this._trailer.getRaw('Root'); // eslint-disable-line\n        if (typeof root !== 'undefined' && root !== null) {\n            newXref.set('Root', root);\n        }\n        var info = this._trailer.getRaw('Info'); // eslint-disable-line\n        if (typeof info !== 'undefined' && info !== null) {\n            newXref.set('Info', info);\n        }\n        var encrypt = this._trailer.getRaw('Encrypt'); // eslint-disable-line\n        if (typeof encrypt !== 'undefined' && encrypt !== null) {\n            newXref.set('Encrypt', encrypt);\n        }\n    };\n    _PdfCrossReference.prototype._computeMessageDigest = function (size) {\n        var _this = this;\n        var time = Math.floor(Date.now() / 1000);\n        var buffer = [time.toString(), '', size.toString()];\n        var info = this._trailer.getRaw('Info');\n        var crossReferenceInfo = new _PdfDictionary();\n        if (info && info instanceof _PdfDictionary) {\n            info.forEach(function (key, value) {\n                if (value && typeof value === 'string') {\n                    crossReferenceInfo.set(key, _stringToPdfString(value));\n                }\n            });\n        }\n        crossReferenceInfo.forEach(function (key, value) {\n            buffer.push(value);\n        });\n        var array = [];\n        buffer.forEach(function (str) {\n            _this._writeString(str, array);\n        });\n        return _bytesToString((new _MD5().hash(new Uint8Array(array))));\n    };\n    _PdfCrossReference.prototype._getNextReference = function () {\n        var reference = new _PdfReference(this._nextReferenceNumber++, 0);\n        reference._isNew = true;\n        return reference;\n    };\n    _PdfCrossReference.prototype._writeObject = function (obj, buffer, reference, transform, isCrossReference) {\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(reference.objectNumber + \" \" + reference.generationNumber + \" obj\" + this._newLine, buffer);\n        }\n        if (obj instanceof _PdfDictionary) {\n            this._writeDictionary(obj, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (obj instanceof _PdfBaseStream) {\n            this._writeStream(obj, buffer, transform, isCrossReference);\n        }\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(\"endobj\" + this._newLine, buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeDictionary = function (dictionary, buffer, spaceChar, transform, isCrossReference) {\n        var _this = this;\n        if (dictionary._currentObj) {\n            dictionary._currentObj._beginSave();\n        }\n        if (dictionary._isFont) {\n            this._writeFontDictionary(dictionary);\n        }\n        this._writeString(\"<<\" + spaceChar, buffer);\n        dictionary.forEach(function (key, value) {\n            _this._writeString(\"/\" + _escapePdfName(key) + \" \", buffer);\n            _this._writeValue(value, buffer, transform, isCrossReference);\n            _this._writeString(spaceChar, buffer);\n        });\n        this._writeString(\">>\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeFontDictionary = function (dictionary) {\n        if (dictionary.has('DescendantFonts')) {\n            var fonts = dictionary.get('DescendantFonts'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('DescendantFonts', [reference]);\n        }\n        if (dictionary.has('ToUnicode')) {\n            var fonts = dictionary.get('ToUnicode'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('ToUnicode', reference);\n        }\n        if (dictionary.has('FontFile2')) {\n            var fonts = dictionary.get('FontFile2'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontFile2', reference);\n        }\n        if (dictionary.has('FontDescriptor')) {\n            var fonts = dictionary.get('FontDescriptor'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontDescriptor', reference);\n        }\n    };\n    _PdfCrossReference.prototype._writeStream = function (stream, buffer, transform, isCrossReference) {\n        var streamBuffer = [];\n        var value = stream.getString();\n        if (!isCrossReference) {\n            var byteArray = [];\n            for (var i = 0; i < value.length; i++) {\n                byteArray.push(value.charCodeAt(i));\n            }\n            if (stream._isCompress) {\n                var dataArray = new Uint8Array(byteArray);\n                var sw = new CompressedStreamWriter();\n                sw.write(dataArray, 0, dataArray.length);\n                sw.close();\n                value = sw.getCompressedString;\n                stream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n            }\n            if (transform) {\n                value = transform.encryptString(value);\n            }\n        }\n        this._writeString(value, streamBuffer);\n        stream.dictionary.update('Length', streamBuffer.length);\n        this._writeDictionary(stream.dictionary, buffer, this._newLine, transform, isCrossReference);\n        this._writeString(\"stream\" + this._newLine, buffer);\n        this._writeBytes(streamBuffer, buffer);\n        this._writeString(this._newLine + \"endstream\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeValue = function (value, buffer, transform, isCrossReference) {\n        if (value instanceof _PdfName) {\n            this._writeString(\"/\" + value.name, buffer);\n        }\n        else if (value instanceof _PdfReference) {\n            this._writeString(value.toString() + \" R\", buffer);\n        }\n        else if (Array.isArray(value)) {\n            this._writeString('[', buffer);\n            var first = true;\n            for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n                var val = value_1[_i];\n                if (!first) {\n                    this._writeString(' ', buffer);\n                }\n                else {\n                    first = false;\n                }\n                this._writeValue(val, buffer, transform, isCrossReference);\n            }\n            this._writeString(']', buffer);\n        }\n        else if (typeof value === 'string') {\n            if (!isCrossReference && transform) {\n                value = transform.encryptString(value);\n            }\n            var isUnicode = false;\n            for (var i = 0; i < value.length; i++) {\n                if (value.charCodeAt([i]) > 255) {\n                    isUnicode = true;\n                    break;\n                }\n            }\n            if (isUnicode) {\n                this._writeUnicodeString(value, buffer);\n            }\n            else {\n                this._writeString(\"(\" + this._escapeString(value) + \")\", buffer);\n            }\n        }\n        else if (typeof value === 'number') {\n            this._writeString(_numberToString(value), buffer);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeString(value.toString(), buffer);\n        }\n        else if (value instanceof _PdfDictionary) {\n            this._writeDictionary(value, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (value instanceof _PdfBaseStream) {\n            this._writeStream(value, buffer, transform, isCrossReference);\n        }\n        else if (value === null) {\n            this._writeString('null', buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeUnicodeString = function (value, buffer) {\n        var byteValues = _stringToBigEndianBytes(value);\n        byteValues.unshift(254, 255);\n        var data = [];\n        for (var i = 0; i < byteValues.length; i++) {\n            var byte = byteValues[Number.parseInt(i.toString(), 10)];\n            switch (byte) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(byte);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(byte);\n                    break;\n                default:\n                    data.push(byte);\n                    break;\n            }\n        }\n        buffer.push('('.charCodeAt(0) & 0xff);\n        for (var i = 0; i < data.length; i++) {\n            buffer.push(data[Number.parseInt(i.toString(), 10)] & 0xff);\n        }\n        buffer.push(')'.charCodeAt(0) & 0xff);\n    };\n    _PdfCrossReference.prototype._writeString = function (value, buffer) {\n        for (var i = 0; i < value.length; i++) {\n            buffer.push(value.charCodeAt(i) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._writeBytes = function (data, buffer) {\n        for (var i = 0; i < data.length; i++) {\n            buffer.push(data[i]); // eslint-disable-line\n        }\n    };\n    _PdfCrossReference.prototype._writeLong = function (value, count, buffer) {\n        for (var i = count - 1; i >= 0; --i) {\n            buffer.push(value >> (i << 3) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._escapeString = function (value) {\n        return value.replace(/([()\\\\\\n\\r])/g, function (substring) {\n            if (substring === '\\n') {\n                return '\\\\n';\n            }\n            else if (substring === '\\r') {\n                return '\\\\r';\n            }\n            return \"\\\\\" + substring;\n        });\n    };\n    _PdfCrossReference.prototype._destroy = function () {\n        this._entries = undefined;\n        this._pendingRefs.clear();\n        this._pendingRefs = undefined;\n        this._cacheMap.clear();\n        this._pendingRefs = undefined;\n        this._root = undefined;\n        this._startXRefQueue = [];\n        this._startXRefQueue = undefined;\n        this._stream = undefined;\n        this._streamState = undefined;\n        this._tableState = undefined;\n        this._topDictionary = undefined;\n        this._trailer = undefined;\n        this._version = undefined;\n        this._crossReferencePosition = undefined;\n    };\n    return _PdfCrossReference;\n}());\nexport { _PdfCrossReference };\nvar _PdfObjectInformation = /** @class */ (function () {\n    function _PdfObjectInformation() {\n    }\n    return _PdfObjectInformation;\n}());\nvar _PdfCrossTableState = /** @class */ (function () {\n    function _PdfCrossTableState() {\n    }\n    return _PdfCrossTableState;\n}());\nvar _PdfStreamState = /** @class */ (function () {\n    function _PdfStreamState() {\n    }\n    return _PdfStreamState;\n}());\n","import { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfField, PdfTextBoxField, PdfButtonField, PdfCheckBoxField, PdfRadioButtonListField, PdfComboBoxField, PdfListBoxField, PdfSignatureField } from './field';\nimport { _getInheritableProperty, _getPageIndex } from './../utils';\nimport { PdfFormFieldsTabOrder, _FieldFlag, _SignatureFlag } from './../enumerator';\nimport { PdfPage } from './../pdf-page';\n/**\n * Represents a PDF form.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form of the PDF document\n * let form: PdfForm = document.form;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfForm = /** @class */ (function () {\n    /**\n     * Represents a loaded from the PDF document.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Form dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     */\n    function PdfForm(dictionary, crossReference) {\n        this._hasKids = false;\n        this._setAppearance = false;\n        this._exportEmptyFields = false;\n        this._fieldCollection = [];\n        this._signFlag = _SignatureFlag.none;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n        this._parsedFields = new Map();\n        this._fields = [];\n        this._createFields();\n    }\n    Object.defineProperty(PdfForm.prototype, \"count\", {\n        /**\n         * Gets the fields count (Read only).\n         *\n         * @returns {number} Fields count.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the fields count\n         * let count: number = form.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fields.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"needAppearances\", {\n        /**\n         *  Gets a value indicating whether need appearances (Read only).\n         *\n         * @returns {boolean} Need appearances.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the boolean flag indicating need appearances\n         * let needAppearances: number = form.needAppearances;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('NeedAppearances')) {\n                this._needAppearances = this._dictionary.get('NeedAppearances');\n            }\n            return this._needAppearances;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"exportEmptyFields\", {\n        /**\n         *  Gets a value indicating whether allow to export empty fields or not.\n         *\n         * @returns {boolean} Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets a value indicating whether allow to export empty fields or not.\n         * let exportEmptyFields: boolean = form.exportEmptyFields;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportEmptyFields;\n        },\n        /**\n         *  Sets a value indicating whether allow to export empty fields or not.\n         *\n         * @param {boolean} value Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Sets a value indicating whether allow to export empty fields or not.\n         * form.exportEmptyFields = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportEmptyFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"_signatureFlag\", {\n        get: function () {\n            return this._signFlag;\n        },\n        set: function (value) {\n            if (value !== this._signFlag) {\n                this._signFlag = value;\n                this._dictionary.update('SigFlags', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfField` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfField} Loaded PDF form field at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.fieldAt = function (index) {\n        if (index < 0 || index >= this._fields.length) {\n            throw Error('Index out of range.');\n        }\n        var field;\n        if (this._parsedFields.has(index)) {\n            field = this._parsedFields.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            var ref = this._fields[index]; // eslint-disable-line\n            if (ref && ref instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(ref);\n            }\n            if (dictionary) {\n                var key = _getInheritableProperty(dictionary, 'FT', false, true, 'Parent');\n                var fieldFlags = 0;\n                var flag = _getInheritableProperty(dictionary, 'Ff', false, true, 'Parent');\n                if (typeof flag !== 'undefined') {\n                    fieldFlags = flag;\n                }\n                if (key) {\n                    switch (key.name.toLowerCase()) {\n                        case 'tx':\n                            field = PdfTextBoxField._load(this, dictionary, this._crossReference, ref);\n                            break;\n                        case 'btn':\n                            if ((fieldFlags & _FieldFlag.pushButton) !== 0) {\n                                field = PdfButtonField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            else if ((fieldFlags & _FieldFlag.radio) !== 0) {\n                                field = PdfRadioButtonListField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            else {\n                                field = PdfCheckBoxField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            break;\n                        case 'ch':\n                            if ((fieldFlags & _FieldFlag.combo) !== 0) {\n                                field = PdfComboBoxField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            else {\n                                field = PdfListBoxField._load(this, dictionary, this._crossReference, ref);\n                            }\n                            break;\n                        case 'sig':\n                            field = PdfSignatureField._load(this, dictionary, this._crossReference, ref);\n                            break;\n                    }\n                }\n                this._parsedFields.set(index, field);\n                if (field && field instanceof PdfField) {\n                    field._annotationIndex = index;\n                }\n            }\n        }\n        return field;\n    };\n    /**\n     * Add a new `PdfField`.\n     *\n     * @param {PdfField} field Field object to add.\n     * @returns {number} Field index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Add a new form field\n     * let index: number = document.form.add(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.add = function (field) {\n        this._fields.push(field._ref);\n        this._dictionary.update('Fields', this._fields);\n        this._parsedFields.set(this._fields.length - 1, field);\n        field._form = this;\n        this._crossReference._root._updated = true;\n        if (field._kidsCount > 0) {\n            for (var i = 0; i < field._kidsCount; i++) {\n                var item = field.itemAt(i);\n                var page = item._page;\n                page.annotations._annotations.push(item._ref);\n                page._pageDictionary.set('Annots', page.annotations._annotations);\n                page._pageDictionary._updated = true;\n            }\n        }\n        else if (field._dictionary.has('Subtype') && field._dictionary.get('Subtype').name === 'Widget') {\n            var page = field._page;\n            page.annotations._annotations.push(field._ref);\n            field._page._pageDictionary.set('Annots', field.page.annotations._annotations);\n            field._page._pageDictionary._updated = true;\n        }\n        if (field instanceof PdfSignatureField) {\n            field._form._signatureFlag = _SignatureFlag.signatureExists | _SignatureFlag.appendOnly;\n        }\n        return (this._fields.length - 1);\n    };\n    /**\n     * Remove the specified PDF form field.\n     *\n     * @param {PdfField} field Field object to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(3);\n     * // Remove the form field\n     * document.form.removeField(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeField = function (field) {\n        var index = this._fields.indexOf(field._ref);\n        if (index >= 0) {\n            this.removeFieldAt(index);\n        }\n    };\n    /**\n     * Remove the PDF form field from specified index.\n     *\n     * @param {number} index Field index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Remove the form field from the specified index\n     * document.form.removeFieldAt(3);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeFieldAt = function (index) {\n        var field = this.fieldAt(index);\n        if (field) {\n            if (field._kidsCount > 0) {\n                for (var i = field._kidsCount - 1; i >= 0; i--) {\n                    var item = field.itemAt(i);\n                    var page = item._getPage();\n                    if (page) {\n                        page._removeAnnotation(item._ref);\n                    }\n                }\n            }\n            else if (field._dictionary.has('Subtype') && field._dictionary.get('Subtype').name === 'Widget') {\n                var page = field.page;\n                if (page) {\n                    page._removeAnnotation(field._ref);\n                }\n            }\n            this._parsedFields.delete(index);\n        }\n        this._fields.splice(index, 1);\n        this._dictionary.set('Fields', this._fields);\n        this._dictionary._updated = true;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation\n     * If true, appearance will not be created. Default appearance has been considered.\n     * If false, new appearance stream has been created from field values and updated as normal appearance.\n     *\n     * @param {boolean} value Set default appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.setDefaultAppearance(false);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.setDefaultAppearance = function (value) {\n        this._setAppearance = !value;\n        this._needAppearances = value;\n        this._dictionary.update('NeedAppearances', value);\n    };\n    PdfForm.prototype.orderFormFields = function (tabOrder) {\n        var _this = this;\n        if (tabOrder === null || typeof tabOrder === 'undefined') {\n            this.orderFormFields(new Map());\n        }\n        else {\n            var tab = void 0;\n            var document_1 = this._crossReference._document;\n            var value = void 0;\n            if (tabOrder && tabOrder instanceof Map) {\n                var setTabOrder = true;\n                if (tabOrder.size > 0) {\n                    this._tabCollection = tabOrder;\n                }\n                else {\n                    setTabOrder = false;\n                    this._tabCollection = tabOrder;\n                }\n                var fieldCollection = new Map();\n                this._fieldCollection = this._getFields();\n                if (this._fieldCollection && this._fieldCollection.length > 0) {\n                    var page = this._fieldCollection[0].page;\n                    if (page && document_1) {\n                        for (var i = 0; i < this._fieldCollection.length; i++) {\n                            var field = this._fieldCollection[Number.parseInt(i.toString(), 10)];\n                            if (field.page) {\n                                var index = _getPageIndex(document_1, this._sortItemByPageIndex(field, true)._pageDictionary);\n                                if (index >= 0) {\n                                    if (fieldCollection.has(index)) {\n                                        value = fieldCollection.get(index);\n                                        value.push(field);\n                                    }\n                                    else {\n                                        value = [];\n                                        value.push(field);\n                                        fieldCollection.set(index, value);\n                                    }\n                                    var page_1 = document_1.getPage(index);\n                                    if (!this._tabCollection.has(index)) {\n                                        this._tabCollection.set(index, page_1.tabOrder);\n                                    }\n                                    if (setTabOrder) {\n                                        page_1.tabOrder = this._tabCollection.get(index);\n                                    }\n                                }\n                            }\n                        }\n                        var fieldsCount_1 = 0;\n                        fieldCollection.forEach(function (value, key) {\n                            _this._tabOrder = _this._tabCollection.get(key);\n                            if (_this._tabOrder !== PdfFormFieldsTabOrder.structure) {\n                                var fields = value;\n                                fields.sort(function (pdfField1, pdfField2) {\n                                    return _this._compareFields(pdfField1, pdfField2);\n                                });\n                                for (var j = 0; j < fields.length; j++) {\n                                    var fieldIndex = _this._fieldCollection.indexOf(fields[Number.parseInt(j.toString(), 10)]);\n                                    if (fieldIndex !== -1 && fieldIndex !== fieldsCount_1 + j) {\n                                        var field = _this._fieldCollection[Number.parseInt(fieldIndex.toString(), 10)];\n                                        _this._fieldCollection.splice(fieldIndex, 1);\n                                        _this._fieldCollection.splice(fieldsCount_1 + j, 0, field);\n                                    }\n                                }\n                            }\n                            fieldsCount_1 += value.length;\n                        });\n                    }\n                }\n            }\n            else {\n                this._tabOrder = tabOrder;\n                tab = this._getOrder(this._tabOrder);\n                this._fieldCollection = this._getFields();\n                this._fieldCollection.sort(function (pdfField1, pdfField2) {\n                    return _this._compareFields(pdfField1, pdfField2);\n                });\n            }\n            this._parsedFields.clear();\n            for (var i = 0; i < this._fieldCollection.length; i++) {\n                this._parsedFields.set(Number.parseInt(i.toString(), 10), this._fieldCollection[Number.parseInt(i.toString(), 10)]);\n                this._fields[Number.parseInt(i.toString(), 10)] = this._fieldCollection[Number.parseInt(i.toString(), 10)]._ref;\n                if (tab) {\n                    this._fieldCollection[Number.parseInt(i.toString(), 10)].page._pageDictionary.update('Tabs', tab);\n                }\n            }\n            this._dictionary.update('Fields', this._fields);\n        }\n    };\n    PdfForm.prototype._createFields = function () {\n        var fields; // eslint-disable-line\n        if (this._dictionary.has('Fields')) {\n            fields = this._dictionary.get('Fields');\n        }\n        var count = 0;\n        var nodes = []; // eslint-disable-line\n        while (typeof fields !== 'undefined' && fields !== null) {\n            for (; count < fields.length; count++) {\n                var ref = fields[count]; // eslint-disable-line\n                var fieldDictionary = void 0;\n                if (ref && ref instanceof _PdfReference) {\n                    fieldDictionary = this._crossReference._fetch(ref);\n                }\n                var fieldKids = void 0;\n                if (fieldDictionary && fieldDictionary.has('Kids')) {\n                    fieldKids = fieldDictionary.get('Kids');\n                    if (typeof fieldKids !== 'undefined' && fieldKids.length > 0) {\n                        for (var i = 0; i < fieldKids.length; i++) {\n                            var reference = fieldKids[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var kidsDict = this._crossReference._fetch(reference);\n                                if (typeof kidsDict !== 'undefined' && !kidsDict.has('Parent')) {\n                                    kidsDict.update('Parent', ref);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (typeof fieldKids === 'undefined') {\n                    if (typeof fieldDictionary !== 'undefined') {\n                        if (this._fields.indexOf(ref) === -1) {\n                            this._fields.push(ref);\n                        }\n                    }\n                }\n                else {\n                    var isNode = (!fieldDictionary.has('FT')) || this._isNode(fieldKids);\n                    if (isNode) {\n                        nodes.push({ fields: fields, count: count });\n                        this._hasKids = true;\n                        count = -1;\n                        fields = fieldKids;\n                    }\n                    else {\n                        this._fields.push(ref);\n                    }\n                }\n            }\n            if (nodes.length === 0) {\n                break;\n            }\n            var entry = nodes.pop(); // eslint-disable-line\n            fields = entry.fields;\n            count = entry.count + 1;\n        }\n    };\n    PdfForm.prototype._isNode = function (kids) {\n        var isNode = false;\n        if (typeof kids !== 'undefined' && kids.length > 0) {\n            var entry = kids[0]; // eslint-disable-line\n            var dictionary = void 0;\n            if (typeof entry !== 'undefined' && entry !== null) {\n                if (entry instanceof _PdfDictionary) {\n                    dictionary = entry;\n                }\n                else if (entry instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(entry);\n                }\n            }\n            if (typeof dictionary !== 'undefined' && dictionary.has('Subtype')) {\n                var subtype = dictionary.get('Subtype');\n                if (subtype && subtype.name !== 'Widget') {\n                    isNode = true;\n                }\n            }\n        }\n        return isNode;\n    };\n    PdfForm.prototype._parseWidgetReferences = function () {\n        var _this = this;\n        if (typeof this._widgetReferences === 'undefined' && this.count > 0) {\n            this._widgetReferences = [];\n            this._fields.forEach(function (fieldReference) {\n                var dictionary = _this._crossReference._fetch(fieldReference);\n                if (dictionary) {\n                    if (dictionary.has('Kids')) {\n                        var fieldKids = dictionary.get('Kids');\n                        if (fieldKids && fieldKids.length > 0) {\n                            fieldKids.forEach(function (kidReference) {\n                                var kidDictionary;\n                                if (kidReference instanceof _PdfDictionary) {\n                                    kidDictionary = kidReference;\n                                }\n                                else if (kidReference instanceof _PdfReference) {\n                                    kidDictionary = _this._crossReference._fetch(kidReference);\n                                }\n                                if (typeof kidDictionary !== 'undefined' && kidDictionary.has('Subtype')) {\n                                    var subtype = kidDictionary.get('Subtype');\n                                    if (subtype && subtype.name === 'Widget') {\n                                        _this._widgetReferences.push(kidReference);\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else {\n                        _this._widgetReferences.push(fieldReference);\n                    }\n                }\n            });\n        }\n        return this._widgetReferences;\n    };\n    PdfForm.prototype._doPostProcess = function (isFlatten) {\n        for (var i = this.count - 1; i >= 0; i--) {\n            var field = this.fieldAt(i);\n            if (field) {\n                field._doPostProcess(isFlatten || field.flatten);\n                if (!isFlatten && field.flatten) {\n                    this.removeFieldAt(i);\n                }\n            }\n        }\n    };\n    PdfForm.prototype._getFieldIndex = function (name) {\n        var index = -1;\n        if (this.count > 0) {\n            if (!this._fieldNames) {\n                this._fieldNames = [];\n            }\n            if (!this._indexedFieldNames) {\n                this._indexedFieldNames = [];\n            }\n            if (!this._actualFieldNames) {\n                this._actualFieldNames = [];\n            }\n            if (!this._indexedActualFieldNames) {\n                this._indexedActualFieldNames = [];\n            }\n            for (var i = 0; i < this.count; i++) {\n                var field = this.fieldAt(i);\n                if (field) {\n                    var fieldName = field.name;\n                    if (fieldName) {\n                        this._fieldNames.push(fieldName);\n                        this._indexedFieldNames.push(fieldName.split('[')[0]);\n                    }\n                    var actualName = field.actualName;\n                    if (actualName) {\n                        this._actualFieldNames.push(actualName);\n                        this._indexedActualFieldNames.push(actualName.split('[')[0]);\n                    }\n                }\n            }\n            var nameIndex = this._fieldNames.indexOf(name);\n            if (nameIndex !== -1) {\n                index = nameIndex;\n            }\n            else {\n                nameIndex = this._indexedFieldNames.indexOf(name);\n                if (nameIndex !== -1) {\n                    index = nameIndex;\n                }\n                else {\n                    nameIndex = this._actualFieldNames.indexOf(name);\n                    if (nameIndex !== -1) {\n                        index = nameIndex;\n                    }\n                    else {\n                        nameIndex = this._indexedActualFieldNames.indexOf(name);\n                        if (nameIndex !== -1) {\n                            index = nameIndex;\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfForm.prototype._getFields = function () {\n        var fields = [];\n        for (var i = 0; i < this._fields.length; i++) {\n            var field = this.fieldAt(i);\n            if (field && field instanceof PdfField) {\n                fields.push(field);\n            }\n        }\n        return fields;\n    };\n    PdfForm.prototype._getOrder = function (tabOrder) {\n        if (tabOrder !== PdfFormFieldsTabOrder.none) {\n            var tabs = '';\n            if (tabOrder === PdfFormFieldsTabOrder.row) {\n                tabs = 'R';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.column) {\n                tabs = 'C';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.structure) {\n                tabs = 'S';\n            }\n            return _PdfName.get(tabs);\n        }\n        return null;\n    };\n    PdfForm.prototype._compareFields = function (field1, field2) {\n        var result = 0;\n        var xdiff;\n        var index;\n        var page1 = field1.page;\n        var page2 = field2.page;\n        if (page1 && !page1._isNew && page1 instanceof PdfPage && page2 && !page2._isNew && page2 instanceof PdfPage) {\n            var page1Index = this._sortItemByPageIndex(field1, false)._pageIndex;\n            var page2Index = this._sortItemByPageIndex(field2, false)._pageIndex;\n            var rectangle1 = void 0;\n            if (field1._dictionary.has('Kids')) {\n                rectangle1 = this._getItemRectangle(field1);\n            }\n            else {\n                rectangle1 = this._getRectangle(field1._dictionary);\n            }\n            var rectangle2 = void 0;\n            if (field2._dictionary.has('Kids')) {\n                rectangle2 = this._getItemRectangle(field2);\n            }\n            else {\n                rectangle2 = this._getRectangle(field2._dictionary);\n            }\n            var firstHeight = rectangle1[3] - rectangle1[1];\n            var secondHeight = rectangle2[3] - rectangle2[1];\n            if (rectangle1 && rectangle1.length >= 2 && rectangle2 && rectangle2.length >= 2) {\n                var x1 = rectangle1[0];\n                var y1 = rectangle1[1];\n                var x2 = rectangle2[0];\n                var y2 = rectangle2[1];\n                if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                    typeof y1 === 'number' && typeof y2 === 'number') {\n                    index = page1Index - page2Index;\n                    if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            var isValid = xdiff === -1 && y1 > y2 && (y1 - firstHeight / 2) < y2;\n                            isValid = isValid || (xdiff === 1 && y2 > y1 && (y2 - secondHeight / 2) < y1);\n                            if (isValid) {\n                                xdiff = 0;\n                            }\n                        }\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                        xdiff = this._compare(x1, x2);\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.manual ||\n                        this._tabOrder === PdfFormFieldsTabOrder.none || this._tabOrder === PdfFormFieldsTabOrder.structure) {\n                        if (field1 instanceof PdfField && field2 instanceof PdfField) {\n                            var field1Index = field1.tabIndex;\n                            var field2Index = field2.tabIndex;\n                            xdiff = this._compare(field1Index, field2Index);\n                            if (index !== 0) {\n                                result = index;\n                            }\n                            else {\n                                result = xdiff;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._getRectangle = function (dictionary) {\n        var rect;\n        if (dictionary.has('Rect')) {\n            rect = dictionary.getArray('Rect');\n        }\n        return rect;\n    };\n    PdfForm.prototype._getItemRectangle = function (field) {\n        var result;\n        var dictionary = field._dictionary;\n        if (dictionary.has('Kids')) {\n            var kids = dictionary.getArray('Kids');\n            if (kids && kids.length >= 1) {\n                if (kids.length === 1) {\n                    result = this._getRectangle(kids[0]);\n                }\n                else {\n                    if (field && field.itemsCount > 1) {\n                        result = this._getRectangle(field.itemAt(0)._dictionary);\n                    }\n                    else {\n                        result = this._getRectangle(kids[0]);\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._compare = function (x, y) {\n        if (x > y) {\n            return 1;\n        }\n        else if (x < y) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    };\n    PdfForm.prototype._compareKidsElement = function (x, y) {\n        var xDictionary = this._crossReference._fetch(x);\n        var yDictionary = this._crossReference._fetch(y);\n        var xRect = this._getRectangle(xDictionary);\n        var yRect = this._getRectangle(yDictionary);\n        var result;\n        if (xRect && xRect.length >= 2 && yRect && yRect.length >= 2) {\n            var x1 = xRect[0];\n            var y1 = xRect[1];\n            var x2 = yRect[0];\n            var y2 = yRect[1];\n            if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                typeof y1 === 'number' && typeof y2 === 'number') {\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(y2, y1);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(x1, x2);\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(x1, x2);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(y2, y1);\n                    }\n                }\n                else {\n                    result = 0;\n                }\n                return result;\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._sortItemByPageIndex = function (field, hasPageTabOrder) {\n        var page = field.page;\n        var tabOrder = this._tabOrder;\n        this._tabOrder = hasPageTabOrder ? field.page.tabOrder : tabOrder;\n        this._sortFieldItems(field);\n        if (field._isLoaded && field._kidsCount > 1) {\n            page = field.itemAt(0).page;\n        }\n        this._tabOrder = tabOrder;\n        if (typeof page === 'undefined') {\n            page = field.page;\n        }\n        return page;\n    };\n    PdfForm.prototype._sortFieldItems = function (field) {\n        var _this = this;\n        if (field._isLoaded && (field instanceof PdfTextBoxField ||\n            field instanceof PdfListBoxField ||\n            field instanceof PdfCheckBoxField ||\n            field instanceof PdfRadioButtonListField)) {\n            var collection = field._parseItems(); // eslint-disable-line\n            collection.sort(function (item1, item2) {\n                return _this._compareFieldItem(item1, item2);\n            });\n            field._parsedItems.clear();\n            for (var i = 0; i < collection.length; i++) {\n                field._parsedItems.set(i, collection[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    PdfForm.prototype._compareFieldItem = function (item1, item2) {\n        var result = 0;\n        if (typeof item1 !== 'undefined' && typeof item2 !== 'undefined') {\n            var page1 = item1.page;\n            var page2 = item2.page;\n            var array1 = this._getRectangle(item1._dictionary);\n            var array2 = this._getRectangle(item2._dictionary);\n            if (array1 && array2) {\n                var x1 = array1[0];\n                var y1 = array1[1];\n                var x2 = array2[0];\n                var y2 = array2[1];\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(x1, x2);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._clear = function () {\n        this._fields = [];\n        this._parsedFields = new Map();\n    };\n    return PdfForm;\n}());\nexport { PdfForm };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfParser, _PdfLexicalOperator } from '../pdf-parser';\nimport { _PdfStream } from '../base-stream';\nimport { _PdfCommand } from './../pdf-primitives';\nimport { _ExportHelper } from './xfdf-document';\nimport { PdfUriAnnotation, PdfRubberStampAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfRectangleAnnotation, PdfDocumentLinkAnnotation } from './../annotations/annotation';\nimport { _bytesToString, _getNewGuidString, _byteArrayToHexString, _stringToBytes } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField } from './../form/field';\nimport { _StringTokenizer } from './../fonts/string-layouter';\nimport { _PdfFlateStream } from '../flate-stream';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\nvar _FdfDocument = /** @class */ (function (_super) {\n    __extends(_FdfDocument, _super);\n    function _FdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        _this._annotationObjects = new Map(); // eslint-disable-line\n        _this._specialCharacters = 'âãÏÓ';\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _FdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _FdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _FdfDocument.prototype._save = function () {\n        var _this = this;\n        var objectID = 0;\n        var objectArray = [];\n        if (!this._isAnnotationExport) {\n            if (this._asPerSpecification) {\n                this.fdfString += '%FDF-1.2\\n%' + this._specialCharacters + '\\r\\n1 0 obj\\r<</FDF<</F(';\n                this.fdfString += this._fileName + ')';\n                this.fdfString += '/Fields[';\n            }\n            else {\n                this.fdfString += '%FDF-1.2\\n';\n            }\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    var value = this._exportFormFieldsData(field);\n                    if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField\n                        || field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                        objectID++;\n                    }\n                    if (!this._asPerSpecification) {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V ';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '<' + this._stringToHexString((Array.isArray(value) ? value[0] : value)) + '>';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '<' + this._stringToHexString(value[Number.parseInt(j.toString(), 10)]) + '>';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += ' >>endobj\\n';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V /';\n                            this.fdfString += value + ' >>endobj\\n';\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '(' + (Array.isArray(value) ? value[0] : value) + ')';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '(' + value[Number.parseInt(j.toString(), 10)] + ')';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += '>>';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V/' + value + '>>';\n                        }\n                    }\n                }\n            }\n            if (this._asPerSpecification) {\n                this.fdfString += ']';\n                this.fdfString += '/ID[]/UF(' + this._fileName + ')>>/Type/Catalog>>\\rendobj\\rtrailer\\r\\n<</Root 1 0 R>>\\r\\n';\n                this.fdfString += '%%EOF\\r\\n';\n            }\n            else {\n                this.fdfString += (this._table.size + 1) + ' 0 obj<</F <' + this._stringToHexString(this._fileName) + '>  /Fields [';\n                for (var i = 0; i < this._table.size; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this.fdfString += objectArray[Number.parseInt(i.toString(), 10)] + ' 0 R ';\n                    }\n                }\n                this.fdfString += ']>>endobj\\n';\n                this.fdfString += (objectArray.length + 2) + ' 0 obj<</Version /1.4 /FDF ' + (objectArray.length + 1) + ' 0 R>>endobj\\n';\n                this.fdfString += 'trailer\\n<</Root ' + (objectArray.length + 2) + ' 0 R>>';\n            }\n        }\n        var arrayBuffer = new ArrayBuffer(this.fdfString.length * 1);\n        var result = new Uint8Array(arrayBuffer);\n        result.forEach(function (val, i) {\n            result[i] = _this.fdfString.charCodeAt(i); // eslint-disable-line\n        });\n        return result;\n    };\n    _FdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        this._isAnnotationImport = true;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, true, false);\n        this._readFdfData(parser);\n        if (this._annotationObjects !== null && typeof this._annotationObjects !== 'undefined' && this._annotationObjects.size > 0) {\n            this._annotationObjects.clear();\n        }\n        if (this._table !== null && typeof this._table !== 'undefined' && this._table.size > 0) {\n            this._table.clear();\n        }\n    };\n    _FdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, false, false);\n        this._readFdfData(parser);\n    };\n    _FdfDocument.prototype._readFdfData = function (parser) {\n        var _this = this;\n        var token = parser.getObject(); // eslint-disable-line\n        if (this._isAnnotationImport) {\n            var key = '';\n            while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                if (token instanceof _PdfDictionary) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token instanceof _PdfStream || token instanceof _PdfFlateStream) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token !== null && Number.isInteger(token) && token !== 0) {\n                    if (parser.first >= 0) {\n                        key = token.toString() + ' ' + parser.first.toString();\n                    }\n                }\n                else if (token instanceof _PdfCommand && token.command !== null && typeof token.command !== 'undefined' &&\n                    token.command === 'trailer') {\n                    key = token.command;\n                }\n                token = parser.getObject();\n            }\n            this._annotationObjects = this._parseAnnotationData();\n            this._annotationObjects.forEach(function (value, key) {\n                var dictionary = value;\n                dictionary._crossReference = _this._crossReference;\n                dictionary._updated = true;\n                if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.has('Page')) {\n                    var pageNumber = dictionary.get('Page');\n                    if (pageNumber !== null && typeof pageNumber !== 'undefined') {\n                        var pageIndex = pageNumber;\n                        if (pageIndex < _this._document.pageCount) {\n                            var page = _this._document.getPage(pageIndex);\n                            var pageDictionary = page._pageDictionary;\n                            if (pageDictionary !== null && typeof pageDictionary !== 'undefined') {\n                                var annotations = page.annotations;\n                                var annotation = annotations._parseAnnotation(dictionary);\n                                if (annotation !== null && typeof annotation !== 'undefined') {\n                                    annotation._isImported = true;\n                                    var reference = _this._crossReference._getNextReference();\n                                    _this._crossReference._cacheMap.set(reference, dictionary);\n                                    if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                        _this._addReferenceToGroup(reference, dictionary);\n                                    }\n                                    annotation._ref = reference;\n                                    var index = annotations._annotations.length;\n                                    annotations._annotations.push(reference);\n                                    pageDictionary.set('Annots', annotations._annotations);\n                                    pageDictionary._updated = true;\n                                    annotations._parsedAnnotations.set(index, annotation);\n                                    _this._handlePopup(annotations, reference, dictionary, pageDictionary);\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        }\n        else {\n            token = parser.getObject();\n            if (!this._asPerSpecification) {\n                token = parser.getObject();\n                if (token instanceof _PdfCommand && token.command !== null) {\n                    token = token.command;\n                }\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary) {\n                        var t = token.getArray('T');\n                        var v = void 0;\n                        if (token._map.V instanceof _PdfName) {\n                            v = token.getArray('V').name;\n                        }\n                        else {\n                            v = token.getArray('V');\n                        }\n                        if (t !== null && t !== undefined && t.length > 0) {\n                            this._table.set(t, v);\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            else {\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary && token !== null && token._map.FDF !== null && token._map.FDF !== undefined) {\n                        token = token._map.FDF;\n                        if (token instanceof _PdfDictionary && token._map.Fields !== null && token._map.Fields !== undefined) {\n                            token = token._map.Fields;\n                            if (token !== null && token !== undefined) {\n                                for (var i = 0; i < token.length; i++) {\n                                    var field = token[Number.parseInt(i.toString(), 10)];\n                                    if (field instanceof _PdfDictionary && field !== null && field !== undefined) {\n                                        var t = field.getArray('T');\n                                        var v = void 0;\n                                        if (field._map.V instanceof _PdfName) {\n                                            v = field.getArray('V').name;\n                                        }\n                                        else {\n                                            v = field.getArray('V');\n                                        }\n                                        if (t !== null && t !== undefined && t.length > 0) {\n                                            this._table.set(t, v);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            this._importField();\n        }\n    };\n    _FdfDocument.prototype._parseAnnotationData = function () {\n        var objects = new Map(); // eslint-disable-line\n        var mappedObjects = new Map(); // eslint-disable-line  \n        objects = this._table;\n        if (objects !== null && typeof objects !== 'undefined' && objects.size > 0 && objects.has('trailer')) {\n            var trailer = objects.get('trailer');\n            if (trailer instanceof _PdfDictionary && trailer !== null && typeof trailer !== 'undefined' && trailer.has('Root')) {\n                var holder = trailer.getRaw('Root');\n                if (holder !== null && typeof holder !== 'undefined') {\n                    var rootKey = holder.objectNumber.toString() + ' ' + holder.generationNumber.toString();\n                    if (objects.has(rootKey)) {\n                        var root = objects.get(rootKey);\n                        if (root !== null && typeof root !== 'undefined' && root.has('FDF')) {\n                            var fdf = root.get('FDF');\n                            if (fdf !== null && typeof fdf !== 'undefined' && fdf.has('Annots')) {\n                                var annots = fdf.get('Annots');\n                                if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                                    for (var i = 0; i < annots.length; i++) {\n                                        var annot = annots[Number.parseInt(i.toString(), 10)];\n                                        var key = annot.objectNumber.toString() + ' ' + annot.generationNumber.toString();\n                                        if (objects.has(key)) {\n                                            annot = objects.get(key);\n                                            mappedObjects.set(key, annot);\n                                            objects.delete(key);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    objects.delete(rootKey);\n                }\n            }\n            objects.delete('trailer');\n        }\n        return mappedObjects;\n    };\n    _FdfDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field) {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        if (Array.isArray(value)) {\n                            param = value;\n                        }\n                        else {\n                            param.push(value);\n                        }\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    //#region Export Annotations\n    _FdfDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var genNumber = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace;\n        var startDictionary = '<<' + '/';\n        this.fdfString += '%FDF-1.2' + '\\r\\n';\n        var index = 2;\n        var annot = new Array();\n        var appearance = this.exportAppearance;\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page !== null && typeof page !== 'undefined' && page.annotations.count > 0) {\n                for (var k = 0; k < page.annotations.count; k++) {\n                    var annotation = page.annotations.at(k);\n                    if (annotation !== null && typeof annotation !== 'undefined' && !(annotation instanceof PdfFileLinkAnnotation ||\n                        annotation instanceof PdfTextWebLinkAnnotation || annotation instanceof PdfDocumentLinkAnnotation ||\n                        annotation instanceof PdfUriAnnotation)) {\n                        if (annotation instanceof PdfRubberStampAnnotation || annotation instanceof PdfRectangleAnnotation) {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, true);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                        else {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, appearance);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                    }\n                }\n            }\n        }\n        if (index !== 2) {\n            var root = '1' + genNumber;\n            this.fdfString += root + 'obj' + '\\r\\n' + startDictionary + 'FDF' + startDictionary + 'Annots' + '[';\n            for (var i = 0; i < annot.length - 1; i++) {\n                this.fdfString += annot[Number.parseInt(i.toString(), 10)] + genNumber + 'R' + ' ';\n            }\n            this.fdfString += annot[annot.length - 1] + genNumber + 'R' + ']' + '/' + 'F' + '(' + this._fileName + ')' + '/' + 'UF' + '(';\n            this.fdfString += this._fileName + ')>>' + '/' + 'Type' + '/' + 'Catalog' + '>>' + '\\r\\n' + 'endobj' + '\\r\\n';\n            this.fdfString += 'trailer' + '\\r\\n' + startDictionary + 'Root' + ' ' + root + 'R' + '>>' + '\\r\\n' + '%%EOF' + '\\r\\n';\n        }\n    };\n    _FdfDocument.prototype._exportAnnotation = function (annotation, fdfString, index, annot, pageIndex, appearance) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var dictionary = annotation._dictionary;\n        var startObject = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace + 'obj' + '\\r\\n';\n        var endObject = '\\r\\n' + 'endobj' + '\\r\\n';\n        this._annotationID = index.toString();\n        this.fdfString += index + startObject + '<<';\n        var list = new Map(); // eslint-disable-line\n        var streamReference = new Array();\n        annot.push(this._annotationID);\n        dictionary.set('Page', pageIndex);\n        var annotValue = this._getEntries(list, streamReference, index, dictionary, this.fdfString, appearance);\n        index = annotValue.index;\n        list = annotValue.list;\n        streamReference = annotValue.streamReference;\n        delete dictionary._map.Page;\n        this.fdfString += '>>' + endObject;\n        var _loop_1 = function () {\n            var keys = Array();\n            list.forEach(function (key, value) {\n                keys.push(value);\n            });\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[Number.parseInt(i.toString(), 10)];\n                if (list.get(key) instanceof _PdfDictionary || list.get(key) instanceof _PdfStream ||\n                    list.get(key) instanceof _PdfFlateStream) {\n                    if (list.get(key) instanceof _PdfDictionary) {\n                        dictionary = list.get(key);\n                    }\n                    else {\n                        dictionary = list.get(key).dictionary;\n                    }\n                    if (dictionary !== null && typeof dictionary !== 'undefined') {\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Type')) {\n                            var type = dictionary.get('Type');\n                            if (type !== null && typeof type !== 'undefined' && type.name === 'Annot') {\n                                annot.push(key.toString());\n                                dictionary.set('Page', pageIndex);\n                            }\n                        }\n                        this_1.fdfString += key + startObject + '<<';\n                        var value = this_1._getEntries(list, streamReference, index, dictionary, this_1.fdfString, appearance);\n                        list = value.list;\n                        streamReference = value.streamReference;\n                        index = value.index;\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Page')) {\n                            delete dictionary._map.Page;\n                        }\n                        this_1.fdfString += '>>';\n                        if (streamReference !== null && typeof streamReference !== 'undefined' && streamReference.indexOf(key) !== -1) {\n                            this_1._appendStream(list.get(key), this_1.fdfString);\n                        }\n                        this_1.fdfString += endObject;\n                    }\n                }\n                list.delete(key);\n            }\n        };\n        var this_1 = this;\n        while (list.size > 0) {\n            _loop_1();\n        }\n        index++;\n        helper.index = index;\n        helper.annot = annot;\n        return helper;\n    };\n    _FdfDocument.prototype._appendStream = function (value, fdfString) {\n        var stream = value; // eslint-disable-line\n        this.fdfString = fdfString;\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            if (value instanceof _PdfFlateStream) {\n                stream = value.stream;\n            }\n            else {\n                stream = value;\n            }\n        }\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            var byteArray = stream.getBytes();\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            var compressString = sw.getCompressedString;\n            this.fdfString += 'stream' + '\\r\\n';\n            this.fdfString += compressString;\n            this.fdfString += '\\r\\n' + 'endstream';\n        }\n    };\n    _FdfDocument.prototype._getEntries = function (list, // eslint-disable-line\n    streamReference, index, dictionary, fdfString, hasAppearance) {\n        var _this = this;\n        var flag = false;\n        var helper = new _FdfHelper();\n        this.fdfString = fdfString;\n        var listDictionary = list; // eslint-disable-line\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP'))) {\n                if (key !== 'P') {\n                    _this.fdfString += '/' + key;\n                }\n                if (key === 'Sound' || key === 'F' || hasAppearance) {\n                    flag = true;\n                }\n                var primitive = value; // eslint-disable-line\n                if (typeof primitive === 'string') {\n                    _this.fdfString += '(' + _this._getFormattedString(primitive) + ')';\n                }\n                else if (primitive instanceof _PdfName) {\n                    _this.fdfString += '/' + primitive.name;\n                }\n                else if (primitive instanceof Array) {\n                    primitive = primitive; // eslint-disable-line\n                    var value_1 = _this._appendArray(primitive, _this.fdfString, index, flag, listDictionary, streamReference);\n                    listDictionary = value_1.list;\n                    streamReference = value_1.streamReference;\n                    index = value_1.index;\n                }\n                else if (typeof primitive === 'number') {\n                    _this.fdfString += ' ' + primitive.toString();\n                }\n                else if (typeof primitive === 'boolean') {\n                    _this.fdfString += ' ' + ((primitive) ? 'true' : 'false');\n                }\n                else if (primitive instanceof _PdfDictionary) {\n                    _this.fdfString += '<<';\n                    primitive = primitive;\n                    var value_2 = _this._getEntries(listDictionary, streamReference, index, primitive, _this.fdfString, hasAppearance);\n                    listDictionary = value_2.list;\n                    streamReference = value_2.streamReference;\n                    index = value_2.index;\n                    _this.fdfString += '>>';\n                }\n                else if (primitive instanceof _PdfReference) {\n                    var pageNumber = dictionary.get('Page');\n                    if (key === 'Parent') {\n                        _this.fdfString += ' ' + _this._annotationID + ' 0 R';\n                        _this.fdfString += '/Page ' + pageNumber;\n                    }\n                    else if (key === 'IRT') {\n                        if (dictionary.has('NM')) {\n                            var name_1 = dictionary.get('NM');\n                            if (name_1 !== null) {\n                                _this.fdfString += '(' + _this._getFormattedString(name_1) + ')';\n                            }\n                        }\n                    }\n                    else if (key !== 'P') {\n                        var holder = primitive;\n                        if (holder !== null && typeof holder !== 'undefined') {\n                            index++;\n                            _this.fdfString += ' ' + index + ' 0 R';\n                            if (flag) {\n                                streamReference.push(index);\n                            }\n                            listDictionary.set(index, dictionary.get(key));\n                        }\n                    }\n                }\n                flag = false;\n            }\n        });\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendArray = function (array, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        this.fdfString += '[';\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (array !== null && array.length > 0) {\n            var count = array.length;\n            for (var i = 0; i < count; i++) {\n                var element = array[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (i !== 0 && (typeof element === 'number' || element instanceof _PdfReference || typeof element === 'boolean')) {\n                    this.fdfString += ' ';\n                }\n                var value = this._appendElement(element, this.fdfString, index, flag, listDictionary, streamReference);\n                listDictionary = value.list;\n                streamReference = value.streamReference;\n                index = value.index;\n            }\n        }\n        this.fdfString += ']';\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendElement = function (element, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (typeof element === 'number') {\n            this.fdfString += (element).toString();\n        }\n        else if (element instanceof _PdfName) {\n            this.fdfString += (element.name.toString());\n        }\n        else if (element instanceof Array) {\n            element = element; // eslint-disable-line\n            var value = this._appendArray(element, this.fdfString, index, flag, listDictionary, streamReference);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n        }\n        else if (element instanceof _PdfDictionary) {\n            this.fdfString += '<<';\n            element = element;\n            var value = this._getEntries(listDictionary, streamReference, index, element, this.fdfString, flag);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n            this.fdfString += '>>';\n        }\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._getFormattedString = function (value) {\n        var result = '';\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charCodeAt(i);\n            if (c === 40 || c === 41) {\n                result += '\\'';\n            }\n            result += String.fromCharCode(c);\n        }\n        return result;\n    };\n    //#endregion\n    _FdfDocument.prototype._checkFdf = function (element) {\n        if (element.includes(this._specialCharacters) || element.includes('Ã¢Ã£Ã\\u008fÃ\\u0093')) {\n            this._asPerSpecification = true;\n        }\n        if (element.startsWith('%')) {\n            var token = element.substring(1, 5);\n            if (token !== 'FDF-') { // eslint-disable-line\n                throw new Error('Invalid FDF file.');\n            }\n        }\n    };\n    _FdfDocument.prototype._stringToHexString = function (text) {\n        var hexString = '';\n        if (text !== null && typeof text !== 'undefined' && text.length > 0) {\n            var bytesValue = _stringToBytes(text);\n            hexString = _byteArrayToHexString(bytesValue);\n        }\n        return hexString;\n    };\n    return _FdfDocument;\n}(_ExportHelper));\nexport { _FdfDocument };\nvar _FdfHelper = /** @class */ (function () {\n    function _FdfHelper() {\n    }\n    return _FdfHelper;\n}());\nexport { _FdfHelper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestinationMode, PdfRotationAngle, PdfTextStyle } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { _checkRotation, _getPageIndex, _obtainDestination, _parseColor } from './utils';\n/**\n * Represents a base class for all bookmark objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmarkBase = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBookmarkBase` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Outline dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmarkBase(dictionary, crossReference) {\n        this._bookMarkList = [];\n        this._isExpanded = false;\n        this._isLoadedBookmark = false;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n    }\n    Object.defineProperty(PdfBookmarkBase.prototype, \"count\", {\n        /**\n         * Gets the bookmark count (Read only).\n         *\n         * @returns {number} Number of bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Get bookmark count\n         * let bookmarkCount: number = bookmarks.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoadedBookmark && this._bookMarkList.length === 0) {\n                this._reproduceTree();\n            }\n            return this._bookMarkList.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfBookmark` at the specified index.\n     *\n     * @param {number} index Bookmark index.\n     * @returns {PdfBookmark} Bookmark at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.at = function (index) {\n        var bookmark;\n        if (index < 0 || index >= this.count) {\n            throw Error('Index out of range.');\n        }\n        if (this._bookMarkList.length > 0 && index < this._bookMarkList.length) {\n            bookmark = this._bookMarkList[Number.parseInt(index.toString(), 10)];\n        }\n        return bookmark;\n    };\n    /**\n     * Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     *\n     * @param {PdfBookmark} outline Bookmark.\n     * @returns {boolean} whether the bookmark is present or not.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get the bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     * let isPresent: boolean = bookmarks.contains(bookmark);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.contains = function (outline) {\n        return this._bookMarkList.indexOf(outline) !== -1;\n    };\n    PdfBookmarkBase.prototype._reproduceTree = function () {\n        var bookmark = this._getFirstBookmark(this);\n        var isBookmark = (bookmark) ? true : false;\n        while (isBookmark && bookmark._dictionary) {\n            this._bookMarkList.push(bookmark);\n            bookmark = bookmark._next;\n            isBookmark = (bookmark) ? true : false;\n        }\n    };\n    PdfBookmarkBase.prototype._getFirstBookmark = function (bookmarkBase) {\n        var bookmarkBaseDictionary = bookmarkBase._dictionary;\n        var bookMark;\n        if (bookmarkBaseDictionary && bookmarkBaseDictionary.has('First')) {\n            var bookMarkDictionary = bookmarkBaseDictionary.get('First');\n            if (bookMarkDictionary) {\n                bookMark = new PdfBookmark(bookMarkDictionary, this._crossReference);\n            }\n        }\n        return bookMark;\n    };\n    return PdfBookmarkBase;\n}());\nexport { PdfBookmarkBase };\n/**\n * Represents a bookmark in a PDF document\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmark = /** @class */ (function (_super) {\n    __extends(PdfBookmark, _super);\n    /**\n     * Initializes a new instance of the `PdfBookmark` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Bookmark dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmark(dictionary, crossReference) {\n        var _this = _super.call(this, dictionary, crossReference) || this;\n        if (!_this._dictionary.has('Dest') && _this._dictionary.has('A')) {\n            var actionDictionary = _this._dictionary.get('A');\n            if (actionDictionary && actionDictionary.has('D')) {\n                var destinationArray = actionDictionary.getRaw('D'); // eslint-disable-line\n                _this._dictionary.update('Dest', destinationArray);\n            }\n        }\n        _this._isLoadedBookmark = true;\n        return _this;\n    }\n    Object.defineProperty(PdfBookmark.prototype, \"destination\", {\n        /**\n         * Gets the destination (Read only).\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the destination\n         * let destination: PdfDestination = bookmark.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var namedDestination = this._obtainNamedDestination();\n            if (namedDestination === null || typeof namedDestination === 'undefined') {\n                value = _obtainDestination(this._dictionary, 'Dest');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"namedDestination\", {\n        /**\n         * Gets the named destination (Read only).\n         *\n         * @returns {PdfNamedDestination} Named destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._namedDestination === null || typeof this._namedDestination === 'undefined') {\n                this._namedDestination = this._obtainNamedDestination();\n            }\n            return this._namedDestination;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"title\", {\n        /**\n         * Gets the bookmark title (Read only).\n         *\n         * @returns {string} Bookmark title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark title\n         * let bookmarkTitle: string = bookmark.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._title === null || typeof this._title === 'undefined') {\n                this._title = this._obtainTitle();\n            }\n            return this._title;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"color\", {\n        /**\n         * Gets the bookmark color (Read only).\n         *\n         * @returns {number[]} Bookmark color.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark color\n         * let color: number[] = bookmark.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._color === null || typeof this._color === 'undefined') {\n                if (this._dictionary.has('C')) {\n                    this._color = _parseColor(this._dictionary.getArray('C'));\n                }\n            }\n            return (this._color) ? this._color : [0, 0, 0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"textStyle\", {\n        /**\n         * Gets the textStyle (Read only).\n         *\n         * @returns {PdfTextStyle} Text style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the textStyle\n         * let textStyle: PdfTextStyle = bookmark.textStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._textStyle === null || typeof this._textStyle === 'undefined') {\n                this._textStyle = this._obtainTextStyle();\n            }\n            return this._textStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"isExpanded\", {\n        /**\n         * Gets the boolean flag indicating whether the bookmark is expanded or not (Read only).\n         *\n         * @returns {boolean} whether the bookmark is expanded or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the boolean flag indicating whether the bookmark is expanded or not\n         * let isExpanded: boolean = bookmark.isExpanded;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Count')) {\n                var value = this._dictionary.get('Count');\n                if (value >= 0) {\n                    return true;\n                }\n            }\n            return this._isExpanded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"_next\", {\n        get: function () {\n            var nextBookmark;\n            if (this._dictionary.has('Next')) {\n                var dictionary = this._dictionary.get('Next');\n                if (dictionary) {\n                    nextBookmark = new PdfBookmark(dictionary, this._crossReference);\n                }\n            }\n            return nextBookmark;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBookmark.prototype._obtainTextStyle = function () {\n        var style = PdfTextStyle.regular;\n        if (this._dictionary.has('F')) {\n            var flag = this._dictionary.get('F');\n            var flagValue = 0;\n            if (typeof flag !== 'undefined' && flag !== null) {\n                flagValue = flag;\n            }\n            style |= flagValue;\n        }\n        return style;\n    };\n    PdfBookmark.prototype._obtainTitle = function () {\n        var value = '';\n        if (this._dictionary.has('Title')) {\n            value = this._dictionary.get('Title');\n        }\n        return value;\n    };\n    PdfBookmark.prototype._obtainNamedDestination = function () {\n        var document = this._crossReference._document;\n        var destinationCollection;\n        if (document) {\n            destinationCollection = document._destinationCollection;\n        }\n        var destination; // eslint-disable-line\n        var namedDestination;\n        if (destinationCollection) {\n            var dictionary = this._dictionary;\n            if (dictionary.has('A')) {\n                var action = dictionary.get('A');\n                if (action.has('D')) {\n                    destination = action.get('D');\n                }\n            }\n            else if (dictionary.has('Dest')) {\n                destination = dictionary.get('Dest');\n            }\n            if (destination) {\n                var value = void 0;\n                if (destination instanceof _PdfName) {\n                    value = destination.name;\n                }\n                else if (typeof destination === 'string') {\n                    value = destination;\n                }\n                if (value) {\n                    var namedDestinations = destinationCollection._namedDestinations;\n                    for (var i = 0; i < namedDestinations.length; i++) {\n                        namedDestination = namedDestinations[Number.parseInt(i.toString(), 10)];\n                        if (namedDestination._title === value) {\n                            destination = namedDestination;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return namedDestination;\n    };\n    return PdfBookmark;\n}(PdfBookmarkBase));\nexport { PdfBookmark };\n/**\n * Represents a named destination in a PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Gets the named destination\n * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfNamedDestination = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNamedDestination` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Destination dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfNamedDestination(dictionary, crossReference) {\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n    }\n    Object.defineProperty(PdfNamedDestination.prototype, \"destination\", {\n        /**\n         * Gets the destination.\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the destination\n         * let destination: PdfDestination = namedDestination.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destination;\n        },\n        /**\n         * Sets the destination.\n         *\n         * @param {PdfDestination} value destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the destination\n         * namedDestination.destination = new PdfDestination(page, [100, 200]);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                value._parent = this;\n                this._destination = value;\n                this._destination._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNamedDestination.prototype, \"title\", {\n        /**\n         * Gets the title.\n         *\n         * @returns {string} title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the title\n         * let title: string = namedDestination.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._title;\n        },\n        /**\n         * Sets the title.\n         *\n         * @param {string} value title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the title\n         * namedDestination.title = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._title) {\n                this._title = value;\n                this._dictionary.update('Title', value);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfNamedDestination;\n}());\nexport { PdfNamedDestination };\nvar _PdfNamedDestinationCollection = /** @class */ (function () {\n    function _PdfNamedDestinationCollection(dictionary, crossReference) {\n        this._namedDestinations = [];\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (crossReference) {\n            this._crossReference = crossReference;\n        }\n        if (dictionary && dictionary.has('Dests')) {\n            var destination = dictionary.get('Dests');\n            if (destination) {\n                if (destination.has('Names')) {\n                    this._addCollection(destination);\n                }\n                else if (destination.has('Kids')) {\n                    var destinationArray = destination.getArray('Kids'); // eslint-disable-line\n                    for (var i = 0; i < destinationArray.length; i++) {\n                        var destinationElement = destinationArray[Number.parseInt(i.toString(), 10)];\n                        this._addCollection(destinationElement);\n                    }\n                }\n            }\n        }\n    }\n    _PdfNamedDestinationCollection.prototype._addCollection = function (destination) {\n        var elements = destination.getRaw('Names'); // eslint-disable-line\n        var ref; // eslint-disable-line\n        var dictionary;\n        if (elements instanceof _PdfReference) {\n            ref = this._crossReference._fetch(elements);\n        }\n        if (ref && Array.isArray(ref) && ref.length > 0) {\n            elements = ref;\n        }\n        if (elements && Array.isArray(elements) && elements.length > 0) {\n            for (var i = 1; i < elements.length; i = i + 2) {\n                var reference = elements[i]; // eslint-disable-line\n                if (reference instanceof _PdfReference) {\n                    var destinationArray = this._crossReference._fetch(reference); // eslint-disable-line\n                    if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n                        dictionary = new _PdfDictionary();\n                        dictionary.update('D', destinationArray);\n                    }\n                    else {\n                        dictionary = this._crossReference._fetch(reference);\n                    }\n                }\n                else if ((dictionary === null || typeof dictionary === 'undefined') && Array.isArray(reference)) {\n                    dictionary = new _PdfDictionary();\n                    dictionary.update('D', reference);\n                }\n                if (dictionary) {\n                    var namedDestination = new PdfNamedDestination(dictionary, this._crossReference);\n                    var value = elements[i - 1];\n                    var destinationObject = void 0;\n                    var destinationArray = void 0; // eslint-disable-line\n                    if (value) {\n                        namedDestination._title = value;\n                        if (dictionary.has('D')) {\n                            destinationArray = dictionary.get('D');\n                            destinationObject = new PdfDestination();\n                            var reference_1 = destinationArray[0];\n                            if (destinationArray && destinationArray[0] instanceof _PdfReference) {\n                                var pageDictionary = this._crossReference._fetch(reference_1);\n                                var loadedDocument = this._crossReference._document;\n                                var index = void 0;\n                                if (loadedDocument && pageDictionary) {\n                                    index = _getPageIndex(loadedDocument, pageDictionary);\n                                    if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                        destinationObject._index = index;\n                                        destinationObject.page = loadedDocument.getPage(index);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (destinationArray[1] instanceof _PdfName) {\n                        var left = void 0;\n                        var height = void 0;\n                        var zoom = void 0;\n                        var mode = destinationArray[1].name;\n                        var page = destinationObject.page;\n                        switch (mode) {\n                            case 'Fit':\n                                destinationObject._destinationMode = PdfDestinationMode.fitToPage;\n                                break;\n                            case 'XYZ':\n                                destinationObject._destinationMode = PdfDestinationMode.location;\n                                if (destinationArray.length > 2) {\n                                    left = destinationArray[2];\n                                }\n                                if (destinationArray.length > 3) {\n                                    height = destinationArray[3];\n                                }\n                                if (destinationArray.length > 4) {\n                                    zoom = destinationArray[4];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                                    destinationObject._location = [leftValue, topValue];\n                                    if (page.rotation !== PdfRotationAngle.angle0) {\n                                        topValue = _checkRotation(page, height, left);\n                                    }\n                                    destinationObject._zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                                    if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                        || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                        destinationObject._isValid = false;\n                                    }\n                                }\n                                break;\n                            case 'FitH':\n                            case 'FitBH':\n                                destinationObject._destinationMode = PdfDestinationMode.fitH;\n                                if (destinationArray.length >= 3) {\n                                    height = destinationArray[2];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    destinationObject._location = [0, topValue];\n                                }\n                                if (height === null || typeof height === 'undefined') {\n                                    destinationObject._isValid = false;\n                                }\n                                break;\n                            case 'FitR':\n                                destinationObject._destinationMode = PdfDestinationMode.fitR;\n                                break;\n                        }\n                    }\n                    destinationObject._parent = namedDestination;\n                    namedDestination._destination = destinationObject;\n                    this._namedDestinations.push(namedDestination);\n                }\n            }\n        }\n    };\n    return _PdfNamedDestinationCollection;\n}());\nexport { _PdfNamedDestinationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { _bytesToString, _getNewGuidString } from './../utils';\nimport { _ExportHelper } from './xfdf-document';\nvar _XmlDocument = /** @class */ (function (_super) {\n    __extends(_XmlDocument, _super);\n    function _XmlDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _XmlDocument.prototype._exportAnnotations = function () {\n        throw new Error('Method not implemented.');\n    };\n    _XmlDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._format = 'XML';\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XmlDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        if (this._asPerSpecification) {\n            writer._writeStartElement('fields');\n            writer._writeAttributeString('xfdf', 'http://ns.adobe.com/xfdf-transition/', 'xmlns', null);\n        }\n        else {\n            writer._writeStartElement('Fields');\n        }\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                if (field !== null && typeof field !== 'undefined' && field.export) {\n                    this._exportFormFieldData(field);\n                }\n            }\n            this._writeFormFieldData(writer, this._asPerSpecification);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XmlDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    var text = key.replace(/ /g, '');\n                    writer._writeStartElement(text.toString());\n                    writer._writeAttributeString('original', key.toString(), 'xfdf', null);\n                }\n                else {\n                    writer._writeStartElement(key.toString());\n                }\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        else {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    key = key.replace(/ /g, '_x0020_');\n                }\n                writer._writeStartElement(key.toString());\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        writer._writeEndElement();\n    };\n    _XmlDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var value = _bytesToString(data);\n        value = value.replace(/(\\r\\n|\\n|\\r)/gm, '');\n        value = value.replace(/[^\\x20-\\x7E]/g, '');\n        this._xmlDocument = (new DOMParser()).parseFromString(value, 'text/xml');\n        this._checkXml(this._xmlDocument);\n        this._xmlImport = true;\n        this._parseFormData(this._xmlDocument.documentElement);\n        this._xmlImport = false;\n    };\n    _XmlDocument.prototype._parseFormData = function (root) {\n        var child = root.childNodes;\n        if (child !== null && typeof child !== 'undefined' && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode !== null && typeof childNode !== 'undefined' && childNode.nodeType === 1) {\n                    var element = childNode;\n                    var text = '';\n                    if (element.attributes !== null && typeof element.attributes !== 'undefined' && element.attributes.length > 0) {\n                        var attribute = element.attributes.item(0); // eslint-disable-line\n                        if (attribute !== null && typeof attribute !== 'undefined' && attribute.name === 'xfdf:original') {\n                            text = attribute.value;\n                        }\n                    }\n                    else {\n                        text = element.tagName;\n                    }\n                    var v = element.textContent;\n                    if (text !== null && text !== undefined && text.length > 0) {\n                        this._table.set(text, v);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XmlDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var text = key.toString();\n                if (text.indexOf('_x0020_') !== -1) {\n                    text = text.replace(/_x0020_/g, ' ');\n                }\n                var index = form._getFieldIndex(text);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        param.push(value);\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    _XmlDocument.prototype._checkXml = function (xmlDocument) {\n        if (xmlDocument.getElementsByTagName('parsererror').length > 0) {\n            throw new Error('Invalid XML file.');\n        }\n    };\n    return _XmlDocument;\n}(_ExportHelper));\nexport { _XmlDocument };\n","/**\n * `PdfFileStructure` class represents the internal structure of the PDF file.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the internal file structure of the PDF document\n * let fileStructure: PdfFileStructure = document.fileStructure;\n * // Set the cross reference type\n * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileStructure = /** @class */ (function () {\n    function PdfFileStructure() {\n    }\n    Object.defineProperty(PdfFileStructure.prototype, \"crossReferenceType\", {\n        /**\n         * Gets the cross reference type of the PDF document.\n         *\n         * @returns {PdfCrossReferenceType} - Returns the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._crossReferenceType;\n        },\n        /**\n         * Sets the cross reference type of the PDF document.\n         *\n         * @param {PdfCrossReferenceType} value - Specifies the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Set the cross reference type\n         * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._crossReferenceType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFileStructure;\n}());\nexport { PdfFileStructure };\n","import { _PdfStream } from './base-stream';\nimport { _PdfCrossReference } from './pdf-cross-reference';\nimport { _Linearization } from './pdf-parser';\nimport { _isWhiteSpace, FormatError, _decode } from './utils';\nimport { _PdfCatalog } from './pdf-catalog';\nimport { _PdfDictionary, _PdfReference, _isName, _PdfName, _clearPrimitiveCaches } from './pdf-primitives';\nimport { PdfPage } from './pdf-page';\nimport { Save } from '@syncfusion/ej2-file-utils';\nimport { DataFormat, PdfPermissionFlag, PdfTextAlignment, PdfPageOrientation, PdfRotationAngle } from './enumerator';\nimport { PdfForm } from './form/form';\nimport { PdfBrush } from './graphics/pdf-graphics';\nimport { PdfFontFamily, PdfFontStyle, PdfStandardFont } from './fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './fonts/pdf-string-format';\nimport { _XfdfDocument } from './import-export/xfdf-document';\nimport { _JsonDocument } from './import-export/json-document';\nimport { _FdfDocument } from './import-export/fdf-document';\nimport { PdfBookmarkBase, _PdfNamedDestinationCollection } from './pdf-outline';\nimport { _XmlDocument } from './import-export/xml-document';\nimport { PdfFileStructure } from './pdf-file-structure';\n/**\n * Represents a PDF document and can be used to parse an existing PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Flatten annotations and form fields\n * document.flatten = true;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function () {\n    function PdfDocument(data, password) {\n        this._headerSignature = new Uint8Array([0x25, 0x50, 0x44, 0x46, 0x2d]);\n        this._startXrefSignature = new Uint8Array([0x73, 0x74, 0x61, 0x72, 0x74, 0x78, 0x72, 0x65, 0x66]);\n        this._endObjSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x6f, 0x62, 0x6a]);\n        this._version = '';\n        this._permissions = PdfPermissionFlag.default;\n        this._isEncrypted = false;\n        this._isUserPassword = false;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = false;\n        this._isExport = false;\n        this._allowCustomData = false;\n        if (!data) {\n            throw new Error('PDF data cannot be undefined or null');\n        }\n        this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        this._fileStructure = new PdfFileStructure();\n        this._crossReference = new _PdfCrossReference(this, password);\n        this._pages = new Map();\n        this._checkHeader();\n        this._crossReference._setStartXRef(this._startXRef);\n        try {\n            this._parse(false);\n        }\n        catch (e) {\n            if (e.name === 'XRefParseException') {\n                this._parse(true);\n            }\n            else {\n                throw e;\n            }\n        }\n        this._crossReference._version = this._version;\n    }\n    Object.defineProperty(PdfDocument.prototype, \"_allowImportCustomData\", {\n        get: function () {\n            return this._allowCustomData;\n        },\n        set: function (value) {\n            this._allowCustomData = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_linearization\", {\n        get: function () {\n            if (!this._linear) {\n                var value = void 0;\n                try {\n                    value = new _Linearization(this._stream);\n                }\n                catch (err) { } // eslint-disable-line\n                this._linear = value;\n            }\n            return this._linear;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_startXRef\", {\n        get: function () {\n            var stream = this._stream;\n            var startXRef = 0;\n            if (this._linearization && this._linearization.isValid) {\n                stream.reset();\n                if (this._find(stream, this._endObjSignature)) {\n                    startXRef = stream.position + 6 - stream.start;\n                }\n            }\n            else {\n                var step = 1024;\n                var startXRefLength = this._startXrefSignature.length;\n                var found = false;\n                var position = stream.end;\n                while (!found && position > 0) {\n                    position -= step - startXRefLength;\n                    if (position < 0) {\n                        position = 0;\n                    }\n                    stream.position = position;\n                    found = this._find(stream, this._startXrefSignature, step, true);\n                }\n                if (found) {\n                    stream.skip(9);\n                    var ch = void 0;\n                    do {\n                        ch = stream.getByte();\n                    } while (_isWhiteSpace(ch));\n                    var str = '';\n                    while (ch >= 0x20 && ch <= 0x39) {\n                        str += String.fromCharCode(ch);\n                        ch = stream.getByte();\n                    }\n                    startXRef = parseInt(str, 10);\n                    if (isNaN(startXRef)) {\n                        startXRef = 0;\n                    }\n                }\n            }\n            return startXRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isEncrypted\", {\n        /**\n         * Gets a value indicating whether the document is encrypted. (Read Only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is encrypted.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is encrypted.\n         * let isEncrypted: boolean = document.isEncrypted;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEncrypted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isUserPassword\", {\n        /**\n         * Gets a value indicating whether the document is decrypted using the user password. (Read only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is decrypted using the user password.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is decrypted using the user password\n         * let isUserPassword: boolean = document.isUserPassword;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUserPassword;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageCount\", {\n        /**\n         * Gets the page count (Read only).\n         *\n         * @returns {number} Number of pages\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the page count\n         * let count: number = document.pageCount;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pageCount === 'undefined') {\n                this._pageCount = 0;\n                if (this._linearization && this._linearization.isValid) {\n                    this._pageCount = this._linearization.pageCount;\n                }\n                else {\n                    this._pageCount = this._catalog.pageCount;\n                }\n            }\n            return this._pageCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"form\", {\n        /**\n         * Gets the PDF form fields included in the document (Read only).\n         *\n         * @returns {PdfForm} Form object\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._form === 'undefined') {\n                this._form = new PdfForm(this._catalog.acroForm, this._crossReference);\n            }\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag to flatten the annotations and form fields.\n         *\n         * @returns {boolean} Flag to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the flatten value applied\n         * let flatten: boolean = document.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag to flatten the annotations and form fields.\n         *\n         * @param {boolean} value to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Flatten PDF annotations and form fields\n         * document.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"permissions\", {\n        /**\n         * Gets the permission flag of the PDF document (Read only).\n         *\n         * @returns {PdfPermissionFlag} permission flag. Default value is PdfPermissionFlag.default.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the permission flag\n         * let permission: PdfPermissionFlag = document.permissions;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._crossReference) {\n                var flag = this._crossReference._permissionFlags;\n                if (typeof flag !== 'undefined') {\n                    this._permissions = (flag & ~-3904);\n                }\n            }\n            return this._permissions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"bookmarks\", {\n        /**\n         * Gets the bookmarks (Read only).\n         *\n         * @returns {PdfBookmarkBase} Bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var catalog = this._catalog;\n            if (catalog && catalog._catalogDictionary.has('Outlines')) {\n                var outlines = catalog._catalogDictionary.get('Outlines');\n                if (outlines) {\n                    this._bookmarkBase = new PdfBookmarkBase(outlines, this._crossReference);\n                    if (outlines.has('First')) {\n                        this._bookmarkBase._reproduceTree();\n                    }\n                }\n            }\n            return this._bookmarkBase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"fileStructure\", {\n        /**\n         * Gets the internal structure of the PDF document.\n         *\n         * @returns {PdfFileStructure} The internal structure of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fileStructure;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfPage` at the specified index.\n     *\n     * @param {number} pageIndex Page index.\n     * @returns {PdfPage} PDF page at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.getPage = function (pageIndex) {\n        if (pageIndex < 0 || pageIndex >= this.pageCount) {\n            throw new Error('Invalid page index');\n        }\n        var cachedPage = this._pages.get(pageIndex);\n        if (cachedPage) {\n            return cachedPage;\n        }\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization;\n        var promise;\n        if (_linearization && _linearization.isValid && _linearization.pageFirst === pageIndex) {\n            promise = this._getLinearizationPage(pageIndex);\n        }\n        else {\n            promise = _catalog.getPageDictionary(pageIndex);\n        }\n        var page = new PdfPage(this._crossReference, pageIndex, promise.dictionary, promise.reference);\n        this._pages.set(pageIndex, page);\n        return page;\n    };\n    PdfDocument.prototype.addPage = function (arg1, arg2) {\n        var settings;\n        var pageIndex;\n        if (typeof arg2 !== 'undefined') {\n            settings = arg2;\n            pageIndex = arg1;\n            this._checkPageNumber(pageIndex);\n        }\n        else if (typeof arg1 === 'undefined') {\n            settings = new PdfPageSettings();\n            pageIndex = this.pageCount;\n        }\n        else if (arg1 instanceof PdfPageSettings) {\n            settings = arg1;\n            pageIndex = this.pageCount;\n        }\n        else {\n            settings = new PdfPageSettings();\n            pageIndex = arg1;\n            this._checkPageNumber(pageIndex);\n        }\n        var sectionDictionary = new _PdfDictionary(this._crossReference);\n        sectionDictionary.update('Type', _PdfName.get('Pages'));\n        sectionDictionary.update('Count', 1);\n        this._updatePageSettings(sectionDictionary, settings);\n        var sectionReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(sectionReference, sectionDictionary);\n        sectionDictionary.objId = sectionReference.toString();\n        var pageDictionary = new _PdfDictionary(this._crossReference);\n        pageDictionary.update('Type', _PdfName.get('Page'));\n        var pageReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pageReference, pageDictionary);\n        pageDictionary.objId = pageReference.toString();\n        pageDictionary.update('Parent', sectionReference);\n        sectionDictionary.update('Kids', [pageReference]);\n        if (this.pageCount === 0) {\n            var parentReference = this._catalog._catalogDictionary._get('Pages');\n            if (parentReference && this._catalog._topPagesDictionary) {\n                this._catalog._topPagesDictionary.update('Kids', [sectionReference]);\n                sectionDictionary.update('Parent', parentReference);\n            }\n            else {\n                this._catalog._catalogDictionary.update('Pages', sectionReference);\n            }\n            this._pages = new Map();\n            this._pageCount = 1;\n        }\n        else {\n            var lastPage_1 = this.getPage(pageIndex === this.pageCount ? (pageIndex - 1) : pageIndex);\n            if (lastPage_1 && lastPage_1._pageDictionary) {\n                var parentReference = lastPage_1._pageDictionary._get('Parent');\n                var parentDictionary = this._crossReference._fetch(parentReference);\n                if (parentDictionary && parentDictionary.has('Kids')) {\n                    var kids = parentDictionary.get('Kids');\n                    if (kids) {\n                        if (pageIndex === this.pageCount) {\n                            kids.push(sectionReference);\n                        }\n                        else {\n                            var newKids_1 = [];\n                            kids.forEach(function (entry) {\n                                if (entry === lastPage_1._ref) {\n                                    newKids_1.push(sectionReference);\n                                }\n                                newKids_1.push(entry);\n                            });\n                            kids = newKids_1;\n                            this._updatePageCache(pageIndex);\n                        }\n                        parentDictionary.update('Kids', kids);\n                        sectionDictionary.update('Parent', parentReference);\n                        this._updatePageCount(parentDictionary, 1);\n                        this._pageCount = this.pageCount + 1;\n                    }\n                }\n            }\n        }\n        var result = new PdfPage(this._crossReference, pageIndex, pageDictionary, pageReference);\n        result._pageSettings = settings;\n        result._isNew = true;\n        this._pages.set(pageIndex, result);\n        return result;\n    };\n    PdfDocument.prototype.removePage = function (argument) {\n        var targetPage = (argument instanceof PdfPage) ? argument : this.getPage(argument);\n        this._removePage(targetPage);\n    };\n    PdfDocument.prototype._checkPageNumber = function (index) {\n        if (index < 0 || index > this.pageCount) {\n            throw new Error('Index out of range');\n        }\n    };\n    PdfDocument.prototype._updatePageCount = function (dictionary, valueToIncrement) {\n        dictionary.update('Count', dictionary.get('Count') + valueToIncrement);\n        if (dictionary.has('Parent')) {\n            var parentDictionary = dictionary.get('Parent');\n            if (parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                this._updatePageCount(parentDictionary, valueToIncrement);\n            }\n        }\n    };\n    PdfDocument.prototype._updatePageSettings = function (dictionary, settings) {\n        var bounds = [0, 0, settings.size[0], settings.size[1]];\n        dictionary.update('MediaBox', bounds);\n        dictionary.update('CropBox', bounds);\n        var rotate = Math.floor(settings.rotation) * 90;\n        if (rotate >= 360) {\n            rotate = rotate % 360;\n        }\n        dictionary.update('Rotate', rotate);\n    };\n    PdfDocument.prototype._updatePageCache = function (index, isIncrement) {\n        if (isIncrement === void 0) { isIncrement = true; }\n        var updatedData = new Map();\n        for (var i = this.pageCount - 1; i >= 0; i--) {\n            var page = this.getPage(i);\n            if (isIncrement) {\n                if (i >= index) {\n                    updatedData.set(i + 1, page);\n                    page._pageIndex = i + 1;\n                }\n                else {\n                    updatedData.set(i, page);\n                }\n            }\n            else {\n                if (i > index) {\n                    updatedData.set(i - 1, page);\n                    page._pageIndex = i - 1;\n                }\n                else if (i !== index) {\n                    updatedData.set(i, page);\n                }\n            }\n        }\n        this._pages = updatedData;\n        if (!isIncrement) {\n            this._pageCount = this._pages.size;\n        }\n    };\n    PdfDocument.prototype._removePage = function (pageToRemove) {\n        var bookMarkMap = this._parseBookmarkDestination();\n        if (bookMarkMap && bookMarkMap.has(pageToRemove)) {\n            var bookmarks = bookMarkMap.get(pageToRemove);\n            if (bookmarks) {\n                for (var i = 0; i < bookmarks.length; i++) {\n                    var bookmark = bookmarks[Number.parseInt(i.toString(), 10)];\n                    if (bookmark) {\n                        var bookmarkDictionary = bookmark._dictionary;\n                        if (bookmarkDictionary) {\n                            if (bookmarkDictionary.has('A')) {\n                                bookmarkDictionary.update('A', null);\n                            }\n                            bookmarkDictionary.update('Dest', null);\n                        }\n                    }\n                }\n            }\n        }\n        this._removePageTemplates(pageToRemove);\n        for (var i = this.form.count - 1; i >= 0; --i) {\n            var field = this.form.fieldAt(i);\n            if (field && field.page === pageToRemove) {\n                this.form.removeFieldAt(i);\n            }\n        }\n        this._updatePageCache(pageToRemove._pageIndex, false);\n        this._removeParent(pageToRemove._ref, pageToRemove._pageDictionary);\n        if (this._crossReference._cacheMap.has(pageToRemove._ref)) {\n            pageToRemove._pageDictionary._updated = false;\n        }\n    };\n    PdfDocument.prototype._removeParent = function (referenceToRemove, dictionary) {\n        if (dictionary.has('Parent')) {\n            var parentReference = dictionary._get('Parent');\n            var parentDictionary = this._crossReference._fetch(parentReference);\n            if (parentDictionary && parentDictionary.has('Kids')) {\n                var kids = parentDictionary.get('Kids');\n                if (kids.length === 1 && parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                    this._removeParent(parentReference, parentDictionary);\n                }\n                else {\n                    kids = kids.filter(function (item) { return item !== referenceToRemove; });\n                    parentDictionary.update('Kids', kids);\n                    this._updatePageCount(parentDictionary, -1);\n                }\n            }\n        }\n    };\n    PdfDocument.prototype._parseBookmarkDestination = function () {\n        var current = this.bookmarks;\n        if (typeof this._bookmarkHashTable === 'undefined' && current) {\n            this._bookmarkHashTable = new Map();\n            var stack = [];\n            var nodeInformation = { index: 0, kids: current._bookMarkList };\n            do {\n                for (; nodeInformation.index < nodeInformation.kids.length;) {\n                    current = nodeInformation.kids[nodeInformation.index];\n                    var namedDestination = current.namedDestination;\n                    if (namedDestination) {\n                        if (namedDestination.destination) {\n                            var page = namedDestination.destination.page;\n                            var list = this._bookmarkHashTable.get(page);\n                            if (!list) {\n                                list = [];\n                            }\n                            list.push(current);\n                            this._bookmarkHashTable.set(page, list);\n                        }\n                    }\n                    else {\n                        var destination = current.destination;\n                        if (destination) {\n                            var page = destination.page;\n                            var list = this._bookmarkHashTable.get(page);\n                            if (!list) {\n                                list = [];\n                            }\n                            list.push(current);\n                            this._bookmarkHashTable.set(page, list);\n                        }\n                    }\n                    nodeInformation.index += 1;\n                    if (current.count > 0) {\n                        stack.push(nodeInformation);\n                        nodeInformation = { index: 0, kids: current._bookMarkList };\n                        continue;\n                    }\n                }\n                if (stack.length > 0) {\n                    nodeInformation = stack.pop();\n                    while (nodeInformation.index === nodeInformation.kids.length && stack.length > 0) {\n                        nodeInformation = stack.pop();\n                    }\n                }\n            } while (nodeInformation.index < nodeInformation.kids.length);\n        }\n        return this._bookmarkHashTable;\n    };\n    PdfDocument.prototype._removePageTemplates = function (page) {\n        var dictionary;\n        if (this._catalog._catalogDictionary.has('Names')) {\n            dictionary = this._catalog._catalogDictionary.get('Names');\n            if (dictionary) {\n                this._removeInternalTemplates(dictionary, 'Pages', page);\n                this._removeInternalTemplates(dictionary, 'Templates', page);\n            }\n        }\n    };\n    PdfDocument.prototype._removeInternalTemplates = function (dictionary, key, page) {\n        if (dictionary.has(key)) {\n            var namedObject = dictionary.get(key);\n            if (namedObject && namedObject.has('Names')) {\n                var nameCollection = namedObject.getArray('Names');\n                if (nameCollection && nameCollection.length > 0) {\n                    var namedPageCollection = this._getUpdatedPageTemplates(nameCollection, page);\n                    var namedPageDictionary = new _PdfDictionary(this._crossReference);\n                    namedPageDictionary.update('Names', namedPageCollection);\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, namedPageDictionary);\n                    namedPageDictionary.objId = reference.toString();\n                    dictionary.update(key, reference);\n                }\n            }\n        }\n    };\n    PdfDocument.prototype._getUpdatedPageTemplates = function (namedPages, page) {\n        if (namedPages.length > 0) {\n            for (var i = 1; i <= namedPages.length; i = i + 2) {\n                var pageDictionary = namedPages[Number.parseInt(i.toString(), 10)];\n                if (pageDictionary && page._pageDictionary === pageDictionary) {\n                    namedPages.pop();\n                    namedPages.pop();\n                    return namedPages;\n                }\n            }\n        }\n        return namedPages;\n    };\n    /**\n     * Reorders the pages in the PDF document.\n     *\n     * @param {number[]} orderArray The page sequence to arrange the pages.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Reorders the pages in the PDF document\n     * document.reorderPages([3, 2, 1]);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.reorderPages = function (orderArray) {\n        var _this = this;\n        orderArray.forEach(function (pageNumber) {\n            _this._checkPageNumber(pageNumber);\n        });\n        var sortedArray = this._sortedArray(orderArray);\n        var ascendingOrder = orderArray.slice().sort(function (a, b) { return a - b; });\n        var inputArray = Array.from({ length: this.pageCount }, function (_, i) { return i; });\n        var pagesToRemove = inputArray.filter(function (element) { return sortedArray.indexOf(element) === -1; });\n        for (var i = pagesToRemove.length - 1; i >= 0; i--) {\n            this.removePage(pagesToRemove[Number.parseInt(i.toString(), 10)]);\n        }\n        var newkids = [];\n        var newPages = new Map();\n        var parentReference = this._catalog._catalogDictionary._get('Pages');\n        var _loop_1 = function (i) {\n            var indexPage = this_1.getPage(ascendingOrder.indexOf(sortedArray[Number.parseInt(i.toString(), 10)]));\n            indexPage._pageIndex = i;\n            newPages.set(i, indexPage);\n            var sectionDictionary = new _PdfDictionary(this_1._crossReference);\n            sectionDictionary.update('Type', _PdfName.get('Pages'));\n            sectionDictionary.update('Count', 1);\n            sectionDictionary.update('Parent', parentReference);\n            var sectionReference = this_1._crossReference._getNextReference();\n            sectionDictionary.objId = sectionReference.toString();\n            sectionDictionary.update('Kids', [indexPage._ref]);\n            newkids.push(sectionReference);\n            var parentDictionary = indexPage._pageDictionary.get('Parent');\n            while (parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                parentDictionary.forEach(function (key, value) {\n                    switch (key) {\n                        case 'Parent':\n                        case 'Kids':\n                        case 'Type':\n                        case 'Count':\n                            break;\n                        case 'Resources':\n                            _this._cloneResources(parentDictionary.get('Resources'), sectionDictionary);\n                            break;\n                        default:\n                            if (!sectionDictionary.has(key)) {\n                                sectionDictionary.update(key, value);\n                            }\n                            break;\n                    }\n                });\n                if (parentDictionary.has('Parent')) {\n                    parentDictionary = parentDictionary.get('Parent');\n                }\n                else {\n                    break;\n                }\n            }\n            this_1._crossReference._cacheMap.set(sectionReference, sectionDictionary);\n            var pageSection = this_1._crossReference._fetch(indexPage._ref);\n            pageSection.update('Parent', sectionReference);\n        };\n        var this_1 = this;\n        for (var i = 0; i < sortedArray.length; i++) {\n            _loop_1(i);\n        }\n        this._pages = newPages;\n        if (this._catalog) {\n            var parentDictionary = this._catalog._topPagesDictionary;\n            if (parentDictionary && parentDictionary.has('Kids')) {\n                var kids = parentDictionary.get('Kids');\n                kids = newkids;\n                parentDictionary.update('Kids', kids);\n            }\n        }\n    };\n    PdfDocument.prototype._sortedArray = function (order) {\n        var sortedArray = [];\n        order.forEach(function (num) {\n            if (sortedArray.indexOf(num) === -1) {\n                sortedArray.push(num);\n            }\n        });\n        return sortedArray;\n    };\n    PdfDocument.prototype._cloneResources = function (source, target) {\n        var _this = this;\n        if (!target.has('Resources')) {\n            target.update('Resources', source);\n        }\n        else {\n            var resourceDictionary_1 = target.get('Resources');\n            source.forEach(function (key, value) {\n                if (resourceDictionary_1.has(key)) {\n                    _this._cloneInnerResources(key, value, resourceDictionary_1);\n                }\n                else {\n                    resourceDictionary_1.update(key, value);\n                }\n            });\n        }\n    };\n    PdfDocument.prototype._cloneInnerResources = function (key, value, resourceDictionary) {\n        if (value instanceof _PdfDictionary) {\n            var oldObject_1 = resourceDictionary.get(key);\n            if (oldObject_1) {\n                var hasNew_1 = false;\n                oldObject_1.forEach(function (innerKey, innerValue) {\n                    if (!oldObject_1.has(innerKey)) {\n                        oldObject_1.update(innerKey, innerValue);\n                        hasNew_1 = true;\n                    }\n                });\n                if (hasNew_1) {\n                    resourceDictionary._updated = true;\n                }\n            }\n            else {\n                resourceDictionary.update(key, value);\n            }\n        }\n        else if (Array.isArray(value)) {\n            var oldArray_1 = resourceDictionary.get(key); // eslint-disable-line\n            if (oldArray_1) {\n                var hasNew_2 = false;\n                value.forEach(function (entry) {\n                    if (oldArray_1.indexOf(entry) === -1) {\n                        oldArray_1.push(entry);\n                        hasNew_2 = true;\n                    }\n                });\n                if (hasNew_2) {\n                    resourceDictionary._updated = true;\n                }\n            }\n            else {\n                resourceDictionary.update(key, value);\n            }\n        }\n    };\n    PdfDocument.prototype.save = function (filename) {\n        this._doPostProcess(this._flatten);\n        if (typeof filename === 'string') {\n            Save.save(filename, new Blob([this._crossReference._save()], { type: 'application/pdf' }));\n        }\n        else {\n            return this._crossReference._save();\n        }\n    };\n    /**\n     * Saves the document to the specified output stream and return the stream as Blob.\n     *\n     * @returns {Promise<{ blobData: Blob }>} Saved PDF data as `Blob`.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Save the document\n     * let data: Promise<{ blobData: Blob }> = document.saveAsBlob();\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.saveAsBlob = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var obj = { blobData: new Blob([_this._crossReference._save()], { type: 'application/pdf' }) };\n            resolve(obj);\n        });\n    };\n    PdfDocument.prototype.exportAnnotations = function (arg1, arg2) {\n        this._isExport = true;\n        this._doPostProcessOnAnnotations();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfAnnotationExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfAnnotationExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument();\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument();\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument();\n            }\n            else {\n                return undefined;\n            }\n            helper.exportAppearance = settings.exportAppearance;\n        }\n        else {\n            helper = new _XfdfDocument();\n        }\n        var result = helper._exportAnnotations(this);\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([result], { type: 'text/plain' }));\n        }\n        else {\n            return result;\n        }\n    };\n    PdfDocument.prototype.exportFormData = function (arg1, arg2) {\n        this._doPostProcessOnFormFields();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfFormFieldExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfFormFieldExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.xml) {\n                helper = new _XmlDocument(settings.exportName);\n            }\n            else {\n                return undefined;\n            }\n            helper._asPerSpecification = settings.asPerSpecification;\n        }\n        else {\n            helper = new _XfdfDocument();\n            helper._asPerSpecification = false;\n        }\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([helper._exportFormFields(this)], { type: 'text/plain' }));\n        }\n        else {\n            return helper._exportFormFields(this);\n        }\n    };\n    PdfDocument.prototype.importAnnotations = function (data, dataFormat) {\n        if (dataFormat === DataFormat.xfdf) {\n            var xfdf = new _XfdfDocument();\n            xfdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.json) {\n            var json = new _JsonDocument();\n            json._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.fdf) {\n            var fdf = new _FdfDocument();\n            fdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n    };\n    PdfDocument.prototype.importFormData = function (data, dataFormat) {\n        if (this.form.count > 0) {\n            if (dataFormat === DataFormat.xfdf) {\n                var xfdf = new _XfdfDocument();\n                xfdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.json) {\n                var json = new _JsonDocument();\n                json._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.fdf) {\n                var fdf = new _FdfDocument();\n                fdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.xml) {\n                var xml = new _XmlDocument();\n                xml._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n        }\n    };\n    /**\n     * Disposes the current instance of `PdfDocument` class.\n     *\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        if (this._crossReference) {\n            this._crossReference._destroy();\n            this._crossReference = undefined;\n        }\n        if (this._catalog) {\n            this._catalog._destroy();\n            this._catalog = undefined;\n        }\n        this._endObjSignature = undefined;\n        this._headerSignature = undefined;\n        if (this._pages && this._pages.size > 0) {\n            this._pages.forEach(function (value) {\n                value._destroy();\n            });\n        }\n        this._pages.clear();\n        this._pages = undefined;\n        this._startXrefSignature = undefined;\n        this._stream = undefined;\n        this._form = undefined;\n        _clearPrimitiveCaches();\n    };\n    Object.defineProperty(PdfDocument.prototype, \"_destinationCollection\", {\n        get: function () {\n            if (this._namedDestinationCollection === null || typeof this._namedDestinationCollection === 'undefined') {\n                if (this._catalog._catalogDictionary.has('Names')) {\n                    var names = this._catalog._catalogDictionary.get('Names');\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection(names, this._crossReference);\n                }\n                else {\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection();\n                }\n            }\n            return this._namedDestinationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype._getLinearizationPage = function (pageIndex) {\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization, _crossReference = _a._crossReference;\n        var ref = _PdfReference.get(_linearization.objectNumberFirst, 0);\n        try {\n            var obj = _crossReference._fetch(ref); // eslint-disable-line\n            if (obj instanceof _PdfDictionary) {\n                var type = obj.get('Type');\n                if (_isName(type, 'Page') || (!obj.has('Type') && !obj.has('Kids'))) {\n                    if (!_catalog.pageKidsCountCache.has(ref)) {\n                        _catalog.pageKidsCountCache.put(ref, 1);\n                    }\n                    if (!_catalog.pageIndexCache.has(ref)) {\n                        _catalog.pageIndexCache.put(ref, 0);\n                    }\n                    return { dictionary: obj, reference: ref };\n                }\n            }\n            throw new FormatError('The Linearization dictionary does not point to a valid Page dictionary.');\n        }\n        catch (reason) {\n            return _catalog.getPageDictionary(pageIndex);\n        }\n    };\n    PdfDocument.prototype._checkHeader = function () {\n        var stream = this._stream;\n        stream.reset();\n        if (!this._find(stream, this._headerSignature)) {\n            return;\n        }\n        stream.moveStart();\n        var version = '';\n        var ch = stream.getByte();\n        while (ch > 0x20) {\n            if (version.length >= 12) {\n                break;\n            }\n            version += String.fromCharCode(ch);\n            ch = stream.getByte();\n        }\n        if (!this._version) {\n            this._version = version.substring(5);\n        }\n    };\n    PdfDocument.prototype._parse = function (recoveryMode) {\n        this._crossReference._parse(recoveryMode);\n        this._catalog = new _PdfCatalog(this._crossReference);\n        if (this._catalog.version) {\n            this._version = this._catalog.version;\n        }\n    };\n    PdfDocument.prototype._find = function (stream, signature, limit, backwards) {\n        if (limit === void 0) { limit = 1024; }\n        if (backwards === void 0) { backwards = false; }\n        var signatureLength = signature.length;\n        var scanBytes = stream.peekBytes(limit);\n        var scanLength = scanBytes.length - signatureLength;\n        if (scanLength <= 0) {\n            return false;\n        }\n        if (backwards) {\n            var signatureEnd = signatureLength - 1;\n            var position = scanBytes.length - 1;\n            while (position >= signatureEnd) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position - j] === signature[signatureEnd - j]) {\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position - signatureEnd;\n                    return true;\n                }\n                position--;\n            }\n        }\n        else {\n            var position = 0;\n            while (position <= scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return true;\n                }\n                position++;\n            }\n        }\n        return false;\n    };\n    PdfDocument.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._doPostProcessOnFormFields(isFlatten);\n        this._doPostProcessOnAnnotations(isFlatten);\n    };\n    PdfDocument.prototype._doPostProcessOnFormFields = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._catalog._catalogDictionary.has('AcroForm')) {\n            this.form._doPostProcess(isFlatten);\n            if (isFlatten) {\n                var formObject = this._catalog._catalogDictionary.getRaw('AcroForm');\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary._updated = true;\n                if (formObject instanceof _PdfReference) {\n                    this._crossReference._cacheMap.set(formObject, dictionary);\n                }\n                else {\n                    this.form._dictionary = dictionary;\n                    this._crossReference._allowCatalog = true;\n                }\n                this.form._clear();\n            }\n        }\n    };\n    PdfDocument.prototype._doPostProcessOnAnnotations = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        for (var i = 0; i < this.pageCount; i++) {\n            var page = this.getPage(i);\n            page.annotations._isExport = this._isExport;\n            page.annotations._doPostProcess(isFlatten);\n            if (isFlatten) {\n                if (page._pageDictionary.has('Annots')) {\n                    delete page._pageDictionary._map.Annots;\n                    page._pageDictionary._updated = true;\n                }\n                page.annotations._clear();\n            }\n        }\n    };\n    PdfDocument.prototype._addWatermarkText = function () {\n        if (this.pageCount > 0) {\n            for (var index = 0; index < this._pageCount; index++) {\n                var page = this.getPage(index);\n                if (page) {\n                    try {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        graphics.setTransparency(0.20);\n                        graphics.drawRectangle(0, 0, page.size[0], 33.75, new PdfBrush([255, 255, 255]));\n                        graphics.restore();\n                        graphics.save();\n                        graphics.setTransparency(0.50);\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.regular);\n                        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        graphics.drawString('Created with a trial version of Syncfusion Essential PDF', font, [0, 0, page.size[0], 33.75], null, new PdfBrush([0, 0, 0]), format);\n                        graphics.restore();\n                    }\n                    catch (e) { } // eslint-disable-line\n                }\n            }\n        }\n    };\n    return PdfDocument;\n}());\nexport { PdfDocument };\n/**\n * Represents annotation export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * // Set the data format defined in annotation export settings\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationExportSettings = /** @class */ (function () {\n    function PdfAnnotationExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportAppearance = false;\n    }\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in annotation export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Get the data format defined in annotation export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in annotation export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the data format defined in annotation export settings\n         * settings.dataFormat = DataFormat.json;\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"exportAppearance\", {\n        /**\n         * Gets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Get the boolean value indicating whether the appearance of a particular object can be exported or not\n         * let appearance: boolean = settings.exportAppearance;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportAppearance;\n        },\n        /**\n         * Sets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the boolean value indicating whether the appearance of a particular object can be exported or not\n         * settings.exportAppearance = true;\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportAppearance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationExportSettings;\n}());\nexport { PdfAnnotationExportSettings };\n/**\n * Represents form fields export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Sets the form field data export settings with output data format.\n * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n * // Set the data format defined in form field export settings.\n * settings.dataFormat = DataFormat.json;\n * // Export form field to JSON format\n * let json: Uint8Array = document.exportFormData(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFormFieldExportSettings = /** @class */ (function () {\n    function PdfFormFieldExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportName = '';\n        this._asPerSpecification = true;\n    }\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in form field export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the data format defined in form field export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in form field export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the data format defined in form field export settings.\n         * settings.dataFormat = DataFormat.json;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"exportName\", {\n        /**\n         * Gets the export name defined in form field export settings.\n         *\n         * @returns {string} - Returns the string value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the export name defined in form field export settings\n         * let name: boolean = settings.exportName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportName;\n        },\n        /**\n         * Sets the export name defined in form field export settings.\n         *\n         * @param {string} name - Specifies the export name of the form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the export name defined in form field export settings.\n         * settings.exportName = ‘JobApplication’.\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (name) {\n            this._exportName = name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"asPerSpecification\", {\n        /**\n         * Gets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let asPerSpecification: boolean = settings.asPerSpecification;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._asPerSpecification;\n        },\n        /**\n         * Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * settings.asPerSpecification = true;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._asPerSpecification = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFormFieldExportSettings;\n}());\nexport { PdfFormFieldExportSettings };\n/**\n * The class provides various settings related to PDF pages.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Create a new PDF page settings instance\n * let pageSettings: PdfPageSettings = new PdfPageSettings();\n * // Sets the margins\n * pageSettings.margins = new PdfMargins(40);\n * // Sets the page size\n * pageSettings.size = [595, 842];\n * // Sets the page orientation\n * pageSettings.orientation = PdfPageOrientation.landscape;\n * // Add a new PDF page with page settings\n * page = document.addPage(pageSettings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPageSettings = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPageSettings` class\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Create a new PDF page settings instance\n     * let pageSettings: PdfPageSettings = new PdfPageSettings();\n     * // Sets the margins\n     * pageSettings.margins = new PdfMargins(40);\n     * // Sets the page size\n     * pageSettings.size = [595, 842];\n     * // Sets the page orientation\n     * pageSettings.orientation = PdfPageOrientation.landscape;\n     * // Add a new PDF page with page settings\n     * page = document.addPage(pageSettings);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfPageSettings() {\n        this._size = [595, 842];\n        this._isOrientation = false;\n        this._orientation = PdfPageOrientation.portrait;\n        this._size = [595, 842];\n        this._margins = new PdfMargins();\n        this._rotation = PdfRotationAngle.angle0;\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets the orientation of the page.\n         *\n         * @returns {PdfPageOrientation} The orientation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page size\n         * pageSettings.size = [842, 595];\n         * // Gets the page orientation\n         * let orientation: PdfPageOrientation = pageSettings.orientation;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._orientation;\n        },\n        /**\n         * Sets the orientation of the page.\n         *\n         * @param {PdfPageOrientation} value The orientation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._isOrientation = true;\n            if (this._orientation !== value) {\n                this._orientation = value;\n                this._updateSize(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        /**\n         * Gets the size of the page.\n         *\n         * @returns {number[]} The width and height of the page as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the width and height of the PDF page as number array\n         * let size: number[] = page.size;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        /**\n         * Sets the width and height of the page.\n         *\n         * @param {number[]} value The width and height of the page as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isOrientation) {\n                this._updateSize(value);\n            }\n            else {\n                this._size = value;\n                this._updateOrientation();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets the margin value of the page.\n         *\n         * @returns {PdfMargins} PDF margins\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the margins\n         * let margins: PdfMargins = pageSettings.margins;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._margins;\n        },\n        /**\n         * Sets the margin value of the page.\n         *\n         * @param {PdfMargins} value PDF margins\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * pageSettings.margins = new PdfMargins(40);\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._margins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the PDF page.\n         *\n         * @returns {PdfRotationAngle} PDF rotation angle\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the rotation angle\n         * let rotation: PdfRotationAngle = pageSettings.rotation;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the PDF page.\n         *\n         * @param {PdfRotationAngle} value PDF rotation angle\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the rotation angle\n         * pageSettings.rotation = PdfRotationAngle.angle90;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._rotation = value;\n            if (value >= 4) {\n                this._rotation = (value % 4);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPageSettings.prototype._updateSize = function (value) {\n        var pageOrientation;\n        var pageSize;\n        if (Array.isArray(value)) {\n            pageOrientation = this.orientation;\n            pageSize = value;\n        }\n        else {\n            pageOrientation = value;\n            pageSize = this._size;\n        }\n        if (pageOrientation === PdfPageOrientation.portrait) {\n            this._size = [Math.min(pageSize[0], pageSize[1]), Math.max(pageSize[0], pageSize[1])];\n        }\n        else {\n            this._size = [Math.max(pageSize[0], pageSize[1]), Math.min(pageSize[0], pageSize[1])];\n        }\n    };\n    PdfPageSettings.prototype._updateOrientation = function () {\n        this._orientation = (this._size[1] >= this._size[0]) ? PdfPageOrientation.portrait : PdfPageOrientation.landscape;\n    };\n    PdfPageSettings.prototype._getActualSize = function () {\n        var width = this._size[0] - (this._margins._left + this._margins._right);\n        var height = this._size[1] - (this._margins._top + this._margins._bottom);\n        return [width, height];\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n/**\n * A class representing PDF page margins.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Create a new PDF page settings instance\n * let pageSettings: PdfPageSettings = new PdfPageSettings();\n * // Sets the margins\n * pageSettings.margins = new PdfMargins(40);\n * // Sets the page size\n * pageSettings.size = [595, 842];\n * // Sets the page orientation\n * pageSettings.orientation = PdfPageOrientation.landscape;\n * // Add a new PDF page with page settings\n * page = document.addPage(pageSettings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfMargins = /** @class */ (function () {\n    function PdfMargins(all) {\n        if (typeof all === 'undefined') {\n            this._left = this._right = this._top = this._bottom = 40;\n        }\n        else {\n            this._left = this._right = this._top = this._bottom = all;\n        }\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        /**\n         * Gets the left margin value of the page.\n         *\n         * @returns {number} Left margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the left margin\n         * let left: number = pageSettings.margins.left;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._left;\n        },\n        /**\n         * Sets the left margin value of the page.\n         *\n         * @param {number} value Left margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._left = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets the right margin value of the page.\n         *\n         * @returns {number} Right margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the right margin\n         * let right: number = pageSettings.margins.right;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._right;\n        },\n        /**\n         * Sets the right margin value of the page.\n         *\n         * @param {number} value - Right margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._right = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets the top margin value of the page.\n         *\n         * @returns {number} Top margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the top margin\n         * let top: number = pageSettings.margins.top;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._top;\n        },\n        /**\n         *Sets the top margin value of the page.\n         *\n         * @param {number} value Top margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._top = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Get the bottom margin value of the page.\n         *\n         * @returns {number} Bottom margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the bottom margin\n         * let bottom: number = pageSettings.margins.bottom;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._bottom;\n        },\n        /**\n         * Sets the bottom margin value of the page.\n         *\n         * @param {number} value Bottom margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._bottom = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","var _PdfPaddings = /** @class */ (function () {\n    function _PdfPaddings(left, top, right, bottom) {\n        this._left = 0;\n        this._right = 0;\n        this._top = 0;\n        this._bottom = 0;\n        if (typeof left === 'undefined') {\n            this._left = 0.5;\n            this._right = 0.5;\n            this._top = 0.5;\n            this._bottom = 0.5;\n        }\n        else {\n            this._left = left;\n            this._right = right;\n            this._top = top;\n            this._bottom = bottom;\n        }\n    }\n    return _PdfPaddings;\n}());\nexport { _PdfPaddings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfImage } from './pdf-image';\nimport { _PdfName } from './../../pdf-primitives';\nimport { _decode, _getDecoder } from './../../utils';\nimport { _PdfColorSpace } from './../../enumerator';\nimport { _PngDecoder } from './png-decoder';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        _this._imageStatus = true;\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            _this._initializeAsync(encodedString);\n        }\n        else {\n            _this._initializeAsync(encodedString);\n        }\n        return _this;\n    }\n    PdfBitmap.prototype._initializeAsync = function (encodedString) {\n        var byteArray = new Uint8Array(encodedString.length);\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            byteArray = _decode(encodedString, false);\n        }\n        else if (encodedString instanceof Uint8Array) {\n            byteArray = encodedString;\n        }\n        this._decoder = _getDecoder(byteArray);\n        this.height = this._decoder._height;\n        this.width = this._decoder._width;\n        this._bitsPerComponent = this._decoder._bitsPerComponent;\n    };\n    PdfBitmap.prototype._save = function () {\n        this._imageStatus = true;\n        this._imageStream = this._decoder._getImageDictionary();\n        if (this._decoder && this._decoder instanceof _PngDecoder) {\n            var decoder = this._decoder;\n            this._maskStream = decoder._maskStream;\n            if (decoder._isDecode) {\n                if (decoder._colorSpace) {\n                    this._setColorSpace();\n                }\n            }\n            else {\n                this._setColorSpace();\n            }\n        }\n        else {\n            this._setColorSpace();\n        }\n    };\n    PdfBitmap.prototype._setColorSpace = function () {\n        var stream = this._imageStream;\n        var dictionary = stream.dictionary;\n        var color = dictionary.get('ColorSpace');\n        var colorSpace;\n        if (color.name === 'DeviceCMYK') {\n            colorSpace = _PdfColorSpace.cmyk;\n        }\n        else if (color.name === 'DeviceGray') {\n            colorSpace = _PdfColorSpace.grayScale;\n        }\n        if (this._decoder instanceof _PngDecoder) {\n            var cs = this._decoder._colorSpace; // eslint-disable-line\n            if (typeof cs !== 'undefined' && cs !== null) {\n                colorSpace = _PdfColorSpace.indexed;\n            }\n        }\n        switch (colorSpace) {\n            case _PdfColorSpace.cmyk:\n                dictionary.update('Decode', [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceCMYK'));\n                break;\n            case _PdfColorSpace.grayScale:\n                dictionary.update('Decode', [0.0, 1.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceGray'));\n                break;\n            case _PdfColorSpace.rgb:\n                dictionary.update('Decode', [0.0, 1.0, 0.0, 1.0, 0.0, 1.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceRGB'));\n                break;\n            case _PdfColorSpace.indexed:\n                dictionary.update('ColorSpace', this._decoder._colorSpace);\n                break;\n            default:\n                break;\n        }\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n"],"names":["_toUnsigned","value","bits","Math","pow","_toSigned16","_toSigned32","_copyRange","target","at","source","start","end","length","max","min","i","j","Number","parseInt","toString","_checkType","imageData","header","_getDecoder","decoder","_JpegDecoder","Error","_PngDecoder","_checkRotation","page","height","left","topValue","rotation","PdfRotationAngle","angle90","angle180","angle270","size","_getPageIndex","loadedDocument","pageDictionary","index","pageCount","getPage","_pageDictionary","_annotationFlagsToString","flag","values","PdfAnnotationFlag","hidden","push","invisible","locked","noRotate","noView","noZoom","print","readOnly","toggleNoView","default","join","_stringToAnnotationFlags","_stringToPdfString","charCodeAt","encoding","TextDecoder","fatal","decode","_stringToBytes","e","buffer","translateTable","code","String","fromCharCode","charAt","isDirect","isPassword","destination","bytes","charCode","Uint8Array","_areArrayEqual","first","second","_numberToString","isInteger","toFixed","_areNotEqual","current","result","_bytesToString","isJson","stringBuffer","_decodeUTF8","apply","chunkEnd","chunk","subarray","byte","codePoint","_stringToUnicodeArray","output","_byteArrayToHexString","byteArray","nextHexByte","toUpperCase","_hexStringToByteArray","hexString","array","substring","_hexStringToString","_isWhiteSpace","ch","_decode","input","chr1","chr2","chr3","enc2","enc3","key","resultIndex","totalLength","replace","Array","indexOf","_encode","currentChar","_getInheritableProperty","dictionary","isArray","stopWhenFound","parentKey","_i","arguments","refSet","Set","_PdfDictionary","objId","has","add","getArray","get","undefined","hasParent","element","_parseRectangle","isWidget","rectangle","x","y","width","elements","x1","y1","x2","y2","parseFloat","_calculateBounds","rect","mBox","mediaBox","cropBox","_toRectangle","abs","_fromRectangle","_getUpdatedBounds","pageWidth","pageHeight","_convertToColor","colorString","color","_getColorValue","exec","_parseColor","entry","round","r","g","b","c","m","k","fBlack","_mapBorderStyle","style","token","PdfBorderStyle","dot","dashed","beveled","inset","underline","_PdfName","_mapBorderEffectStyle","PdfBorderEffectStyle","solid","cloudy","_reverseMapEndingStyle","PdfLineEndingStyle","openArrow","closedArrow","rOpenArrow","rClosedArrow","butt","diamond","circle","square","slash","_mapLineEndingStyle","defaultValue","none","toLowerCase","_mapHighlightMode","mode","PdfHighlightMode","noHighlighting","outline","invert","_reverseMapHighlightMode","_reverseMapBlendMode","PdfBlendMode","multiply","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","hue","saturation","luminosity","_mapBlendMode","normal","name","_floatToString","returnString","_addProcSet","procset","update","_getNewGuidString","random","_escapePdfName","char","_getBezierArc","extent","swap","angle","count","ceil","firstAngle","secondAngle","half","PI","cos","sin","points","zero","one","cosZero","cosOne","sinZero","sinOne","_findPage","document","reference","annots","ref","_PdfReference","_checkField","check","state","actual","_getItemValue","itemDictionary","itemValue","appearance","_PdfBaseStream","keys_1","forEach","_getStateTemplate","item","template","_PdfCheckFieldState","checked","_dictionary","stream","getRaw","PdfTemplate","_crossReference","colorName","_setMatrix","box","_content","set","matrix","_PdfTransformationMatrix","_translate","_rotate","_matrix","_elements","_styleToString","PdfCheckBoxStyle","cross","star","_stringToStyle","_mapMeasurementUnit","unitString","unit","PdfMeasurementUnit","centimeter","inch","millimeter","pica","point","_mapMarkupAnnotationType","text","type","PdfTextMarkupAnnotationType","highlight","squiggly","strikeOut","_reverseMarkupAnnotationType","_mapGraphicsUnit","_PdfGraphicsUnit","_mapRubberStampIcon","iconString","icon","PdfRubberStampAnnotationIcon","approved","asIs","completed","confidential","departmental","draft","experimental","expired","final","forComment","forPublicRelease","informationOnly","notApproved","notForPublicRelease","preliminaryResults","sold","topSecret","void","_mapPopupIcon","PdfPopupIcon","note","comment","help","insert","newParagraph","paragraph","_reverseMapAnnotationState","PdfAnnotationState","accepted","rejected","cancel","marked","unmarked","unknown","_mapAnnotationState","_reverseMapAnnotationStateModel","PdfAnnotationStateModel","review","_mapAnnotationStateModel","_mapAttachmentIcon","PdfAttachmentIcon","pushPin","tag","graph","paperClip","_mapAnnotationIntent","intentString","intent","PdfAnnotationIntent","freeTextCallout","freeTextTypeWriter","_reverseMapPdfFontStyle","PdfFontStyle","regular","bold","italic","strikeout","_getSpecialCharacter","_getLatinCharacter","_encodeValue","hex","_getCommentsOrReview","annotation","isReview","reviewHistory","comments","_checkReview","_checkComment","_updateVisibility","_map","F","_updated","PdfFormFieldVisibility","hiddenPrintable","visible","DV","mkDict","BG","_removeDuplicateReference","crossTable","oldAppearance","_isNew","_fetch","appearanceDictionary","_removeDuplicateFromResources","_cacheMap","delete","resources","_removeReferences","crossReference","firstKey","secondKey","normalElement","_PdfStream","_defaultToString","Object","prototype","call","_obtainFontDetails","form","widget","field","fontSize","font","defaultAppearance","fontFamily","textCollection","split","trim","fonts","fontDictionary","baseFont","textFontStyle","_getFontStyle","includes","_mapFont","PdfStandardFont","PdfFontFamily","helvetica","_circleCaptionFont","fontFamilyString","position","PdfLineAnnotation","_isLoaded","courier","symbol","timesRoman","zapfDingbats","PdfCjkStandardFont","PdfCjkFontFamily","monotypeSungLight","sinoTypeSongLight","monotypeHeiMedium","hanyangSystemsGothicMedium","hanyangSystemsShinMyeongJoMedium","heiseiKakuGothicW5","heiseiMinchoW3","fontData","_tryParseFontStream","_hasData","base64String","PdfTrueTypeFont","PdfAnnotation","_type","_PdfAnnotationType","widgetAnnotation","PdfField","widgetDictionary","apperance","resourcesDictionary","descendant","descendantFont","fontDescriptor","fontFile","getByteRange","_checkInkPoints","inkPointsCollection","previousCollection","_obtainDestination","destinationArray","_document","bottom","right","zoom","pageNumber","document_1","leftValue","angle0","PdfDestination","_index","_setValidation","PdfDestinationMode","fitR","fitH","fitToPage","_updateBounds","bounds","_bounds","_page","_pageSettings","pageSettings","pageBounds","margins","top","_decodeText","isColorSpace","startsWith","endsWith","codeUnit","_getSize","_stringToBigEndianBytes","_clearPrimitiveCaches","nameCache","create","cmdCache","refCache","_isName","_isCommand","command","_PdfCommand","PdfLineIntent","PdfLineCaptionType","PdfCrossReferenceType","PdfTextAlignment","PdfCircleMeasurementType","DataFormat","PdfFormFieldsTabOrder","_FieldFlag","_SignatureFlag","PdfPermissionFlag","PdfPageOrientation","PdfTextDirection","PdfSubSuperScript","PdfFillMode","PdfDashStyle","PdfLineCap","PdfLineJoin","_PdfWordWrapType","_FontDescriptorFlag","_TrueTypeCmapFormat","_TrueTypeCmapEncoding","_TrueTypePlatformID","_TrueTypeMicrosoftEncodingID","_TrueTypeMacintoshEncodingID","_TrueTypeCompositeGlyphFlag","_ImageFormat","_TokenType","PdfTextStyle","_PdfColorSpace","_PdfStreamWriter","this","_newLine","_whiteSpace","_stream","_writeOperator","write","_saveGraphicsState","_restoreGraphicsState","_writeComment","_setGraphicsState","_modifyCtm","_toString","_modifyTM","_setColorSpace","forStroking","_setColor","_appendRectangle","_writePoint","_clipPath","isEvenOdd","_fillPath","_closeFillPath","_strokePath","_closeStrokePath","_fillStrokePath","_closeFillStrokePath","_endPath","_setFont","_setTextScaling","textScaling","_closePath","_startNextLine","_showText","_writeText","_write","string","builder","data","_escapeSymbols","_beginText","_endText","_beginPath","_appendLineSegment","_appendBezierSegment","x3","y3","_setTextRenderingMode","renderingMode","_setCharacterSpacing","charSpacing","_setWordSpacing","wordSpacing","_showNextLineText","unicode","_setLineDashPattern","pattern","patternOffset","tempPattern","_setMiterLimit","miterLimit","_setLineWidth","_setLineCap","lineCapStyle","_setLineJoin","lineJoinStyle","_executeObject","_beginMarkupSequence","_endMarkupSequence","_clear","_bytes","currentData","PdfStringFormat","arg1","arg2","horizontalScalingFactor","rightToLeft","_wordWrapType","word","lineLimit","alignment","lineAlignment","PdfVerticalAlignment","characterSpacing","lineSpacing","clipPath","firstLineIndent","_internalParagraphIndent","measureTrailingSpaces","noClip","defineProperty","enumerable","configurable","_pdfSubSuperScript","__extends","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","_PdfFontMetrics","_lineGap","_getAscent","format","_ascent","_getDescent","_descent","_getLineGap","_getHeight","clearTypeFonts","clearTypeFontCollection","_size","subSuperScript","subScript","_subScriptSizeFactor","superScript","_superscriptSizeFactor","_WidthTable","_StandardWidthTable","_super","widths","_this","_itemAt","_toArray","_CjkWidthTable","defaultWidth","_defaultWidth","_from","_to","_appendToArray","_add","_CjkWidth","_CjkSameWidth","from","to","_widthFrom","_widthTo","_width","_CjkDifferentWidth","_widths","_PdfStringLayouter","_layout","_initialize","_doLayout","_font","_format","_rectangle","_reader","_StringTokenizer","_pageHeight","_close","_PdfStringLayoutResult","lineResult","lines","line","_peekLine","lineIndent","_getLineIndent","_layoutLine","numSymbolsInserted","returnedValue","_copyToResult","success","_read","_readLine","_finalizeResult","firstLine","paragraphIndent","_getLineHeight","_metrics","_getLineWidth","getLineWidth","_lineHeight","maxWidth","lineWidth","lineType","_LineType","firstParagraphLine","readWord","_addToLineResult","newLineBreak","curLine","curIndent","reader","_peekWord","_length","_position","curLineWidth","_getWrapType","wordOnly","_remainder","_peek","_wordWrap","character","stringValue","layoutBreak","_readWord","lastParagraphLine","_layoutLines","breakType","info","_LineInfo","_text","_lineType","_actualSize","allowPartialLines","maxHeight","_lines","len","expHeight","_trimLine","_end","_readToEnd","_empty","textValue","text2","_tab","_spaces","_TrueTypeTableInfo","_offset","_checksum","_TrueTypeOS2Table","_TrueTypePostTable","_TrueTypeNameTable","_TrueTypeMicrosoftCmapSubTable","_TrueTypeHorizontalHeaderTable","_TrueTypeHeadTable","_TrueTypeCmapTable","_TrueTypeCmapSubTable","_TrueTypeAppleCmapSubTable","_TrueTypeTrimmedCmapSubTable","_TrueTypeReader","_int32Size","_isFont","_isMacTtf","_isMacFont","_missedGlyphs","_tableNames","_entrySelectors","_fontData","_macintoshDictionary","Dictionary","_microsoftDictionary","_internalMacintoshGlyphs","_internalMicrosoftGlyphs","_TrueTypeMetrics","_readFontDictionary","nameTable","_readNameTable","headTable","_readHeadTable","_initializeFontName","_macStyle","_check","table","_readInt16","_tableDirectory","table_1","tableKey","_readString","_readInt32","setValue","_lowestPosition","_fixOffsets","minOffset","MAX_VALUE","tableKeys","keys","offset","getValue","shift","version","tableInfo","_getTable","_formatSelector","_readUInt16","_recordsCount","_nameRecords","record","_TrueTypeNameRecord","_platformID","_encodingID","_languageID","_nameID","_name","_version","_readFixed","_fontRevision","_checkSumAdjustment","_readUInt32","_magicNumber","_flags","_unitsPerEm","_created","_readInt64","_modified","_xMin","_yMin","_xMax","_yMax","_lowestReadableSize","_fontDirectionHint","_indexToLocalFormat","_glyphDataFormat","_readHorizontalHeaderTable","_ascender","_descender","_advanceWidthMax","_minLeftSideBearing","_minRightSideBearing","_xMaxExtent","_caretSlopeRise","_caretSlopeRun","_metricDataFormat","_numberOfHMetrics","_readOS2Table","_xAvgCharWidth","_usWeightClass","_usWidthClass","_fsType","_ySubscriptXSize","_ySubscriptYSize","_ySubscriptXOffset","_ySubscriptYOffset","_ySuperscriptXSize","_ySuperscriptYSize","_ySuperscriptXOffset","_ySuperscriptYOffset","_yStrikeoutSize","_yStrikeoutPosition","_sFamilyClass","_panose","_readBytes","_ulUnicodeRange1","_ulUnicodeRange2","_ulUnicodeRange3","_ulUnicodeRange4","_vendorIdentifier","_fsSelection","_usFirstCharIndex","_usLastCharIndex","_sTypoAscender","_sTypoDescender","_sTypoLineGap","_usWinAscent","_usWinDescent","_ulCodePageRange1","_ulCodePageRange2","_sxHeight","_sCapHeight","_usDefaultChar","_usBreakChar","_usMaxContext","_readPostTable","_formatType","_italicAngle","_underlinePosition","_underlineThickness","_isFixedPitch","_minType42","_maxType42","_minType1","_maxType1","_readWidthTable","glyphCount","unitsPerEm","glyph","_TrueTypeLongHorMetric","_advanceWidth","_lsb","glyphWidth","floor","_readCmapTable","_tablesCount","subTables","subTable","_readCmapSubTable","_getCmapEncoding","apple","_readAppleCmapTable","microsoft","_readMicrosoftCmapTable","trimmed","_readTrimmedCmapTable","_maxMacIndex","glyphInfo","_TrueTypeGlyph","_readByte","_getWidth","_charCode","macintosh","_addGlyph","collection","_microsoft","_segCountX2","_searchRange","_entrySelector","_rangeShift","segCount","_endCount","_readUShortArray","_reservedPad","_startCount","_idDelta","_idRangeOffset","_glyphID","codeOffset","id","_firstCode","_entryCount","_fontFamily","_postScriptName","obj","containsKey","glyphCode","platformID","encodingID","roman","_microsoftGlyphs","_macintoshGlyphs","_initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","_isSymbol","factor","_winAscent","_macAscent","_capHeight","_winDescent","_macDescent","_leading","_fontBox","_stemV","_widthTable","_updateWidth","_contains","_getGlyph","byteToProcess","space","_getString","_getDefaultGlyph","_setOffset","_readFontProgram","chars","glyphChars","_getGlyphChars","locaTable","_readLocaTable","_bIsLocaShort","_updateGlyphChars","result1","_generateGlyphTable","glyphTableSize","newLocaTable","newGlyphTable","result2","_updateLocaTable","newLocaSize","newLocaUpdated","_getFontProgram","activeGlyphs","sort","a","glyphSize","glyphIndex","_offsets","glyphSizeAligned","_align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","bShort","_TrueTypeLocaTable","clone","glyphCharKeys","nextKey","_processCompositeGlyph","glyphOffset","glyphHeader","_TrueTypeGlyphHeader","numberOfContours","xMin","yMin","xMax","yMax","skipBytes","flags","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","bLocaIsShort","writer","_BigEndianWriter","_writeShort","_writeInt","_data","newLocaTableOut","locaTableSize","_getFontProgramLength","fontProgramLength","entrySelector","_writeCheckSums","_writeGlyphs","tableNames","tableName","charKeys","usedTablesSize","nextTableSize","_writeString","checksum","_calculateCheckSum","_writeUInt","pos","byte1","byte2","byte3","byte4","_writeBytes","buff","i_1","written","read","_createInternals","obj1","_isFontPresent","isUnicode","i1","i2","i3","i4","low","n","_getCharacterWidth","_convertString","capacity","int32Size","int16Size","int64Size","_bufferLength","_buffer","length_1","_internalPosition","_flush","_UnicodeTrueTypeFont","_nameString","_isEmbedFont","_cmapPrefix","_cmapEndCodeSpaceRange","_cmapBeginRange","_cmapEndRange","_cmapSuffix","_fontSize","_fontString","_Initialize","_beginSave","_descendantFontBeginSave","_cmapBeginSave","_fontDictionaryBeginSave","_fontProgramBeginSave","_fontDescriptor","_fontProgram","_usedChars","_getDescendantWidth","_descendantFont","_fontDictionary","_cmap","_ttfReader","_ttfMetrics","_subsetName","_getFontName","_createDescendantFont","_createFontDictionary","_getInternals","ttfMetrics","_height","_isBold","_createFontDescriptor","systemInfo","_createSystemInfo","descriptor","metrics","_getDescriptorFlags","_getBoundBox","_generateFontProgram","fontProgram","_clearStream","_generateCmap","_toHexString","isCaseChange","s","last","middlePart","nextRange","_currentObj","fixedPitch","symbolic","nonSymbolic","_isItalic","forceBold","_setSymbols","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","_ArabicShapeRenderer","_arabicCharTable","_alef","_alefHamza","_alefHamzaBelow","_alefMadda","_lam","_hamza","_zeroWidthJoiner","_hamzaAbove","_hamzaBelow","_wawHamza","_yehHamza","_waw","_alefsura","_yeh","_farsiYeh","_shadda","_madda","_lwa","_lwawh","_lwawhb","_lwawm","_bwhb","_fathatan","_superalef","_vowel","_arabicMapTable","Map","_getCharacterShape","_shape","shapeText","_doShape","level","str","next","previous","_ArabicShape","present","_ligature","shapeCount","_getShapeCount","_shapes","_shapeValue","_append","_shapeLigature","shape","_shapeType","_shapeVowel","_Bidirectional","_indexes","_indexLevels","_mirroringShape","_update","_doMirrorShaping","res","_getLogicalToVisualString","inputText","isRtl","rtlCharacters","_RtlCharacters","_getVisualOrder","_setDefaultIndexLevel","_doOrder","resultBuilder","sIndex","eIndex","odd","even","_reArrange","pstart","pend","temp","_textOrder","_rtlCharacterTypes","L","lre","lro","R","AL","rle","rlo","pdf","EN","ES","ET","AN","CS","nsm","BN","B","S","WS","ON","_charTypes","_getCharacterCode","_doVisualOrder","_levels","characterCodes","_setDefaultLevels","_setLevels","_updateLevels","_result","_getEmbeddedCharactersLength","preview","preType","_checkEmbeddedCharacters","startType","endType","charType","_checkEuropeanDigits","_checkArabicCharacters","_checkEuropeanNumberSeparator","_checkEuropeanNumberTerminator","l","_getLength","_checkOtherNeutrals","_checkOtherCharacters","pst","_checkCharacters","validSet","t","lt","tt","rt","_RtlRenderer","_openBracket","_closeBracket","rtl","wordSpace","_isUnicode","_customLayout","_splitLayout","words","_customSplitLayout","_getGlyphIndex","glyphs","_glyphIndex","ttfReader","_fontInternal","unicodeLine","_UnicodeLine","textDirection","layouted","txt","_addCharacter","PdfFont","_style","_fontMetrics","_setInternals","internals","_pdfFontInternals","_getCharacterCount","symbols","numSymbols","curIndex","measureString","arg3","arg4","arg5","temparg2","layoutArea","temparg3","_applyFormatSettings","realWidth","_checkStyle","_initializeInternals","_getCharacterWidthInternal","_PdfStandardFontMetricsFactory","_getMetrics","_PdfCjkStandardFontMetricsFactory","_getEncoding","_getDescendantFont","_PdfCjkFontDescriptorFactory","_getFontDescriptor","_getSystemInformation","systemInformation","_createFontInternal","_calculateStyle","iStyle","_isEmbed","_isUnicodeFont","_getUnicodeLineWidth","codeWidth","internalFont","fontStyle","_getHelveticaMetrics","_getCourierMetrics","_getTimesMetrics","_getSymbolMetrics","_getZapfDingbatsMetrics","_subSuperScriptFactor","_helveticaBoldItalicAscent","_helveticaBoldItalicDescent","_helveticaBoldItalicName","_arialBoldWidth","_helveticaBoldAscent","_helveticaBoldDescent","_helveticaBoldName","_helveticaItalicAscent","_helveticaItalicDescent","_helveticaItalicName","_arialWidth","_helveticaAscent","_helveticaDescent","_helveticaName","_courierBoldItalicAscent","_courierBoldItalicDescent","_courierBoldItalicName","_fixedWidth","_courierBoldAscent","_courierBoldDescent","_courierBoldName","_courierItalicAscent","_courierItalicDescent","_courierItalicName","_courierAscent","_courierDescent","_courierName","_timesBoldItalicAscent","_timesBoldItalicDescent","_timesBoldItalicName","_timesRomanBoldItalicWidths","_timesBoldAscent","_timesBoldDescent","_timesBoldName","_timesRomanBoldWidth","_timesItalicAscent","_timesItalicDescent","_timesItalicName","_timesRomanItalicWidth","_timesAscent","_timesDescent","_timesName","_timesRomanWidth","_symbolAscent","_symbolDescent","_symbolName","_symbolWidth","_zapfDingbatsAscent","_zapfDingbatsDescent","_zapfDingbatsName","_zapfDingbatsWidth","_getHanyangSystemsGothicMedium","widthTable","_getHanyangSystemsShinMyeongJoMedium","_getHeiseiKakuGothicW5","_getHeiseiMinchoW3","_getMonotypeHeiMedium","_getMonotypeSungLight","_getSinoTypeSongLight","_fillMonotypeSungLight","fontMetrics","fontBox","_fillFontBox","_fillKnownInformation","_fillHeiseiKakuGothicW5","fontBoxItalic","_fillHanyangSystemsShinMyeongJoMedium","_fillHeiseiMinchoW3","_fillSinoTypeSongLight","_fillMonotypeHeiMedium","_fillHanyangSystemsGothicMedium","_PdfPath","_isRoundedRectangle","_fillMode","winding","_points","_pathTypes","_isStart","_addLine","_addPoints","_PathPointType","_addLines","linePoints","_addPoint","startIndex","endIndex","_lastPoint","_addArc","startAngle","sweepAngle","list","bezier","_addRectangle","_startFigure","_closeFigure","_addPolygon","newPoints","_addEllipse","_addBezierPoints","pointsCollection","inner1","inner2","_addBezier","firstX","firstY","secondX","secondY","endX","endY","closePath","_getBounds","xmin","xmax","ymin","ymax","PdfImage","_imageWidth","_imageHeight","_imagePhysicalDimension","_getPointSize","_horizontalResolution","draw","graphics","needSave","save","translateTransform","drawImage","restore","horizontalResolution","ucX","_PdfUnitConvertor","ucY","_convertUnits","pixel","PdfGraphics","content","xref","_pendingResource","_hasResourceReference","PdfPage","_source","_template","_resourceObject","_sw","_clipBounds","_m","_resourceMap","other","_transparencies","_setTransparencyData","PdfGraphicsState","_textRenderingMode","_charSpacing","_characterSpacing","_textScaling","_wordSpacing","_currentBrush","_currentPen","_currentFont","_graphicsState","_doRestore","pop","_transformationMatrix","drawRectangle","pen","brush","PdfPen","_stateControl","_drawGraphicsPath","drawPolygon","drawEllipse","_constructArcPath","drawArc","physicalDimension","_save","_getTranslateTransform","_getScaleTransform","sourceDictionary","keyName","isNew","_updateImageResource","resource","drawTemplate","_isExported","_importStream","scaleX","scaleY","needScale","needTransform","_origin","_isAnnotationTemplate","_needScale","scaleApplied","templateMatrix","templateBox","templateScaleX","templateScaleY","roundScaleX","roundScaleY","_scale","keyName_1","ref_1","isReference","_resources","base","_getNextReference","_processResources","_updatePendingResource","_reference","_updateFontResource","image","_imageStream","_maskStream","_maskReference","internal","_drawPath","path","_buildUpPath","drawRoundedRectangle","radius","diameter","arc","sweep","_writePen","_dashPattern","_dashOffset","_lineJoin","_lineCap","_miterLimit","_color","drawString","_checkCorrectLayoutRectangle","_drawStringLayoutResult","types","_getBezierPoint","_mediaBoxUpperRightBound","_colorSpaceInitialized","_startCutIndex","_initializeCurrentColorSpace","_brushControl","_penControl","_fontControl","hasResource","layoutRectangle","shouldClip","clipRegion","clipBounds","middle","setClip","_applyStringSettings","verticalAlignShift","_getTextVerticalAlignShift","_drawLayoutResult","_underlineStrikeoutText","_getNextPage","_pageIndex","tm","_TextRenderingMode","fill","fillStroke","stroke","clipFlag","cs","ws","ttfFont","lineInfo","hAlignShift","_getHorizontalAlignShift","_drawUnicodeLine","_drawAsciiLine","vAlignShift","baseline","useWordSpace","justify","_justifyLine","rtlRender","blocks","rightAlign","_drawUnicodeBlocks","_breakUnicodeLine","tokens","_convertToUnicode","xShift","spaceWidth","tokenWidth","textHeight","boundsHeight","boundsWidth","center","shouldJustify","_shouldJustify","hasWordSpacing","whitespacesCount","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","isUnderline","isStrikeout","linePen","_createUnderlineStrikeoutPen","underlineYOffset","strikeoutYOffset","_lineCount","hShift","drawLine","textSize","layoutedRectangle","fillMode","needClosing","isBrush","isPen","alternate","_initializeCoordinates","cbox","location_1","needTransformation","mbox","_cropBox","scaleTransform","_multiply","rotateTransform","setTransparency","transparencyData","transparencyKey","_TransparencyData","transparencyDict","_key","tkey","tdata","_clipTranslateMargins","_Matrix","arg6","_clone","slice","_transform","_offsetX","_offsetY","_g","PdfBrush","_dashStyle","flat","miter","_proportions","_updateProportions","_convertFromPixels","_convertToPixels","_XmlWriter","isAppearance","_bufferText","_namespaceStack","_elementStack","_currentState","_skipNamespace","_Namespace","_XmlElement","_set","_attributeStack","_writeStartDocument","standalone","_rawText","_writeStartElement","localName","prefix","namespace","_checkName","_startElementContent","_lookupPrefix","_lookupNamespace","_writeStartElementInternal","_writeEndElement","_writeEndElementInternal","_prefix","_localName","splice","_previousTop","_writeElementString","_writeAttributeString","_writeStartAttribute","_writeStringInternal","_writeEndAttribute","_writeInternal","_writeRaw","isRawString","_destroy","_writeStartAttributePrefixAndNameSpace","_writeStartAttributeSpecialAttribute","_skipPushAndWrite","_pushNamespaceExplicit","_pushNamespaceImplicit","_writeStartAttributeInternal","_writeNamespaceDeclaration","namespaceUri","_writeStartNamespaceDeclaration","inAttributeValue","_kind","_namespaceUri","_addNamespace","ns","kind","_lookupNamespaceIndex","existingNsIndex","isValid","_addAttribute","namespaceName","_XmlAttribute","_isDuplicate","test","previousTop","_ExportHelper","_asPerSpecification","_fileName","_formKey","_exportEmptyFields","_groupReferences","_groupHolders","_richTextPrefix","_table","_fields","_richTextValues","_jsonData","_openingBrace","_openingBracket","_closingBrace","_closingBracket","_colon","_doubleQuotes","_comma","_space","fdfString","_xmlImport","_exportFormFieldsData","export","_getEncodedFontDictionary","fieldName","_getEncodedValue","selectedValue","_getExportValue","PdfListBoxField","PdfComboBoxField","_obtainSelectedValue","radioButton","PdfRadioButtonListField","selectedIndex","options","isNaN","PdfCheckBoxField","_getAppearanceStateValue","itemAt","_defaultIndex","_exportFormFieldData","replaceValue","PdfTextBoxField","multiLine","PdfListField","_getAnnotationType","subtype","_getValue","primitive","_getValidString","colorArray","_getColor","kids","kid","structure","_encodeDictionary","_FontStructure","_replaceNotUsedCharacters","root","pdfEncoding","encodingDictionary","fontEncodeDictionary","differencesDictionary","result_1","isSkip_1","holder","updatedString","_fontType","_baseFontEncoding","_fontEncoding","_fontName","_addReferenceToGroup","_handlePopup","annotations","annotationDictionary","popupReference","popup","popupAnnotation","_parseAnnotation","_annotations","_parsedAnnotations","_importField","richTextValue","_getFieldIndex","fieldAt","_importFieldData","selectedValues_1","indexes_1","options_1","_options","option","AP","lowerCase","_containsExportValue","_kidsCount","_checkSelected","asEntry","normalTemplate","toLocaleLowerCase","_dispose","exportAppearance","_skipBorderStyle","_isAnnotationExport","_isAnnotationImport","_annotationTypes","_annotationAttributes","_xmlDocument","_parser","_XfdfDocument","fileName","_exportAnnotations","_exportFormFields","_checkAnnotationType","_exportAnnotationData","exportEmptyFields","_writeFormFieldData","isAcrobat","_getElements","flag_1","_writeFieldName","hasId","_root","parentElements","newTable","pageIndex","PdfFileLinkAnnotation","PdfTextWebLinkAnnotation","PdfDocumentLinkAnnotation","PdfUriAnnotation","_writeAnnotationData","hasAppearance","borderEffect","_writeDictionary","isBorderStyle","_writeAttribute","_getAppearanceString","_exportMeasureDictionary","sound","soundDictionary","getBytes","fsDictionary","efDictionary","fStream","fDictionary","paramsDictionary","vertices","elementCount","_writeRawData","defaultStyle","inkList","textWriter","_writeAppearanceDictionary","_writeObject","_writePrefix","_writeArray","streamDictionary","getString","_getFormatedString","isParsing","_writeColor","attribute","isLowerCase","_exportMeasureFormatDetails","measurementDetails","_importAnnotations","xml","DOMParser","parseFromString","_readXmlData","documentElement","_importFormData","nodeType","_checkXfdf","xList","getElementsByTagName","child","hasChildNodes","childeNodes","childNodes","childNode","_parseAnnotationData","inReplyTo","IRT","_parseFormData","nodeName","fileNameElement","hasAttribute","getAttribute","fieldList","filedElement","_importFormNodes","node","textName","skip","name_1","parentElement","dataValues","textContent","name_2","richText","innerHTML","hasAttributes","_getAnnotationDictionary","_isImported","_ref","isValidType","points_1","_addLineEndStyle","_addAnnotationData","_addBorderStyle","_applyAttributeValues","attributes","_parseInnerElements","_addMeasureDictionary","borderEffectDictionary","borderStyleDictionary","isBasicStyle","dashes_1","leaderExtend","_addString","_obtainPoints","_addInt","_addFloatPoints","_addFloat","annotFlag","flagType","_allowImportCustomData","children","this_1","childElement","popupDictionary","vertices_1","innerValue","verticesArray_1","_addAppearanceData","inkListCollection","inkChild","inkChildElement","points_2","pointsArray_1","_addStreamData","parent","raw","_addFileAttachment","_addSound","soundStream","_PdfContentStream","soundReference","fileDictionary","fileStream","param","embeddedFile","fileReference","innerText","atob","rootNode","rootElement","_getAppearance","_getStream","_addKey","_getDictionary","_getArray","_getFixed","_getInt","_getName","_getBoolean","_getData","isImage","_isCompress","Length","Filter","_addArrayElements","name_3","floatValue","intValue","bool","measurement","area","distance","xformat","measureDictionary","dDict","aDict","xDict","dArray","aArray","xArray","_addElements","beginLineStyle","endLineStyle","lineEndingStyles","_differencesDictionary","_getDifferencesDictionary","_getFontEncoding","baseFontEncoding","fontEncoding","differences","fontName","lastIndexOf","_decodeHexFontName","hexValue","_JsonDocument","_isImport","_isColorSpace","isAnnotationAdded","_exportAnnotation","_convertToJson","clear","rectArray","_writeInkList","_writeVertices","styleTable","textStyle","vertice","json","details","parentTable","appearanceTable","_writeTable","_convertToJsonArray","dataTable","streamTable","baseStream","isImageStream","flateStream","map","_parseJson","stringData","JSON","parse","pageAnnotations_1","pdfAnnotation","pageCount_1","pageKeys","page_1","pageAnnotation","pageAnnotationKeys","annotationKeys","annotations_1","annotation_1","outColor","dataStream","_addLinePoints","color_1","_parseFloatPoints","_addBoolean","styleKeys_1","style_1","count_1","styleKey","styleValue","gestureKeys","gesture","stringify","objectNumber","generationNumber","dashArray","dash","tArray","vArray","_readDictionaryElements","soundStream_1","fileDictionary_1","fileStream_1","param_1","decoded","_parseDictionary","_parseAppearance","int","fixed","boolean","dict","_parseStream","unicodeData","dataKeys","byteString","_parseStreamElements","_pendingResources","_isReadOnly","_writeTransformation","_isTemplateGraphics","_exportStream","jsonDocument","resourceTable","_appearance","hasCrossReference","PdfGoToAction","arg","_destination","PdfAction","_next","PdfFieldActions","_field","_mouseEnter","_getPdfAction","_updateAction","_mouseLeave","_mouseUp","_mouseDown","_gotFocus","_lostFocus","action","_destinationMode","location","_visible","_isTransparentBackColor","_isTransparentBorderColor","_defaultFont","_appearanceFont","_defaultItemFont","_flatten","_kids","_form","names","_actualName","_mappingName","mappingName","_alternateName","toolTip","_hasFlags","visibleNotPrintable","flagValue","_visibility","visibility","rotate","_defaultAppearance","_da","_PdfDefaultAppearance","_parseBackColor","_updateBackColor","_parseBorderColor","_updateBorderColor","_fieldFlags","required","border","PdfInteractiveBorder","PdfButtonField","borderStyle","_dash","_updateBorder","rotationAngle","noExport","index1","_tabIndex","_tabOrder","manual","tabOrder","annotationCollection","PdfAnnotationCollection","_annotationIndex","widgetRef","_gray","_silver","_white","_black","mkDictionary","_mkDictionary","hasTransparency","_hasBackColor","backColor","bgArray","_hasBorderColor","borderColor","BC","bsDictionary","W","_parsedItems","PdfWidgetAnnotation","_load","setAppearance","_setAppearance","removeItemAt","itemsCount","_getPage","_removeAnnotation","parsedItems_1","removeItem","da","bs","_checkFieldFlag","_initializeFont","fontDict","_drawRectangularControl","parameter","backBrush","_drawBorder","borderPen","borderWidth","_drawLeftTopShadow","_grayBrush","_drawRightBottomShadow","_silverBrush","_whiteBrush","shadowBrush","_drawRadioButton","checkSymbol","unchecked","pressedChecked","pressedUnchecked","_drawRoundBorder","_drawRoundShadow","outward","foreBrush","_drawCheckBox","inflateValue","shadowColor","leftTop","rightBottom","_blackBrush","yOffset","extraBorder","xPosition","xOffset","pageRotationAngle","state_1","size_1","z","_addToKid","currentIndex","_drawTemplate","_addToOptions","_listValues","_value","_pdfFont","_addAppearance","_rotateTextBox","_checkIndex","_getTextAlignment","_textAlignment","_setTextAlignment","_stringFormat","_parseItems","_autoResizeText","_defaultValue","password","doNotScroll","doNotSpellCheck","comb","fileSelect","highlightMode","_maxLength","maxLength","_isAutoResize","_spellCheck","_insertSpaces","_multiline","_password","_scrollable","_createItem","_create","textAlignment","actualName","_doPostProcess","isFlatten","_postProcess","_createAppearance","appearanceStream","_PaintParameter","backcolor","insertSpaces","_drawTextBox","scrollable","multiline","scroll","startlocation","isAutoFontSize","_actions","_assignText","fieldDictionary","pushButton","pressed","isPressed","_drawPressedButton","_drawButton","PdfStateItem","V","AS","_drawAppearance","normalChecked","normalCheckedReference","normalUnchecked","normalUncheckedReference","normalDictionary","normalReference","pressChecked","pressCheckedReference","pressUnchecked","pressUncheckedReference","pressedDictionary","pressedReference","_selectedIndex","_retrieveOptionValue","_obtainSelectedIndex","name_5","PdfRadioButtonListItem","_setField","parsedItems_2","radio","_optionValue","checkName","asName","values_1","_tryGetIndex","values_2","indices_1","multiSelect","_multiSelect","edit","_editable","_optionArray","PdfListFieldItem","addItem","parsedItems_3","fieldItem","_addEmptyWidget","_obtainFont","_getFontHeight","selectedIndexes","combo","acroForm","fontString","verticalAlignment","stringFormat","_drawComboBox","doubleBorderWidth","padding","itemTextBound","x_3","itemFont","widths_1","h","textWidth","_drawListBox","location_2","selected","PdfSignatureField","_isSigned","_checkSigned","needAppearance","firstItemTemplate","_getItemTemplate","_flattenSignature","signatureTemplate","_calculateTemplateBounds","graphicsRotation","_obtainGraphicsRotation","atan2","sliced","PdfAppearance","annot","_templateNormal","_isExport","_opacity","_isAllRotation","_popUpFont","_authorBoldFont","_lineCaptionFont","_isTransparentColor","_author","author","hasKey","_border","PdfAnnotationBorder","_hRadius","_vRadius","hRadius","vRadius","_isWidget","_annotFlags","extColor","_innerColor","innerColor","_creationDate","_stringToDate","_dateToString","_modifiedDate","_isBounds","_caption","PdfAnnotationCaption","_cap","capType","inline","caption","cap","opacity","_subject","prevRotate","_getRotationAngle","_isFlattenPopups","_ratio","getValues","setValues","assignXref","_getBoundsValue","_validateTemplateMatrix","isRotatedMatrix","isValidMatrix","locationX","locationY","templateX","templateY","annotationBounds","_locationDisplaced","_removeAnnotationFromPage","_flattenAnnotationTemplate","isNormalMatrix","currentBounds","lineAnnotation","_needInitializeGraphics","rubberStampAnnotation","_o","radians","_drawCloudStyle","overlap","_isClockWise","sortedPoints","circles","circleOverlap","previousPoint","currentPoint","dx","dy","sqrt","cur","_CloudStyleArc","previousCurvedStyleArc","currentCurvedStyleArc","_getIntersectionDegrees","endAngle","sweepAngel","tempPoints","pdfpath","incise","sum","radian","cosvalue","acos","_obtainStyle","dashPattern","isDash","intensity","_createRectangleAppearance","rdArray","cloudRectangle","RD","nativeRectangle","_drawRectangleAppearance","graphicsPath","sublist","_createCircleAppearance","nativeBounds","_drawCircleAppearance","top_1","controlPointList","startPointList","endPointList","_createBezier","third","bezierPoints","_populateBezierPoints","currentIteration","midPoint1","_midPoint","midPoint2","midPoint3","_getAngle","angleRatio","atan","_getAxisValue","_degreeToRadian","_drawLineEndStyle","axisPoint","isBegin","arraowAngle","startPoint","fourth","_pen","_drawLineStyle","lineStyle","begin","styleArray","_getEqualPdfGraphicsUnit","measurementUnit","graphicsUnit","_createMeasureDictionary","_colorToHex","col","_componentToHex","_getRotatedBounds","rotateAngle","corners","minX","maxX","minY","maxY","_flattenPopUp","_flattenPop","subject","boundsValue","clientSize","annotBounds","rectValue","top_2","track","aBrush","_getForeColor","_drawAuthor","titleRect","_saveGraphics","contentRect","_drawSubject","_flattenLoadedPopUp","_getRectangleBoundsValue","trackingHeight","blendMode","_getBorderColorString","date","dateFormat","Date","year","month","day","hour","minute","timeZone","signature","timeZoneHour","timeZonMinute","setTime","getTime","dateTime","getMonth","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","getFullYear","_obtainNativeRectangle","cropBoxOrMediaBox","PdfComment","_comments","PdfPopupAnnotationCollection","_reviewHistory","_unit","_unitString","_linePoints","_leaderExt","leaderExt","_leaderLine","leaderLine","_lineEndingStyle","PdfAnnotationLineEndingStyle","lineStyles","_begin","lineEndingStyle","_leaderOffset","leaderOffset","_lineIntent","lineIntent","lineDimension","lineArrow","_measure","flatten","_appearanceTemplate","_createLineMeasureAppearance","boundsArray","_obtainLineBounds","updatedBounds","flattenPopups","measure","reference_1","_isFlatten","_convertToUnit","linePoints1","_obtainLinePoints","rectPath","lineAngle","endPoint","lineDistance","centerWidth","beginLineExt","endLineExt","beginLeaderLine","endLeaderLine","midpoint","centerPoint","captionPosition","nativeRectangle1","ds","dic","_calculateAngle","startPointX","startPointY","endPointX","endPointY","_calculateLineBounds","leaderLineExt","leaderLines","x1y1","x2y2","offsetPoint1","offsetPoint2","startingPoint","endingPoint","beginLineLeader","endLineLeader","beginLinePoint","_getLinePoint","endLinePoint","widthX","heightY","_drawLine","rectangleBounds","PdfCircleAnnotation","_measureType","circleAnnotation","_createCircleMeasureAppearance","reference_2","fontsize","converter","PdfEllipseAnnotation","ellipseAnnotation","reference_3","PdfSquareAnnotation","squareAnnotation","_borderEffect","PdfBorderEffect","_intensity","_createSquareMeasureAppearance","reference_4","_calculateAreaOfSquare","appearanceBounds","tem","PdfRectangleAnnotation","rectangleAnnotation","_isValidTemplateMatrix","reference_5","appearanceTemplate","pointF","PdfPolygonAnnotation","polygonAnnotation","_lineExtension","lineExt","lineExtension","polygonBounds","_createPolygonAppearance","reference_6","backgroundBrush","_getLinePoints","polygonPoints","pageSize","PdfPolyLineAnnotation","_beginLine","_endLine","polyLineAnnotation","pathTypes","_polylinePoints","polyLineBounds","_createPolyLineAppearance","reference_7","polyLinepoints_1","PdfAngleMeasurementAnnotation","_firstIntersectionPoint","_secondIntersectionPoint","_pointArray","angleMeasurementAnnotation","_createAngleMeasureAppearance","v","dDictionary","tDictionary","aDictionary","vDictionary","xDictionary","_getAngleBoundsValue","_radius","midPoint","_startAngle","_sweepAngle","xDiff","yDiff","midpointAngle","up","down","reference1","point1","point2","point3","firstLineDistance","secondLineDistance","intersectionPoint1","intersectionPoint2","_findLineCircleIntersectionPoints","centerX","centerY","intersection1","intersection2","NaN","PdfInkAnnotation","_inkPointsCollection","_previousCollection","_isModified","inkAnnotation","_addInkPoints","_createInkAppearance","_obtainInkListCollection","_getInkBoundsValue","inkPoints","pathPointCont","pathPoints","p1","p2","_getControlPoints","controlP1","controlP2","point_1","path1","path2","pointCount","rightVector","xValue","_getSingleControlPoint","yValue","vector","tmpVector","divisor","inkCollection","unshift","isEqual","termsList","subList","isTwoPoints","pointCollection","_calculateInkBounds","innerList","PdfPopupAnnotation","_icon","_iconString","_stateModel","_state","_open","_isReview","_isComment","_obtainIconName","_createPopupAppearance","pen1","template_1","fileLinkAnnotation","_action","actionDictionary","_addAction","nextAction","uri","_uri","uriAnnotation","linkDict","documentLinkAnnotation","_addDocument","top_3","top_4","referenceArray","referenceValue","top_5","top_6","top_7","_array","brushColor","penColor","penWidth","_isActionAdded","_textWebLink","_brush","textWebLinkAnnotation","_url","linkSource","_get","PdfAttachmentAnnotation","fileAttachmentAnnotation","_addAttachment","fileSpecification","fileSpectDictionary","toTimeString","efileDictionary","fsReference","Pdf3DAnnotation","movieAnnotation","PdfTextMarkupAnnotation","_textMarkupType","_quadPoints","_boundsCollection","textMarkupAnnotation","_textMarkUpColor","isChanged","boundsCollection","_setQuadPoints","_createMarkupAppearance","native","pdfPath","quadPoints","textMarkUpColor","pdfPen","w1","h1","textMarkupType","_drawSquiggly","pathPointsCount","zigZag","textQuadLocation","noofRect","PdfWatermarkAnnotation","_watermarkText","watermarkAnnotation","_createWatermarkAppearance","_rotateAngle","PdfRubberStampAnnotation","_stampWidth","_stampAppearanceFont","createTemplate","templateDictionary","mMatrix","_transformBBox","_createRubberStampAppearance","innerBounds","_obtainInnerBounds","bBoxValue","xCoordinate","yCoordinate","_transformPoint","point4","_minValue","_maxValue","minimum","maximum","isTransformBBox","isStamp","isRotated","_drawStampAppearance","_obtainBackGroundColor","_obtainBorderColor","rubberFont","_drawRubberStamp","pdfBrush","normalAppearance","normalAppearanceDictionary","PdfSoundAnnotation","soundAnnotation","PdfFreeTextAnnotation","_intentString","_markUpFont","_cropBoxValueX","_cropBoxValueY","freeTextAnnotation","_calloutLines","_getCalloutLinePoints","_obtainLineEndingStyle","collections","_borderColor","_obtainColor","_annotationIntent","_obtainAnnotationIntent","_setPaddings","paddings","_paddings","_updateCropBoxValues","_saveFreeTextDictionary","cropOrMediaBox","reference_8","_obtainAppearanceBounds","_obtainText","_obtainTextAlignment","calloutLines","_drawCallOuts","_calculateRectangle","outerRectangle","_drawFreeTextRectangle","_drawFreeMarkUpText","innerRectangle","isRotation","bounds_1","_left","top_8","_top","_right","_bottom","first_2","second_2","checkPaddingWithFontHeight","_drawFreeTextAnnotation","isSkipDrawRectangle","calloutLinepoints","pointArray","length_2","_obtainCallOutsNative","_calloutsClone","_expandAppearance","markUpText","_rcText","hasAlignment","pointY","pointX","annotationIntent","_getXmlFormattedString","markupText","PdfRedactionAnnotation","redactionAnnotation","_repeat","_textColor","textColor","_overlayText","_createRedactionAppearance","_createNormalAppearance","borderTemplate","_createBorderAppearance","actualWidth","textcolor","overlayText","row","diff","textsize","repeatText","PdfRichMediaAnnotation","richMediaAnnotation","_rotationAngle","_highlightMode","_addWidget","recreateAppearance","reference_9","document_2","_backColor","_initializeItem","_getBorderEffect","_styleToEffect","isAdded","_addCommentsAndReview","_updateCustomAppearanceResource","remove","removeAt","_getProperty","actualIndex","_reorderParsedAnnotations","_updateChildReference","childAnnotation","_collection","link","isTextWebLink","_hasValidBorder","_getLinkAnnotation","remote","val","tabIndex","parentReference","_annotation","_parentDictionary","_parseCommentsOrReview","nextAnnotation","_parseReview","_parseComments","remaining","_isAnnotationParsed","widgets_1","_catalog","_catalogDictionary","_parseWidgetReferences","validAnnotations_1","_rotation","_obtainTabOrder","tabs","column","_cBox","_mBox","_orientation","landscape","portrait","_parseGraphics","merge","_loadContents","saveStream","saveReference","_contents","restoreStream","restoreReference","contentStream","contentReference","_initializeGraphics","contents","isInvalidCase","llx","lly","urx","ury","cx","cy","crx","cry","origin","sign","clip","_getActualBounds","actualSize","_getActualSize","_fetchResources","_getCropOrMediaBox","_location","_zoom","_isValid","_destinationBounds","_initializePrimitive","_parent","_ImageDecoder","_bitsPerComponent","_noOfComponents","_reset","_getBuffer","outputBuffer","_seek","byteLength","_toUnsigned16","_readUnsigned32","_imageData","jpeg","_readHeader","imgData","isLengthExceed","_readExceededJpegImage","_getImageDictionary","tempString","decodedString","_imageDataAsNumberArray","_getColorSpace","_getDecodeParams","decodeParams","_skipStream","isContinueReading","_getMarker","skippedByte","marker","_InflaterState","_BlockType","_PngChunkTypes","_DecompressedOutput","_usedBytes","_dOutput","_dOutSize","_dOutMask","_writeLD","copyStart","_copyFrom","copied","tailLen","_copyTo","sourceStart","sourceStartIndex_1","sourceStartIndex","_InBuffer","_bBuffer","_bInBuffer","_needsInput","_availableBits","_load16Bits","_getBitMask","_getBits","bitBuffer","avail","_setInput","_skipBits","_skipByteBoundary","_HuffmanTree","_clArray","_loadTree","isLengthTree","_getLengthTree","_getDepthTree","_maxLengthTree","_tBits","_tMask","_createTable","lTree","_maxDepthTree","_calculateHashCode","bit","_bitReverse","newcode","codeArray","ofBits","bitMask","_getNextSymbol","mask","codeLength","_nCLength","_Inflater","_extraLengthBits","_staticDistanceTreeTable","_lengthBase","_distanceBasePosition","_codeOrder","_bfinal","_bLength","_blBuffer","_blockType","unCompressedType","_caSize","_clCodeCount","_extraBits","_lengthCode","_llCodeCount","_output","_input","_loopCounter","_codeList","_cltcl","_inflaterState","readingBFinal","done","vFooter","inputBytes","_inflate","_finished","eob","readingBType","_getBlockType","dynamicType","readingNlCodes","staticType","_llTree","_distanceTree","decodeTop","unCompressedAligning","_getInflaterStateValue","_decodeDynamicBlockHeader","_decodeBlock","_decodeUncompressedBlock","endBlock","unCompressedByte1","_unCompressedByte","unCompressedByte2","unCompressedByte3","unCompressedByte4","decodeUnCompressedBytes","_unusedBytes","inflaterstate","unCompressedByte","_getInflaterState","fb","dCodeResult","fLengthResult","inLengthResult","_inLength","iLength","fLength","_fLength","dCode","_dcode","_distanceCode","readingNdCodes","_readingNDCodes","readingCodes","_readingCodes","readingClCodes","_readingCLCodes","readingTcBefore","readingTcAfter","_readingTCBefore","literalTreeCodeLength","distanceTreeCodeLength","_dCodeCount","_clTree","repeatCount","previousCode","readingHeader","srFooter","rFooter","_DeflateStream","leaveOpen","_leaveOpen","_inflater","cOffset","rCount","inflateResult","png","_isRedGreenBlue","_isDecode","_shades","_ideateDecode","_colors","_bitsPerPixel","_idatLength","_inputBands","_hasValidChunkType","hasValidChunk","iHDR","iDAT","_readImageData","sRGB","_ignoreChunk","pLTE","_readPhotoPlate","iEND","_decodeImageData","tRNS","_readTransparency","tEXt","iTXt","zTXt","hIST","sBIT","iCCP","pHYs","tIME","bKGD","gAMA","cHRM","_currentChunkLength","_getChunkType","_header","_PngHeader","_bitDepth","_colorType","_compression","_filter","_getFilterType","_interlace","_setBitsPerPixel","_encodedStream","_colorSpace","_getPngColorSpace","alpha","_alpha","sh","colorspace","calRGB","whitePoint","gammaArray","wpY","alphaY","redY","blueY","blueX","blueZ","colorY","bY","alphaX","alphaZ","_maskData","_dataStream","_getDeflatedData","_dataStreamOffset","_decodedImageData","_readDecodeData","idatData","deflateStream","numRead","outputData","_decodeData","xStep","yStep","bytesPerRow","prior","sourceY","destinationY","filter","_readStream","_PngFilterTypes","sub","_decompressSub","_decompressUp","average","_decompressAverage","paeth","_decompressPaeth","_processPixels","tmp","streamOffset","bitsPerPixel","pData","pp","pr","prp","_paethPredictor","pa","pb","pc","step","sourceX","destX","_getPixel","depth","_setPixel","unsigned","dt","hb","bitDepth","bpr","_setMask","BaseException","message","FormatError","ParserEndOfFileException","gen","_PdfReferenceSet","put","_PdfReferenceSetCache","toStringFunction","nElements","toStr","pair","keysArray","namesOfKeys","pair1","getRawValues","key1","key2","key3","callback","prevValue","getEmpty","emptyDict","dictionaryArray","mergeSubDictionary","mergedDictionary","properties","dictionaryArray_1","_a","_b","_c","property","_d","properties_1","_e","subDict","_f","_h","_j","suppressEncryption","isCatalog","_PdfNull","getByte","peekByte","peekedByte","peekBytes","getUnsignedInteger16","b0","b1","getInt32","makeSubStream","readBlock","reset","moveStart","isHex","getBaseStreams","arrayBuffer","dataStream2","strEnd","_PdfNullStream","_ContentParser","_recordCollection","_operands","_lexer","_ContentLexer","_readContent","_parseObject","eof","tokenType","_getNextToken","number","_operatorParams","real","unicodeHexString","unicodeString","operator","_createRecord","beginArray","endArray","operand","_PdfRecord","_tokenType","_currentCharacter","_nextCharacter","_moveToNextChar","_getComment","_getLiteralString","_getNumber","_getEncodedDecimalString","_getOperator","_consumeValue","_getNextChar","_isOperator","literal","beginChar","_getLiteralStringValue","parentLevel","parenthesesCount","operands","_operator","_PdfDecodeStream","maybeMinBufferLength","_rawMinBufferLength","bufferLength","minBufferLength","ensureBuffer","requested","buffer2","bufEnd","_PdfDecryptStream","maybeLength","cipher","_chunkSize","_cipher","_nextChunk","_initialized","hasMoreData","_decryptBlock","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","_PdfFlateStream","cmf","flg","codeSize","codeBuffer","getBits","getCode","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","maximumLength","code2","hdr","blockLen","block","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","codeLengths","bitsLength","bitsOffset","what","repeatLength","limit","code1","dist","_PdfCatalog","_getCatalogObj","_topPagesDictionary","pageKidsCountCache","pageIndexCache","_createForm","_allowCatalog","getPageDictionary","nodesToVisit","visitedNodes","pagesRef","currentPageIndex","currentNode","PdfPredictorStream","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","compArray","kk","prevRow","upLeft","specialChars","_PdfLexicalOperator","nextChar","_hexStringNumber","beginInlineImagePosition","peekChar","getNumber","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","numParen","charBuffered","getName","previousCh","_toHexDigit","getHexString","firstDigit","secondDigit","isFirstHex","getObject","nextCh","possibleCommand","peekObj","nextObj","streamPos","ex","skipToNextLine","_PdfParser","lexicalOperator","allowStreams","recoveryMode","_isPassword","imageCache","refill","tryShift","cipherTransform","makeInlineImage","_checkEnd","makeStream","decryptString","findDiscreteDecodeInlineStreamEnd","markerLength","startPos","foundEnd","findDefaultInlineStreamEnd","inlineStreamSkipEI","findDecodeInlineStreamEnd","tildePos","maybeEI","findHexDecodeInlineStreamEnd","dictLength","filterName","filterZero","cacheKey","imageStream","imageBytes","initialStreamPos","dictBytes","_computeMaxNumber","cacheEntry","createStream","bytesLength","startPosition","endStreamSignature","actualLength","_findStreamLength","truncatedSignature","makeFilter","filterArray","paramsArray","signatureLength","scanBytes","scanLength","endImagePosition","followingBytes","ii","endOffset","_Linearization","parser","obj2","obj3","getInt","hints","getHints","objectNumberFirst","endFirst","mainXRefEntriesOffset","pageFirst","allowZeroValue","hintsLength","hint","_PdfEncryptor","_isUserPassword","_hasUserPasswordOnly","_encryptOnlyAttachment","_encryptMetaData","_defaultPasswordBytes","_filterName","algorithm","_algorithm","keyLength","cfDictionary","streamCryptoName","handlerDictionary","ownerPassword","userPassword","revision","passwordBytes","fileIdBytes","encodeURIComponent","encryptionKey","_prepareKeyData","decodedPassword","_decodeUserPassword","ownerEncryptionKey","algorithm_1","ownerValidationKey","ownerValidationSalt","ownerKeySalt","userValidationKey","uBytes","userValidationSalt","userKeySalt","ownerEncryption","userEncryption","_AdvancedEncryption","_BasicEncryption","_checkUserPassword","_createEncryptionKey","_checkOwnerPassword","cipherDictionary","standardCryptFilter","event_1","_cipherDictionary","_string","_eff","_encryptionKey","_messageDigest","_MD5","isUserKey","_getUserKey","_getOwnerKey","encryptMetaData","hashData","hash","_md5","keyLengthInBytes","checkData","_NormalCipherFour","_encryptBlock","derivedKey","_createCipherTransform","stringCipher","_buildCipherConstructor","streamCipher","_CipherTransform","_buildObjectKey","cfm","cryptFilter","_NullCipher","_AdvancedEncryption128Cipher","_AdvancedEncryption256Cipher","isAdvancedEncryption","_r","_k","h0","h2","h3","paddedLength","padded","w","f","_Sha256","_rotateRight","_sigma","_sigmaPrime","_littleSigma","_littleSigmaPrime","_hash","h4","h5","h6","h7","Uint32Array","t1","t2","_Sha512","_Word64","assign","rotateRight","xor","shiftRight","isMode384","buffer3","buffer1","high","and","not","copyTo","or","places","shiftLeft","lowAdd","highAdd","_EncryptionKey","_sha256Obj","_sha512Obj","userBytes","_sha256","encrypted","combinedLength","combinedArray","writeOffset","k1","_encrypt","remainder","_sha512","_Cipher","_s","_AdvancedEncryptionBaseCipher","_inverseS","_mix","_mixC","_decrypt","u","_keySize","_cyclesOfRepetition","s0","s1","s2","s3","_mixCol","_decryptBlockHelper","finalize","sourceLength","iv","_iv","plain","outputLength","lastBlock","_expandKey","cipherKey","rcon","t3","t4","_stringCipher","_streamCipher","encryptString","pad","repeat","crypto","getRandomValues","_PdfCrossReference","_entries","_crossReferencePosition","_pendingRefs","_setStartXRef","startXRef","_startXRefQueue","_prevStartXref","_prevXRefOffset","_parse","trailerDictionary","_indexObjects","_readXRef","_nextReferenceNumber","_trailer","encrypt","_isEncrypted","_ids","_permissionFlags","fileId","_fileStructure","_crossReferenceType","hasRoot","_getEntry","xrefEntry","free","uncompressed","_fetchUncompressed","_fetchCompressed","tableOffset","nums","offsets","entries","startXRefParsedCache","_processXRefTable","_topDictionary","_processXRefStream","_readToken","_skipUntil","dataLength","skipped","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","crossReferencePosition","contentLength","updateEntries","subStream","_PdfObjectInformation","endPos","checkPos","tokenStr","objToken","xrefTagOffset","trailerDict","rootDict","pagesDict","pagesCount","_tableState","tableState","_PdfCrossTableState","entryNum","parserBuf1","parserBuf2","_readXRefTable","topDictionary","firstEntryNum","entryCount","_streamState","streamParameters","streamState","_PdfStreamState","entryRanges","byteWidths","_readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","typeByte","offsetByte","generationByte","currentLength","updatedCount","uncompressedCount","updatedStream_1","archiveXRef_1","collection_1","uncompressedOffsets_1","cipher_1","archiveOffset","archiveRef","newDict","archiveStream","cipher_2","formatValue","newRef","newStartXref","newXref","_copyTrailer","_computeMessageDigest","newXrefData","_writeLong","newXrefStream","tempBuffer_1","offsetString","genString","now","crossReferenceInfo","transform","isCrossReference","_writeStream","spaceChar","_writeFontDictionary","_writeValue","streamBuffer","dataArray","sw","CompressedStreamWriter","close","getCompressedString","value_1","_writeUnicodeString","_escapeString","byteValues","PdfForm","_hasKids","_fieldCollection","_signFlag","_parsedFields","_createFields","_needAppearances","fieldFlags","_signatureFlag","signatureExists","appendOnly","removeField","removeFieldAt","setDefaultAppearance","orderFormFields","tab","setTabOrder","_tabCollection","fieldCollection","_getFields","_sortItemByPageIndex","fieldsCount_1","fields","pdfField1","pdfField2","_compareFields","fieldIndex","_getOrder","nodes","fieldKids","kidsDict","_isNode","isNode","_widgetReferences","fieldReference","kidReference","kidDictionary","_fieldNames","_indexedFieldNames","_actualFieldNames","_indexedActualFieldNames","nameIndex","field1","field2","xdiff","page1","page2","page1Index","page2Index","rectangle1","_getItemRectangle","_getRectangle","rectangle2","firstHeight","secondHeight","_compare","field1Index","field2Index","_compareKidsElement","yDictionary","xRect","yRect","hasPageTabOrder","_sortFieldItems","item1","item2","_compareFieldItem","array1","array2","_FdfDocument","_annotationObjects","_specialCharacters","objectID","objectArray","_stringToHexString","ArrayBuffer","_checkFdf","_readFdfData","FDF","Fields","objects","mappedObjects","trailer","rootKey","fdf","genNumber","helper","_FdfHelper","startObject","_annotationID","streamReference","annotValue","_getEntries","Page","_appendStream","compressString","listDictionary","_getFormattedString","_appendArray","value_2","_appendElement","PdfBookmarkBase","_bookMarkList","_isExpanded","_isLoadedBookmark","_reproduceTree","bookmark","contains","_getFirstBookmark","isBookmark","bookmarkBase","bookMark","bookmarkBaseDictionary","bookMarkDictionary","PdfBookmark","namedDestination","_obtainNamedDestination","_namedDestination","_title","_obtainTitle","_textStyle","_obtainTextStyle","nextBookmark","destinationCollection","_destinationCollection","namedDestinations","_namedDestinations","PdfNamedDestination","_PdfNamedDestinationCollection","_addCollection","destinationElement","destinationObject","_XmlDocument","_checkXml","tagName","xmlDocument","PdfFileStructure","PdfDocument","_headerSignature","_startXrefSignature","_endObjSignature","_permissions","_allowCustomData","_pages","_checkHeader","_startXRef","_linear","err","_linearization","_find","startXRefLength","found","_pageCount","catalog","outlines","_bookmarkBase","cachedPage","promise","_getLinearizationPage","addPage","settings","_checkPageNumber","PdfPageSettings","sectionDictionary","_updatePageSettings","sectionReference","pageReference","lastPage_1","parentDictionary","newKids_1","_updatePageCache","_updatePageCount","removePage","argument","targetPage","_removePage","valueToIncrement","isIncrement","updatedData","pageToRemove","bookMarkMap","_parseBookmarkDestination","bookmarks","bookmarkDictionary","_removePageTemplates","_removeParent","referenceToRemove","_bookmarkHashTable","stack","nodeInformation","_removeInternalTemplates","namedObject","nameCollection","namedPageCollection","_getUpdatedPageTemplates","namedPageDictionary","namedPages","reorderPages","orderArray","sortedArray","_sortedArray","ascendingOrder","pagesToRemove","_","newkids","newPages","indexPage","_cloneResources","order","num","resourceDictionary_1","_cloneInnerResources","resourceDictionary","oldObject_1","hasNew_1","innerKey","oldArray_1","hasNew_2","filename","Save","Blob","saveAsBlob","Promise","resolve","blobData","exportAnnotations","_doPostProcessOnAnnotations","PdfAnnotationExportSettings","dataFormat","xfdf","exportFormData","_doPostProcessOnFormFields","PdfFormFieldExportSettings","exportName","asPerSpecification","importAnnotations","importFormData","destroy","_namedDestinationCollection","reason","backwards","signatureEnd","formObject","Annots","_addWatermarkText","_exportAppearance","_exportName","_isOrientation","_margins","PdfMargins","_updateSize","_updateOrientation","pageOrientation","orientation","all","_PdfPaddings","PdfBitmap","encodedString","_imageStatus","_initializeAsync","_decoder","colorSpace","cmyk","grayScale","indexed","rgb"],"mappings":"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AAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,MACxG,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MACxG,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MACxG,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,MACxE,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MACxE,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MACxG,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MAAY,IAAU,IAAU,MACpH,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAAY,IAAU,IAAU,IAAU,IAAU,MAC5F,IAAU,IAAU,IAAU,IAAU,MAA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pCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,OACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,OACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,OACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,OACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,OACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAM,MACpCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,MACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,MACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,MACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,MACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,MACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,MACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,MACrCvQ,KAAKypB,gBAAgBlZ,SAAS,KAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKypB,gBAAgBlZ,SAAS,MAAO,OACrCvQ,KAAKy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AK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAETtD,EAA+BsE,cAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAExCtE,EAA+B0E,oBAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IA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"}