import { AngularComponentFactory } from "../../component-factory";
import { Component, Input } from "@angular/core";
import { EmbeddedViewContentComponent } from "../../embedded-view-content.component";
import * as i0 from "@angular/core";
import * as i1 from "../svg-icon/svg-icon.component";
import * as i2 from "@angular/common";
import * as i3 from "../../utils/ng-show.directive";
import * as i4 from "../../utils/safe-url.pipe";
export class FilePreviewComponent extends EmbeddedViewContentComponent {
    constructor() {
        super(...arguments);
        this.trackFilesFn = (index) => {
            return this.question.inputId + "_" + index;
        };
    }
}
FilePreviewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: FilePreviewComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
FilePreviewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: FilePreviewComponent, selector: "sv-ng-file-preview", inputs: { question: "question" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n    <ng-container *ngIf=\"question.showPreviewContainer\">\n        <div [class]=\"question.cssClasses.fileList || undefined\">\n            <span *ngFor=\"let val of question.previewValue; index as index; trackBy: trackFilesFn\"\n                [visible]=\"val && question.isPreviewVisible(index)\" [class]=\"question.cssClasses.previewItem\"\n                (click)=\"question.doDownloadFileFromContainer($event)\">\n                <div *ngIf=\"val.name && question.cssClasses.fileSign\" [class]=\"question.cssClasses.fileSign\">\n                    <a (click)=\"question.doDownloadFile($event, val)\" [attr.href]=\"val.content | safeUrl\"\n                        [attr.title]=\"val.name\" [attr.download]=\"val.name\" [style.width]=\"question.imageWidth\">{{\n                        val.name\n                        }}</a>\n                </div>\n                <div [class]=\"question.getImageWrapperCss(val)\">\n                    <img *ngIf=\"question.canPreviewImage(val)\" [attr.src]=\"val.content | safeUrl\"\n                        [style.height]=\"question.imageHeight\" [style.width]=\"question.imageWidth\" alt=\"File preview\" />\n                    <svg *ngIf=\"question.defaultImage(val)\" [iconName]=\"question.cssClasses.defaultImageIconId\"\n                        [partCss]=\"question.cssClasses.defaultImage\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n                    <div *ngIf=\"val.name && !question.isReadOnly\" [class]=\"question.getRemoveButtonCss()\"\n                        (click)=\"question.doRemoveFile(val, $event)\">\n                        <span [class]=\"question.cssClasses.removeFile\">{{ question.removeFileCaption }}</span>\n                        <svg *ngIf=\"question.cssClasses.removeFileSvgIconId\" [title]=\"question.removeFileCaption\"\n                            [partCss]=\"question.cssClasses.removeFileSvg\"\n                            [iconName]=\"question.cssClasses.removeFileSvgIconId\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n                    </div>\n                </div>\n                <div *ngIf=\"val.name && question.cssClasses.fileSignBottom\"\n                    [class]=\"question.cssClasses.fileSignBottom\">\n                    <a (click)=\"question.doDownloadFile($event, val)\" [attr.href]=\"val.content | safeUrl\"\n                        [attr.title]=\"val.name\" [attr.download]=\"val.name\" [style.width]=\"question.imageWidth\">{{\n                        val.name\n                        }}</a>\n                </div>\n            </span>\n        </div>\n    </ng-container>\n</ng-template>", components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.VisibleDirective, selector: "[visible]", inputs: ["visible"] }], pipes: { "safeUrl": i4.SafeUrlPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: FilePreviewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-file-preview",
                    templateUrl: "./file-preview.component.html"
                }]
        }], propDecorators: { question: [{
                type: Input
            }] } });
AngularComponentFactory.Instance.registerComponent("sv-file-preview", FilePreviewComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1wcmV2aWV3LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2ZpbGUvZmlsZS1wcmV2aWV3LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2ZpbGUvZmlsZS1wcmV2aWV3LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDOzs7Ozs7QUFLckYsTUFBTSxPQUFPLG9CQUFxQixTQUFRLDRCQUE0QjtJQUp0RTs7UUFNSSxpQkFBWSxHQUE4QixDQUFDLEtBQWEsRUFBVSxFQUFFO1lBQ2xFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQUcsR0FBRyxHQUFHLEtBQUssQ0FBQztRQUM3QyxDQUFDLENBQUE7S0FDSjs7a0hBTFksb0JBQW9CO3NHQUFwQixvQkFBb0IsbUhDUmpDLGdrRkFtQ2M7NEZEM0JELG9CQUFvQjtrQkFKaEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsb0JBQW9CO29CQUM5QixXQUFXLEVBQUUsK0JBQStCO2lCQUM3Qzs4QkFFWSxRQUFRO3NCQUFoQixLQUFLOztBQUtWLHVCQUF1QixDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxpQkFBaUIsRUFBRSxvQkFBb0IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWN0aW9uLCBRdWVzdGlvbkZpbGVNb2RlbCB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuaW1wb3J0IHsgQW5ndWxhckNvbXBvbmVudEZhY3RvcnkgfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50LWZhY3RvcnlcIjtcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgRW1iZWRkZWRWaWV3Q29udGVudENvbXBvbmVudCB9IGZyb20gXCIuLi8uLi9lbWJlZGRlZC12aWV3LWNvbnRlbnQuY29tcG9uZW50XCI7XG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3YtbmctZmlsZS1wcmV2aWV3XCIsXG4gIHRlbXBsYXRlVXJsOiBcIi4vZmlsZS1wcmV2aWV3LmNvbXBvbmVudC5odG1sXCJcbn0pXG5leHBvcnQgY2xhc3MgRmlsZVByZXZpZXdDb21wb25lbnQgZXh0ZW5kcyBFbWJlZGRlZFZpZXdDb250ZW50Q29tcG9uZW50IHtcbiAgICBASW5wdXQoKSBxdWVzdGlvbiE6IFF1ZXN0aW9uRmlsZU1vZGVsO1xuICAgIHRyYWNrRmlsZXNGbjogKGluZGV4OiBudW1iZXIpID0+IHN0cmluZyA9IChpbmRleDogbnVtYmVyKTogc3RyaW5nID0+IHtcbiAgICAgIHJldHVybiB0aGlzLnF1ZXN0aW9uLmlucHV0SWQgKyBcIl9cIiArIGluZGV4O1xuICAgIH1cbn1cbkFuZ3VsYXJDb21wb25lbnRGYWN0b3J5Lkluc3RhbmNlLnJlZ2lzdGVyQ29tcG9uZW50KFwic3YtZmlsZS1wcmV2aWV3XCIsIEZpbGVQcmV2aWV3Q29tcG9uZW50KTsiLCI8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJxdWVzdGlvbi5zaG93UHJldmlld0NvbnRhaW5lclwiPlxuICAgICAgICA8ZGl2IFtjbGFzc109XCJxdWVzdGlvbi5jc3NDbGFzc2VzLmZpbGVMaXN0IHx8IHVuZGVmaW5lZFwiPlxuICAgICAgICAgICAgPHNwYW4gKm5nRm9yPVwibGV0IHZhbCBvZiBxdWVzdGlvbi5wcmV2aWV3VmFsdWU7IGluZGV4IGFzIGluZGV4OyB0cmFja0J5OiB0cmFja0ZpbGVzRm5cIlxuICAgICAgICAgICAgICAgIFt2aXNpYmxlXT1cInZhbCAmJiBxdWVzdGlvbi5pc1ByZXZpZXdWaXNpYmxlKGluZGV4KVwiIFtjbGFzc109XCJxdWVzdGlvbi5jc3NDbGFzc2VzLnByZXZpZXdJdGVtXCJcbiAgICAgICAgICAgICAgICAoY2xpY2spPVwicXVlc3Rpb24uZG9Eb3dubG9hZEZpbGVGcm9tQ29udGFpbmVyKCRldmVudClcIj5cbiAgICAgICAgICAgICAgICA8ZGl2ICpuZ0lmPVwidmFsLm5hbWUgJiYgcXVlc3Rpb24uY3NzQ2xhc3Nlcy5maWxlU2lnblwiIFtjbGFzc109XCJxdWVzdGlvbi5jc3NDbGFzc2VzLmZpbGVTaWduXCI+XG4gICAgICAgICAgICAgICAgICAgIDxhIChjbGljayk9XCJxdWVzdGlvbi5kb0Rvd25sb2FkRmlsZSgkZXZlbnQsIHZhbClcIiBbYXR0ci5ocmVmXT1cInZhbC5jb250ZW50IHwgc2FmZVVybFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBbYXR0ci50aXRsZV09XCJ2YWwubmFtZVwiIFthdHRyLmRvd25sb2FkXT1cInZhbC5uYW1lXCIgW3N0eWxlLndpZHRoXT1cInF1ZXN0aW9uLmltYWdlV2lkdGhcIj57e1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsLm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgIH19PC9hPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgW2NsYXNzXT1cInF1ZXN0aW9uLmdldEltYWdlV3JhcHBlckNzcyh2YWwpXCI+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgKm5nSWY9XCJxdWVzdGlvbi5jYW5QcmV2aWV3SW1hZ2UodmFsKVwiIFthdHRyLnNyY109XCJ2YWwuY29udGVudCB8IHNhZmVVcmxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgW3N0eWxlLmhlaWdodF09XCJxdWVzdGlvbi5pbWFnZUhlaWdodFwiIFtzdHlsZS53aWR0aF09XCJxdWVzdGlvbi5pbWFnZVdpZHRoXCIgYWx0PVwiRmlsZSBwcmV2aWV3XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgPHN2ZyAqbmdJZj1cInF1ZXN0aW9uLmRlZmF1bHRJbWFnZSh2YWwpXCIgW2ljb25OYW1lXT1cInF1ZXN0aW9uLmNzc0NsYXNzZXMuZGVmYXVsdEltYWdlSWNvbklkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIFtwYXJ0Q3NzXT1cInF1ZXN0aW9uLmNzc0NsYXNzZXMuZGVmYXVsdEltYWdlXCIgW3NpemVdPVwiJ2F1dG8nXCIgc3Ytbmctc3ZnLWljb24+PC9zdmc+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgKm5nSWY9XCJ2YWwubmFtZSAmJiAhcXVlc3Rpb24uaXNSZWFkT25seVwiIFtjbGFzc109XCJxdWVzdGlvbi5nZXRSZW1vdmVCdXR0b25Dc3MoKVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAoY2xpY2spPVwicXVlc3Rpb24uZG9SZW1vdmVGaWxlKHZhbCwgJGV2ZW50KVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gW2NsYXNzXT1cInF1ZXN0aW9uLmNzc0NsYXNzZXMucmVtb3ZlRmlsZVwiPnt7IHF1ZXN0aW9uLnJlbW92ZUZpbGVDYXB0aW9uIH19PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyAqbmdJZj1cInF1ZXN0aW9uLmNzc0NsYXNzZXMucmVtb3ZlRmlsZVN2Z0ljb25JZFwiIFt0aXRsZV09XCJxdWVzdGlvbi5yZW1vdmVGaWxlQ2FwdGlvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW3BhcnRDc3NdPVwicXVlc3Rpb24uY3NzQ2xhc3Nlcy5yZW1vdmVGaWxlU3ZnXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbaWNvbk5hbWVdPVwicXVlc3Rpb24uY3NzQ2xhc3Nlcy5yZW1vdmVGaWxlU3ZnSWNvbklkXCIgW3NpemVdPVwiJ2F1dG8nXCIgc3Ytbmctc3ZnLWljb24+PC9zdmc+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgKm5nSWY9XCJ2YWwubmFtZSAmJiBxdWVzdGlvbi5jc3NDbGFzc2VzLmZpbGVTaWduQm90dG9tXCJcbiAgICAgICAgICAgICAgICAgICAgW2NsYXNzXT1cInF1ZXN0aW9uLmNzc0NsYXNzZXMuZmlsZVNpZ25Cb3R0b21cIj5cbiAgICAgICAgICAgICAgICAgICAgPGEgKGNsaWNrKT1cInF1ZXN0aW9uLmRvRG93bmxvYWRGaWxlKCRldmVudCwgdmFsKVwiIFthdHRyLmhyZWZdPVwidmFsLmNvbnRlbnQgfCBzYWZlVXJsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIFthdHRyLnRpdGxlXT1cInZhbC5uYW1lXCIgW2F0dHIuZG93bmxvYWRdPVwidmFsLm5hbWVcIiBbc3R5bGUud2lkdGhdPVwicXVlc3Rpb24uaW1hZ2VXaWR0aFwiPnt7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWwubmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgfX08L2E+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvbmctY29udGFpbmVyPlxuPC9uZy10ZW1wbGF0ZT4iXX0=